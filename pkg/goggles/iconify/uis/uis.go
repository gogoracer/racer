package uis

import (
	"fmt"
	"github.com/gogoracer/racer/pkg/engine"
)

const (
	airplayInnerSVG              = `<path fill="currentColor" d="M12.8 13.4c-.1-.1-.1-.2-.2-.2c-.5-.3-1.1-.2-1.5.2l-4 6c0 .2-.1.4-.1.6c0 .6.4 1 1 1h8c.2 0 .4-.1.6-.2c.5-.3.6-.9.3-1.4l-4.1-6zM19 3H5C3.3 3 2 4.3 2 6v9c0 1.7 1.3 3 3 3h.8c.6 0 1-.4 1-1s-.4-1-1-1H5c-.6 0-1-.4-1-1V6c0-.6.4-1 1-1h14c.6 0 1 .4 1 1v9c0 .6-.4 1-1 1h-.8c-.6 0-1 .4-1 1s.4 1 1 1h.8c1.7 0 3-1.3 3-3V6c0-1.7-1.3-3-3-3z"/>`
	alignAltInnerSVG             = `<path fill="currentColor" d="M10 15H3c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm0-4H3c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm0-4H3c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm4-2h7c.6 0 1-.4 1-1s-.4-1-1-1h-7c-.6 0-1 .4-1 1s.4 1 1 1zm-4 14H3c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm11-4h-7c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm0-8h-7c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zM10 3H7c-.6 0-1 .4-1 1s.4 1 1 1h3c.6 0 1-.4 1-1s-.4-1-1-1zm11 8h-7c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1zm-4 8h-3c-.6 0-1 .4-1 1s.4 1 1 1h3c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignCenterInnerSVG          = `<path fill="currentColor" d="M7 9c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1H7zM3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm14 10H7c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm4-4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignCenterJustifyInnerSVG   = `<path fill="currentColor" d="M17 19H7c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zM3 5h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 10H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0-4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0-4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignJustifyInnerSVG         = `<path fill="currentColor" d="M3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignLeftInnerSVG            = `<path fill="currentColor" d="M3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm0 4h14c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm-4 4H3c-.6 0-1 .4-1 1s.4 1 1 1h14c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignLeftJustifyInnerSVG     = `<path fill="currentColor" d="M21 15H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm-6 4H3c-.6 0-1 .4-1 1s.4 1 1 1h12c.6 0 1-.4 1-1s-.4-1-1-1zM3 5h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignLetterRightInnerSVG     = `<path fill="currentColor" d="M21 20H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zM10 4h11c.6 0 1-.4 1-1s-.4-1-1-1H10c-.6 0-1 .4-1 1s.4 1 1 1zm11 12H11c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm0-6H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0-4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignRightInnerSVG           = `<path fill="currentColor" d="M3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 2H7c-.6 0-1 .4-1 1s.4 1 1 1h14c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H7c-.6 0-1 .4-1 1s.4 1 1 1h14c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	alignRightJustifyInnerSVG    = `<path fill="currentColor" d="M3 5h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 14H11c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm0-8H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0 4H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm0-8H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	analysisInnerSVG             = `<path fill="currentColor" d="M21.7 7.3c-.4-.4-1-.4-1.4 0L14 13.6L9.7 9.3C9.5 9.1 9.3 9 9 9c-.3 0-.5.1-.7.3l-6 6c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3L9 11.4l4.3 4.3c.1.1.2.2.3.2c.1.1.3.1.4.1c.2 0 .5-.1.6-.3h.1l7-7c.4-.4.4-1 0-1.4z"/>`
	analyticsInnerSVG            = `<path fill="currentColor" d="M10 2c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1s1-.4 1-1V3c0-.6-.4-1-1-1zM5 12c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1s1-.4 1-1v-8c0-.6-.4-1-1-1zm10-4c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1s1-.4 1-1V9c0-.6-.4-1-1-1zm5 8c-.6 0-1 .4-1 1v4c0 .6.4 1 1 1s1-.4 1-1v-4c0-.6-.4-1-1-1z"/>`
	anchorInnerSVG               = `<path fill="currentColor" d="M19 13h-2c-.6 0-1 .4-1 1s.4 1 1 1h.9c-.4 2.5-2.4 4.5-4.9 4.9V11h1c.6 0 1-.4 1-1s-.4-1-1-1h-1V7.8c1.2-.4 2-1.5 2-2.8c0-1.7-1.3-3-3-3S9 3.3 9 5c0 1.3.8 2.4 2 2.8V9h-1c-.6 0-1 .4-1 1s.4 1 1 1h1v8.9c-2.5-.4-4.5-2.4-4.9-4.9H7c.6 0 1-.4 1-1s-.4-1-1-1H5c-.6 0-1 .4-1 1c0 4.4 3.6 8 8 8s8-3.6 8-8c0-.6-.4-1-1-1zm-7-9c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1z"/>`
	angleDoubleDownInnerSVG      = `<path fill="currentColor" d="M11.3 11.5c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L12 9.3L9.7 7c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3 3.1zm3 1L12 14.8l-2.3-2.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3 3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4c-.4-.3-1-.3-1.4 0z"/>`
	angleDoubleLeftInnerSVG      = `<path fill="currentColor" d="M17 14.3L14.7 12L17 9.7c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4l3 3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.3-.4.3-1 0-1.4zM9.2 12l2.3-2.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4l3 3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4L9.2 12z"/>`
	angleDoubleRightInnerSVG     = `<path fill="currentColor" d="M8.5 8.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4L9.3 12L7 14.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4l-2.9-3zm8.5 3l-3-3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l2.3 2.3l-2.3 2.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l3-3c.3-.4.3-1 0-1.4z"/>`
	angleDoubleUpInnerSVG        = `<path fill="currentColor" d="M12.7 12.5c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0l2.3-2.3l2.3 2.3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-3-3zm-3-1L12 9.2l2.3 2.3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-3-3c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4c.4.3 1 .3 1.4 0z"/>`
	angleDownInnerSVG            = `<path fill="currentColor" d="M16.9 9.2c-.4-.4-1-.4-1.4 0L12 12.7L8.5 9.2c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l4.2 4.2c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l4.2-4.2c.4-.4.4-1 0-1.4z"/>`
	angleLeftInnerSVG            = `<path fill="currentColor" d="m11.3 12l3.5-3.5c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-4.2 4.2c-.4.4-.4 1 0 1.4l4.2 4.2c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4L11.3 12z"/>`
	angleRightInnerSVG           = `<path fill="currentColor" d="M9.9 17.2c-.6 0-1-.4-1-1c0-.3.1-.5.3-.7l3.5-3.5l-3.5-3.5c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l4.2 4.2c.4.4.4 1 0 1.4l-4.2 4.2c-.2.2-.5.3-.7.3z"/>`
	angleRightBInnerSVG          = `<path fill="currentColor" d="M15.5 11.3L9.9 5.6c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l4.9 4.9l-4.9 4.9c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l5.7-5.7c.3-.2.3-.8-.1-1.2z"/>`
	angleUpInnerSVG              = `<path fill="currentColor" d="m16.9 13.4l-4.2-4.2c-.4-.4-1-.4-1.4 0l-4.2 4.2c-.4.4-.4 1 0 1.4s1 .4 1.4 0l3.5-3.5l3.5 3.5c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4z"/>`
	appsInnerSVG                 = `<path fill="currentColor" d="M10 2H3c-.6 0-1 .4-1 1v7c0 .6.4 1 1 1h7c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm0 11H3c-.6 0-1 .4-1 1v7c0 .6.4 1 1 1h7c.6 0 1-.4 1-1v-7c0-.6-.4-1-1-1zM21 2h-7c-.6 0-1 .4-1 1v7c0 .6.4 1 1 1h7c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm0 11h-7c-.6 0-1 .4-1 1v7c0 .6.4 1 1 1h7c.6 0 1-.4 1-1v-7c0-.6-.4-1-1-1z"/>`
	arrowCircleDownInnerSVG      = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.7 10.7l-3 3c-.1.1-.2.2-.3.2c-.2.1-.5.1-.8 0c-.1 0-.2-.1-.3-.2l-3-3c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l1.3 1.3V9c0-.6.4-1 1-1s1 .4 1 1v3.6l1.3-1.3c.4-.4 1-.4 1.4 0c.4.4.4 1 0 1.4z"/>`
	arrowCircleLeftInnerSVG      = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3 11h-3.6l1.3 1.3c.4.4.4 1 0 1.4c-.4.4-1 .4-1.4 0l-3-3c-.4-.4-.4-1 0-1.4l3-3c.4-.4 1-.4 1.4 0c.4.4.4 1 0 1.4L11.4 11H15c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	arrowCircleRightInnerSVG     = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.7 10.7l-3 3c-.4.4-1 .4-1.4 0c-.4-.4-.4-1 0-1.4l1.3-1.3H9c-.6 0-1-.4-1-1s.4-1 1-1h3.6l-1.3-1.3c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l3 3c.4.4.4 1 0 1.4z"/>`
	arrowCircleUpInnerSVG        = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.7 10.7c-.4.4-1 .4-1.4 0L13 11.4V15c0 .6-.4 1-1 1s-1-.4-1-1v-3.6l-1.3 1.3c-.4.4-1 .4-1.4 0c-.4-.4-.4-1 0-1.4l3-3c.4-.4 1-.4 1.4 0l3 3c.4.4.4 1 0 1.4z"/>`
	arrowDownLeftInnerSVG        = `<path fill="currentColor" d="M17 16H9.4l8.3-8.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L8 14.6V7c0-.6-.4-1-1-1s-1 .4-1 1v10c0 .1 0 .3.1.4c.1.2.3.4.5.5c.1.1.3.1.4.1h10c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	arrowDownRightInnerSVG       = `<path fill="currentColor" d="M17 6c-.6 0-1 .4-1 1v7.6L7.7 6.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l8.3 8.3H7c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1V7c0-.6-.4-1-1-1z"/>`
	arrowUpLeftInnerSVG          = `<path fill="currentColor" d="M9.4 8H17c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1v10c0 .6.4 1 1 1s1-.4 1-1V9.4l8.3 8.3c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4L9.4 8z"/>`
	arrowUpRightInnerSVG         = `<path fill="currentColor" d="M17 6H7c-.6 0-1 .4-1 1s.4 1 1 1h7.6l-8.3 8.3c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0L16 9.4V17c0 .6.4 1 1 1s1-.4 1-1V7c0-.6-.4-1-1-1z"/>`
	atInnerSVG                   = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c1.8 0 3.5-.5 5-1.3c.5-.3.6-.9.4-1.4c-.3-.5-.9-.6-1.4-.4c-3.8 2.2-8.7.9-10.9-2.9C2.9 12.2 4.2 7.3 8 5.1c3.8-2.2 8.7-.9 10.9 2.9c.7 1.2 1.1 2.6 1.1 4v.8c0 1-.8 1.8-1.8 1.8s-1.8-.8-1.8-1.8V8.5c0-.6-.4-1-1-1c-.5 0-.9.3-1 .8c-2-1.4-4.9-.9-6.3 1.1c-1.4 2-.9 4.9 1.1 6.3c1.9 1.3 4.4 1 5.9-.7c1.3 1.6 3.6 1.9 5.2.7c.9-.7 1.5-1.8 1.5-3V12C22 6.5 17.5 2 12 2zm0 12.5c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5s2.5 1.1 2.5 2.5s-1.1 2.5-2.5 2.5z"/>`
	bagInnerSVG                  = `<path fill="currentColor" d="M19 6h-3V5c0-1.1-.9-2-2-2h-4c-1.1 0-2 .9-2 2v1H5C3.3 6 2 7.3 2 9v9c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V9c0-1.7-1.3-3-3-3zm-9-1h4v1h-4V5zm10 13c0 .6-.4 1-1 1H5c-.6 0-1-.4-1-1v-5.6L8.7 14H15c.1 0 .2 0 .3-.1l4.7-1.6V18z"/>`
	barsInnerSVG                 = `<path fill="currentColor" d="M20 11H4c-.6 0-1 .4-1 1s.4 1 1 1h16c.6 0 1-.4 1-1s-.4-1-1-1zM4 8h16c.6 0 1-.4 1-1s-.4-1-1-1H4c-.6 0-1 .4-1 1s.4 1 1 1zm16 8H4c-.6 0-1 .4-1 1s.4 1 1 1h16c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	batteryBoltInnerSVG          = `<path fill="currentColor" d="M17 7H4c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h6.7c-.6 0-1-.4-1-1c0-.2 0-.3.1-.5l1.4-2.5H8c-.1 0-.2 0-.3-.1h-.2l-.1-.1c-.1 0-.1-.1-.2-.1c-.1-.1-.1-.2-.2-.3V12c0-.1.1-.3.1-.4v-.1l2.3-4c.3-.5.9-.6 1.4-.4c.5.3.6.9.4 1.4L9.7 11h3.4c.1 0 .3.1.4.1h.1l.1.1c.1 0 .1.1.2.1c.1.1.1.2.2.3v.4c0 .1-.1.3-.1.4v.1l-2.3 4c-.3.3-.7.5-1 .5H17c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm4 3c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1s1-.4 1-1v-2c0-.6-.4-1-1-1z"/>`
	batteryEmptyInnerSVG         = `<path fill="currentColor" d="M21 10c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1s1-.4 1-1v-2c0-.6-.4-1-1-1zm-4-3H4c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2z"/>`
	bookmarkInnerSVG             = `<path fill="currentColor" d="M16 2H8C6.3 2 5 3.3 5 5v16c0 .2 0 .3.1.5c.3.5.9.6 1.4.4l5.5-3.2l5.5 3.2c.2.1.3.1.5.1c.6 0 1-.4 1-1V5c0-1.7-1.3-3-3-3z"/>`
	borderAltInnerSVG            = `<path fill="currentColor" d="M20.5 3.5c0-.6-.4-1-1-1h-16c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1s1-.4 1-1v-15h15c.6 0 1-.4 1-1zm-1 7c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-12 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	borderBottomInnerSVG         = `<path fill="currentColor" d="M12 9.5c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-12c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm-12 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 8c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm-12-4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm16 6c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 12H4c-.6 0-1 .4-1 1s.4 1 1 1h16c.6 0 1-.4 1-1s-.4-1-1-1zm-16-6c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-8c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm4 8c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm-4 4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1z"/>`
	borderClearInnerSVG          = `<path fill="currentColor" d="M12 15c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-12c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM4 15c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM4 7c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM8 19c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-12c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm16 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-6c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1z"/>`
	borderHorizontalInnerSVG     = `<path fill="currentColor" d="M20 11H4c-.6 0-1 .4-1 1s.4 1 1 1h16c.6 0 1-.4 1-1s-.4-1-1-1zm-8 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-10c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zM4 15c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM4 9c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm4 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zM8 19c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-12c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-2c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1z"/>`
	borderInnerInnerSVG          = `<path fill="currentColor" d="M21 12c0-.6-.4-1-1-1h-7V4c0-.6-.4-1-1-1s-1 .4-1 1v7H4c-.6 0-1 .4-1 1s.4 1 1 1h7v7c0 .6.4 1 1 1s1-.4 1-1v-7h7c.5 0 1-.4 1-1zM4 15c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zM4 9c.6 0 1-.4 1-1s-.5-1-1-1s-1 .4-1 1s.4 1 1 1zm0-4c.6 0 1-.4 1-1s-.5-1-1-1s-1 .4-1 1s.4 1 1 1zm4 0c.6 0 1-.4 1-1s-.5-1-1-1s-1 .4-1 1s.4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zM8 19c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zm8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zm4-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.5-1-1-1zm0-10c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1z"/>`
	borderLeftInnerSVG           = `<path fill="currentColor" d="M3.5 3c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1s1-.4 1-1V4c0-.6-.4-1-1-1zm4 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-12-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 2c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 2c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	borderOutInnerSVG            = `<path fill="currentColor" d="M20 3H4c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1h16c.6 0 1-.4 1-1V4c0-.6-.4-1-1-1zm-1 16H5V5h14v14zm-7-6c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0-8c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm-4 4c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm8 0c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1z"/>`
	borderRightInnerSVG          = `<path fill="currentColor" d="M20.5 3c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1s1-.4 1-1V4c0-.6-.4-1-1-1zm-4 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm12 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	borderTopInnerSVG            = `<path fill="currentColor" d="M4 4.5h16c.6 0 1-.4 1-1s-.4-1-1-1H4c-.6 0-1 .4-1 1s.4 1 1 1zm8 2c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8-12c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm8-8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-8 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	borderVerticalInnerSVG       = `<path fill="currentColor" d="M11 3c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1s1-.4 1-1V4c0-.6-.4-1-1-1zm-4 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm12 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM7 3c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM3 3c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm12 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 2c.6 0 1-.4 1-1s-.4-1-1-1s-1 .4-1 1s.4 1 1 1zm0 2c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM3 7c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm0 8c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm12 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 0c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	briefcaseInnerSVG            = `<path fill="currentColor" d="M17 15.5V17c0 .6-.4 1-1 1s-1-.4-1-1v-1.5H9V17c0 .6-.4 1-1 1s-1-.4-1-1v-1.5H5c-.7 0-1.4-.2-2-.5v4c0 1.7 1.3 3 3 3h12c1.7 0 3-1.3 3-3v-4c-.6.3-1.3.5-2 .5h-2zM21 6h-4V5c0-1.7-1.3-3-3-3h-4C8.3 2 7 3.3 7 5v1H3c-.6 0-1 .4-1 1v4c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V7c0-.6-.4-1-1-1zm-6 0H9V5c0-.6.4-1 1-1h4c.6 0 1 .4 1 1v1z"/>`
	calenderInnerSVG             = `<path fill="currentColor" d="M2 19c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3v-8H2v8zM19 4h-2V3c0-.6-.4-1-1-1s-1 .4-1 1v1H9V3c0-.6-.4-1-1-1s-1 .4-1 1v1H5C3.3 4 2 5.3 2 7v2h20V7c0-1.7-1.3-3-3-3z"/>`
	chartInnerSVG                = `<path fill="currentColor" d="M19 2H5C3.3 2 2 3.3 2 5v14c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3zM8 17c0 .6-.4 1-1 1s-1-.4-1-1v-4c0-.6.4-1 1-1s1 .4 1 1v4zm5 0c0 .6-.4 1-1 1s-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v10zm5 0c0 .6-.4 1-1 1s-1-.4-1-1v-6c0-.6.4-1 1-1s1 .4 1 1v6z"/>`
	chartPieInnerSVG             = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm0 2c4 0 7.4 3 7.9 7H12V4zm4 14.9L12.6 13H20c-.4 2.5-1.8 4.7-4 5.9z"/>`
	checkInnerSVG                = `<path fill="currentColor" d="M18.7 7.2c-.4-.4-1-.4-1.4 0l-7.5 7.5l-3.1-3.1c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3.8 3.8c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l8.2-8.2c.4-.4.4-1 0-1.4z"/>`
	checkCircleInnerSVG          = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm4.2 8.3l-4.8 4.8c-.4.4-1 .4-1.4 0l-2.2-2.2c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l1.5 1.5l4.1-4.1c.4-.4 1-.4 1.4 0c.4.4.4 1 0 1.4z"/>`
	checkSquareInnerSVG          = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-3.3 7.3l-6.8 6.8c-.4.4-1 .4-1.4 0l-3.2-3.2c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l2.5 2.5l6.1-6.1c.4-.4 1-.4 1.4 0c.4.4.4 1 0 1.4z"/>`
	circleLayerInnerSVG          = `<path fill="currentColor" d="M7 12c-2.8 0-5 2.2-5 5s2.2 5 5 5s5-2.2 5-5s-2.2-5-5-5zm4-5c-2.4 0-4.6 1.5-5.5 3.7c3.5-.9 7 1.3 7.8 4.7c.3 1 .3 2.1 0 3.1c3.1-1.3 4.5-4.8 3.2-7.8C15.6 8.5 13.4 7 11 7zm10.2-1.2C20.1 3.5 17.6 2 15 2S9.9 3.5 8.8 5.8c4-1.2 8.2 1 9.4 4.9c.5 1.5.5 3 0 4.5c3.4-1.7 4.8-5.9 3-9.4z"/>`
	clinicMedicalInnerSVG        = `<path fill="currentColor" d="m21.7 10.3l-9-8c-.4-.3-.9-.3-1.3 0l-9 8c-.4.4-.5 1-.1 1.4s1 .5 1.4.1l.3-.4V21c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9.6l.3.3c.4.4 1 .3 1.4-.1c.4-.3.4-1 0-1.3zM14 15h-1v1c0 .6-.4 1-1 1s-1-.4-1-1v-1h-1c-.6 0-1-.4-1-1s.4-1 1-1h1v-1c0-.6.4-1 1-1s1 .4 1 1v1h1c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	clockInnerSVG                = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.5 12c-.3.5-.9.6-1.4.4l-2.6-1.5c-.3-.2-.5-.5-.5-.9V7c0-.6.4-1 1-1s1 .4 1 1v4.4l2.1 1.2c.5.3.6.9.4 1.4z"/>`
	clockEightInnerSVG           = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm1 10c0 .4-.2.7-.5.9l-2.6 1.5c-.5.3-1.1.1-1.4-.4s-.1-1.1.4-1.4l2.1-1.2V7c0-.6.4-1 1-1s1 .4 1 1v5z"/>`
	clockFiveInnerSVG            = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm2 13.7c-.5.3-1.1.1-1.4-.4l-1.5-2.8c-.1-.2-.1-.3-.1-.5V7c0-.6.4-1 1-1s1 .4 1 1v4.7l1.4 2.6c.2.5.1 1.1-.4 1.4z"/>`
	clockNineInnerSVG            = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm1 10c0 .6-.4 1-1 1H9c-.6 0-1-.4-1-1s.4-1 1-1h2V7c0-.6.4-1 1-1s1 .4 1 1v5z"/>`
	clockSevenInnerSVG           = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm1 10c0 .2-.1.3-.1.4l-1.5 2.8c-.3.5-.9.7-1.4.4c-.5-.3-.7-.9-.4-1.4l1.4-2.6V7c0-.6.4-1 1-1s1 .4 1 1v5z"/>`
	clockTenInnerSVG             = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm1 10c0 .6-.4 1-1 1c-.2 0-.3 0-.5-.1l-2.6-1.5c-.5-.3-.6-.9-.4-1.4c.3-.5.9-.6 1.4-.4l1.1.6V7c0-.6.4-1 1-1s1 .4 1 1v5z"/>`
	clockThreeInnerSVG           = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3 11h-3c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v4h2c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	clockTwoInnerSVG             = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.1 9.4l-2.6 1.5c-.5.3-1.1.1-1.4-.4c-.1-.2-.1-.3-.1-.5V7c0-.6.4-1 1-1s1 .4 1 1v3.3l1.1-.6c.5-.3 1.1-.1 1.4.4s.1 1-.4 1.3z"/>`
	columnsInnerSVG              = `<path fill="currentColor" d="M2 3v18c0 .6.4 1 1 1h8V2H3c-.6 0-1 .4-1 1zm19-1h-8v20h8c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z"/>`
	commentDotsInnerSVG          = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12c0 2.3.8 4.5 2.3 6.3l-2 2c-.4.4-.4 1 0 1.4c.2.2.4.3.7.3h9c5.5 0 10-4.5 10-10S17.5 2 12 2zM8 13c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm4 0c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm4 0c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>`
	compressInnerSVG             = `<path fill="currentColor" d="M8 15H3c-.6 0-1 .4-1 1s.4 1 1 1h4v4c0 .6.4 1 1 1s1-.4 1-1v-5c0-.6-.4-1-1-1zM8 2c-.6 0-1 .4-1 1v4H3c-.6 0-1 .4-1 1s.4 1 1 1h5c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm8 7h5c.6 0 1-.4 1-1s-.4-1-1-1h-4V3c0-.6-.4-1-1-1s-1 .4-1 1v5c0 .6.4 1 1 1zm5 6h-5c-.6 0-1 .4-1 1v5c0 .6.4 1 1 1s1-.4 1-1v-4h4c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	cornerDownLeftInnerSVG       = `<path fill="currentColor" d="M18.7 2c-.6 0-1 .4-1 1v10.4c0 1.1-.9 2-2 2h-8l2.9-2.9c.4-.4.4-1 0-1.4s-1-.4-1.4 0l-4.6 4.6c-.4.4-.4 1 0 1.4l4.6 4.6c.2.2.5.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-2.9-2.9h8c2.2 0 4-1.8 4-4V3c0-.6-.5-1-1-1z"/>`
	cornerDownRightInnerSVG      = `<path fill="currentColor" d="M19.4 15.7L14.8 11c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l2.9 2.9h-7c-1.7 0-3-1.3-3-3V3c0-.6-.4-1-1-1s-1 .4-1 1v9.4c0 2.8 2.2 5 5 5h7l-2.9 2.9c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l4.6-4.6c.4-.4.4-1 0-1.4z"/>`
	cornerLeftDownInnerSVG       = `<path fill="currentColor" d="M21 4.3h-9.4c-2.8 0-5 2.2-5 5v7l-2.9-2.9c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l4.6 4.6c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l4.6-4.6c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-2.9 2.9v-7c0-1.7 1.3-3 3-3H21c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	cornerRightDownInnerSVG      = `<path fill="currentColor" d="M21.7 13.4c-.4-.4-1-.4-1.4 0l-2.9 2.9v-8c0-2.2-1.8-4-4-4H3c-.6 0-1 .4-1 1s.4 1 1 1h10.4c1.1 0 2 .9 2 2v8l-2.9-2.9c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l4.6 4.6c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l4.6-4.6c.4-.4.4-1.1 0-1.4z"/>`
	cornerUpLeftInnerSVG         = `<path fill="currentColor" d="M14.7 6.6h-7l2.9-2.9c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L4.6 6.9c-.4.4-.4 1 0 1.4L9.2 13c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-2.9-3h7c1.7 0 3 1.3 3 3V21c0 .6.4 1 1 1s1-.4 1-1v-9.4c0-2.7-2.3-5-5-5z"/>`
	cornerUpRightInnerSVG        = `<path fill="currentColor" d="m19.4 6.9l-4.6-4.6c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l2.9 2.9h-8c-2.2 0-4 1.8-4 4V21c0 .6.4 1 1 1s1-.4 1-1V10.6c0-1.1.9-2 2-2h8l-2.9 2.9c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l4.6-4.6c.4-.4.4-1 0-1.4z"/>`
	coronavirusInnerSVG          = `<path fill="currentColor" d="M22 11h-1.1c-.2-1.7-.9-3.3-1.9-4.6l.8-.8c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-.8.8c-1.3-1.1-2.9-1.7-4.6-1.9V2c0-.6-.4-1-1-1s-1 .4-1 1v1.1c-1.7.1-3.3.8-4.6 1.9l-.8-.8c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l.8.8C3.9 7.7 3.2 9.3 3.1 11H2c-.6 0-1 .4-1 1s.4 1 1 1h1.1c.2 1.7.9 3.3 1.9 4.6l-.8.8c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0l.8-.8c1.3 1.1 2.9 1.7 4.6 1.9V22c0 .6.4 1 1 1s1-.4 1-1v-1.1c1.7-.2 3.3-.9 4.6-1.9l.8.8c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4l-.8-.8c1.1-1.3 1.7-2.9 1.9-4.6H22c.6 0 1-.4 1-1s-.4-1-1-1zM9 16c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm.5-4c-.8 0-1.5-.7-1.5-1.5S8.7 9 9.5 9s1.5.7 1.5 1.5s-.7 1.5-1.5 1.5zm5 3c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5s1.5.7 1.5 1.5s-.7 1.5-1.5 1.5zm.5-5c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>`
	dialpadInnerSVG              = `<path fill="currentColor" d="M14 9.2h-4c-.4 0-.8.3-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8v-4c0-.4-.4-.8-.8-.8zm0 7h-4c-.4 0-.8.3-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8v-4c0-.4-.4-.8-.8-.8zm-7-14H3c-.4 0-.8.4-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8V3c0-.4-.4-.8-.8-.8zm0 7H3c-.4 0-.8.3-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8v-4c0-.4-.4-.8-.8-.8zm14-7h-4c-.4 0-.8.3-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8V3c0-.4-.4-.8-.8-.8zm-7 0h-4c-.4 0-.8.4-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8V3c0-.4-.4-.8-.8-.8zm7 7h-4c-.4 0-.8.3-.8.8v4c0 .4.3.8.8.8h4c.4 0 .8-.3.8-.8v-4c0-.4-.4-.8-.8-.8z"/>`
	directionInnerSVG            = `<path fill="currentColor" d="M14.3 14.8L12 17.1l-2.3-2.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3 3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0zm-4.6-4.6L12 7.9l2.3 2.3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-3-3c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0z"/>`
	documentLayoutCenterInnerSVG = `<path fill="currentColor" d="M19 8h2c.6 0 1-.4 1-1s-.4-1-1-1h-2c-.6 0-1 .4-1 1s.4 1 1 1zm2 2h-2c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1-.4 1-1s-.4-1-1-1zM3 8h2c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm0 4h2c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm6 0h6c.6 0 1-.4 1-1V5c0-.6-.4-1-1-1H9c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1zm12 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm-8 4H3c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	documentLayoutLeftInnerSVG   = `<path fill="currentColor" d="M13 8h8c.6 0 1-.4 1-1s-.4-1-1-1h-8c-.6 0-1 .4-1 1s.4 1 1 1zm8 2h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zM3 12h6c.6 0 1-.4 1-1V5c0-.6-.4-1-1-1H3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1zm18 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm-8 4H3c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	documentLayoutRightInnerSVG  = `<path fill="currentColor" d="M13 18H3c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zM3 8h8c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm0 4h8c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18-8h-6c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V5c0-.6-.4-1-1-1zm0 10H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	downloadAltInnerSVG          = `<path fill="currentColor" d="M18 9h-2c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1 .4 1 1v7c0 .6-.4 1-1 1H6c-.6 0-1-.4-1-1v-7c0-.6.4-1 1-1h2c.6 0 1-.4 1-1s-.4-1-1-1H6c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h12c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zm-9.7 5.7l3 3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L13 14.6V3c0-.6-.4-1-1-1s-1 .4-1 1v11.6l-1.3-1.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4z"/>`
	ellipsisHInnerSVG            = `<path fill="currentColor" d="M12 10c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2zm-7 0c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2zm14 0c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2z"/>`
	ellipsisVInnerSVG            = `<path fill="currentColor" d="M12 10c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2zm0-3c1.1 0 2-.9 2-2s-.9-2-2-2s-2 .9-2 2s.9 2 2 2zm0 10c-1.1 0-2 .9-2 2s.9 2 2 2s2-.9 2-2s-.9-2-2-2z"/>`
	exclamationCircleInnerSVG    = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm0 15c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm1-5c0 .6-.4 1-1 1s-1-.4-1-1V8c0-.6.4-1 1-1s1 .4 1 1v4z"/>`
	exclamationOctagonInnerSVG   = `<path fill="currentColor" d="m21.7 7.6l-5.3-5.3c-.2-.2-.4-.3-.7-.3H8.3c-.3 0-.5.1-.7.3L2.3 7.6c-.2.2-.3.4-.3.7v7.5c0 .3.1.5.3.7l5.3 5.3c.2.1.4.2.7.2h7.5c.3 0 .5-.1.7-.3l5.3-5.3c.2-.2.3-.4.3-.7V8.3c-.1-.3-.2-.5-.4-.7zM12 17c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm1-5c0 .6-.4 1-1 1s-1-.4-1-1V8c0-.6.4-1 1-1s1 .4 1 1v4z"/>`
	exclamationTriangleInnerSVG  = `<path fill="currentColor" d="m22.7 17.5l-8.1-14c-.8-1.4-2.7-1.9-4.1-1.1c-.5.3-.9.7-1.1 1.1l-8.1 14c-.8 1.4-.3 3.3 1.1 4.1c.5.3 1 .4 1.5.4H20c1.7 0 3-1.4 3-3c.1-.6-.1-1.1-.3-1.5zM12 18c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm1-5c0 .6-.4 1-1 1s-1-.4-1-1V9c0-.6.4-1 1-1s1 .4 1 1v4z"/>`
	favoriteInnerSVG             = `<path fill="currentColor" d="M22 10.1c.1-.5-.3-1.1-.8-1.1l-5.7-.8L12.9 3c-.1-.2-.2-.3-.4-.4c-.5-.3-1.1-.1-1.4.4L8.6 8.2L2.9 9c-.3 0-.5.1-.6.3c-.4.4-.4 1 0 1.4l4.1 4l-1 5.7c0 .2 0 .4.1.6c.3.5.9.7 1.4.4l5.1-2.7l5.1 2.7c.1.1.3.1.5.1h.2c.5-.1.9-.6.8-1.2l-1-5.7l4.1-4c.2-.1.3-.3.3-.5z"/>`
	flipHInnerSVG                = `<path fill="currentColor" d="M21 11H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zm-4 4H7c-.3 0-.5.1-.7.3c-.4.4-.4 1 0 1.4l5 5c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l5-5c.2-.2.3-.4.3-.7c0-.6-.4-1-1-1zm-1.6-7c0 .6.4 1 1 1h.6c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-.7-.7c-.3-.3-.8-.4-1.2-.2c-.5.2-.7.8-.4 1.3V8zm-3.8-3.2l.4-.4l.8.8c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-1.1-1.1c-.1-.1-.2-.1-.3-.2c0-.1-.1-.2-.2-.3c-.4-.4-1-.4-1.4 0l-1.1 1.1c-.4.4-.4 1 0 1.4s1.2.5 1.5.1zM7.1 9c.3 0 .5-.1.7-.3l1.1-1.1c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-1.2 1c-.1.2-.2.5-.2.7c0 .6.4 1 1 1.1zm3.8 0h1.5c.6 0 1-.4 1-1s-.4-1-1-1h-1.5c-.6 0-1 .4-1 1s.5 1 1 1z"/>`
	flipHAltInnerSVG             = `<path fill="currentColor" d="M7.4 7.2h.2l1.9-.5c.5-.1.9-.7.7-1.2c-.1-.5-.7-.9-1.2-.7l-1.9.4c-.4.1-.8.5-.8 1c.1.5.5 1 1.1 1zM9.5 9h-2c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1-.4 1-1s-.4-1-1-1zm3.7-3.3h.2l1.9-.5c.6-.2 1-.7.8-1.2c-.1-.5-.7-.9-1.2-.7l-1.9.4c-.4.1-.8.5-.8 1s.5 1 1 1zm.3 3.3c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1-.4 1-1s-.4-1-1-1h-2zM21 2.8c-.1-.5-.7-.9-1.2-.7l-1 .2c-.4.1-.8.5-.8 1c0 .6.4 1 1 1c.1.4.5.7 1 .7c.6 0 1-.4 1-1V2.8zM4 10.5c.6 0 1-.4 1-1v-2c0-.6-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zM20 7c-.6 0-1 .4-1 1v1.1c-.3.2-.5.5-.5.9c0 .6.4 1 1 1h.5c.6 0 1-.4 1-1V8c0-.6-.4-1-1-1zm0 6H4c-.6 0-1 .4-1 1v3c0 .5.3.9.8 1l16 4h.2c.6 0 1-.4 1-1v-7c0-.6-.4-1-1-1z"/>`
	flipVInnerSVG                = `<path fill="currentColor" d="M12 2c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1s1-.4 1-1V3c0-.6-.4-1-1-1zm9.7 9.3l-5-5c-.2-.2-.4-.3-.7-.3c-.6 0-1 .4-1 1v10c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l5-5c.4-.4.4-1 0-1.4zM3.8 9.8l-1.1 1.1c-.1.1-.1.2-.2.3c-.1 0-.2.1-.3.2c-.4.4-.4 1 0 1.4l1.1 1.1c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-.3-.5l.8-.8c.4-.4.4-1 0-1.4s-1-.4-1.4 0zm3.8 5.4c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l1.1 1.1c.1.1.4.3.6.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-1-1.1zm-.3-8.9l-.7.7c-.2.1-.3.4-.3.7c0 .6.4 1 1 1c.2 0 .3 0 .5-.1H8c.6 0 1-.4 1-1V7c0-.3-.1-.5-.3-.7c-.4-.4-1-.4-1.4 0zm.7 4.3c-.6 0-1 .4-1 1v1.5c0 .6.4 1 1 1s1-.4 1-1v-1.5c0-.6-.4-1-1-1z"/>`
	flipVAltInnerSVG             = `<path fill="currentColor" d="M4.9 12.2c-.5-.1-1.1.2-1.2.7l-.5 1.9c-.1.6.2 1.2.8 1.3h.2c.5 0 .9-.3 1-.8l.5-1.9c.1-.5-.2-1-.8-1.2zM7.5 5h2c.6 0 1-.4 1-1s-.4-1-1-1h-2c-.6 0-1 .4-1 1s.5 1 1 1zM4.2 19c0-.5-.3-.9-.8-1c-.5-.1-1.1.2-1.2.7l-.2 1v.2c0 .6.4 1 1 1h1c.5 0 .9-.3 1-.8c.1-.4-.2-.9-.8-1.1zM6.4 6.4c-.5-.1-1.1.2-1.2.7l-.5 2v.2c0 .6.4 1 1 1c.5 0 .9-.3 1-.8l.5-1.9c.1-.5-.3-1-.8-1.2zm3.6 6.1c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1s1-.4 1-1v-2c0-.5-.4-1-1-1zm0-6c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1s1-.4 1-1v-2c0-.5-.4-1-1-1zm.5 12.1c-.5-.2-1.1-.1-1.4.4H8c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1-.4 1-1v-.5c0-.3-.2-.7-.5-.9zM22 19.8l-4-16c-.1-.5-.5-.8-1-.8h-3c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1h7.2c.6-.2.9-.7.8-1.2z"/>`
	graphBarInnerSVG             = `<path fill="currentColor" d="M6 13H2c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1h4c.6 0 1-.4 1-1v-8c0-.6-.4-1-1-1zm16-4h-4c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V10c0-.6-.4-1-1-1zm-8-8h-4c-.6 0-1 .4-1 1v20c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1z"/>`
	gridInnerSVG                 = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v4h20V3c0-.6-.4-1-1-1zM2 15h9V9H2v6zm0 6c0 .6.4 1 1 1h8v-5H2v4zm11-6h9V9h-9v6zm0 7h8c.6 0 1-.4 1-1v-4h-9v5z"/>`
	gridsInnerSVG                = `<path fill="currentColor" d="M2 3.9v16.2c0 1 .9 1.9 1.9 1.9H8V2H3.9C2.9 2 2 2.9 2 3.9zM20.1 2H16v20h4.1c1 0 1.9-.9 1.9-1.9V3.9c0-1-.9-1.9-1.9-1.9zM10 22h4V2h-4v20z"/>`
	gripHorizontalLineInnerSVG   = `<path fill="currentColor" d="M3 11h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 2H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	headSideInnerSVG             = `<path fill="currentColor" d="M13.2 2c-2-.1-4 .7-5.5 2.1c-1.4 1.4-2.2 3.4-2.2 5.4l-1.9 4c-.2.5 0 1.1.5 1.3c.1.2.3.2.4.2h1v2c0 1.1.9 2 2 2h1v2c0 .6.4 1 1 1h9.3c.5-.2.8-.7.7-1.2l-.9-3.2l1.9-7.3v-.5c0-4.1-3.2-7.6-7.3-7.8z"/>`
	headSideCoughInnerSVG        = `<path fill="currentColor" d="M6 16c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm-4 1c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm3 3c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM16.2 2c-4-.1-7.2 2.9-7.3 6.9v.2l-1.8 3.8c-.2.5 0 1.1.5 1.3c.1.1.3.1.4.1h.9v1.8c0 1.1.9 1.9 1.9 1.9h.9v1.8c0 .6.4 1 1 1h8.7c.5-.2.8-.7.7-1.2l-.9-3L23 9.8v-.5c0-3.9-3-7.1-6.8-7.3z"/>`
	headSideMaskInnerSVG         = `<path fill="currentColor" d="M13.2 2c-2-.1-4 .7-5.5 2.1c-1.4 1.4-2.2 3.3-2.2 5.4l-1.8 3c-.1.2-.2.3-.2.5c0 .1 0 .2.1.3L5 17.2v.1c.5 1 1.5 1.7 2.7 1.7h.8v2c0 .6.4 1 1 1s1-.4 1-1v-2h2c.1 0 .2 0 .3-.1l3.7-1.3v.1l1 3.5c.1.4.5.7 1 .7h.3c.5-.2.8-.7.7-1.2l-.9-3.2l1.9-7.3v-.4c0-4.1-3.2-7.6-7.3-7.8zM17 15.4l-3.5 1.2v-2.9l4.3-1.4l-.8 3.1zm1.4-5.4h-.3l-5.8 2h-6l1.1-1.7c.1-.2.2-.4.1-.6v-.2C7.5 6.5 10 4 13 4h.2c3 .2 5.4 2.7 5.3 5.8l-.1.2z"/>`
	historyInnerSVG              = `<path fill="currentColor" d="M17 3.3C13.1 1.1 8.3 1.8 5.1 4.8V3c0-.6-.4-1-1-1s-1 .4-1 1v4.5c0 .6.4 1 1 1h4.5c.6 0 1-.4 1-1s-.4-1-1-1H6.2C7.7 4.9 9.8 4 12 4c4.4 0 8 3.6 8 8s-3.6 8-8 8s-8-3.6-8-8c0-.6-.4-1-1-1s-1 .4-1 1c0 5.5 4.5 10 10 10c3.6 0 6.9-1.9 8.7-5c2.7-4.8 1.1-10.9-3.7-13.7zM12 8c-.6 0-1 .4-1 1v3c0 .6.4 1 1 1h2c.6 0 1-.4 1-1s-.4-1-1-1h-1V9c0-.6-.4-1-1-1z"/>`
	historyAltInnerSVG           = `<path fill="currentColor" d="M16.4 3.3C12.5 1.1 7.7 1.8 4.6 4.8V3c0-.6-.4-1-1-1s-1 .4-1 1v4.5c0 .6.4 1 1 1h4.5c.6 0 1-.4 1-1s-.4-1-1-1H5.7C7.1 4.9 9.2 4 11.5 4c4.4 0 8 3.6 8 8s-3.6 8-8 8c-.6 0-1 .4-1 1s.4 1 1 1c3.6 0 6.9-1.9 8.7-5c2.7-4.8 1-10.9-3.8-13.7zm-5 4.7c-.6 0-1 .4-1 1v3c0 .6.4 1 1 1h2c.6 0 1-.4 1-1s-.4-1-1-1h-1V9c0-.6-.4-1-1-1z"/>`
	horizontalAlignLeftInnerSVG  = `<path fill="currentColor" d="M21 10h-5V7c0-.6-.4-1-1-1H4V3c0-.6-.4-1-1-1c-.5 0-1 .4-1 1v18c0 .6.4 1 1 1s1-.4 1-1v-3h17c.6 0 1-.4 1-1v-6c0-.6-.4-1-1-1zm-7 0H4V8h10v2z"/>`
	hospitalInnerSVG             = `<path fill="currentColor" d="M21.5 6.5h-3v-4c0-.6-.4-1-1-1h-11c-.6 0-1 .4-1 1v4h-3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h19c.6 0 1-.4 1-1v-14c0-.6-.4-1-1-1zm-14 12h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1zm0-4h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1zm5 4h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1zm0-4h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1zm1-5.5H13v.5c0 .6-.4 1-1 1s-1-.4-1-1V9h-.5c-.6 0-1-.4-1-1s.4-1 1-1h.5v-.5c0-.6.4-1 1-1s1 .4 1 1V7h.5c.6 0 1 .4 1 1s-.4 1-1 1zm4 9.5h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1zm0-4h-1c-.6 0-1-.4-1-1s.4-1 1-1h1c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	hospitalSquareSignInnerSVG   = `<path fill="currentColor" d="M19 2H5C3.3 2 2 3.3 2 5v14c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3zm-3 15c0 .6-.4 1-1 1s-1-.4-1-1v-4h-4v4c0 .6-.4 1-1 1s-1-.4-1-1V7c0-.6.4-1 1-1s1 .4 1 1v4h4V7c0-.6.4-1 1-1s1 .4 1 1v10z"/>`
	hospitalSymbolInnerSVG       = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm4 14c0 .6-.4 1-1 1s-1-.4-1-1v-3h-4v3c0 .6-.4 1-1 1s-1-.4-1-1V8c0-.6.4-1 1-1s1 .4 1 1v3h4V8c0-.6.4-1 1-1s1 .4 1 1v8z"/>`
	houseUserInnerSVG            = `<path fill="currentColor" d="m21.7 10.3l-9-8c-.4-.3-.9-.3-1.3 0l-9 8c-.4.4-.5 1-.1 1.4s1 .5 1.4.1l.3-.4V21c0 .6.4 1 1 1h14c.6 0 1-.4 1-1v-9.6l.3.3c.4.4 1 .3 1.4-.1c.4-.3.4-1 0-1.3zM12 11c1.5 0 2.7 1.2 2.7 2.7c0 1.5-1.2 2.7-2.7 2.7c-1.5 0-2.7-1.2-2.7-2.7S10.5 11 12 11zm-5 9c0-.1 0-.1.1-.2c2.2-2.7 6.2-3.2 8.9-1c.4.3.7.6 1 1c0 0 0 .1.1.2H7z"/>`
	imageVInnerSVG               = `<path fill="currentColor" d="M19 2H5C3.3 2 2 3.3 2 5v14c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3zm1 11.9L18.1 12c-1.2-1.1-3.1-1.1-4.2 0l-.9.9l-2.9-2.9C8.9 8.9 7 8.9 5.9 10L4 11.9V5c0-.6.4-1 1-1h14c.6 0 1 .4 1 1v8.9z"/>`
	keySkeletonInnerSVG          = `<path fill="currentColor" d="m21 4.4l.7-.7c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L9.8 12.8C9 12.3 8 12 7 12c-2.8 0-5 2.2-5 5s2.2 5 5 5s5-2.2 5-5c0-1-.3-2-.8-2.8l5.6-5.6l2.1 2.1c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4l-2.1-2.1l1.4-1.4l.7.7c.4.4 1 .4 1.4 0s.4-1 0-1.4l-.7-.7zM7 20c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3z"/>`
	keySkeletonAltInnerSVG       = `<path fill="currentColor" d="m20.3 5.1l1.4-1.4c.4-.4.4-1 0-1.4s-1-.4-1.4 0L9.8 12.8C9 12.3 8 12 7 12c-2.8 0-5 2.2-5 5s2.2 5 5 5s5-2.2 5-5c0-1-.3-2-.8-2.8l4.9-4.9l1.4 1.4c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4l-1.4-1.4l1.4-1.4l1.4 1.4c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4l-1.4-1.4zM7 20c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3z"/>`
	keyholeCircleInnerSVG        = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm1.7 9c-.2.3-.4.6-.7.7V15c0 .6-.4 1-1 1s-1-.4-1-1v-3.3c-1-.6-1.3-1.8-.7-2.7S12 7.7 13 8.3c1 .5 1.3 1.7.7 2.7z"/>`
	keyholeSquareInnerSVG        = `<path fill="currentColor" d="M19 2H5C3.3 2 2 3.3 2 5v14c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3zm-5.3 9c-.2.3-.4.6-.7.7V15c0 .6-.4 1-1 1s-1-.4-1-1v-3.3c-1-.6-1.3-1.8-.7-2.7S12 7.7 13 8.3c1 .5 1.3 1.7.7 2.7z"/>`
	keyholeSquareFullInnerSVG    = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-7.3 9c-.2.3-.4.6-.7.7V15c0 .6-.4 1-1 1s-1-.4-1-1v-3.3c-1-.6-1.3-1.8-.7-2.7S12 7.7 13 8.3c1 .5 1.3 1.7.7 2.7z"/>`
	layerGroupInnerSVG           = `<path fill="currentColor" d="m2.5 8.9l9 5.2c.2.1.3.1.5.1s.3 0 .5-.1l9-5.2c.2-.1.3-.2.4-.4c.2-.5.1-1.1-.4-1.4l-9-5.2c-.3-.2-.7-.2-1 0l-9 5.2c-.2.1-.3.2-.4.4c-.2.5-.1 1.1.4 1.4zm19 2.2l-.2-.1l-8.8 5.1c-.3.2-.7.2-1 0L2.7 11l-.2.1c-.5.3-.6.9-.4 1.4c.1.2.2.3.4.4l9 5.2c.3.2.7.2 1 0l9-5.2c.5-.3.6-.9.4-1.4c-.1-.2-.2-.3-.4-.4zm0 4l-.2-.1l-8.8 5.1c-.3.2-.7.2-1 0L2.7 15l-.2.1c-.5.3-.6.9-.4 1.4c.1.2.2.3.4.4l9 5.2c.3.2.7.2 1 0l9-5.2c.5-.3.6-.9.4-1.4c-.1-.2-.2-.3-.4-.4z"/>`
	layersAltInnerSVG            = `<path fill="currentColor" d="M16 7H6c-.6 0-1 .4-1 1v2.5h7.5c.6 0 1 .4 1 1V19H16c.6 0 1-.4 1-1V8c0-.6-.4-1-1-1zm-5 5H3c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1h8c.6 0 1-.4 1-1v-8c0-.6-.4-1-1-1zM21 2H9c-.6 0-1 .4-1 1v2.5h9.5c.6 0 1 .4 1 1V16H21c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z"/>`
	leftIndentInnerSVG           = `<path fill="currentColor" d="M3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm0 4h10c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 6H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zM3 15h10c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18.8-5.3c-.4-.4-1-.5-1.4-.1l-2 1.7l-.1.1c-.4.4-.3 1.1.1 1.4l2 1.7c.2.1.4.2.6.2c.3 0 .6-.1.8-.4c.4-.4.3-1.1-.1-1.4l-1.1-.9l1.1-.9c.4-.4.4-1 .1-1.4z"/>`
	leftIndentAltInnerSVG        = `<path fill="currentColor" d="M21 17h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zm0-4h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zm-8-6h8c.6 0 1-.4 1-1s-.4-1-1-1h-8c-.6 0-1 .4-1 1s.4 1 1 1zm8 2h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zM9 5c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1s1-.4 1-1V6c0-.6-.4-1-1-1zm-4.4 7l1.1-.9c.4-.4.5-1 .1-1.4c-.4-.4-1-.5-1.4-.1l-2 1.7l-.1.1c-.4.4-.3 1.1.1 1.4l2 1.7c.2.1.4.2.6.2c.3 0 .6-.1.8-.4c.4-.4.3-1.1-.1-1.4L4.6 12z"/>`
	lineSpacingInnerSVG          = `<path fill="currentColor" d="M10 8h11c.6 0 1-.4 1-1s-.4-1-1-1H10c-.6 0-1 .4-1 1s.4 1 1 1zm-4.3 7.3V8.7c.2.2.4.3.6.3c.3 0 .5-.1.7-.2c.4-.4.5-1 .1-1.4l-1.7-2C5.2 5.1 5 5 4.7 5s-.6.1-.8.4l-1.7 2c-.3.4-.3 1 .2 1.4c.4.3.9.3 1.3 0v6.6c-.4-.3-.9-.4-1.3 0s-.5 1-.1 1.4l1.7 2c.1.1.4.2.7.2s.6-.1.8-.4l1.7-2c.4-.4.3-1.1-.1-1.4c-.5-.3-1.1-.3-1.4.1zM21 11H10c-.6 0-1 .4-1 1s.4 1 1 1h11c.6 0 1-.4 1-1s-.4-1-1-1zm0 5H10c-.6 0-1 .4-1 1s.4 1 1 1h11c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	linkHInnerSVG                = `<path fill="currentColor" d="M10 15H7c-1.7 0-3-1.3-3-3s1.3-3 3-3h3c.6 0 1-.4 1-1s-.4-1-1-1H7c-2.8 0-5 2.2-5 5s2.2 5 5 5h3c.6 0 1-.4 1-1s-.4-1-1-1zm7-8h-3c-.6 0-1 .4-1 1s.4 1 1 1h3c1.7 0 3 1.3 3 3s-1.3 3-3 3h-3c-.6 0-1 .4-1 1s.4 1 1 1h3c2.8 0 5-2.2 5-5s-2.2-5-5-5zm-9 5c0 .6.4 1 1 1h6c.6 0 1-.4 1-1s-.4-1-1-1H9c-.6 0-1 .4-1 1z"/>`
	listUiAltInnerSVG            = `<path fill="currentColor" d="M7.5 8h14c.6 0 1-.4 1-1s-.4-1-1-1h-14c-.6 0-1 .4-1 1s.4 1 1 1zm14 3h-10c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm0 5h-6c-.6 0-1 .4-1 1s.4 1 1 1h6c.6 0 1-.4 1-1s-.4-1-1-1zM3.5 6c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 5c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm4 5c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/>`
	listUlInnerSVG               = `<path fill="currentColor" d="M7 8h14c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1s.4 1 1 1zm14 3H7c-.6 0-1 .4-1 1s.4 1 1 1h14c.6 0 1-.4 1-1s-.4-1-1-1zm0 5H7c-.6 0-1 .4-1 1s.4 1 1 1h14c.6 0 1-.4 1-1s-.4-1-1-1zM3.7 6.3c-.1-.1-.2-.2-.3-.2c-.4-.2-.8-.1-1.1.2c-.1.1-.2.2-.2.3c-.1.3-.1.5 0 .8c.1.1.1.2.2.3c.1.1.2.2.3.2c.1.1.3.1.4.1c.3 0 .5-.1.7-.3c.1-.1.2-.2.2-.3c.1-.3.1-.5 0-.8c0-.1-.1-.2-.2-.3zm0 5c-.3-.3-.7-.4-1.1-.2c-.1.1-.2.1-.3.2c-.1.1-.2.2-.2.3c-.1.2-.1.5 0 .8c.1.1.1.2.2.3c.1.1.2.2.3.2c.1.1.3.1.4.1c.1 0 .3 0 .4-.1c.1-.1.2-.1.3-.2c.1-.1.2-.2.2-.3c.1-.2.1-.5 0-.8c0-.1-.1-.2-.2-.3zm0 5c-.1-.1-.2-.2-.3-.2c-.2-.1-.5-.1-.8 0c-.1 0-.2.1-.3.2c-.1.1-.2.2-.2.3c-.2.4-.1.8.2 1.1c.1.1.2.2.3.2c.1.1.3.1.4.1c.1 0 .3 0 .4-.1c.1-.1.2-.1.3-.2c.3-.3.4-.7.2-1.1c0-.1-.1-.2-.2-.3z"/>`
	lockInnerSVG                 = `<path fill="currentColor" d="M17 9V7c0-2.8-2.2-5-5-5S7 4.2 7 7v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zM9 7c0-1.7 1.3-3 3-3s3 1.3 3 3v2H9V7z"/>`
	lockAccessInnerSVG           = `<path fill="currentColor" d="M21 2h-6c-.6 0-1 .4-1 1s.4 1 1 1h5v5c0 .6.4 1 1 1s1-.4 1-1V3c0-.6-.4-1-1-1zM3 10c.6 0 1-.4 1-1V4h5c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1zm6 10H4v-5c0-.6-.4-1-1-1s-1 .4-1 1v6c0 .6.4 1 1 1h6c.6 0 1-.4 1-1s-.4-1-1-1zm12-6c-.6 0-1 .4-1 1v5h-5c-.6 0-1 .4-1 1s.4 1 1 1h6c.6 0 1-.4 1-1v-6c0-.6-.4-1-1-1zm-9-8c-1.7 0-3 1.3-3 3v1c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2V9c0-1.7-1.3-3-3-3zm1 4h-2V9c0-.6.4-1 1-1s1 .4 1 1v1z"/>`
	lockAltInnerSVG              = `<path fill="currentColor" d="M17 9V7c0-2.8-2.2-5-5-5S7 4.2 7 7v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zM9 7c0-1.7 1.3-3 3-3s3 1.3 3 3v2H9V7zm4 10c0 .6-.4 1-1 1s-1-.4-1-1v-3c0-.6.4-1 1-1s1 .4 1 1v3z"/>`
	lockOpenAltInnerSVG          = `<path fill="currentColor" d="M17 9H9V7c0-.8.3-1.5.9-2.1c1.2-1.2 3.1-1.2 4.2 0c.4.4.6.9.8 1.4c.1.5.7.8 1.2.7c.5-.1.9-.7.7-1.2c-.2-.9-.7-1.7-1.3-2.3c-.9-1-2.2-1.5-3.5-1.5c-2.8 0-5 2.2-5 5v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zm-3.9 6.5l-.1.1V17c0 .6-.4 1-1 1s-1-.4-1-1v-1.4c-.6-.6-.7-1.5-.1-2.1c.6-.6 1.5-.7 2.1-.1c.6.5.7 1.5.1 2.1z"/>`
	microscopeInnerSVG           = `<path fill="currentColor" d="M20 21h-5.2c.1-.2.1-.4.1-.6c3-1.2 5-4.1 5-7.4c0-2-.8-3.9-2.1-5.4l.6-.6c.1-.1.2-.2.2-.4l.7-2.1c.1-.4 0-.8-.2-1L17 1.4c-.3-.3-.7-.4-1-.2l-2 .6c-.1 0-.3.1-.4.2L7.2 8.4c-.4.4-.4 1 0 1.4l-1.4 1.4c-.4.4-.4 1 0 1.4l2.1 2.1c.4.4 1 .4 1.4 0l1.4-1.4c.4.4 1 .4 1.4 0L16.5 9c1 1.1 1.5 2.5 1.5 4c0 2.3-1.4 4.4-3.5 5.4c-.9-1.4-2.7-1.9-4.1-1c-.4.3-.8.6-1 1.1c-.4-.2-.8-.3-1.1-.6c.4-.1.7-.5.7-.9c0-.6-.4-1-1-1H4c-.6 0-1 .4-1 1s.4 1 1 1h1.3c1 1.1 2.3 2 3.7 2.5c0 .2.1.4.1.5H4c-.6 0-1 .4-1 1s.4 1 1 1h16c.6 0 1-.4 1-1c0-.5-.4-1-1-1zM8.6 12.6l-.7-.7l.7-.7l.7.7l-.7.7zM12 21c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>`
	minusSquareFullInnerSVG      = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-6 11H9c-.6 0-1-.4-1-1s.4-1 1-1h6c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	multiplyInnerSVG             = `<path fill="currentColor" d="m13.4 12l6.3-6.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L12 10.6L5.7 4.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l6.3 6.3l-6.3 6.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l6.3-6.3l6.3 6.3c.2.2.4.3.7.3s.5-.1.7-.3c.4-.4.4-1 0-1.4L13.4 12z"/>`
	objectGroupInnerSVG          = `<path fill="currentColor" d="M21 18.3V5.7c.6-.3 1-1 1-1.7c0-1.1-.9-2-2-2c-.7 0-1.4.4-1.7 1H5.7c-.3-.6-1-1-1.7-1c-1.1 0-2 .9-2 2c0 .7.4 1.4 1 1.7v12.6c-.6.3-1 1-1 1.7c0 1.1.9 2 2 2c.7 0 1.4-.4 1.7-1h12.6c.3.6 1 1 1.7 1c1.1 0 2-.9 2-2c0-.7-.4-1.4-1-1.7zm-2 0c-.3.2-.5.4-.7.7H5.7c-.2-.3-.4-.5-.7-.7V5.7c.3-.2.5-.4.7-.7h12.6c.2.3.4.5.7.7v12.6zM14 9V8c0-.6-.4-1-1-1H8c-.6 0-1 .4-1 1v5c0 .6.4 1 1 1h1v-3c0-1.1.9-2 2-2h3zm2 1h-5c-.6 0-1 .4-1 1v5c0 .6.4 1 1 1h5c.6 0 1-.4 1-1v-5c0-.6-.4-1-1-1z"/>`
	objectUngroupInnerSVG        = `<path fill="currentColor" d="M21 18.3v-6.6c.6-.3 1-1 1-1.7c0-1.1-.9-2-2-2c-.7 0-1.4.4-1.7 1H15V5.7c.6-.3 1-1 1-1.7c0-1.1-.9-2-2-2c-.7 0-1.4.4-1.7 1H5.7c-.3-.6-1-1-1.7-1c-1.1 0-2 .9-2 2c0 .7.4 1.4 1 1.7v6.6c-.6.3-1 1-1 1.7c0 1.1.9 2 2 2c.7 0 1.4-.4 1.7-1H9v3.3c-.6.3-1 1-1 1.7c0 1.1.9 2 2 2c.7 0 1.4-.4 1.7-1h6.6c.3.6 1 1 1.7 1c1.1 0 2-.9 2-2c0-.7-.4-1.4-1-1.7zM5.7 13c-.2-.3-.4-.5-.7-.7V5.7c.3-.2.5-.4.7-.7h6.6c.2.3.4.5.7.7V9h-1.3c-.3-.6-1-1-1.7-1c-1.1 0-2 .9-2 2c0 .7.4 1.4 1 1.7V13H5.7zm7.3-.7c-.3.2-.5.4-.7.7H11v-1.3c.3-.2.5-.4.7-.7H13v1.3zm-.7 2.7c.3.6 1 1 1.7 1c1.1 0 2-.9 2-2c0-.7-.4-1.4-1-1.7V11h3.3c.2.3.4.5.7.7v6.6c-.3.2-.5.4-.7.7h-6.6c-.2-.3-.4-.5-.7-.7V15h1.3z"/>`
	padlockInnerSVG              = `<path fill="currentColor" d="M17 9V7c0-2.8-2.2-5-5-5S7 4.2 7 7v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zM9 7c0-1.7 1.3-3 3-3s3 1.3 3 3v2H9V7zm4.1 8.5l-.1.1V17c0 .6-.4 1-1 1s-1-.4-1-1v-1.4c-.6-.6-.7-1.5-.1-2.1c.6-.6 1.5-.7 2.1-.1c.6.5.7 1.5.1 2.1z"/>`
	paperclipInnerSVG            = `<path fill="currentColor" d="m18.1 12.4l-6.2 6.2c-1.7 1.7-4.4 1.7-6 0c-1.7-1.7-1.7-4.4 0-6l8-8c1-.9 2.5-.9 3.5 0c1 1 1 2.6 0 3.5L10.5 15c-.3.3-.8.3-1.1 0c-.3-.3-.3-.8 0-1.1l5.1-5.1c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L8 12.6c-1.1 1.1-1.1 2.8 0 3.9c1.1 1 2.8 1 3.9 0l6.9-6.9c1.8-1.8 1.8-4.6 0-6.4c-1.8-1.8-4.6-1.8-6.4 0l-8 8c-1.2 1.2-1.8 2.8-1.8 4.4c0 3.5 2.8 6.2 6.3 6.2c1.7 0 3.2-.7 4.4-1.8l6.2-6.2c.4-.4.4-1 0-1.4s-1-.4-1.4 0z"/>`
	paragraphInnerSVG            = `<path fill="currentColor" d="M13 13.5H3c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm8-5H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	pentagonInnerSVG             = `<path fill="currentColor" d="m21.6 9.2l-9-6.5c-.4-.3-.8-.3-1.2 0l-9 6.5c-.3.2-.5.7-.4 1.1l3.4 10.6c.1.4.5.7 1 .7h11.1c.4 0 .8-.3 1-.7L22 10.3c.1-.4-.1-.9-.4-1.1z"/>`
	polygonInnerSVG              = `<path fill="currentColor" d="m21.9 11.5l-4.5-7.8c-.2-.3-.5-.5-.9-.5h-9c-.4 0-.7.2-.9.5l-4.5 7.8c-.2.3-.2.7 0 1l4.5 7.8c.2.3.5.5.9.5h9c.4 0 .7-.2.9-.5l4.5-7.8c.1-.3.1-.7 0-1z"/>`
	previousInnerSVG             = `<path fill="currentColor" d="M16.7 15.3L13.4 12l3.3-3.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-4 4c-.4.4-.4 1 0 1.4l4 4c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4zM8 7c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1s1-.4 1-1V8c0-.6-.4-1-1-1z"/>`
	processInnerSVG              = `<path fill="currentColor" d="M8.5 6H6.7C8.2 4.7 10 4 12 4c.3 0 .6 0 .9.1c.5.1 1-.3 1.1-.9c.1-.5-.3-1-.9-1.1c-.4-.1-.7-.1-1.1-.1c-2.4 0-4.7.9-6.5 2.4V3c0-.6-.4-1-1-1s-1 .4-1 1v4c0 .6.4 1 1 1h4c.6 0 1-.4 1-1s-.4-1-1-1zM7 14.5c-.6 0-1 .4-1 1v1.8C4.7 15.8 4 14 4 12c0-.3 0-.6.1-.9c.1-.5-.3-1-.9-1.1c-.5-.1-1 .3-1.1.9c-.1.4-.1.7-.1 1.1c0 2.4.9 4.7 2.4 6.5H3c-.6 0-1 .4-1 1s.4 1 1 1h4c.3 0 .6-.2.8-.4c0-.1.1-.2.1-.3v-4.3c.1-.6-.3-1-.9-1zm14-9c.6 0 1-.4 1-1s-.4-1-1-1h-4.2c-.1 0-.2.1-.3.1c-.1.1-.2.1-.2.2s-.1.2-.1.2v4.3c0 .6.4 1 1 1s1-.4 1-1V6.7c1.3 1.4 2 3.3 2 5.3c0 .3 0 .6-.1.9c-.1.5.3 1 .9 1.1h.1c.5 0 .9-.4 1-.9c0-.4.1-.7.1-1.1c0-2.4-.9-4.7-2.4-6.5H21zm-.7 11l-.3-.3c-.1-.1-.2-.1-.3-.1h-4.2c-.6 0-1 .4-1 1s.4 1 1 1h1.8c-1.4 1.3-3.3 2-5.3 2c-.3 0-.6 0-.9-.1c-.5-.1-1 .3-1.1.9s.3 1 .9 1.1c.4 0 .7.1 1.1.1c2.4 0 4.7-.9 6.5-2.4V21c0 .6.4 1 1 1s1-.4 1-1v-4c0-.2-.1-.4-.2-.5z"/>`
	recordAudioInnerSVG          = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm0 16c-3.3 0-6-2.7-6-6s2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6z"/>`
	redoInnerSVG                 = `<path fill="currentColor" d="M21 11c-.6 0-1 .4-1 1c0 2.9-1.5 5.5-4 6.9c-3.8 2.2-8.7.9-10.9-2.9C2.9 12.2 4.2 7.3 8 5.1c3.3-1.9 7.3-1.2 9.8 1.4h-2.4c-.6 0-1 .4-1 1s.4 1 1 1h4.5c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1s-1 .4-1 1v1.8C17 3 14.6 2 12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10c0-.6-.4-1-1-1z"/>`
	refreshInnerSVG              = `<path fill="currentColor" d="M15 12c0-1.7-1.3-3-3-3s-3 1.3-3 3s1.3 3 3 3s3-1.3 3-3zm2-8.7C13.1 1.1 8.3 1.8 5.1 4.7V3c0-.6-.4-1-1-1s-1 .4-1 1v4.5c0 .6.4 1 1 1h4.5c.6 0 1-.4 1-1s-.4-1-1-1H6.2C7.7 4.9 9.8 4 12 4c4.4 0 8 3.6 8 8c0 .6.4 1 1 1s1-.4 1-1c0-3.6-1.9-6.9-5-8.7zm2.9 12.2h-4.5c-.6 0-1 .4-1 1s.4 1 1 1h2.4C16.3 19.1 14.2 20 12 20c-4.4 0-8-3.6-8-8c0-.6-.4-1-1-1s-1 .4-1 1c0 5.5 4.5 10 10 10c2.6 0 5-1 6.9-2.8V21c0 .6.4 1 1 1s1-.4 1-1v-4.5c0-.6-.5-1-1-1z"/>`
	repeatInnerSVG               = `<path fill="currentColor" d="M5.5 17.5H4v-11h7.8l-.8.8c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l2.5-2.5c.4-.4.4-1 0-1.4l-2.5-2.5c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l.8.8H3c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h2.5c.6 0 1-.4 1-1s-.4-1-1-1zM21 4.5h-2.5c-.6 0-1 .4-1 1s.4 1 1 1H20v11h-8.4l.8-.8c.4-.4.4-1 0-1.4s-1-.4-1.4 0l-2.5 2.5c-.4.4-.4 1 0 1.4l2.5 2.5c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-.8-.8H21c.6 0 1-.4 1-1v-13c0-.6-.4-1-1-1z"/>`
	rightIndentInnerSVG          = `<path fill="currentColor" d="M3 7h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm0 4h10c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm18 6H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1zM3 15h10c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm15-1.3c0 .6.4 1 1 1c.2 0 .5-.1.6-.2l2-1.7l.1-.1c.4-.4.3-1.1-.1-1.4l-2-1.7c-.4-.4-1.1-.3-1.4.1c-.4.4-.3 1.1.1 1.4l1.1.9l-1.1.9c-.2.2-.3.5-.3.8z"/>`
	rightIndentAltInnerSVG       = `<path fill="currentColor" d="M21 17h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zm0-4h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zm-8-6h8c.6 0 1-.4 1-1s-.4-1-1-1h-8c-.6 0-1 .4-1 1s.4 1 1 1zm8 2h-8c-.6 0-1 .4-1 1s.4 1 1 1h8c.6 0 1-.4 1-1s-.4-1-1-1zM9 5c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1s1-.4 1-1V6c0-.6-.4-1-1-1zM3.6 9.6c-.4-.4-1-.3-1.4.1c-.4.4-.3 1.1.1 1.4l1.1.9l-1.1.9c-.2.2-.3.5-.3.8c0 .6.4 1 1 1c.2 0 .5-.1.6-.2l2-1.7l.1-.1c.4-.4.3-1.1-.1-1.4l-2-1.7z"/>`
	rocketInnerSVG               = `<path fill="currentColor" d="M22.6 2.1c-.1-.3-.4-.6-.7-.7c-4.2-1.1-8.5.2-11.4 3.6L9.4 6.3l-2.7-.6C5.4 5.2 4 5.8 3.4 7l-2.2 3.9c-.2.3-.2.6 0 .9c.1.3.4.5.7.6l3.1.7c-.3.8-.4 1.6-.6 2.4c0 .3.1.6.3.8l3.1 3.1c.2.2.4.3.7.3h.1c.9-.1 1.7-.2 2.5-.5l.6 3c.1.3.3.6.6.7c.1.1.3.1.4.1c.2 0 .3 0 .5-.1l3.9-2.2c1.1-.6 1.7-2 1.4-3.3l-.7-2.8l1.2-1.1c3.3-2.8 4.7-7.3 3.6-11.4zM7.3 8.8c-.6.8-1.2 1.6-1.6 2.4l-2.1-.5L5.1 8c.2-.4.6-.5 1.1-.4l1.7.4l-.6.8zM16 18.9l-2.7 1.5l-.4-2c.9-.4 1.7-1 2.4-1.6l.7-.7l.4 1.7c.2.5-.1 1-.4 1.1zm.7-10.1c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5s1.5.7 1.5 1.5s-.6 1.5-1.5 1.5z"/>`
	rulerInnerSVG                = `<path fill="currentColor" d="m22.6 7.1l-5.7-5.7c-.4-.4-1-.4-1.4 0L1.4 15.5c-.4.4-.4 1 0 1.4l5.7 5.7c.4.4 1 .4 1.4 0l2.1-2.1L7.1 17c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l3.5 3.5l1.4-1.4l-2.1-2.1c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l2.1 2.1l1.4-1.4l-3.5-3.5c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l3.5 3.5l1.4-1.4l-2.1-2.1c-.4-.4-.4-1 0-1.4s1-.4 1.4 0l2.1 2.1l2.1-2.1c.5-.5.5-1.2.1-1.5z"/>`
	rulerCombinedInnerSVG        = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h6c.6 0 1-.4 1-1v-3H7c-.6 0-1-.4-1-1s.4-1 1-1h3v-2H7c-.6 0-1-.4-1-1s.4-1 1-1h3v-2H7c-.6 0-1-.4-1-1s.4-1 1-1h1V7c0-.6.4-1 1-1s1 .4 1 1v3h2V7c0-.6.4-1 1-1s1 .4 1 1v3h2V7c0-.6.4-1 1-1s1 .4 1 1v3h3c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z"/>`
	sanitizerInnerSVG            = `<path fill="currentColor" d="M18.8 7.6L16 5.5V3h1c.6 0 1-.4 1-1s-.4-1-1-1H8.7c-1.4 0-2.6.5-3.6 1.5l-.8.8c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0l.8-.8c.6-.6 1.4-.9 2.2-.9H10v2.5L7.2 7.6C6.4 8.2 6 9.1 6 10v12c0 .6.4 1 1 1h12c.6 0 1-.4 1-1V10c0-.9-.4-1.8-1.2-2.4zM12 3h2v2h-2V3zm1 14c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/>`
	sanitizerAltInnerSVG         = `<path fill="currentColor" d="M16 8V5c0-.6-.4-1-1-1h-1V3h1c.6 0 1-.4 1-1s-.4-1-1-1h-4.8C8.5 1 6.9 2 6.1 3.6c-.2.4 0 1 .5 1.3c.5.2 1.1 0 1.3-.4c.4-.9 1.3-1.5 2.3-1.5H12v1h-1c-.6 0-1 .4-1 1v3c-1.7 0-3 1.3-3 3v9c0 1.7 1.3 3 3 3h6c1.7 0 3-1.3 3-3v-9c0-1.7-1.3-3-3-3zm-4-2h2v2h-2V6zm2 11h-2c-.6 0-1-.4-1-1s.4-1 1-1h2c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	sceneryInnerSVG              = `<path fill="currentColor" d="M13.5 6c-.8 0-1.5.7-1.5 1.5S12.7 9 13.5 9S15 8.3 15 7.5S14.3 6 13.5 6zM19 2H5C3.3 2 2 3.3 2 5v14c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3zm1 11.9L18.1 12c-1.2-1.1-3.1-1.1-4.2 0l-.9.9l-2.9-2.9C8.9 8.9 7 8.9 5.9 10L4 11.9V5c0-.6.4-1 1-1h14c.6 0 1 .4 1 1v8.9z"/>`
	scheduleInnerSVG             = `<path fill="currentColor" d="M19 4h-1V3c0-.6-.4-1-1-1s-1 .4-1 1v1H8V3c0-.6-.4-1-1-1s-1 .4-1 1v1H5C3.3 4 2 5.3 2 7v1h20V7c0-1.7-1.3-3-3-3zM2 19c0 1.7 1.3 3 3 3h14c1.7 0 3-1.3 3-3v-9H2v9zm15-7c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm0 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm-5-4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm0 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm-5-4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm0 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1z"/>`
	shieldPlusInnerSVG           = `<path fill="currentColor" d="M19.6 3.6c-.2-.2-.5-.3-.8-.2c-2.2.5-4.4 0-6.2-1.3c-.3-.2-.8-.2-1.1 0c-1.9 1.3-4.1 1.8-6.3 1.3c-.5-.1-1.1.3-1.2.8v7.7c0 2.9 1.4 5.6 3.8 7.3l3.7 2.6c.3.2.8.2 1.2 0l3.7-2.6c2.4-1.7 3.8-4.4 3.8-7.3V4.4c-.2-.3-.3-.6-.6-.8zM14 13h-1v1c0 .6-.4 1-1 1s-1-.4-1-1v-1h-1c-.6 0-1-.4-1-1s.4-1 1-1h1v-1c0-.6.4-1 1-1s1 .4 1 1v1h1c.6 0 1 .4 1 1s-.4 1-1 1z"/>`
	signalAltInnerSVG            = `<path fill="currentColor" d="M5 18c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1s1-.4 1-1v-2c0-.6-.4-1-1-1zm5-4c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1s1-.4 1-1v-6c0-.6-.4-1-1-1zM20 2c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1s1-.4 1-1V3c0-.6-.4-1-1-1zm-5 7c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1s1-.4 1-1V10c0-.6-.4-1-1-1z"/>`
	signalAltThreeInnerSVG       = `<path fill="currentColor" d="M6 15H2c-.6 0-1 .4-1 1v6c0 .6.4 1 1 1h4c.6 0 1-.4 1-1v-6c0-.6-.4-1-1-1zm8-6h-4c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V10c0-.6-.4-1-1-1zm8-8h-4c-.6 0-1 .4-1 1v20c0 .6.4 1 1 1h4c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1z"/>`
	signoutInnerSVG              = `<path fill="currentColor" d="M17 2H7C5.3 2 4 3.3 4 5v6h8.6l-2.3-2.3c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l4 4c.4.4.4 1 0 1.4l-4 4c-.4.4-1 .4-1.4 0c-.4-.4-.4-1 0-1.4l2.3-2.3H4v6c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3V5c0-1.7-1.3-3-3-3z"/>`
	socialDistancingInnerSVG     = `<path fill="currentColor" d="m21.2 17.3l-2-2c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l.3.3h-2.6c-.6 0-1 .4-1 1s.4 1 1 1h2.6l-.3.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l2-2c.1-.1.2-.2.2-.3c0-.1.1-.2.1-.4c0-.1 0-.3-.1-.4c0-.1-.1-.2-.2-.3zM8.5 17H5.9l.3-.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-2 2c-.1.1-.2.2-.2.3c0 .1-.1.2-.1.4c0 .1 0 .3.1.4c.1.1.1.2.2.3l2 2c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-.3-.3h2.6c.6 0 1-.4 1-1s-.4-1-1-1zM18 9.2c1.4 0 2.6-1.2 2.6-2.6S19.4 4 18 4c-1.4 0-2.6 1.2-2.6 2.6c0 1.4 1.2 2.6 2.6 2.6zm4.7 3.7c-2.1-2.6-5.9-3-8.5-.9c-.3.3-.7.6-.9.9c-.4.6-.4 1.4.2 1.8c.2.2.5.3.8.3h1.9c.1-.3.3-.5.5-.8c1-1 2.6-1 3.5 0l.8.8h.6c.7 0 1.3-.6 1.3-1.3c.1-.3 0-.6-.2-.8zm-20.5-1c-.3.3-.7.6-.9.9c-.4.6-.4 1.4.2 1.8c.2.3.5.4.8.4H3l.8-.8c1-1 2.6-1 3.5 0c.2.2.4.5.5.8h1.9c.7 0 1.3-.6 1.3-1.3c0-.3-.1-.6-.3-.8c-2.1-2.6-5.9-3-8.5-1zM6 9.2c1.4 0 2.6-1.2 2.6-2.6S7.4 4 6 4C4.6 4 3.4 5.2 3.4 6.6C3.4 8 4.6 9.2 6 9.2z"/>`
	sortingInnerSVG              = `<path fill="currentColor" d="m15.7 17.8l-3-3c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0l2.3-2.3l2.3 2.3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4zm-4.4-7.6c.2.2.4.3.7.3c.3 0 .5-.1.7-.3l3-3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0L12 8.1L9.7 5.8c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3 3z"/>`
	spaceKeyInnerSVG             = `<path fill="currentColor" d="M21 9c-.6 0-1 .4-1 1v3H4v-3c0-.6-.4-1-1-1s-1 .4-1 1v4c0 .6.4 1 1 1h18c.6 0 1-.4 1-1v-4c0-.6-.4-1-1-1z"/>`
	squareFullInnerSVG           = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zm-1 18H4V4h16v16z"/>`
	starInnerSVG                 = `<path fill="currentColor" d="M22 10.1c.1-.5-.3-1.1-.8-1.1l-5.7-.8L12.9 3c-.1-.2-.2-.3-.4-.4c-.5-.3-1.1-.1-1.4.4L8.6 8.2L2.9 9c-.3 0-.5.1-.6.3c-.4.4-.4 1 0 1.4l4.1 4l-1 5.7c0 .2 0 .4.1.6c.3.5.9.7 1.4.4l5.1-2.7l5.1 2.7c.1.1.3.1.5.1h.2c.5-.1.9-.6.8-1.2l-1-5.7l4.1-4c.2-.1.3-.3.3-.5z"/>`
	starHalfAltInnerSVG          = `<path fill="currentColor" d="M22 10.1c.1-.5-.3-1.1-.8-1.1l-5.7-.8L12.9 3c-.1-.2-.2-.3-.4-.4c-.5-.3-1.1-.1-1.4.4L8.6 8.2L2.9 9c-.3 0-.5.1-.6.3c-.4.4-.4 1 0 1.4l4.1 4l-1 5.7c0 .2 0 .4.1.6c.3.5.9.7 1.4.4l5.1-2.7l5.1 2.7c.1.1.3.1.5.1h.2c.5-.1.9-.6.8-1.2l-1-5.7l4.1-4c.2-.1.3-.3.3-.5zm-6.2 3.5c-.2.2-.3.6-.3.9l.7 4.2l-3.8-2c-.1-.1-.3-.1-.5-.1V5.7l1.9 3.8c.1.3.4.5.8.5l4.2.6l-3 3z"/>`
	stepForwardInnerSVG          = `<path fill="currentColor" d="M8.7 7.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l3.3 3.3l-3.3 3.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l4-4c.4-.4.4-1 0-1.4l-4-4zM16 7c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1s1-.4 1-1V8c0-.6-.4-1-1-1z"/>`
	stethoscopeInnerSVG          = `<path fill="currentColor" d="M21.8 10c-.4-1.2-1.6-2-2.8-2c-1.7 0-3 1.3-3 3c0 1.3.8 2.4 2 2.8v1.7c0 2.5-2 4.5-4.5 4.5S9 18 9 15.5v-.6c2.9-.5 5-3 5-5.9V3c0-.6-.4-1-1-1h-2c-.6 0-1 .4-1 1s.4 1 1 1h1v5c0 2.2-1.8 4-4 4s-4-1.8-4-4V4h1c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1v6c0 2.9 2.1 5.4 5 5.9v.6c0 3.6 2.9 6.5 6.5 6.5s6.5-2.9 6.5-6.5v-1.7c1.6-.5 2.4-2.2 1.8-3.8z"/>`
	stethoscopeAltInnerSVG       = `<path fill="currentColor" d="M21.8 10c-.4-1.2-1.6-2-2.8-2c-1.7 0-3 1.3-3 3c0 1.3.8 2.4 2 2.8v1.7c0 2.5-2 4.5-4.5 4.5S9 18 9 15.5v-1l3.1-2.5c1.2-1 1.9-2.4 1.9-3.9V3c0-.6-.4-1-1-1h-2c-.6 0-1 .4-1 1s.4 1 1 1h1v4.1c0 .9-.4 1.8-1.1 2.3L8 12.7l-2.9-2.3C4.4 9.9 4 9 4 8.1V4h1c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1v5.1c0 1.5.7 3 1.9 3.9L7 14.5v1c0 3.6 2.9 6.5 6.5 6.5s6.5-2.9 6.5-6.5v-1.7c1.6-.5 2.4-2.2 1.8-3.8z"/>`
	stopwatchInnerSVG            = `<path fill="currentColor" d="M10 4.5h4c.6 0 1-.4 1-1s-.4-1-1-1h-4c-.6 0-1 .4-1 1s.4 1 1 1zm8.3 4.1l.9-.9c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-.9.9C14 4.9 10 4.9 7.1 7.2l-.9-.9c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l.9.9C3 12.1 3.6 17.1 7.1 19.8c3.5 2.7 8.5 2.1 11.2-1.4c2.3-2.9 2.3-6.9 0-9.8zm-4.6 5.9c-.4.6-1 1-1.7 1c-1.1 0-2-.9-2-2c0-.7.4-1.4 1-1.7V9.5c0-.6.4-1 1-1s1 .4 1 1v2.3c1 .5 1.3 1.7.7 2.7z"/>`
	storeSlashInnerSVG           = `<path fill="currentColor" d="M15 10.6c.8.9 1.8 1.4 3 1.4v1.8l2 2v-4.3c1.2-.7 2-2 2-3.4c0-.1 0-.3-.1-.4l-2-5c-.1-.5-.5-.7-.9-.7H6.2l8.8 8.6c-.1.1 0 0 0 0zm7.7 10.7L20 18.6l-2-2l-4.8-4.8l-9.1-9.2l-1.4-1.3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l2 2l-1.2 3c-.1 0-.1.2-.1.3c0 1.4.8 2.7 2 3.4V21c0 .6.4 1 1 1h14c.4 0 .8-.3.9-.7l1.4 1.4c.4.4 1 .4 1.4 0c.4-.4.4-1 0-1.4zM10 14c-.6 0-1 .4-1 1v5H6v-8c1.2 0 2.2-.5 3-1.4c.3.3.6.6 1 .8l2.6 2.6H10zm8 6h-3v-3.6l3 3v.6z"/>`
	subjectInnerSVG              = `<path fill="currentColor" d="M3 8h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm10 8H3c-.6 0-1 .4-1 1s.4 1 1 1h10c.6 0 1-.4 1-1s-.4-1-1-1zm8-5H3c-.6 0-1 .4-1 1s.4 1 1 1h18c.6 0 1-.4 1-1s-.4-1-1-1z"/>`
	syncExclamationInnerSVG      = `<path fill="currentColor" d="M12 13c.6 0 1-.4 1-1V9c0-.6-.4-1-1-1s-1 .4-1 1v3c0 .6.4 1 1 1zm-1 2c0 .5.5 1 1 1s1-.5 1-1c0-.3-.1-.5-.3-.7c-.3-.3-.7-.4-1.1-.2c-.1 0-.2.1-.3.2c-.2.2-.3.4-.3.7zm6-11.7C13.1 1.1 8.3 1.8 5.1 4.7V3c0-.6-.4-1-1-1s-1 .4-1 1v4.5c0 .1 0 .2.1.3v.1c.1.2.3.4.5.5c.2.1.3.1.4.1h4.5c.6 0 1-.4 1-1s-.4-1-1-1H6.2C7.7 4.9 9.8 4 12 4c4.4 0 8 3.6 8 8c0 .6.4 1 1 1s1-.4 1-1c0-3.6-1.9-6.9-5-8.7zm2.9 12.2h-4.5c-.6 0-1 .4-1 1s.4 1 1 1h2.4C16.3 19.1 14.2 20 12 20c-4.4 0-8-3.6-8-8c0-.6-.4-1-1-1s-1 .4-1 1c0 5.5 4.5 10 10 10c2.6 0 5-1 6.9-2.8V21c0 .6.4 1 1 1s1-.4 1-1v-4.5c0-.6-.5-1-1-1z"/>`
	syncSlashInnerSVG            = `<path fill="currentColor" d="m18.3 7.1l1.4-1.4l2-2c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-2 2c-3.6-3-8.9-3.1-12.6 0c-.2.1-.4.3-.6.5V3c0-.6-.4-1-1-1s-1 .4-1 1v4.5c0 .6.4 1 1 1h4.5c.6 0 1-.4 1-1s-.4-1-1-1H6.2c2.5-2.6 6.5-3.3 9.8-1.4l.9.6L5.7 16.9C4.6 15.5 4 13.8 4 12c0-.6-.4-1-1-1s-1 .4-1 1c0 2.3.8 4.6 2.3 6.3l-2 2c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l2-2l1.4-1.4L18.3 7.1zm1.6 8.4h-4.5c-.6 0-1 .4-1 1s.4 1 1 1h2.4c-2.2 2.4-5.8 3.2-8.9 1.9l-1.5 1.5c1.4.7 3 1.1 4.6 1.1c2.6 0 5-1 6.9-2.8V21c0 .6.4 1 1 1s1-.4 1-1v-4.5c0-.6-.5-1-1-1zm-.5-6.6c.4 1 .6 2 .6 3.1c0 .6.4 1 1 1s1-.4 1-1c0-1.6-.4-3.2-1.1-4.6l-1.5 1.5z"/>`
	tableInnerSVG                = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zM10 20v-4h4v4h-4zm0-6v-4h4v4h-4zm-6-4h4v4H4v-4zm6-2V4h4v4h-4zm6 2h4v4h-4v-4zm4-2h-4V4h4v4zM8 4v4H4V4h4zM4 16h4v4H4v-4zm12 4v-4h4v4h-4z"/>`
	thLargeInnerSVG              = `<path fill="currentColor" d="M20 3H4c-.6 0-1 .4-1 1v16c0 .6.4 1 1 1h16c.6 0 1-.4 1-1V4c0-.6-.4-1-1-1zm-1 8h-6V5h6v6zm-8-6v6H5V5h6zm-6 8h6v6H5v-6zm8 6v-6h6v6h-6z"/>`
	timesCircleInnerSVG          = `<path fill="currentColor" d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10s10-4.5 10-10S17.5 2 12 2zm3.7 12.3c.4.4.4 1 0 1.4c-.4.4-1 .4-1.4 0L12 13.4l-2.3 2.3c-.4.4-1 .4-1.4 0c-.4-.4-.4-1 0-1.4l2.3-2.3l-2.3-2.3c-.4-.4-.4-1 0-1.4c.4-.4 1-.4 1.4 0l2.3 2.3l2.3-2.3c.4-.4 1-.4 1.4 0c.4.4.4 1 0 1.4L13.4 12l2.3 2.3z"/>`
	toggleOffInnerSVG            = `<path fill="currentColor" d="M16.5 6.5h-9C4.5 6.5 2 9 2 12s2.5 5.5 5.5 5.5h9c3 0 5.5-2.5 5.5-5.5s-2.5-5.5-5.5-5.5zm-9 8C6.1 14.5 5 13.4 5 12s1.1-2.5 2.5-2.5S10 10.6 10 12s-1.1 2.5-2.5 2.5z"/>`
	toggleOnInnerSVG             = `<path fill="currentColor" d="M16.5 6.5h-9C4.5 6.5 2 9 2 12s2.5 5.5 5.5 5.5h9c3 0 5.5-2.5 5.5-5.5s-2.5-5.5-5.5-5.5zm0 8c-1.4 0-2.5-1.1-2.5-2.5s1.1-2.5 2.5-2.5S19 10.6 19 12s-1.1 2.5-2.5 2.5z"/>`
	toiletPaperInnerSVG          = `<path fill="currentColor" d="M22.3 20.4c-1.2-1.4-1.8-3.1-1.8-4.9V8c0-3.3-2.2-6-5-6h-9c-2.8 0-5 2.7-5 6s2.2 6 5 6h3v1.5c0 2.3.8 4.5 2.2 6.2c.2.2.5.3.8.3h9c.6 0 1-.4 1-1c0-.2-.1-.5-.2-.6zM6.5 9.2c-.6 0-1.1-.6-1-1.2c-.1-.6.4-1.2 1-1.2c.6.1 1.1.6 1 1.2c.1.6-.4 1.2-1 1.2zM13 20c-1-1.3-1.5-2.9-1.5-4.6V7.9c0-1.4-.4-2.8-1.3-4h5.3c1.7 0 3 1.8 3 4v7.5c0 1.6.4 3.2 1.1 4.6H13z"/>`
	triangleInnerSVG             = `<path fill="currentColor" d="m21.9 19.3l-9-15.6l-.3-.3c-.5-.3-1.1-.2-1.4.3l-9 15.6c-.2.1-.2.3-.2.5c0 .6.4 1 1 1h18c.2 0 .3 0 .5-.1c.5-.3.6-.9.4-1.4z"/>`
	unlockInnerSVG               = `<path fill="currentColor" d="M17 9H9V7c0-.8.3-1.5.9-2.1c1.2-1.2 3.1-1.2 4.2 0c.4.4.6.9.8 1.4c.1.5.7.8 1.2.7c.5-.1.9-.7.7-1.2c-.2-.9-.7-1.7-1.3-2.3c-.9-1-2.2-1.5-3.5-1.5c-2.8 0-5 2.2-5 5v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3z"/>`
	unlockAltInnerSVG            = `<path fill="currentColor" d="M17 9H9V7c0-.8.3-1.5.9-2.1c1.2-1.2 3.1-1.2 4.2 0c.4.4.6.9.8 1.4c.1.5.7.8 1.2.7c.5-.1.9-.7.7-1.2c-.2-.9-.7-1.7-1.3-2.3c-.9-1-2.2-1.5-3.5-1.5c-2.8 0-5 2.2-5 5v2c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h10c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zm-4 8c0 .6-.4 1-1 1s-1-.4-1-1v-3c0-.6.4-1 1-1s1 .4 1 1v3z"/>`
	uploadAltInnerSVG            = `<path fill="currentColor" d="M18 9h-2c-.6 0-1 .4-1 1s.4 1 1 1h2c.6 0 1 .4 1 1v7c0 .6-.4 1-1 1H6c-.6 0-1-.4-1-1v-7c0-.6.4-1 1-1h2c.6 0 1-.4 1-1s-.4-1-1-1H6c-1.7 0-3 1.3-3 3v7c0 1.7 1.3 3 3 3h12c1.7 0 3-1.3 3-3v-7c0-1.7-1.3-3-3-3zM9.7 6.7L11 5.4V17c0 .6.4 1 1 1s1-.4 1-1V5.4l1.3 1.3c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-3-3c-.4-.4-1-.4-1.4 0l-3 3c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0z"/>`
	userArrowsInnerSVG           = `<path fill="currentColor" d="M6.6 6.9c0 .1.1.2.2.3l2 2c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-.3-.3h4.2l-.3.3c-.2.2-.3.4-.3.7c0 .6.4 1 1 1c.3 0 .5-.1.7-.3l2-2c.1-.1.2-.2.2-.3c0-.1.1-.2.1-.4c0-.1 0-.3-.1-.4c-.1-.1-.1-.2-.2-.3l-2-2c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4l.3.3H9.9l.3-.3c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-2 2c-.1.1-.2.2-.2.3c0 .1-.1.2-.1.4c0 .1 0 .3.1.4zM6 14.7c1.4 0 2.6-1.2 2.6-2.6c0-1.4-1.2-2.6-2.6-2.6c-1.4 0-2.6 1.2-2.6 2.6c0 1.4 1.2 2.6 2.6 2.6zm3.8 2.7c-2.6-2.1-6.4-1.7-8.5.9c-.2.3-.3.6-.3.9c0 .7.6 1.3 1.3 1.3h7.4c.5 0 1-.3 1.2-.7c.2-.4.2-1-.2-1.4c-.3-.4-.6-.7-.9-1zm5.6-5.3c0 1.4 1.2 2.6 2.6 2.6s2.6-1.2 2.6-2.6c0-1.4-1.2-2.6-2.6-2.6c-1.4 0-2.6 1.2-2.6 2.6zm7.3 6.3c-.3-.3-.6-.7-.9-.9c-2.6-2.1-6.4-1.7-8.5.9c-.2.2-.3.5-.3.8c0 .7.6 1.3 1.3 1.3h7.4c.5 0 1-.3 1.2-.7c.2-.5.1-1-.2-1.4z"/>`
	userMdInnerSVG               = `<path fill="currentColor" d="M15.9 13.2c-.1 0-.1-.1-.2-.1C17.2 12 18 10.3 18 8.4v-.7l.3-2.4c.2-1.6-.9-3-2.4-3.3l-.9-.2c-2-.3-4-.3-6 0l-.8.2c-1.6.3-2.7 1.7-2.5 3.3L6 7.7v.7c0 1.8.8 3.6 2.3 4.7c-.1 0-.1.1-.2.1c-3.3 1.4-5.6 4.5-6 8.1c-.1.5.3 1 .9 1.1c.6.1 17.5 0 18 0h.1c.5-.1.9-.6.9-1.1c-.5-3.6-2.8-6.7-6.1-8.1zM12 16.3l-1.7-1.7c1.1-.2 2.2-.2 3.3 0L12 16.3zm0-3.9c-2.2 0-3.9-1.7-4-3.9h8c-.1 2.2-1.8 3.9-4 3.9z"/>`
	userNurseInnerSVG            = `<path fill="currentColor" d="M16.2 12.9s-.1 0 0 0c-.2-.1-.3-.2-.5-.2c2.6-2 3.1-5.8 1-8.4s-5.8-3.1-8.4-1s-3.1 5.8-1 8.4c.3.4.6.7 1 1c-.1.1-.3.1-.4.2h-.1c-3.2 1.5-5.4 4.5-5.8 8c0 .5.4 1 1 1.1h18c.5-.1.9-.6.9-1.1c-.3-3.5-2.5-6.5-5.7-8zM8 7.6c.2-2.2 2.2-3.8 4.3-3.6c1.9.2 3.4 1.7 3.6 3.6H8zm4 8.6l-1.9-1.9c1.3-.3 2.6-.3 3.9 0l-2 1.9z"/>`
	vectorSquareInnerSVG         = `<path fill="currentColor" d="M20 16.2V7.8c1.2-.4 2-1.5 2-2.8c0-1.7-1.3-3-3-3c-1.3 0-2.4.8-2.8 2H7.8C7.4 2.8 6.3 2 5 2C3.3 2 2 3.3 2 5c0 1.3.8 2.4 2 2.8v8.4c-1.2.4-2 1.5-2 2.8c0 1.7 1.3 3 3 3c1.3 0 2.4-.8 2.8-2h8.4c.4 1.2 1.5 2 2.8 2c1.7 0 3-1.3 3-3c0-1.3-.8-2.4-2-2.8zM16.2 18H7.8c-.3-.8-1-1.5-1.8-1.8V7.8c.8-.3 1.5-1 1.8-1.8h8.4c.3.8 1 1.5 1.8 1.8v8.4c-.8.3-1.5 1-1.8 1.8zM19 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zM5 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm0 16c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm14 0c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>`
	vectorSquareAltInnerSVG      = `<path fill="currentColor" d="M21 18.3V5.7c.6-.3 1-1 1-1.7c0-1.1-.9-2-2-2c-.7 0-1.4.4-1.7 1H5.7c-.3-.6-1-1-1.7-1c-1.1 0-2 .9-2 2c0 .7.4 1.4 1 1.7v12.6c-.6.3-1 1-1 1.7c0 1.1.9 2 2 2c.7 0 1.4-.4 1.7-1h12.6c.3.6 1 1 1.7 1c1.1 0 2-.9 2-2c0-.7-.4-1.4-1-1.7zm-2 0c-.3.2-.5.4-.7.7H5.7c-.2-.3-.4-.5-.7-.7V5.7c.3-.2.5-.4.7-.7h12.6c.2.3.4.5.7.7v12.6zM16 7H8c-.6 0-1 .4-1 1v8c0 .6.4 1 1 1h8c.6 0 1-.4 1-1V8c0-.6-.4-1-1-1z"/>`
	virusSlashInnerSVG           = `<path fill="currentColor" d="m19.8 18.4l-4-4l-2.1-2.1l-8-8l-3-3c-.4-.4-1-.4-1.4 0c-.4.4-.4 1 0 1.4L5 6.4C3.9 7.7 3.2 9.3 3.1 11H2c-.6 0-1 .4-1 1s.4 1 1 1h1.1c.2 1.7.9 3.3 1.9 4.6l-.8.8c-.4.4-.4 1 0 1.4c.4.4 1 .4 1.4 0l.8-.8c1.3 1.1 2.9 1.7 4.6 1.9V22c0 .6.4 1 1 1s1-.4 1-1v-1.1c1.7-.2 3.3-.9 4.6-1.9l3.7 3.7c.2.2.4.3.7.3c.3 0 .5-.1.7-.3c.4-.4.4-1 0-1.4l-2.9-2.9zM9 16c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm.5-4c-.8 0-1.5-.7-1.5-1.5c0-.3.1-.6.3-.8l2.1 2.1c-.3.1-.6.2-.9.2zm11.4 1H22c.6 0 1-.4 1-1s-.4-1-1-1h-1.1c-.2-1.7-.9-3.3-1.9-4.6l.8-.8c.4-.4.4-1 0-1.4c-.4-.4-1-.4-1.4 0l-.8.8c-1.3-1.1-2.9-1.7-4.6-1.9V2c0-.6-.4-1-1-1s-1 .4-1 1v1.1c-1 .1-2 .4-2.9.8l12 12c.4-.9.7-1.9.8-2.9zM15 10c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>`
	webGridInnerSVG              = `<path fill="currentColor" d="M21 2h-5v20h5c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1zM2 21c0 .6.4 1 1 1h11v-9H2v8zM2 3v8h12V2H3c-.6 0-1 .4-1 1z"/>`
	webGridAltInnerSVG           = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v5h20V3c0-.6-.4-1-1-1zM2 21c0 .6.4 1 1 1h8V10H2v11zm11 1h8c.6 0 1-.4 1-1V10h-9v12z"/>`
	webSectionInnerSVG           = `<path fill="currentColor" d="M2 3v18c0 .6.4 1 1 1h11V2H3c-.6 0-1 .4-1 1zm19-1h-5v20h5c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z"/>`
	webSectionAltInnerSVG        = `<path fill="currentColor" d="M2 3v18c0 .6.4 1 1 1h5V2H3c-.6 0-1 .4-1 1zm19-1H10v20h11c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1z"/>`
	windowGridInnerSVG           = `<path fill="currentColor" d="M2 3v18c0 .6.4 1 1 1h5V2H3c-.6 0-1 .4-1 1zm19-1H10v9h12V3c0-.6-.4-1-1-1zM10 22h11c.6 0 1-.4 1-1v-8H10v9z"/>`
	windowMaximizeInnerSVG       = `<path fill="currentColor" d="M21 2H3c-.6 0-1 .4-1 1v5h20V3c0-.6-.4-1-1-1zM2 21c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V10H2v11z"/>`
	windowSectionInnerSVG        = `<path fill="currentColor" d="M2 21c0 .6.4 1 1 1h5V10H2v11zm14 1h5c.6 0 1-.4 1-1V10h-6v12zm-6 0h4V10h-4v12zM21 2H3c-.6 0-1 .4-1 1v5h20V3c0-.6-.4-1-1-1z"/>`
	wrapTextInnerSVG             = `<path fill="currentColor" d="M3 7.2h18c.6 0 1-.4 1-1s-.4-1-1-1H3c-.6 0-1 .4-1 1s.4 1 1 1zm6 8H3c-.6 0-1 .4-1 1s.4 1 1 1h6c.6 0 1-.4 1-1s-.4-1-1-1zm9.5-5H3c-.6 0-1 .4-1 1s.4 1 1 1h15.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5h-2.8c.3-.4.4-.9 0-1.3s-1-.5-1.4-.1l-2 1.7l-.1.1c-.4.4-.3 1.1.1 1.4l2 1.7c.2.1.4.2.6.2c.3 0 .6-.1.8-.4c.3-.4.3-.9 0-1.3h2.8c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5z"/>`
)

var sharedIconAttrs = []engine.Attributer{
	engine.NewAttribute("width", "1em"),
	engine.NewAttribute("height", "1em"),
}

func Airplay(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airplayInnerSVG).
		Element(children...)
}

func AlignAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignAltInnerSVG).
		Element(children...)
}

func AlignCenter(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignCenterInnerSVG).
		Element(children...)
}

func AlignCenterJustify(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignCenterJustifyInnerSVG).
		Element(children...)
}

func AlignJustify(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignJustifyInnerSVG).
		Element(children...)
}

func AlignLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLeftInnerSVG).
		Element(children...)
}

func AlignLeftJustify(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLeftJustifyInnerSVG).
		Element(children...)
}

func AlignLetterRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLetterRightInnerSVG).
		Element(children...)
}

func AlignRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignRightInnerSVG).
		Element(children...)
}

func AlignRightJustify(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignRightJustifyInnerSVG).
		Element(children...)
}

func Analysis(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(analysisInnerSVG).
		Element(children...)
}

func Analytics(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(analyticsInnerSVG).
		Element(children...)
}

func Anchor(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorInnerSVG).
		Element(children...)
}

func AngleDoubleDown(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleDoubleDownInnerSVG).
		Element(children...)
}

func AngleDoubleLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleDoubleLeftInnerSVG).
		Element(children...)
}

func AngleDoubleRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleDoubleRightInnerSVG).
		Element(children...)
}

func AngleDoubleUp(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleDoubleUpInnerSVG).
		Element(children...)
}

func AngleDown(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleDownInnerSVG).
		Element(children...)
}

func AngleLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleLeftInnerSVG).
		Element(children...)
}

func AngleRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleRightInnerSVG).
		Element(children...)
}

func AngleRightB(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleRightBInnerSVG).
		Element(children...)
}

func AngleUp(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angleUpInnerSVG).
		Element(children...)
}

func Apps(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appsInnerSVG).
		Element(children...)
}

func ArrowCircleDown(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleDownInnerSVG).
		Element(children...)
}

func ArrowCircleLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleLeftInnerSVG).
		Element(children...)
}

func ArrowCircleRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleRightInnerSVG).
		Element(children...)
}

func ArrowCircleUp(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleUpInnerSVG).
		Element(children...)
}

func ArrowDownLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowDownLeftInnerSVG).
		Element(children...)
}

func ArrowDownRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowDownRightInnerSVG).
		Element(children...)
}

func ArrowUpLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowUpLeftInnerSVG).
		Element(children...)
}

func ArrowUpRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowUpRightInnerSVG).
		Element(children...)
}

func At(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(atInnerSVG).
		Element(children...)
}

func Bag(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bagInnerSVG).
		Element(children...)
}

func Bars(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(barsInnerSVG).
		Element(children...)
}

func BatteryBolt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryBoltInnerSVG).
		Element(children...)
}

func BatteryEmpty(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryEmptyInnerSVG).
		Element(children...)
}

func Bookmark(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookmarkInnerSVG).
		Element(children...)
}

func BorderAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderAltInnerSVG).
		Element(children...)
}

func BorderBottom(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderBottomInnerSVG).
		Element(children...)
}

func BorderClear(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderClearInnerSVG).
		Element(children...)
}

func BorderHorizontal(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderHorizontalInnerSVG).
		Element(children...)
}

func BorderInner(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderInnerInnerSVG).
		Element(children...)
}

func BorderLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderLeftInnerSVG).
		Element(children...)
}

func BorderOut(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderOutInnerSVG).
		Element(children...)
}

func BorderRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderRightInnerSVG).
		Element(children...)
}

func BorderTop(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderTopInnerSVG).
		Element(children...)
}

func BorderVertical(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(borderVerticalInnerSVG).
		Element(children...)
}

func Briefcase(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(briefcaseInnerSVG).
		Element(children...)
}

func Calender(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calenderInnerSVG).
		Element(children...)
}

func Chart(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartInnerSVG).
		Element(children...)
}

func ChartPie(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartPieInnerSVG).
		Element(children...)
}

func Check(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkInnerSVG).
		Element(children...)
}

func CheckCircle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkCircleInnerSVG).
		Element(children...)
}

func CheckSquare(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkSquareInnerSVG).
		Element(children...)
}

func CircleLayer(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleLayerInnerSVG).
		Element(children...)
}

func ClinicMedical(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clinicMedicalInnerSVG).
		Element(children...)
}

func Clock(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockInnerSVG).
		Element(children...)
}

func ClockEight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockEightInnerSVG).
		Element(children...)
}

func ClockFive(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockFiveInnerSVG).
		Element(children...)
}

func ClockNine(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockNineInnerSVG).
		Element(children...)
}

func ClockSeven(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockSevenInnerSVG).
		Element(children...)
}

func ClockTen(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockTenInnerSVG).
		Element(children...)
}

func ClockThree(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockThreeInnerSVG).
		Element(children...)
}

func ClockTwo(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockTwoInnerSVG).
		Element(children...)
}

func Columns(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(columnsInnerSVG).
		Element(children...)
}

func CommentDots(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commentDotsInnerSVG).
		Element(children...)
}

func Compress(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(compressInnerSVG).
		Element(children...)
}

func CornerDownLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerDownLeftInnerSVG).
		Element(children...)
}

func CornerDownRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerDownRightInnerSVG).
		Element(children...)
}

func CornerLeftDown(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerLeftDownInnerSVG).
		Element(children...)
}

func CornerRightDown(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerRightDownInnerSVG).
		Element(children...)
}

func CornerUpLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerUpLeftInnerSVG).
		Element(children...)
}

func CornerUpRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cornerUpRightInnerSVG).
		Element(children...)
}

func Coronavirus(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coronavirusInnerSVG).
		Element(children...)
}

func Dialpad(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dialpadInnerSVG).
		Element(children...)
}

func Direction(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(directionInnerSVG).
		Element(children...)
}

func DocumentLayoutCenter(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(documentLayoutCenterInnerSVG).
		Element(children...)
}

func DocumentLayoutLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(documentLayoutLeftInnerSVG).
		Element(children...)
}

func DocumentLayoutRight(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(documentLayoutRightInnerSVG).
		Element(children...)
}

func DownloadAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downloadAltInnerSVG).
		Element(children...)
}

func EllipsisH(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ellipsisHInnerSVG).
		Element(children...)
}

func EllipsisV(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ellipsisVInnerSVG).
		Element(children...)
}

func ExclamationCircle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exclamationCircleInnerSVG).
		Element(children...)
}

func ExclamationOctagon(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exclamationOctagonInnerSVG).
		Element(children...)
}

func ExclamationTriangle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exclamationTriangleInnerSVG).
		Element(children...)
}

func Favorite(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(favoriteInnerSVG).
		Element(children...)
}

func FlipH(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipHInnerSVG).
		Element(children...)
}

func FlipHAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipHAltInnerSVG).
		Element(children...)
}

func FlipV(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipVInnerSVG).
		Element(children...)
}

func FlipVAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipVAltInnerSVG).
		Element(children...)
}

func GraphBar(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(graphBarInnerSVG).
		Element(children...)
}

func Grid(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gridInnerSVG).
		Element(children...)
}

func Grids(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gridsInnerSVG).
		Element(children...)
}

func GripHorizontalLine(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gripHorizontalLineInnerSVG).
		Element(children...)
}

func HeadSide(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headSideInnerSVG).
		Element(children...)
}

func HeadSideCough(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headSideCoughInnerSVG).
		Element(children...)
}

func HeadSideMask(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headSideMaskInnerSVG).
		Element(children...)
}

func History(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(historyInnerSVG).
		Element(children...)
}

func HistoryAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(historyAltInnerSVG).
		Element(children...)
}

func HorizontalAlignLeft(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(horizontalAlignLeftInnerSVG).
		Element(children...)
}

func Hospital(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalInnerSVG).
		Element(children...)
}

func HospitalSquareSign(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalSquareSignInnerSVG).
		Element(children...)
}

func HospitalSymbol(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalSymbolInnerSVG).
		Element(children...)
}

func HouseUser(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(houseUserInnerSVG).
		Element(children...)
}

func ImageV(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(imageVInnerSVG).
		Element(children...)
}

func KeySkeleton(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keySkeletonInnerSVG).
		Element(children...)
}

func KeySkeletonAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keySkeletonAltInnerSVG).
		Element(children...)
}

func KeyholeCircle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyholeCircleInnerSVG).
		Element(children...)
}

func KeyholeSquare(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyholeSquareInnerSVG).
		Element(children...)
}

func KeyholeSquareFull(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyholeSquareFullInnerSVG).
		Element(children...)
}

func LayerGroup(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layerGroupInnerSVG).
		Element(children...)
}

func LayersAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layersAltInnerSVG).
		Element(children...)
}

func LeftIndent(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftIndentInnerSVG).
		Element(children...)
}

func LeftIndentAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftIndentAltInnerSVG).
		Element(children...)
}

func LineSpacing(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lineSpacingInnerSVG).
		Element(children...)
}

func LinkH(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(linkHInnerSVG).
		Element(children...)
}

func ListUiAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listUiAltInnerSVG).
		Element(children...)
}

func ListUl(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listUlInnerSVG).
		Element(children...)
}

func Lock(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockInnerSVG).
		Element(children...)
}

func LockAccess(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockAccessInnerSVG).
		Element(children...)
}

func LockAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockAltInnerSVG).
		Element(children...)
}

func LockOpenAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockOpenAltInnerSVG).
		Element(children...)
}

func Microscope(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microscopeInnerSVG).
		Element(children...)
}

func MinusSquareFull(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(minusSquareFullInnerSVG).
		Element(children...)
}

func Multiply(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiplyInnerSVG).
		Element(children...)
}

func ObjectGroup(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(objectGroupInnerSVG).
		Element(children...)
}

func ObjectUngroup(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(objectUngroupInnerSVG).
		Element(children...)
}

func Padlock(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(padlockInnerSVG).
		Element(children...)
}

func Paperclip(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paperclipInnerSVG).
		Element(children...)
}

func Paragraph(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paragraphInnerSVG).
		Element(children...)
}

func Pentagon(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pentagonInnerSVG).
		Element(children...)
}

func Polygon(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(polygonInnerSVG).
		Element(children...)
}

func Previous(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(previousInnerSVG).
		Element(children...)
}

func Process(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(processInnerSVG).
		Element(children...)
}

func RecordAudio(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(recordAudioInnerSVG).
		Element(children...)
}

func Redo(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(redoInnerSVG).
		Element(children...)
}

func Refresh(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(refreshInnerSVG).
		Element(children...)
}

func Repeat(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(repeatInnerSVG).
		Element(children...)
}

func RightIndent(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightIndentInnerSVG).
		Element(children...)
}

func RightIndentAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightIndentAltInnerSVG).
		Element(children...)
}

func Rocket(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rocketInnerSVG).
		Element(children...)
}

func Ruler(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rulerInnerSVG).
		Element(children...)
}

func RulerCombined(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rulerCombinedInnerSVG).
		Element(children...)
}

func Sanitizer(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sanitizerInnerSVG).
		Element(children...)
}

func SanitizerAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sanitizerAltInnerSVG).
		Element(children...)
}

func Scenery(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sceneryInnerSVG).
		Element(children...)
}

func Schedule(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scheduleInnerSVG).
		Element(children...)
}

func ShieldPlus(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shieldPlusInnerSVG).
		Element(children...)
}

func SignalAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(signalAltInnerSVG).
		Element(children...)
}

func SignalAltThree(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(signalAltThreeInnerSVG).
		Element(children...)
}

func Signout(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(signoutInnerSVG).
		Element(children...)
}

func SocialDistancing(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(socialDistancingInnerSVG).
		Element(children...)
}

func Sorting(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sortingInnerSVG).
		Element(children...)
}

func SpaceKey(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spaceKeyInnerSVG).
		Element(children...)
}

func SquareFull(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(squareFullInnerSVG).
		Element(children...)
}

func Star(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(starInnerSVG).
		Element(children...)
}

func StarHalfAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(starHalfAltInnerSVG).
		Element(children...)
}

func StepForward(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stepForwardInnerSVG).
		Element(children...)
}

func Stethoscope(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stethoscopeInnerSVG).
		Element(children...)
}

func StethoscopeAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stethoscopeAltInnerSVG).
		Element(children...)
}

func Stopwatch(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stopwatchInnerSVG).
		Element(children...)
}

func StoreSlash(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(storeSlashInnerSVG).
		Element(children...)
}

func Subject(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(subjectInnerSVG).
		Element(children...)
}

func SyncExclamation(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(syncExclamationInnerSVG).
		Element(children...)
}

func SyncSlash(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(syncSlashInnerSVG).
		Element(children...)
}

func Table(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tableInnerSVG).
		Element(children...)
}

func ThLarge(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thLargeInnerSVG).
		Element(children...)
}

func TimesCircle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(timesCircleInnerSVG).
		Element(children...)
}

func ToggleOff(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toggleOffInnerSVG).
		Element(children...)
}

func ToggleOn(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toggleOnInnerSVG).
		Element(children...)
}

func ToiletPaper(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toiletPaperInnerSVG).
		Element(children...)
}

func Triangle(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(triangleInnerSVG).
		Element(children...)
}

func Unlock(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(unlockInnerSVG).
		Element(children...)
}

func UnlockAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(unlockAltInnerSVG).
		Element(children...)
}

func UploadAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uploadAltInnerSVG).
		Element(children...)
}

func UserArrows(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userArrowsInnerSVG).
		Element(children...)
}

func UserMd(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userMdInnerSVG).
		Element(children...)
}

func UserNurse(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userNurseInnerSVG).
		Element(children...)
}

func VectorSquare(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vectorSquareInnerSVG).
		Element(children...)
}

func VectorSquareAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vectorSquareAltInnerSVG).
		Element(children...)
}

func VirusSlash(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(virusSlashInnerSVG).
		Element(children...)
}

func WebGrid(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webGridInnerSVG).
		Element(children...)
}

func WebGridAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webGridAltInnerSVG).
		Element(children...)
}

func WebSection(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webSectionInnerSVG).
		Element(children...)
}

func WebSectionAlt(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webSectionAltInnerSVG).
		Element(children...)
}

func WindowGrid(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windowGridInnerSVG).
		Element(children...)
}

func WindowMaximize(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windowMaximizeInnerSVG).
		Element(children...)
}

func WindowSection(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windowSectionInnerSVG).
		Element(children...)
}

func WrapText(children ...engine.UberChild) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 24 24"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wrapTextInnerSVG).
		Element(children...)
}

func ByName(name string) (*engine.UberElement, error) {
	switch name {
	case "airplay":
		return Airplay(), nil
	case "align-alt":
		return AlignAlt(), nil
	case "align-center":
		return AlignCenter(), nil
	case "align-center-justify":
		return AlignCenterJustify(), nil
	case "align-justify":
		return AlignJustify(), nil
	case "align-left":
		return AlignLeft(), nil
	case "align-left-justify":
		return AlignLeftJustify(), nil
	case "align-letter-right":
		return AlignLetterRight(), nil
	case "align-right":
		return AlignRight(), nil
	case "align-right-justify":
		return AlignRightJustify(), nil
	case "analysis":
		return Analysis(), nil
	case "analytics":
		return Analytics(), nil
	case "anchor":
		return Anchor(), nil
	case "angle-double-down":
		return AngleDoubleDown(), nil
	case "angle-double-left":
		return AngleDoubleLeft(), nil
	case "angle-double-right":
		return AngleDoubleRight(), nil
	case "angle-double-up":
		return AngleDoubleUp(), nil
	case "angle-down":
		return AngleDown(), nil
	case "angle-left":
		return AngleLeft(), nil
	case "angle-right":
		return AngleRight(), nil
	case "angle-right-b":
		return AngleRightB(), nil
	case "angle-up":
		return AngleUp(), nil
	case "apps":
		return Apps(), nil
	case "arrow-circle-down":
		return ArrowCircleDown(), nil
	case "arrow-circle-left":
		return ArrowCircleLeft(), nil
	case "arrow-circle-right":
		return ArrowCircleRight(), nil
	case "arrow-circle-up":
		return ArrowCircleUp(), nil
	case "arrow-down-left":
		return ArrowDownLeft(), nil
	case "arrow-down-right":
		return ArrowDownRight(), nil
	case "arrow-up-left":
		return ArrowUpLeft(), nil
	case "arrow-up-right":
		return ArrowUpRight(), nil
	case "at":
		return At(), nil
	case "bag":
		return Bag(), nil
	case "bars":
		return Bars(), nil
	case "battery-bolt":
		return BatteryBolt(), nil
	case "battery-empty":
		return BatteryEmpty(), nil
	case "bookmark":
		return Bookmark(), nil
	case "border-alt":
		return BorderAlt(), nil
	case "border-bottom":
		return BorderBottom(), nil
	case "border-clear":
		return BorderClear(), nil
	case "border-horizontal":
		return BorderHorizontal(), nil
	case "border-inner":
		return BorderInner(), nil
	case "border-left":
		return BorderLeft(), nil
	case "border-out":
		return BorderOut(), nil
	case "border-right":
		return BorderRight(), nil
	case "border-top":
		return BorderTop(), nil
	case "border-vertical":
		return BorderVertical(), nil
	case "briefcase":
		return Briefcase(), nil
	case "calender":
		return Calender(), nil
	case "chart":
		return Chart(), nil
	case "chart-pie":
		return ChartPie(), nil
	case "check":
		return Check(), nil
	case "check-circle":
		return CheckCircle(), nil
	case "check-square":
		return CheckSquare(), nil
	case "circle-layer":
		return CircleLayer(), nil
	case "clinic-medical":
		return ClinicMedical(), nil
	case "clock":
		return Clock(), nil
	case "clock-eight":
		return ClockEight(), nil
	case "clock-five":
		return ClockFive(), nil
	case "clock-nine":
		return ClockNine(), nil
	case "clock-seven":
		return ClockSeven(), nil
	case "clock-ten":
		return ClockTen(), nil
	case "clock-three":
		return ClockThree(), nil
	case "clock-two":
		return ClockTwo(), nil
	case "columns":
		return Columns(), nil
	case "comment-dots":
		return CommentDots(), nil
	case "compress":
		return Compress(), nil
	case "corner-down-left":
		return CornerDownLeft(), nil
	case "corner-down-right":
		return CornerDownRight(), nil
	case "corner-left-down":
		return CornerLeftDown(), nil
	case "corner-right-down":
		return CornerRightDown(), nil
	case "corner-up-left":
		return CornerUpLeft(), nil
	case "corner-up-right":
		return CornerUpRight(), nil
	case "coronavirus":
		return Coronavirus(), nil
	case "dialpad":
		return Dialpad(), nil
	case "direction":
		return Direction(), nil
	case "document-layout-center":
		return DocumentLayoutCenter(), nil
	case "document-layout-left":
		return DocumentLayoutLeft(), nil
	case "document-layout-right":
		return DocumentLayoutRight(), nil
	case "download-alt":
		return DownloadAlt(), nil
	case "ellipsis-h":
		return EllipsisH(), nil
	case "ellipsis-v":
		return EllipsisV(), nil
	case "exclamation-circle":
		return ExclamationCircle(), nil
	case "exclamation-octagon":
		return ExclamationOctagon(), nil
	case "exclamation-triangle":
		return ExclamationTriangle(), nil
	case "favorite":
		return Favorite(), nil
	case "flip-h":
		return FlipH(), nil
	case "flip-h-alt":
		return FlipHAlt(), nil
	case "flip-v":
		return FlipV(), nil
	case "flip-v-alt":
		return FlipVAlt(), nil
	case "graph-bar":
		return GraphBar(), nil
	case "grid":
		return Grid(), nil
	case "grids":
		return Grids(), nil
	case "grip-horizontal-line":
		return GripHorizontalLine(), nil
	case "head-side":
		return HeadSide(), nil
	case "head-side-cough":
		return HeadSideCough(), nil
	case "head-side-mask":
		return HeadSideMask(), nil
	case "history":
		return History(), nil
	case "history-alt":
		return HistoryAlt(), nil
	case "horizontal-align-left":
		return HorizontalAlignLeft(), nil
	case "hospital":
		return Hospital(), nil
	case "hospital-square-sign":
		return HospitalSquareSign(), nil
	case "hospital-symbol":
		return HospitalSymbol(), nil
	case "house-user":
		return HouseUser(), nil
	case "image-v":
		return ImageV(), nil
	case "key-skeleton":
		return KeySkeleton(), nil
	case "key-skeleton-alt":
		return KeySkeletonAlt(), nil
	case "keyhole-circle":
		return KeyholeCircle(), nil
	case "keyhole-square":
		return KeyholeSquare(), nil
	case "keyhole-square-full":
		return KeyholeSquareFull(), nil
	case "layer-group":
		return LayerGroup(), nil
	case "layers-alt":
		return LayersAlt(), nil
	case "left-indent":
		return LeftIndent(), nil
	case "left-indent-alt":
		return LeftIndentAlt(), nil
	case "line-spacing":
		return LineSpacing(), nil
	case "link-h":
		return LinkH(), nil
	case "list-ui-alt":
		return ListUiAlt(), nil
	case "list-ul":
		return ListUl(), nil
	case "lock":
		return Lock(), nil
	case "lock-access":
		return LockAccess(), nil
	case "lock-alt":
		return LockAlt(), nil
	case "lock-open-alt":
		return LockOpenAlt(), nil
	case "microscope":
		return Microscope(), nil
	case "minus-square-full":
		return MinusSquareFull(), nil
	case "multiply":
		return Multiply(), nil
	case "object-group":
		return ObjectGroup(), nil
	case "object-ungroup":
		return ObjectUngroup(), nil
	case "padlock":
		return Padlock(), nil
	case "paperclip":
		return Paperclip(), nil
	case "paragraph":
		return Paragraph(), nil
	case "pentagon":
		return Pentagon(), nil
	case "polygon":
		return Polygon(), nil
	case "previous":
		return Previous(), nil
	case "process":
		return Process(), nil
	case "record-audio":
		return RecordAudio(), nil
	case "redo":
		return Redo(), nil
	case "refresh":
		return Refresh(), nil
	case "repeat":
		return Repeat(), nil
	case "right-indent":
		return RightIndent(), nil
	case "right-indent-alt":
		return RightIndentAlt(), nil
	case "rocket":
		return Rocket(), nil
	case "ruler":
		return Ruler(), nil
	case "ruler-combined":
		return RulerCombined(), nil
	case "sanitizer":
		return Sanitizer(), nil
	case "sanitizer-alt":
		return SanitizerAlt(), nil
	case "scenery":
		return Scenery(), nil
	case "schedule":
		return Schedule(), nil
	case "shield-plus":
		return ShieldPlus(), nil
	case "signal-alt":
		return SignalAlt(), nil
	case "signal-alt-3":
		return SignalAltThree(), nil
	case "signout":
		return Signout(), nil
	case "social-distancing":
		return SocialDistancing(), nil
	case "sorting":
		return Sorting(), nil
	case "space-key":
		return SpaceKey(), nil
	case "square-full":
		return SquareFull(), nil
	case "star":
		return Star(), nil
	case "star-half-alt":
		return StarHalfAlt(), nil
	case "step-forward":
		return StepForward(), nil
	case "stethoscope":
		return Stethoscope(), nil
	case "stethoscope-alt":
		return StethoscopeAlt(), nil
	case "stopwatch":
		return Stopwatch(), nil
	case "store-slash":
		return StoreSlash(), nil
	case "subject":
		return Subject(), nil
	case "sync-exclamation":
		return SyncExclamation(), nil
	case "sync-slash":
		return SyncSlash(), nil
	case "table":
		return Table(), nil
	case "th-large":
		return ThLarge(), nil
	case "times-circle":
		return TimesCircle(), nil
	case "toggle-off":
		return ToggleOff(), nil
	case "toggle-on":
		return ToggleOn(), nil
	case "toilet-paper":
		return ToiletPaper(), nil
	case "triangle":
		return Triangle(), nil
	case "unlock":
		return Unlock(), nil
	case "unlock-alt":
		return UnlockAlt(), nil
	case "upload-alt":
		return UploadAlt(), nil
	case "user-arrows":
		return UserArrows(), nil
	case "user-md":
		return UserMd(), nil
	case "user-nurse":
		return UserNurse(), nil
	case "vector-square":
		return VectorSquare(), nil
	case "vector-square-alt":
		return VectorSquareAlt(), nil
	case "virus-slash":
		return VirusSlash(), nil
	case "web-grid":
		return WebGrid(), nil
	case "web-grid-alt":
		return WebGridAlt(), nil
	case "web-section":
		return WebSection(), nil
	case "web-section-alt":
		return WebSectionAlt(), nil
	case "window-grid":
		return WindowGrid(), nil
	case "window-maximize":
		return WindowMaximize(), nil
	case "window-section":
		return WindowSection(), nil
	case "wrap-text":
		return WrapText(), nil
	default:
		return nil, fmt.Errorf("icon '%s' not found in uis icon set", name)
	}
}
