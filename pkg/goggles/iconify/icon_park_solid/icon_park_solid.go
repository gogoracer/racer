package icon_park_solid

import (
	"fmt"
	"github.com/gogoracer/racer/pkg/engine"
)

const (
	aCaneInnerSVG                                      = `<mask id="svgIDb"><g fill="none"><g clip-path="url(#svgIDa)"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19.557 44.768L33.641 18.28c1.174-2.207 3.812-9.299-3.252-13.055C23.326 1.47 19.157 7.181 17.75 9.83"/></g><defs><clipPath id="svgIDa"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#svgIDb)"/>`
	abnormalInnerSVG                                   = `<mask id="ipSAbnormal0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 16.398V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h10"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M16 14h13m-13 7h5"/><circle cx="34" cy="34" r="10" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" transform="rotate(90 34 34)"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M34 36v3"/><circle cx="34" cy="30" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAbnormal0)"/>`
	accelerationInnerSVG                               = `<mask id="ipSAcceleration0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M42 35h-8m-3 7h-4"/><path fill="#fff" stroke-linejoin="round" d="m14 22l-6-5H4s5.486 10 8 10h32l-6-5H14Z"/><path stroke-linejoin="round" d="m30 22l-11.34-8H16l3 8m11 5L17.2 39H14l4.267-12"/><path fill="#fff" stroke-linejoin="round" d="M32 11c0 1-3 2-3 2h10s2.886 0 3.745-2.286C43.63 8.36 42.045 5 39.022 5C36 5 36 8 36 8s-1.855-.571-3 0s-1 2-1 3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAcceleration0)"/>`
	activitySourceInnerSVG                             = `<mask id="ipSActivitySource0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M42 5H6v8h36V5Zm0 15H6v8h36v-8Zm0 15H6v8h36v-8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSActivitySource0)"/>`
	adInnerSVG                                         = `<mask id="ipSAd0"><g fill="none"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m38 38l-3-3M10 10l3 3"/><path fill="#fff" d="M21.143 28L18 17l-3.143 11h6.286Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m14 31l.857-3M22 31l-.857-3m0 0L18 17l-3.143 11m6.286 0h-6.286"/><path fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M35 24c0 5-3.582 7-8 7V17c4.418 0 8 2 8 7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAd0)"/>`
	addInnerSVG                                        = `<mask id="ipSAdd0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M24 16v16m-8-8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdd0)"/>`
	addItemInnerSVG                                    = `<mask id="ipSAddItem0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 30v-6"/><path fill="#fff" d="M6 30h36v12H6V30Z"/><path d="M6 12.5v-1M6 18v-1M6 7V6m36 6.5v-1m0 6.5v-1m0-10V6m0 12h-1M7 18H6M7 6H6m8 0h-1m8 0h-1m1 12h-1m8-12h-1M14 18h-1m15 0h-1m8-12h-1m1 12h-1m8-12h-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddItem0)"/>`
	addModeInnerSVG                                    = `<mask id="ipSAddMode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24.003 4l5.27 5.27h9.457v9.456l5.27 5.27l-5.27 5.278v9.456h-9.456L24.004 44l-5.278-5.27H9.27v-9.456L4 23.997l5.27-5.27V9.27h9.456L24.003 4Z"/><path stroke="#000" d="M17 23.997h14M24.004 17v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddMode0)"/>`
	addMusicInnerSVG                                   = `<mask id="ipSAddMusic0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 44C12.954 44 4 35.046 4 24S12.954 4 24 4s20 8.954 20 20"/><path fill="#fff" d="M20 24v-6.928l6 3.464L32 24l-6 3.464l-6 3.464V24Z"/><path stroke-linecap="round" d="M37.05 32v10M42 36.95H32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddMusic0)"/>`
	addOneInnerSVG                                     = `<mask id="ipSAddOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 16v16m-8-8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddOne0)"/>`
	addPicInnerSVG                                     = `<mask id="ipSAddPic0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path d="M38 21v19a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V12a2 2 0 0 1 2-2h18.364"/><path fill="#fff" d="M12 31.03L18 23l3 3l3.5-5.5L32 31.03H12Z"/><path d="M34 10h8m-4.005-4.205v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddPic0)"/>`
	addPrintInnerSVG                                   = `<mask id="ipSAddPrint0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M12 19H6V6h36v13h-6"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M12 12h24v32l-6-4.444L24 44l-6-4.444L12 44V12Z"/><path stroke="#000" d="M20 26h8m-4-4v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddPrint0)"/>`
	addSubsetInnerSVG                                  = `<mask id="ipSAddSubset0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M10 28v7h8"/><path fill="#fff" d="M18 28h24v14H18V28Z"/><path d="M6 13.5v-1M6 20v-1M6 7V6m26 7.5v-1m0 7.5v-1m0-12V6m0 14h-1M7 20H6M7 6H6m7 0h-1m7.5 0h-1m1 14h-1M26 6h-1M13 20h-1m14 0h-1m7-14h-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddSubset0)"/>`
	addSubtractInnerSVG                                = `<mask id="ipSAddSubtract0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M27 31h8M17 13v8m4-4h-8m21-3L14 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddSubtract0)"/>`
	addTextTwoInnerSVG                                 = `<mask id="ipSAddTextTwo0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M32 16H16m8 18V16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddTextTwo0)"/>`
	addUserInnerSVG                                    = `<mask id="ipSAddUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44m13-5h10m-5-5v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddUser0)"/>`
	addWebInnerSVG                                     = `<mask id="ipSAddWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v13.941"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 35h12m-6-6v12"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddWeb0)"/>`
	addressBookInnerSVG                                = `<mask id="ipSAddressBook0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 36v8h32V4H8v8M6 30h4m-4-6h4m-4-6h4"/><circle cx="24" cy="17" r="4" fill="#fff"/><path d="M32 35a8 8 0 1 0-16 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAddressBook0)"/>`
	adjacentItemInnerSVG                               = `<mask id="ipSAdjacentItem0"><g fill="none"><path fill="#fff" d="M14 29h28v12H14V29Zm0-22h28v12H14V7Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 13v6h28V7H14v6Zm0 0H6v22h8m0 0v6h28V29H14v6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 13H6v22h8"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 29h28v12H14V29Zm0-22h28v12H14V7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdjacentItem0)"/>`
	adjustmentInnerSVG                                 = `<mask id="ipSAdjustment0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a3 3 0 0 1 3-3h32a3 3 0 0 1 3 3v32a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3V8Z"/><path stroke="#000" d="M36 12L12 36m0-20h8m7 17h8M16 12v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdjustment0)"/>`
	adobeIllustrateInnerSVG                            = `<mask id="ipSAdobeIllustrate0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m20 15l-6 18m18 0v-8m0-5v-1m-12-4l6 18m-10-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdobeIllustrate0)"/>`
	adobeIndesignInnerSVG                              = `<mask id="ipSAdobeIndesign0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M16 15v18m16-16v16"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M28 33c-2.5 0-4-1.6-4-4s1.5-4 4-4h4v8h-4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdobeIndesign0)"/>`
	adobeLightroomInnerSVG                             = `<mask id="ipSAdobeLightroom0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M14 15v18h8m6 0V21m0 5c2.25-4 4.629-4 6-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdobeLightroom0)"/>`
	adobePhotoshopInnerSVG                             = `<mask id="ipSAdobePhotoshop0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M14 15v18"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M16 25c3 0 7-.8 7-5s-4-5-7-5h-2v10h2Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M34 21.025c-1 0-6-.498-6 2.987c0 3.486 6 2.49 6 5.976c0 3.485-6 2.987-6 2.987"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAdobePhotoshop0)"/>`
	afroPickInnerSVG                                   = `<mask id="ipSAfroPick0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSAfroPick1)"><path d="M21 4.372L4.03 21.342L26.656 43.97L43.627 27m-16.97-16.971l-16.97 16.97m22.626-11.314l-16.97 16.971M37.97 21.343L21 38.313"/><path fill="#fff" d="m16.05 41.849l4.243-4.243l-9.9-9.9l-4.242 4.243l2.121 2.122l1.414 4.242l4.243 1.414l2.121 2.122Z"/></g><defs><clipPath id="ipSAfroPick1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAfroPick0)"/>`
	agreementInnerSVG                                  = `<mask id="ipSAgreement0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><rect width="32" height="40" x="8" y="4" stroke-linejoin="round" rx="2"/><path fill="#fff" stroke-linejoin="round" d="M16 4h9v16l-4.5-4l-4.5 4V4Z"/><path d="M16 28h10m-10 6h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAgreement0)"/>`
	aimingInnerSVG                                     = `<mask id="ipSAiming0"><g fill="none"><circle cx="24" cy="24" r="20" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" fill-rule="evenodd" d="M24 37v7v-7Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 37v7"/><path fill="#fff" fill-rule="evenodd" d="M36 24h8h-8Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 24h8"/><path fill="#fff" fill-rule="evenodd" d="M4 24h7h-7Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 24h7"/><path fill="#fff" fill-rule="evenodd" d="M24 11V4v7Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 11V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAiming0)"/>`
	airBikeInnerSVG                                    = `<mask id="ipSAirBike0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 44h40M28 30h6.19c2.27 0 6.81 1.344 6.81 6.72V44m-6-14l5-11l-6-13m-5 2l10-4"/><circle cx="20" cy="30" r="8" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20 30h8"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m21 22l-7-9m-4 0h8"/><path stroke="#fff" d="M20 38a8 8 0 1 0 0-16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirBike0)"/>`
	airConditioningInnerSVG                            = `<mask id="ipSAirConditioning0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="20" x="4" y="8" rx="2"/><path fill="#fff" d="M12 20h24v8H12z"/><path d="M32 14h4M24 34v6m-8-4v2m16-2v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirConditioning0)"/>`
	airplaneInnerSVG                                   = `<mask id="ipSAirplane0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20.5 10.537C20.5 6.514 22.833 4.503 24 4c1.167.503 3.5 2.514 3.5 6.537v7.543L43 31v4l-16-8v9l5 8l-8-3l-8 3l5-8v-9L5 35v-4l15.5-12.92v-7.543Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirplane0)"/>`
	airplaneWindowInnerSVG                             = `<mask id="ipSAirplaneWindow0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 18c0-7.732 6.268-14 14-14s14 6.268 14 14v12c0 7.732-6.268 14-14 14s-14-6.268-14-14V18Z"/><path stroke="#000" d="M10 17h28m-16-6h4M10 26s5.4-.6 7 1c1.6 1.6 1 3.369 1 3.369c3 0 6 .158 6 3.631c0 2.5-4 4-6.5 2.369C17.5 38.5 17 40 14 40m24-17s-3.5-2-5-1s-1 3-1 3c-1.5-1-4 0-4 2.5s2.5 3.5 5 2.5c1 3 3.5 3 5 2"/><path stroke="#fff" d="M25 44v0c7.18 0 13-5.82 13-13V18c0-7.732-6.268-14-14-14v0m-1 40v0c-7.18 0-13-5.82-13-13V18c0-7.732 6.268-14 14-14v0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirplaneWindow0)"/>`
	airplaneWindowOneInnerSVG                          = `<mask id="ipSAirplaneWindowOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="m30.349 32l6.506-24.282a3 3 0 0 1 3.675-2.122v0a3 3 0 0 1 2.12 3.675L36.56 32"/><path fill="#fff" stroke="#fff" stroke-linecap="round" d="M36 32v6H13a3 3 0 1 1 0-6h23Z"/><path stroke="#fff" stroke-linecap="round" d="M21 44h8"/><rect width="10" height="20" x="6" y="4" fill="#fff" stroke="#fff" rx="5"/><path stroke="#000" stroke-linecap="round" d="M6 14h10"/><path stroke="#fff" stroke-linecap="round" d="M6 9v10M16 9v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirplaneWindowOne0)"/>`
	airplayInnerSVG                                    = `<mask id="ipSAirplay0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M12 35.014H4V8.013a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v27h-8"/><path fill="#fff" d="M24 32L14 42h20L24 32Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirplay0)"/>`
	airpodsInnerSVG                                    = `<mask id="ipSAirpods0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M36 4a9 9 0 0 0-9 9v31h6V21.488A8.987 8.987 0 0 0 36 22a9 9 0 0 0 8-4.873V8.873A9 9 0 0 0 36 4ZM12 4a9 9 0 0 1 9 9v31h-6V21.488A8.987 8.987 0 0 1 12 22a9 9 0 0 1-8-4.873V8.873A9 9 0 0 1 12 4Z"/><path stroke="#000" d="M15 13h-1m19 0h1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAirpods0)"/>`
	alarmInnerSVG                                      = `<mask id="ipSAlarm0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 25c0-5.523 4.477-10 10-10s10 4.477 10 10v16H14V25Z"/><path stroke-linecap="round" d="M24 5v3m11.892 1.328l-1.929 2.298m8.256 8.661l-2.955.521m-33.483-.521l2.955.521m3.373-11.48l1.928 2.298M6 41h37"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlarm0)"/>`
	alarmClockInnerSVG                                 = `<mask id="ipSAlarmClock0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44.333c10.125 0 18.333-8.208 18.333-18.333c0-10.125-8.208-18.333-18.333-18.333C13.875 7.667 5.666 15.875 5.666 26c0 10.125 8.209 18.333 18.334 18.333Z"/><path stroke="#000" stroke-linecap="round" d="m23.76 15.354l-.002 11.008l7.773 7.773"/><path stroke="#fff" stroke-linecap="round" d="m4 9l7-5m33 5l-7-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlarmClock0)"/>`
	alignBottomInnerSVG                                = `<mask id="ipSAlignBottom0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 6h14v28H17z"/><path stroke-linecap="round" d="M42 42H6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignBottom0)"/>`
	alignBottomTwoInnerSVG                             = `<mask id="ipSAlignBottomTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 16h6v24H7zm14-8h6v32h-6zm14 14h6v18h-6z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignBottomTwo0)"/>`
	alignHorizontalCenterTwoInnerSVG                   = `<mask id="ipSAlignHorizontalCenterTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 12h6v24H7zm14-4h6v32h-6zm14 7h6v18h-6z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignHorizontalCenterTwo0)"/>`
	alignHorizontallyInnerSVG                          = `<mask id="ipSAlignHorizontally0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M7 17h34v14H7z"/><path stroke-linecap="round" d="M24 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignHorizontally0)"/>`
	alignLeftInnerSVG                                  = `<mask id="ipSAlignLeft0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14.5 17h28v14h-28z"/><path stroke-linecap="round" d="M6.5 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignLeft0)"/>`
	alignLeftOneInnerSVG                               = `<mask id="ipSAlignLeftOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M16 6h16v6H16V6Z"/><path d="M6 42V6"/><path fill="#fff" stroke-linejoin="round" d="M16 21h20v6H16v-6Zm0 15h26v6H16v-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignLeftOne0)"/>`
	alignLeftTwoInnerSVG                               = `<mask id="ipSAlignLeftTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 7h24v6H8zm0 14h32v6H8zm0 14h18v6H8z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignLeftTwo0)"/>`
	alignRightInnerSVG                                 = `<mask id="ipSAlignRight0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 17h28v14H6z"/><path stroke-linecap="round" d="M42 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignRight0)"/>`
	alignRightOneInnerSVG                              = `<mask id="ipSAlignRightOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M42 42V6"/><path fill="#fff" stroke-linejoin="round" d="M16 6h16v6H16V6Zm-4 15h20v6H12v-6ZM6 36h26v6H6v-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignRightOne0)"/>`
	alignRightTwoInnerSVG                              = `<mask id="ipSAlignRightTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 7h24v6H16zM8 21h32v6H8zm14 14h18v6H22z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignRightTwo0)"/>`
	alignTextBothOneInnerSVG                           = `<mask id="ipSAlignTextBothOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M34 24H14m20-9H14m20 18H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextBothOne0)"/>`
	alignTextBottomOneInnerSVG                         = `<mask id="ipSAlignTextBottomOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M34 27H14m13 7H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextBottomOne0)"/>`
	alignTextCenterOneInnerSVG                         = `<mask id="ipSAlignTextCenterOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M30 24H18m16-9H14m20 18H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextCenterOne0)"/>`
	alignTextLeftOneInnerSVG                           = `<mask id="ipSAlignTextLeftOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" d="M26 24H14m20-9H14m18 18H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextLeftOne0)"/>`
	alignTextMiddleOneInnerSVG                         = `<mask id="ipSAlignTextMiddleOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M34 20H14m12 7H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextMiddleOne0)"/>`
	alignTextRightOneInnerSVG                          = `<mask id="ipSAlignTextRightOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M34 24H22m12-9H14m20 18H16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextRightOne0)"/>`
	alignTextTopOneInnerSVG                            = `<mask id="ipSAlignTextTopOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M26 20H14m20-7H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTextTopOne0)"/>`
	alignTopInnerSVG                                   = `<mask id="ipSAlignTop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 14.5h14v28H17z"/><path stroke-linecap="round" d="M42 6.5H6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTop0)"/>`
	alignTopTwoInnerSVG                                = `<mask id="ipSAlignTopTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 8h6v24H7zm14 0h6v32h-6zm14 0h6v18h-6z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignTopTwo0)"/>`
	alignVerticalCenterTwoInnerSVG                     = `<mask id="ipSAlignVerticalCenterTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 7h24v6H12zM8 21h32v6H8zm7 14h18v6H15z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignVerticalCenterTwo0)"/>`
	alignVerticallyInnerSVG                            = `<mask id="ipSAlignVertically0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 7h14v34H17z"/><path stroke-linecap="round" d="M42 24H6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignVertically0)"/>`
	alignmentBottomCenterInnerSVG                      = `<mask id="ipSAlignmentBottomCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M18 32v4m6-12v12m6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentBottomCenter0)"/>`
	alignmentBottomLeftInnerSVG                        = `<mask id="ipSAlignmentBottomLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 32v4m6-12v12m6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentBottomLeft0)"/>`
	alignmentBottomRightInnerSVG                       = `<mask id="ipSAlignmentBottomRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24 32v4m6-12v12m6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentBottomRight0)"/>`
	alignmentHorizontalBottomInnerSVG                  = `<mask id="ipSAlignmentHorizontalBottom0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M22 36h4m-8-6h12m-10-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentHorizontalBottom0)"/>`
	alignmentHorizontalCenterInnerSVG                  = `<mask id="ipSAlignmentHorizontalCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M22 30h4m-8-6h12m-10-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentHorizontalCenter0)"/>`
	alignmentHorizontalTopInnerSVG                     = `<mask id="ipSAlignmentHorizontalTop0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M22 24h4m-8-6h12m-10-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentHorizontalTop0)"/>`
	alignmentLeftBottomInnerSVG                        = `<mask id="ipSAlignmentLeftBottom0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 36h4m-4-6h12m-12-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentLeftBottom0)"/>`
	alignmentLeftCenterInnerSVG                        = `<mask id="ipSAlignmentLeftCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 30h4m-4-6h12m-12-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentLeftCenter0)"/>`
	alignmentLeftTopInnerSVG                           = `<mask id="ipSAlignmentLeftTop0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 24h4m-4-6h12m-12-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentLeftTop0)"/>`
	alignmentRightBottomInnerSVG                       = `<mask id="ipSAlignmentRightBottom0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M32 36h4m-12-6h12m-8-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentRightBottom0)"/>`
	alignmentRightCenterInnerSVG                       = `<mask id="ipSAlignmentRightCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M32 30h4m-12-6h12m-8-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentRightCenter0)"/>`
	alignmentRightTopInnerSVG                          = `<mask id="ipSAlignmentRightTop0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M32 24h4m-12-6h12m-8-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentRightTop0)"/>`
	alignmentTopCenterInnerSVG                         = `<mask id="ipSAlignmentTopCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M18 12v4m6-4v12m6-12v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentTopCenter0)"/>`
	alignmentTopLeftInnerSVG                           = `<mask id="ipSAlignmentTopLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 12v4m6-4v12m6-12v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentTopLeft0)"/>`
	alignmentTopRightInnerSVG                          = `<mask id="ipSAlignmentTopRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24 12v4m6-4v12m6-12v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentTopRight0)"/>`
	alignmentVerticalCenterInnerSVG                    = `<mask id="ipSAlignmentVerticalCenter0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M18 22v4m6-8v12m6-10v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentVerticalCenter0)"/>`
	alignmentVerticalLeftInnerSVG                      = `<mask id="ipSAlignmentVerticalLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M12 22v4m6-8v12m6-10v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentVerticalLeft0)"/>`
	alignmentVerticalRightInnerSVG                     = `<mask id="ipSAlignmentVerticalRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24 22v4m6-8v12m6-10v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAlignmentVerticalRight0)"/>`
	allApplicationInnerSVG                             = `<mask id="ipSAllApplication0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M18 6H8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm0 22H8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2ZM40 6H30a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm0 22H30a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAllApplication0)"/>`
	ambulanceInnerSVG                                  = `<mask id="ipSAmbulance0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linejoin="round" d="M10 35H6a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h25a2 2 0 0 1 2 2v6.899a3 3 0 0 0 1.975 2.82l7.05 2.563A3 3 0 0 1 44 26.102V33a2 2 0 0 1-2 2h-4m-20 0h12"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 19h8m-4-4v8"/><circle cx="14" cy="35" r="4" fill="#fff"/><circle cx="34" cy="35" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAmbulance0)"/>`
	analysisInnerSVG                                   = `<mask id="ipSAnalysis0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M44 5H4v12h40V5Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m4 41.03l12.176-12.3l6.579 6.3L30.798 27l4.48 4.368"/><path stroke="#fff" stroke-linecap="round" d="M44 16.172v26m-40-26v14M13.015 43H44"/><path stroke="#000" stroke-linecap="round" d="M17 11h21m-28-.003h1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnalysis0)"/>`
	anchorInnerSVG                                     = `<mask id="ipSAnchor0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M14 8h20M14 8h20M14 40h20"/><rect width="8" height="8" x="36" y="4" fill="#fff" stroke-linejoin="round" rx="2"/><rect width="8" height="8" x="4" y="4" fill="#fff" stroke-linejoin="round" rx="2"/><rect width="8" height="8" x="36" y="36" fill="#fff" stroke-linejoin="round" rx="2"/><rect width="8" height="8" x="4" y="36" fill="#fff" stroke-linejoin="round" rx="2"/><path stroke-linecap="round" d="M40 14v20M8 14v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnchor0)"/>`
	anchorOneInnerSVG                                  = `<mask id="ipSAnchorOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M40 35c0-9.205-7.163-25-16-25S8 25.795 8 35"/><path fill="#fff" d="M4 35h8v8H4zM4 6h8v8H4zm32 29h8v8h-8zm0-29h8v8h-8z"/><path stroke-linecap="round" d="M12 10h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnchorOne0)"/>`
	anchorRoundInnerSVG                                = `<mask id="ipSAnchorRound0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M42 38c0-9.941-8.059-20-18-20S6 28.059 6 38m14-24H10m28 0H28"/><circle cx="7" cy="14" r="3" fill="#fff"/><circle cx="41" cy="14" r="3" fill="#fff"/><circle cx="24" cy="14" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnchorRound0)"/>`
	anchorSqureInnerSVG                                = `<mask id="ipSAnchorSqure0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M42 38c0-9.941-8.059-20-18-20S6 28.059 6 38m14-24H10m28 0H28"/><circle cx="24" cy="14" r="4" fill="#fff"/><path fill="#fff" d="M20 10h8v8h-8zm18 1h6v6h-6zM4 11h6v6H4z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnchorSqure0)"/>`
	anchorTwoInnerSVG                                  = `<mask id="ipSAnchorTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M10 24H4c0 11.046 8.954 20 20 20s20-8.954 20-20h-6M24 44V14"/><path fill="#fff" fill-rule="evenodd" d="M24 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnchorTwo0)"/>`
	androidInnerSVG                                    = `<mask id="ipSAndroid0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M43.901 36H4.1C5.103 25.893 13.63 18 24 18c10.372 0 18.899 7.893 19.902 18Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m14 20l-4-7m23 7l4-7"/><circle cx="15" cy="29" r="2" fill="#000"/><circle cx="33" cy="29" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAndroid0)"/>`
	angryFaceInnerSVG                                  = `<mask id="ipSAngryFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 35s-2-4-7-4s-7 4-7 4m16-16l-4 2m-14-2l4 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAngryFace0)"/>`
	anguishedFaceInnerSVG                              = `<mask id="ipSAnguishedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/><rect width="12" height="8" x="18" y="28" fill="#000" stroke="#000" stroke-linecap="round" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnguishedFace0)"/>`
	announcementInnerSVG                               = `<mask id="ipSAnnouncement0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="40" height="26" x="4" y="15" fill="#fff" stroke="#fff" rx="2"/><path fill="#fff" stroke="#fff" stroke-linecap="round" d="m24 7l-8 8h16l-8-8Z"/><path stroke="#000" stroke-linecap="round" d="M12 24h18m-18 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAnnouncement0)"/>`
	antiCorrosionInnerSVG                              = `<mask id="ipSAntiCorrosion0"><g fill="none"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 41.996c13.333.103 20-.989 20-3.275c0-3.428-15.586-20.718-20-20.718S4 35.65 4 38.72c0 2.048 6.667 3.139 20 3.275Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="m21.06 29.661l-3.62 4.34"/><path fill="#fff" d="M24.5 11a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm9.5 5a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-22 5a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm5.5-6a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAntiCorrosion0)"/>`
	aperturePriorityInnerSVG                           = `<mask id="ipSAperturePriority0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="m15 12l3-6h12l3 6H15Z"/><path fill="#fff" stroke="#fff" d="M41 12H7c-1.657 0-3 1.254-3 2.8v24.4C4 40.746 5.343 42 7 42h34c1.657 0 3-1.254 3-2.8V14.8c0-1.546-1.343-2.8-3-2.8Z"/><path stroke="#000" stroke-linecap="round" stroke-miterlimit="10" d="m17 34l7-14l7 14m-12-3.962h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAperturePriority0)"/>`
	apiInnerSVG                                        = `<mask id="ipSApi0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m37 22l-3 3l-11-11l3-3c1.5-1.5 7-4 11 0s1.5 9.5 0 11Z"/><path d="m42 6l-5 5"/><path fill="#fff" d="m11 26l3-3l11 11l-3 3c-1.5 1.5-7 4-11 0s-1.5-9.5 0-11Z"/><path d="m23 32l4-4M6 42l5-5m5-12l4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSApi0)"/>`
	appStoreInnerSVG                                   = `<mask id="ipSAppStore0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m28 13l-6.5 11l-1.625 2.75l-.813 1.375M15 35l.813-1.375M12 29h11m7 0h6M19 13l3.5 5.5l.875 1.375M33 35l-3.5-5.5l-1.75-2.75l-.875-1.375"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAppStore0)"/>`
	appSwitchInnerSVG                                  = `<mask id="ipSAppSwitch0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M34 4H14v40h20V4Z"/><path d="M44 8H34v32h10V8ZM14 8H4v32h10V8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAppSwitch0)"/>`
	appleInnerSVG                                      = `<mask id="ipSApple0"><g fill="#fff"><path d="M23.911 11.318c.082-2.232.71-4.192 1.866-5.83c1.163-1.647 3.086-2.817 5.717-3.48l.055.243v.424c0 .961-.233 2.064-.693 3.276c-.483 1.174-1.237 2.28-2.238 3.277c-.936.879-1.803 1.46-2.569 1.723c-.252.076-.599.15-1.018.217c-.372.058-.745.108-1.12.15Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24.35 14.629c-2.973 0-5.036-2.63-7.969-2.63c-2.932 0-8.973 2.696-8.973 12c0 9.306 5.365 15.3 5.965 16c.6.701 1.987 2.5 4.137 2.5c2.15 0 4.503-1.709 6.84-1.709c2.337 0 5.279 1.71 7.2 1.71c1.92 0 2.71-.783 4.016-2.134c1.307-1.35 3.8-5.47 4.67-7.944c-1.433-.854-5.234-3.17-5.234-8.422c0-3.5 1.28-6.41 3.838-8.725C37.161 13.092 35.215 12 33 12c-3.323 0-5.677 2.629-8.65 2.629Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSApple0)"/>`
	appleOneInnerSVG                                   = `<mask id="ipSAppleOne0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 41.02c2.431 0 3.431 1.31 4.734 1.601c1.303.292 2.397.372 3.517-.121c2.219-.978 3.571-2.142 5.212-3.881C40.505 35.395 42 30.964 42 25.029s-1.6-9.003-4.067-11.009c-2.466-2.006-3.896-2.39-6.878-2.006c-2.982.384-4.606 3.588-7.047 3.588c-2.44 0-5.415-3.159-8.002-3.588c-2.588-.43-4.006 0-6.246 2.006S6 19.15 6 25.03c0 5.878 1.552 10.236 4.593 13.46c1.64 1.739 2.937 3.033 5.155 4.01c1.12.494 2.279.414 3.536.122c1.258-.29 2.258-1.6 4.716-1.6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M24.009 15.602C24.794 7.868 28.128 4 34.01 4c.54 1.628.68 3.203.418 4.726c-.123.724-.508 1.756-1.153 3.096"/><path stroke="#000" stroke-linecap="round" d="M14.229 26c-.277 1.346-.277 2.731 0 4.157c.276 1.425.865 2.525 1.767 3.3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAppleOne0)"/>`
	appletClosedInnerSVG                               = `<mask id="ipSAppletClosed0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m42 42l-9-9M6 6l9 9l-9-9Zm0 36l9-9M42 6l-9 9l9-9Z"/><path fill="#fff" d="M24 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAppletClosed0)"/>`
	applicationInnerSVG                                = `<mask id="ipSApplication0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M40.04 22v20h-32V22"/><path fill="#fff" d="M5.842 13.777C4.312 17.737 7.263 22 11.51 22c3.314 0 6.019-2.686 6.019-6a6 6 0 0 0 6 6h1.018a6 6 0 0 0 6-6c0 3.314 2.706 6 6.02 6c4.248 0 7.201-4.265 5.67-8.228L39.234 6H8.845l-3.003 7.777Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSApplication0)"/>`
	applicationOneInnerSVG                             = `<mask id="ipSApplicationOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M41 14L24 4L7 14v20l17 10l17-10V14Z"/><path stroke="#000" stroke-linecap="round" d="M16 18.998L23.993 24l8.002-5.002M24 24v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSApplicationOne0)"/>`
	applicationTwoInnerSVG                             = `<mask id="ipSApplicationTwo0"><g fill="#fff" stroke="#fff" stroke-width="4"><circle cx="34.5" cy="13.5" r="6.5"/><circle cx="34.5" cy="34.5" r="6.5"/><circle cx="13.5" cy="13.5" r="6.5"/><circle cx="13.5" cy="34.5" r="6.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSApplicationTwo0)"/>`
	appointmentInnerSVG                                = `<mask id="ipSAppointment0"><g fill="none" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 41c0-8.837 8.059-16 18-16"/><circle cx="34" cy="34" r="9" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M33 31v4h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAppointment0)"/>`
	arcDeTriompheInnerSVG                              = `<mask id="ipSArcDeTriomphe0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linejoin="round" d="M8 16v28h10V29a6 6 0 0 1 12 0v15h10V16H8Z"/><path fill="#fff" stroke-linejoin="round" d="M5 10h38v3a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3v-3Z"/><path stroke-linecap="round" d="M5 4h38M8 4v5m32-5v5M8 28h10m12 0h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArcDeTriomphe0)"/>`
	archersBowInnerSVG                                 = `<mask id="ipSArchersBow0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSArchersBow1)"><path d="m40.85 43.92l-1.574-.314c-2.35-.47-3.42-3.607-2.673-5.884c1.954-5.96.522-13.61-.27-16.913c-.246-1.024-1.058-1.794-2.08-2.05l-2.263-.565a3 3 0 0 1-2.183-2.183l-.565-2.262c-.256-1.023-1.025-1.834-2.05-2.08c-3.302-.792-10.954-2.225-16.913-.27c-2.276.747-5.413-.324-5.883-2.674L4.08 7.151M6 11l32 32m-26-7L43 5"/></g><defs><clipPath id="ipSArchersBow1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArchersBow0)"/>`
	archeryInnerSVG                                    = `<mask id="ipSArchery0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M13 42c9.941 0 18-8.059 18-18S22.941 6 13 6"/><circle cx="9" cy="24" r="3" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 24h30m-4-4l4 4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArchery0)"/>`
	areaMapInnerSVG                                    = `<mask id="ipSAreaMap0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m18 24l-6 9l-8-4.5V42h40V15l-7 8l-6-5l-7 8l-6-2Z"/><path d="M4 28.5V17l7 6l5.5-8l6 3L31 9l5.5 4.5L44 6v9.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAreaMap0)"/>`
	arenaInnerSVG                                      = `<mask id="ipSArena0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M44 26L24 36L4 26l20-10l20 10Z"/><path d="m24 7l20 10l-20 10L4 17L24 7Z"/><path fill="#fff" stroke-linecap="round" d="M44 26v8L24 44L4 34v-8l20 10l20-10Z"/><path stroke-linecap="round" d="M44 14v12M4 26V14m20 22V24m0-8V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArena0)"/>`
	arithmeticButtonsInnerSVG                          = `<mask id="ipSArithmeticButtons0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linejoin="round" d="M10 14h8m-8 0h8m-7 23l6-6m-3-13v-8m3 27l-6-6m19-17h8m-8 17h8m-8 6h8"/><path stroke="#000" d="M24 4v40M4 24h40"/><path stroke="#fff" stroke-linejoin="round" d="M30 4H18m12 40H18M4 28v-8m40 8v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArithmeticButtons0)"/>`
	arrowCircleDownInnerSVG                            = `<mask id="ipSArrowCircleDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 15v18m9-9l-9 9l-9-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArrowCircleDown0)"/>`
	arrowCircleLeftInnerSVG                            = `<mask id="ipSArrowCircleLeft0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M32.492 24.5h-18m9-9l-9 9l9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArrowCircleLeft0)"/>`
	arrowCircleRightInnerSVG                           = `<mask id="ipSArrowCircleRight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M14.492 24.5h18m-9-9l9 9l-9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArrowCircleRight0)"/>`
	arrowCircleUpInnerSVG                              = `<mask id="ipSArrowCircleUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 33.5v-18m9 9l-9-9l-9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArrowCircleUp0)"/>`
	arrowKeysInnerSVG                                  = `<mask id="ipSArrowKeys0"><g fill="none"><path fill="#fff" d="M14 4h20v20H14V4ZM4 24h20v20H4V24Zm20 0h20v20H24V24Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 24H4v20h20V24Zm0 0v20v-20Zm0 0h20v20H24V24ZM14 4h20v20H14V4Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 10v8m-4-4l4-4l4 4M10 34h8m-4 4l-4-4l4-4m24 4h-8m4-4l4 4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSArrowKeys0)"/>`
	assemblyLineInnerSVG                               = `<mask id="ipSAssemblyLine0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="16" cy="10" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M28 38H13c-4 0-7-2.917-7-7s3-7 7-7h7m0 0h15c4 0 7-2.917 7-7s-3-7-7-7H20M6 10h6m24 28h6"/><circle cx="32" cy="38" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAssemblyLine0)"/>`
	asteriskInnerSVG                                   = `<mask id="ipSAsterisk0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" d="M15 24h18m-13.5-7.794l9 15.588m0-15.588l-9 15.588"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAsterisk0)"/>`
	asteriskKeyInnerSVG                                = `<mask id="ipSAsteriskKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M24 16v16m-6.553-12.589l13.107 9.178m-.001-9.178L17.447 28.59"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAsteriskKey0)"/>`
	astonishedFaceInnerSVG                             = `<mask id="ipSAstonishedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/><rect width="8" height="12" x="20" y="24" fill="#000" stroke="#000" stroke-linecap="round" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAstonishedFace0)"/>`
	atSignInnerSVG                                     = `<mask id="ipSAtSign0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M44 24c0-11.046-8.954-20-20-20S4 12.954 4 24s8.954 20 20 20v0c4.989 0 9.55-1.827 13.054-4.847"/><path fill="#fff" d="M24 32a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/><path stroke-linecap="round" d="M32 24a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6m-12 1v-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAtSign0)"/>`
	attentionInnerSVG                                  = `<mask id="ipSAttention0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44a19.937 19.937 0 0 0 14.142-5.858A19.937 19.937 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z"/><path fill="#000" fill-rule="evenodd" d="M24 37a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 12v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAttention0)"/>`
	audioFileInnerSVG                                  = `<mask id="ipSAudioFile0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V4h23l9 10.5V44H8Z"/><path stroke="#000" d="m32 14l-6 2.969V31.5"/><circle cx="20.5" cy="31.5" r="5.5" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAudioFile0)"/>`
	auditInnerSVG                                      = `<mask id="ipSAudit0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m8 36l.005-7.957a1 1 0 0 1 1-1h10.002c.922 0 .917-.818.917-2.764c0-1.946-4.902-3.585-4.902-10.426S20.1 5 24.32 5s8.817 2.012 8.817 8.853c0 6.841-4.876 7.929-4.876 10.426s0 2.764.78 2.764h9.96a1 1 0 0 1 1 1V36H8Z"/><path stroke-linecap="round" d="M8 42h32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAudit0)"/>`
	autoFocusInnerSVG                                  = `<mask id="ipSAutoFocus0"><g fill="none"><circle cx="24" cy="24" r="9" fill="#fff" stroke="#fff" stroke-width="4"/><circle r="3" fill="#000" transform="matrix(-1 0 0 1 24 24)"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 14s7.5-11.5 20.5-7S42 24.5 42 24.5M39 34s-6 11-19.5 7.5S6 24 6 24M42 8v16M6 24v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAutoFocus0)"/>`
	avatarInnerSVG                                     = `<mask id="ipSAvatar0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5.004 42.231a.78.78 0 0 0 .791.769h36.407a.78.78 0 0 0 .792-.769v-.918c.018-.277.055-1.657-.855-3.184c-.574-.963-1.407-1.794-2.476-2.472c-1.293-.82-2.938-1.413-4.928-1.77a29.236 29.236 0 0 1-3.002-.584c-2.632-.672-2.862-1.267-2.864-1.273a.763.763 0 0 0-.066-.169c-.022-.11-.075-.528.027-1.647c.258-2.843 1.783-4.523 3.008-5.873c.386-.425.751-.828 1.032-1.222c1.213-1.7 1.325-3.635 1.33-3.755a2 2 0 0 0-.087-.628c-.12-.37-.343-.6-.507-.77a2.874 2.874 0 0 1-.113-.12c-.012-.014-.044-.052-.015-.243a19.01 19.01 0 0 0 .203-1.857c.056-1.002.099-2.5-.16-3.959a6.031 6.031 0 0 0-.172-.825c-.273-1.004-.711-1.862-1.32-2.57c-.105-.115-2.653-2.8-10.05-3.35c-1.023-.076-2.034-.035-3.03.016a4.39 4.39 0 0 0-.875.108c-.764.197-.968.681-1.021.952c-.089.45.067.798.17 1.03c.015.033.034.074.001.182c-.171.266-.442.506-.717.733c-.08.067-1.934 1.667-2.036 3.756c-.275 1.589-.255 4.064.07 5.775c.02.095.047.235.002.33c-.35.313-.746.668-.745 1.478c.004.082.117 2.016 1.33 3.717c.28.394.645.796 1.03 1.221l.002.001c1.225 1.35 2.75 3.03 3.008 5.872c.101 1.12.048 1.537.027 1.648a.758.758 0 0 0-.067.169c-.001.006-.23.599-2.85 1.27c-1.512.387-3 .585-3.045.59c-1.934.327-3.569.906-4.86 1.721c-1.065.673-1.9 1.507-2.48 2.477c-.928 1.55-.903 2.962-.89 3.22v.923Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAvatar0)"/>`
	aviationInnerSVG                                   = `<mask id="ipSAviation0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M32.5 30H36l8-8H11a3 3 0 0 0-1.8.6L4 26.5l6.277 3.177A3 3 0 0 0 11.63 30H13"/><path fill="#fff" d="M27 31c0 1.657-3.582 3-8 3v-6c4.418 0 8 1.343 8 3Z"/><path fill="#fff" stroke-linecap="round" d="m31 18l-9 4h15l3-10h-3l-6 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAviation0)"/>`
	avocadoInnerSVG                                    = `<mask id="ipSAvocado0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33 19c-2-5 0-15-9-15s-7 10-9 14s-5 7-5 13c0 9 7.5 13 14 13s14-4 14-13c0-5-3-7-5-12Z"/><path fill="#000" stroke="#000" d="M30 30a6 6 0 0 1-12 0c0-3.314 2.686-7.5 6-7.5s6 4.186 6 7.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAvocado0)"/>`
	avocadoOneInnerSVG                                 = `<mask id="ipSAvocadoOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M7 32c3 5 8 8 13 9s10.808.144 15-3c6-4.5 8-12 8-17s-2-10.5-3-12s-3-2-3-2"/><path fill="#fff" stroke="#fff" d="M21 13c-4.355 1.604-9 0-13 3c-4.696 3.523-6 9-3 14c2.352 3.92 6 6 12 6s9.764-1.765 14-6c6-6 8-15.5 8-19s-2.5-5.5-6-5s-6.427 4.947-12 7Z"/><path fill="#000" stroke="#000" d="M21.945 20.117c-1.223.48-2.527 0-3.65.898c-1.32 1.054-1.686 2.693-.843 4.19c.66 1.172 1.685 1.795 3.37 1.795s2.742-.528 3.931-1.796C26.438 23.41 27 20.566 27 19.52c0-1.047-.702-1.646-1.685-1.496c-.983.15-1.805 1.48-3.37 2.094Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSAvocadoOne0)"/>`
	babyInnerSVG                                       = `<mask id="ipSBaby0"><g fill="none"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-width="4" d="M24 43.6c8.432 0 15.56-6.68 17.894-14.35C42.418 27.526 46 27.526 46 23.8s-3.616-3.94-4.201-5.752C39.372 10.535 32.32 4 24 4C15.675 4 8.62 10.54 6.197 18.06C5.615 19.87 2 20.01 2 23.8s3.592 3.79 4.135 5.542C8.497 36.964 15.602 43.6 24 43.6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M41.799 18.048C39.372 10.535 32.32 4 24 4"/><path fill="#000" stroke="#000" d="M19.1 21.6c0 .826-.224 1.552-.56 2.056c-.339.508-.752.744-1.14.744c-.388 0-.8-.236-1.14-.744c-.336-.504-.56-1.23-.56-2.056c0-.827.224-1.552.56-2.056c.34-.508.752-.744 1.14-.744c.389 0 .801.236 1.14.744c.336.504.56 1.23.56 2.056Zm13.2 0c0 .826-.224 1.552-.56 2.056c-.339.508-.752.744-1.14.744c-.388 0-.801-.236-1.14-.744c-.336-.504-.56-1.23-.56-2.056c0-.827.224-1.552.56-2.056c.339-.508.752-.744 1.14-.744c.388 0 .801.236 1.14.744c.336.504.56 1.23.56 2.056Z"/><path fill="#000" fill-rule="evenodd" d="M18.498 31.75c1.93 1.3 3.768 1.95 5.511 1.95c1.742 0 3.469-.649 5.18-1.945" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M18.498 31.75c1.93 1.3 3.768 1.95 5.511 1.95c1.742 0 3.469-.649 5.18-1.945"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M31.728 6.2c.268 1.934-.321 3.347-1.769 4.239c-1.447.892-3.799 1.31-7.055 1.254"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBaby0)"/>`
	babyAppInnerSVG                                    = `<mask id="ipSBabyApp0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M43 26v6a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V12a2 2 0 0 1 2-2h9"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 40h40"/><circle cx="30" cy="17" r="9" fill="#fff" stroke="#fff" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 18v-2m22 2v-2M30 8c-.167-1-1.2-3.2-4-4m4 4c.083-1 .6-3.2 2-4"/><circle cx="33" cy="16" r="2" fill="#000"/><circle cx="27" cy="16" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyApp0)"/>`
	babyCarSeatInnerSVG                                = `<mask id="ipSBabyCarSeat0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m36 33l6-29s-10.5 2-10.5 6c0 2.5 4 4 2.5 5.5s-7 3-7 7c0 2.5 1.64 4.36 0 6c-1.5 1.5-3 .714-5.5 0c-2.8-.8-8.5-1.5-10.5-1S7 29 7 32c0 1.65 1 3.5 3.5 4s5.5-2 9.5-2s9 3 12 3s4-4 4-4Z"/><path d="m11 36l-3 8h33l-6-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyCarSeat0)"/>`
	babyFeetInnerSVG                                   = `<mask id="ipSBabyFeet0"><g fill="#fff"><path stroke="#fff" stroke-width="4" d="M15 20.612c-1.424 6.15 6.493 7.715 4.624 12.048c-1.87 4.332-6.055 3.466-5.588 7.798c.468 4.333 6.006 4.394 11.048 1.784c10.083-5.221 12.187-16.625 7.624-21.63c-5.608-6.15-16.284-6.15-17.708 0Z"/><ellipse cx="34.535" cy="13.535" rx="2" ry="3" transform="rotate(40 34.535 13.535)"/><ellipse cx="29.381" cy="10.603" rx="2" ry="3" transform="rotate(25 29.38 10.603)"/><ellipse cx="23.381" cy="9.603" rx="2" ry="3" transform="rotate(6 23.38 9.603)"/><ellipse cx="14" cy="8" stroke="#fff" stroke-width="4" rx="3" ry="4" transform="rotate(-20 14 8)"/><ellipse cx="38.535" cy="17.536" rx="2" ry="3" transform="rotate(50 38.535 17.536)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyFeet0)"/>`
	babyMealInnerSVG                                   = `<mask id="ipSBabyMeal0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 6H10a5 5 0 0 0-5 5v26a5 5 0 0 0 5 5h20"/><path stroke-linecap="round" stroke-linejoin="round" d="M19 6v17.524L5 28m14-4l12 4"/><path stroke-linecap="round" d="M37 18v24"/><path fill="#fff" d="M31 13.333C31 7.111 35 4 37 4s6 3.111 6 9.333c0 6.223-12 6.223-12 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyMeal0)"/>`
	babyMobileInnerSVG                                 = `<mask id="ipSBabyMobile0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 18L24 8l20 10m-20 0V4M10 30V16"/><circle cx="10" cy="36" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M38 30V16"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="m32 36l6-6l6 6l-6 6l-6-6Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M29 23v-5H19v5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyMobile0)"/>`
	babyOneInnerSVG                                    = `<mask id="ipSBabyOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><circle cx="24" cy="8" r="5" fill="#fff" stroke-linejoin="round"/><path d="M5 28s17-20.25 38 0"/><path fill="#fff" stroke-linejoin="round" d="M19 28v-3.79S19 19 24 19s5 5.21 5 5.21V32s0 5-5 5s-5-5-5-5v-4Z"/><path stroke-linejoin="round" d="m29 32l8 5l-6 7M19 32l-8 5l6 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyOne0)"/>`
	babyPantsInnerSVG                                  = `<mask id="ipSBabyPants0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M34 4H14c-2 1-5 5-5 15c0 12.5 5 25 8 25c2 0 2-2.5 2-2.5V24c0-5 8-4.5 8 0v11c0 8 7 11 9 9s-2-4-2-7c0-5 4-9 4-22c0-5-2.333-9-4-11Z"/><path stroke="#000" stroke-linecap="round" d="M10 12h27"/><path stroke="#fff" d="M10.803 8c-.732 1.696-1.338 3.981-1.624 7M38 15a16.91 16.91 0 0 0-1.125-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyPants0)"/>`
	babySlingInnerSVG                                  = `<mask id="ipSBabySling0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="10" r="5" fill="#fff"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M24 21C14 21 11 6 11 6L6 8l3 16.5c1.167.667 5.5 3 8 6.5s2 7 7.5 7s6-4.5 7.5-7s5.667-6 7-6.5L42 8l-5-2s-3 15-13 15Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M34 29s7 4 7 13h-5c0-6-5-9-5-9m-16-4s-7 4-7 13h5c0-6 5-9 5-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabySling0)"/>`
	babyTasteInnerSVG                                  = `<mask id="ipSBabyTaste0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c9.941 0 18-8.059 18-18S33.941 8 24 8S6 16.059 6 26s8.059 18 18 18Z"/><path stroke="#fff" stroke-linecap="round" d="M24 8c-.25-1-2-4-6-4m6 4c.083-1 .6-3.2 2-4"/><path stroke="#000" stroke-linecap="round" d="M31 33s-2 4-7 4s-7-4-7-4"/><path stroke="#000" stroke-linecap="round" d="M31 33s1.5-4-1-4s-3 7-3 7m6-15h-4m-12-2v4"/><path stroke="#fff" stroke-linecap="round" d="M4 24v4m40-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBabyTaste0)"/>`
	bachelorCapInnerSVG                                = `<mask id="ipSBachelorCap0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m4 13l20-5l20 5l-20 5l-20-5Z"/><path d="M13 16v9.97S18 29 24 29s11-3.03 11-3.03V16M7 14v22"/><path fill="#fff" d="M4 34h6v6H4z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBachelorCap0)"/>`
	bachelorCapOneInnerSVG                             = `<mask id="ipSBachelorCapOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke-linecap="round" d="M5 16L24 6l19 10l-19 10L5 16Z"/><path d="M11 20v14.464c0 1.464 1.055 2.723 2.471 3.095c2.205.58 5.585 1.66 8.885 3.47c1.021.56 2.266.56 3.288 0c3.3-1.81 6.68-2.89 8.885-3.47C35.945 37.187 37 35.93 37 34.464V20"/><path stroke-linecap="round" d="M43 16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBachelorCapOne0)"/>`
	bachelorCapTwoInnerSVG                             = `<mask id="ipSBachelorCapTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M11 21v15.039c0 .607.274 1.18.785 1.509C13.486 38.643 17.86 41 24 41s10.514-2.357 12.215-3.452c.51-.33.785-.902.785-1.51V21"/><path stroke-linecap="round" d="M43 24v8"/><path fill="#fff" stroke-linecap="round" d="M5 17L24 7l19 10l-19 10L5 17Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBachelorCapTwo0)"/>`
	backInnerSVG                                       = `<mask id="ipSBack0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 40.836c-4.893-5.973-9.238-9.362-13.036-10.168c-3.797-.805-7.412-.927-10.846-.365V41L4 23.545L20.118 7v10.167c6.349.05 11.746 2.328 16.192 6.833c4.445 4.505 7.009 10.117 7.69 16.836Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBack0)"/>`
	backpackInnerSVG                                   = `<mask id="ipSBackpack0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M19 9.556V4h-6v10m16-4.444V4h6v10"/><path fill="#fff" stroke="#fff" d="M11 20c0-5.523 4.477-10 10-10h6c5.523 0 10 4.477 10 10v20a4 4 0 0 1-4 4H15a4 4 0 0 1-4-4V20Z"/><path stroke="#fff" d="M11 29H5v10h6m26-10h6v10h-6"/><path stroke="#000" d="M28 23v4m-11-4h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBackpack0)"/>`
	badInnerSVG                                        = `<mask id="ipSBad0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9.948 28.807C13.869 37.681 21.933 41.19 28 44c2.632 1.22 3.328-3.717 2.277-6.69c-.884-2.502-2.651-5.305-2.651-5.305h7.106a3.5 3.5 0 1 0 0-7.001h1.767a3.5 3.5 0 1 0 0-7.002h-3.535a3.5 3.5 0 0 0 0-7h-2.652A3.5 3.5 0 0 0 30.315 4H19.67c-3.094 0-7.071 1.803-9.723 6.804c-2.542 4.794-2.652 12.002 0 18.003Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBad0)"/>`
	badOneInnerSVG                                     = `<mask id="ipSBadOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m35.911 6.456l5.37 19A2 2 0 0 1 39.356 28H27.875c-.704 0-1.224.654-1.066 1.34l.5 2.164c.458 1.985.605 4.03.436 6.06l-.092 1.103A5.02 5.02 0 0 1 26.2 41.8a4.096 4.096 0 0 1-2.896 1.2h-.24a1.809 1.809 0 0 1-1.58-.93l-2.659-4.785a12.962 12.962 0 0 0-5.124-5.084l-6.659-3.633A2 2 0 0 1 6 26.814V7a2 2 0 0 1 2-2h25.987a2 2 0 0 1 1.924 1.456Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBadOne0)"/>`
	badTwoInnerSVG                                     = `<mask id="ipSBadTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4.18 26.834A2 2 0 0 0 6.175 29H10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2H7.84a2 2 0 0 0-1.993 1.834l-1.666 20ZM18 26.625c0 .836.52 1.584 1.275 1.94c1.649.778 4.458 2.341 5.725 4.454c1.633 2.724 1.941 7.645 1.991 8.772c.007.158.003.316.024.472c.271 1.953 4.04-.328 5.485-2.74c.785-1.308.885-3.027.803-4.37c-.089-1.435-.51-2.823-.923-4.201l-.88-2.937h10.857a2 2 0 0 0 1.925-2.543l-5.37-19.016A2 2 0 0 0 36.986 5H20a2 2 0 0 0-2 2v19.625Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBadTwo0)"/>`
	badgeInnerSVG                                      = `<mask id="ipSBadge0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M38 22v18H8V10h18"/><path fill="#fff" d="M38 14a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBadge0)"/>`
	badgeTwoInnerSVG                                   = `<mask id="ipSBadgeTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m16 44l8-4l8 4V24.944A11.955 11.955 0 0 1 24 28a11.955 11.955 0 0 1-8-3.056V44Z"/><path fill="#fff" stroke="#fff" d="M36 16a11.97 11.97 0 0 1-4 8.944A11.955 11.955 0 0 1 24 28a11.955 11.955 0 0 1-8-3.056A11.97 11.97 0 0 1 12 16c0-6.627 5.373-12 12-12s12 5.373 12 12Z"/><path stroke="#000" d="M24 21V11l-2 1m2 9h2m-2 0h-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBadgeTwo0)"/>`
	badmintonInnerSVG                                  = `<mask id="ipSBadminton0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M19.5 44c2.49 0 4.5-2.01 4.5-4.5V19h-4l-5 20.5c0 2.49 2.01 4.5 4.5 4.5Z"/><path d="M20 19h-4L6.68 37.9c-1.11 2.61.48 5.74 3.3 6.07A4.494 4.494 0 0 0 15 39.5M28.5 44c-2.49 0-4.5-2.01-4.5-4.5V19h4l5 20.5c0 2.49-2.01 4.5-4.5 4.5Z"/><path d="M28 19h4l9.32 18.9c1.11 2.61-.48 5.74-3.3 6.07A4.494 4.494 0 0 1 33 39.5"/><path fill="#fff" d="M16.06 13c-.04-.33-.06-.66-.06-1c0-4.42 3.58-8 8-8s8 3.58 8 8c0 .34-.02.67-.06 1H16.06Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBadminton0)"/>`
	baggageDelayInnerSVG                               = `<mask id="ipSBaggageDelay0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 26V14a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h17M16 12v28m12-28v17m0-17V6a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v6"/><path fill="#fff" stroke="#fff" d="M35 44a9 9 0 1 0 0-18a9 9 0 0 0 0 18Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M34 32v4h4"/><path stroke="#fff" stroke-linecap="round" d="M13 40v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBaggageDelay0)"/>`
	balanceInnerSVG                                    = `<mask id="ipSBalance0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" stroke="#fff" d="M35 25a32.234 32.234 0 0 0-22 0l-1-11c7-3 17-3 24 0l-1 11Z"/><path stroke="#000" d="m24 23l-3-5"/><path stroke="#fff" d="M42 39a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h30a3 3 0 0 1 3 3v30Z"/><path stroke="#fff" d="M29 23.455a32.222 32.222 0 0 0-10 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBalance0)"/>`
	balanceOneInnerSVG                                 = `<mask id="ipSBalanceOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" stroke="#fff" d="M35 25a32.234 32.234 0 0 0-22 0l-1-11c7-3 17-3 24 0l-1 11Z"/><path stroke="#000" d="m24 23l-3-5"/><path stroke="#fff" d="M42 39a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h30a3 3 0 0 1 3 3v30Z"/><path stroke="#fff" d="M29 23.455a32.228 32.228 0 0 0-10 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBalanceOne0)"/>`
	balanceTwoInnerSVG                                 = `<mask id="ipSBalanceTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m16 22l-6-10l-6 10"/><path fill="#fff" fill-rule="evenodd" d="M10 28a6 6 0 0 0 6-6H4a6 6 0 0 0 6 6Z" clip-rule="evenodd"/><path d="m44 22l-6-10l-6 10"/><path fill="#fff" fill-rule="evenodd" d="M38 28a6 6 0 0 0 6-6H32a6 6 0 0 0 6 6Z" clip-rule="evenodd"/><path d="M24 6v36M10 12h28m-28 0h28m0 30H10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBalanceTwo0)"/>`
	bananaInnerSVG                                     = `<mask id="ipSBanana0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSBanana1)"><path d="M16 32c-2.8-.933-6.035-3.173-7.476-5.425a1.716 1.716 0 0 1-.245-1.043l.245-3.75c.053-.81 1.01-1.24 1.671-.77C12.33 22.529 16.228 25 19 25c7 0 13-2.5 16-8"/><path fill="#fff" d="M26 43c10-2 19.242-12.485 16.867-23.059L41.999 16V8l-6-1c0 12.941-3 23-16 25c-5.976.92-11.705-.386-16.129-2.922L5 36c2 5 11 9 21 7Z"/></g><defs><clipPath id="ipSBanana1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBanana0)"/>`
	bankCardInnerSVG                                   = `<mask id="ipSBankCard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 10a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V10Z"/><path stroke="#000" stroke-linecap="square" d="M4 16h40"/><path stroke="#000" stroke-linecap="round" d="M27 32h9"/><path stroke="#fff" stroke-linecap="round" d="M44 10v16M4 10v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBankCard0)"/>`
	bankCardOneInnerSVG                                = `<mask id="ipSBankCardOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M14 13V9a2 2 0 0 1 2-2h26a2 2 0 0 1 2 2v18a2 2 0 0 1-2 2h-2"/><rect width="30" height="22" x="4" y="19" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M4 28h30"/><path stroke="#fff" d="M34 23v12M4 23v12"/><path stroke="#000" d="M11 34h8m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBankCardOne0)"/>`
	bankCardTwoInnerSVG                                = `<mask id="ipSBankCardTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M44 18V8H4v10"/><path fill="#fff" stroke="#fff" d="M44 18H4v22h40V18Z"/><path stroke="#000" stroke-linecap="round" d="M12 29h2m6 0h2m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBankCardTwo0)"/>`
	bankTransferInnerSVG                               = `<mask id="ipSBankTransfer0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="40" height="28" x="4" y="10" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="M4 20h40"/><path stroke="#fff" stroke-linecap="round" d="M4 17v6m40-6v6"/><path stroke="#000" stroke-linecap="round" d="M29 29h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBankTransfer0)"/>`
	baokemengInnerSVG                                  = `<mask id="ipSBaokemeng0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M44 24H30c0-3.31-2.69-6-6-6s-6 2.69-6 6H4C4 12.95 12.95 4 24 4s20 8.95 20 20Z"/><path stroke-linecap="round" d="M18 24H4c0 11.05 8.95 20 20 20s20-8.95 20-20H30"/><path d="M24 30a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBaokemeng0)"/>`
	barbecueInnerSVG                                   = `<mask id="ipSBarbecue0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><rect width="8" height="8" x="12" y="4" fill="#fff" stroke-linejoin="round" rx="4"/><rect width="8" height="8" x="12" y="22" fill="#fff" stroke-linejoin="round" rx="4"/><path d="M16 31v13"/><rect width="8" height="8" x="28" y="4" fill="#fff" stroke-linejoin="round" rx="4"/><rect width="8" height="8" x="28" y="22" fill="#fff" stroke-linejoin="round" rx="4"/><path d="M32 31v13"/><path stroke-linejoin="round" stroke-miterlimit="2" d="M13 17h6m10 0h6M13 36h6m10 0h6"/><path d="M16 14v6m16-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBarbecue0)"/>`
	barberBrushInnerSVG                                = `<mask id="ipSBarberBrush0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M29.796 24H16.204s-3.986 7.708 2.548 10.833c4.183 2.5-2.548 9.167-2.548 9.167h13.592s-6.73-7.292-2.548-9.167C33.782 31.708 29.796 24 29.796 24Z"/><path d="m37 10l-7 14H16L9 10s3-6 14-6s14 6 14 6ZM25 24l2-12m-6 12l-2-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBarberBrush0)"/>`
	barberClippersInnerSVG                             = `<mask id="ipSBarberClippers0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M10 8h28v9l-5 7v12s0 8-9 8s-9-8-9-8V24l-5-7V8Zm5-4v6m6-6v6m6-6v6"/><rect width="6" height="10" x="21" y="28" fill="#fff" rx="3"/><path d="M10 17h28M33 4v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBarberClippers0)"/>`
	baseballBatInnerSVG                                = `<mask id="ipSBaseballBat0"><g fill="#fff" stroke="#fff" stroke-width="4"><circle cx="40" cy="40" r="3"/><path stroke-linejoin="round" d="M16.502 9.43S26.5 22 37.5 37.501C21.5 26 9.43 16.502 9.43 16.502S3.111 10.89 7 7c3.89-3.889 9.502 2.43 9.502 2.43Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBaseballBat0)"/>`
	baseballCapInnerSVG                                = `<mask id="ipSBaseballCap0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M12 30c0-8.837 7.163-16 16-16v0c8.837 0 16 7.163 16 16v6H12v-6Z"/><path d="M22 36c-1-3.5-1-22 6-22s6.5 18 6 22"/><rect width="30" height="6" x="4" y="36" fill="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><circle cx="28" cy="10" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBaseballCap0)"/>`
	basketballClothesInnerSVG                          = `<mask id="ipSBasketballClothes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M30 4a6 6 0 0 1-12 0h-3c-1.105 0-2.002.894-2.032 1.998C12.9 8.57 12.683 12.951 12 15c-.761 2.283-3.839 5.146-5.266 6.383c-.46.398-.734.97-.734 1.578V42a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V22.961c0-.607-.275-1.18-.734-1.578C39.84 20.146 36.761 17.283 36 15c-.683-2.049-.9-6.43-.968-9.002C35.002 4.894 34.105 4 33 4h-3Z"/><path stroke="#000" d="M27 24h6v12h-6z"/><path stroke="#000" stroke-linecap="round" d="M15 24h6v12h-6m6-6h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBasketballClothes0)"/>`
	basketballOneInnerSVG                              = `<mask id="ipSBasketballOne0"><g fill="none"><path fill="#fff" d="M18 24c0-6.624 5.376-12 12-12s12 5.376 12 12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M18 24c0-6.624 5.376-12 12-12s12 5.376 12 12M12 4H4v32h8V4Zm0 20h32m-26 0l2 4.5c2 5 1.9 10.4 0 15.5m21-20l-2 4.5c-2 5-1.91 10.4 0 15.5M21.22 32h16.56m-16.09 8h15.63m-7.82 0V24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBasketballOne0)"/>`
	batInnerSVG                                        = `<mask id="ipSBat0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m21.619 8.986l.476 2.463h3.81l.476-2.463c.476 1.642 1.429 5.223 1.429 6.405c1.746-.164 5.143-1.38 4.762-4.927c0-.493-.382-1.676-1.905-2.464c4.285.986 12.952 5.716 13.333 16.754c-2.857-1.807-8.762-3.154-9.524 5.913c-1.746-2.957-5.809-7.293-8.095-.986C25.587 32.473 24 38.846 24 42c0-3.154-1.587-9.527-2.381-12.319c-2.286-6.307-6.35-1.97-8.095.986c-.762-9.067-6.667-7.72-9.524-5.913C4.381 13.716 13.048 8.986 17.333 8c-1.523.788-1.905 1.971-1.905 2.464c-.38 3.548 3.016 4.763 4.762 4.927c0-1.182.953-4.763 1.429-6.405Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBat0)"/>`
	batteryEmptyInnerSVG                               = `<mask id="ipSBatteryEmpty0"><g fill="#fff"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 14H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Z"/><path d="M42 20h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2v-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryEmpty0)"/>`
	batteryFailureInnerSVG                             = `<mask id="ipSBatteryFailure0"><g fill="none"><rect width="36" height="20" x="14" y="44" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2" transform="rotate(-90 14 44)"/><path fill="#fff" d="M20 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2h-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 30v-3c2.21 0 4-2.015 4-4.5S26.21 18 24 18s-4 2.015-4 4.5"/><path fill="#000" stroke="#000" d="M26 35.5a2 2 0 1 1-4 0a2 2 0 0 1 4 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryFailure0)"/>`
	batteryFullInnerSVG                                = `<mask id="ipSBatteryFull0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 14H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Z"/><path fill="#fff" d="M42 20h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2v-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 21v6m6-6v6m6-6v6m6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryFull0)"/>`
	batteryStorageInnerSVG                             = `<mask id="ipSBatteryStorage0"><g fill="none"><rect width="36" height="20" x="14" y="44" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2" transform="rotate(-90 14 44)"/><path fill="#fff" d="M20 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2h-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m25 18l-5 10l8-2l-5 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryStorage0)"/>`
	batteryTipsInnerSVG                                = `<mask id="ipSBatteryTips0"><g fill="none"><rect width="36" height="20" x="14" y="44" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2" transform="rotate(-90 14 44)"/><path fill="#fff" d="M20 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2h-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 28V18"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 24 34)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryTips0)"/>`
	batteryWorkingInnerSVG                             = `<mask id="ipSBatteryWorking0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 14H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Z"/><path fill="#fff" d="M42 20h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2v-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 21v6m6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryWorking0)"/>`
	batteryWorkingOneInnerSVG                          = `<mask id="ipSBatteryWorkingOne0"><g fill="none"><rect width="36" height="20" x="4" y="14" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><path fill="#fff" d="M42 20h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2v-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 21v6m6-6v6m6-6v6m6-3v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBatteryWorkingOne0)"/>`
	beachUmbrellaInnerSVG                              = `<mask id="ipSBeachUmbrella0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M14.34 21.412L24 24l9.66 2.588l9.659 2.588c2.338-8.725-1.471-17.65-8.773-22.176a20 20 0 0 0-5.37-2.318A19.97 19.97 0 0 0 22.5 4.05c-8.237.62-15.56 6.342-17.818 14.773l9.659 2.588Z"/><path stroke="#000" d="M29.176 4.681s-5.64 3.665-8.866 7.977s-4.037 9.271-4.037 9.271M29.177 4.681s3.052 5.995 3.69 11.342c.638 5.347-1.14 10.047-1.14 10.047"/><path stroke="#fff" d="m4.682 18.824l9.659 2.588L24 24l9.658 2.588l9.66 2.588M4 44h40M24 24l-5.5 20m4-39.949a19.97 19.97 0 0 1 6.676.63a20 20 0 0 1 5.37 2.32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBeachUmbrella0)"/>`
	bearInnerSVG                                       = `<mask id="ipSBear0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5 13.06c0 2.48 1.292 4.461 3 5.94c-1.076 2.146-2 4.474-2 7c0 9.221 8.124 17 18 17s18-7.779 18-17c0-2.526-.924-4.854-2-7c1.708-1.479 3-3.521 3-6c0-4.452-3.68-8-8-8c-3.273 0-5.833 2.06-7 5a19.831 19.831 0 0 0-4-.394c-1.351 0-2.735.129-4 .394c-1.167-2.94-3.727-5-7-5c-4.32 0-8 3.609-8 8.06Z"/><circle cx="20" cy="19" r="2" fill="#000"/><circle cx="28" cy="19" r="2" fill="#000"/><circle cx="24" cy="26" r="3" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 26v8"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M28 33c-2.276 2.276-5.724 2.276-8 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBear0)"/>`
	beautyInnerSVG                                     = `<mask id="ipSBeauty0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M42 44V22c0-9.941-8.059-18-18-18S6 12.059 6 22v22"/><path fill="#fff" d="M24 43c5.523 0 10-8.954 10-20H14c0 11.046 4.477 20 10 20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBeauty0)"/>`
	beautyInstrumentInnerSVG                           = `<mask id="ipSBeautyInstrument0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M17 34h14m-15-7h16"/><rect width="30" height="16" x="9" y="4" fill="#fff" stroke="#fff" rx="4"/><path stroke="#fff" d="m14 20l5 24h10l5-24"/><path stroke="#000" d="M17 12h13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBeautyInstrument0)"/>`
	bedsideInnerSVG                                    = `<mask id="ipSBedside0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 18h40v12H4zm0 12h40v12H4z"/><path stroke="#000" d="M22 24h4m-4 12h4"/><path stroke="#fff" d="M8 42v4m32-4v4M24 18v-8m8 0H16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBedside0)"/>`
	bedsideTwoInnerSVG                                 = `<mask id="ipSBedsideTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 18h40v24H4V18Z"/><path stroke="#000" d="M22 24h4M4 30h40m-22 6h4"/><path stroke="#fff" d="M8 42v4m32-4v4M24 18v-8"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M32 10a8 8 0 1 0-16 0h16Z" clip-rule="evenodd"/><path stroke="#fff" d="M44 26v8M4 26v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBedsideTwo0)"/>`
	beeInnerSVG                                        = `<mask id="ipSBee0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M30 28.696C30 35 27.314 44 24 44s-6-9-6-15.304C18 24.998 20.686 22 24 22s6 2.998 6 6.696Z"/><path d="M11.478 17C13.988 17 20 19.239 20 22s-6.012 5-8.522 5C8.968 27 6 24.761 6 22s2.968-5 5.478-5Zm25.044 0C34.012 17 28 19.239 28 22s6.012 5 8.522 5C39.032 27 42 24.761 42 22s-2.968-5-5.478-5Z"/><rect width="10" height="13" x="19" y="9" fill="#fff" rx="5"/><path stroke-linecap="round" d="M28 10a6 6 0 0 1 6-6m-13 6c0-3.314-3.134-6-7-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBee0)"/>`
	beerInnerSVG                                       = `<mask id="ipSBeer0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M25.5 19H33a2 2 0 0 1 2 2v23H13V21a2 2 0 0 1 2-2h2.5"/><path fill="#fff" stroke-linejoin="round" d="M17 8h-2.5a5.5 5.5 0 1 0 0 11H19v10.5a2.5 2.5 0 0 0 5 0V19h9.5a5.5 5.5 0 1 0 0-11H29s-1-4-6-4s-6 4-6 4Z"/><path d="M35 21h5a2 2 0 0 1 2 2v5a4 4 0 0 1-4 4h-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBeer0)"/>`
	beerMugInnerSVG                                    = `<mask id="ipSBeerMug0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M16 37.241C16 39.172 16.857 44 28 44s12-4.828 12-6.759V16H16v21.241Z"/><path stroke="#000" stroke-linecap="round" d="M25 23v14m6-14v14"/><path stroke="#fff" d="M15.998 16s-1.999-4.5 1-7C19.999 6.5 23 8 23 8s1-4 5-4s5 4 5 4s3.5-1.5 6 1s.998 7 .998 7M16 19H6s1 10 2 13c.998 3 8 2 8 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBeerMug0)"/>`
	behanceInnerSVG                                    = `<mask id="svgIDa"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M12 24c5 0 8-2.8 8-7s-3-7-8-7H4v14h8Zm1.031 16C18.537 40 22 37 22 32s-3.463-8-8.969-8H4v16h9.031Z" clip-rule="evenodd"/><path d="M29 31h15c0-4-2-9-8-9c-5 0-8 4-8 9s3 9 8 9s7-3 7-3m-1-22H30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#svgIDa)"/>`
	bellRingInnerSVG                                   = `<mask id="ipSBellRing0"><g fill="none"><circle cx="20" cy="20" r="16" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" d="M44 18v2h-2v-2h2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 20h2v-2h-2v2Zm0 0c0 9.137-5.57 16.973-13.5 20.298M14 35l-4 9h20l-4-9"/><circle cx="20" cy="20" r="4" fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 20c0-5.523 4.477-10 10-10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBellRing0)"/>`
	benzInnerSVG                                       = `<mask id="ipSBenz0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M6.68 34L24 24m0-20v20V4Zm17.32 30L24 24l17.32 10Z"/><path stroke="#fff" d="M18 4.916A19.992 19.992 0 0 1 24 4c2.09 0 4.106.32 6 .916M4.63 29a19.876 19.876 0 0 0 2.045 5a20.077 20.077 0 0 0 3.042 4m33.653-9a19.88 19.88 0 0 1-2.046 5a20.08 20.08 0 0 1-3.041 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBenz0)"/>`
	bezierCurveInnerSVG                                = `<mask id="ipSBezierCurve0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 30h8v8H4zm32 0h8v8h-8zM20 10h8v8h-8z"/><path stroke-linecap="round" d="M20 14H4m40 0H28M8 30c0-7.455 5.1-13.72 12-15.496m8 0C34.9 16.28 40 22.544 40 30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBezierCurve0)"/>`
	bibInnerSVG                                        = `<mask id="ipSBib0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M31 14c0 8-14 8-14 0c0-5 5-6 3-9S8 7 8 16v16c0 8.5 8.5 12 15.5 12S40 41 40 32V16C40 7 29 2 27 5s4 4 4 9Z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="m19 32l5-5l5 5l-5 5l-5-5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBib0)"/>`
	bigClockInnerSVG                                   = `<mask id="ipSBigClock0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 4C12.954 4 4 12.865 4 23.8V44h40V23.8C44 12.865 35.046 4 24 4Z"/><circle cx="24" cy="24" r="12" fill="#000" stroke="#000"/><path stroke="#000" d="M24 18v6l4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBigClock0)"/>`
	bigXInnerSVG                                       = `<mask id="ipSBigX0"><g fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M33 6h11L15 42H4L33 6Z"/><path d="M15 6H4l29 36h11L15 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBigX0)"/>`
	bikeInnerSVG                                       = `<mask id="ipSBike0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10.5 42a8.5 8.5 0 1 0 0-17a8.5 8.5 0 0 0 0 17ZM37 42a9 9 0 1 0 0-18a9 9 0 0 0 0 18Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18.997 6h9L37 33"/><path fill="#fff" fill-rule="evenodd" d="m11.057 33l20.625-16.237L11.057 33Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m11.057 33l20.625-16.237m0-1.763h8.472L42 10M8 15.974h7M15 16l3.273 10.421"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBike0)"/>`
	billInnerSVG                                       = `<mask id="ipSBill0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 6a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v38l-7-5l-7 5l-7-5l-7 5V6Z"/><path stroke="#000" d="M18 22h12m-12 8h12M18 14h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBill0)"/>`
	birdInnerSVG                                       = `<mask id="ipSBird0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m9 14l-5 6.07S5.85 27.035 11 32c9.89 9.533 24.334 3.303 30-1c5.357-4.37 2.717-5.332 1-5l-5 1c9.065-14.301 6.575-15.828 4-15l-9 4c-5.769 3.177-8.5 1.5-10 0l-3-3c-4.5-4-8.97-.16-10 1Z"/><circle cx="14" cy="20" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBird0)"/>`
	birthdayCakeInnerSVG                               = `<mask id="ipSBirthdayCake0"><g fill="none"><path fill="#fff" d="M8 40h32V24H8v16Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 40H8m32 0H4h4m32 0h4m-4 0V24H8v16"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m40 34l-4-2l-4 2l-4-2l-4 2l-4-2l-4 2l-4-2l-4 2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 24v-9m-8 9v-9m-8 9v-9m16-5V8m-8 2V8m-8 2V8M8 24v16m32-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBirthdayCake0)"/>`
	bitcoinInnerSVG                                    = `<mask id="ipSBitcoin0"><g fill="none"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" d="M20 16h7a4 4 0 0 1 0 8h-7v-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 16v8h7a4 4 0 0 0 4-4v0a4 4 0 0 0-4-4h-2m-5 0h-4m4 0v-4m0 4h5m0 0v-4"/><path fill="#fff" d="M20 24h9a4 4 0 0 1 0 8h-9v-8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 32v-8h9a4 4 0 0 1 4 4v0a4 4 0 0 1-4 4h-4m-5 0v4m0-4h-4h9m-5 0h5m0 0v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBitcoin0)"/>`
	blackEightInnerSVG                                 = `<mask id="ipSBlackEight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M24 23a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm0 12a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlackEight0)"/>`
	blackboardInnerSVG                                 = `<mask id="ipSBlackboard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 7h32v24H8z"/><path stroke="#fff" stroke-linecap="round" d="M4 7h40M15 41l9-10l9 10"/><path stroke="#000" stroke-linecap="round" d="M16 13h16m-16 6h12m-12 6h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlackboard0)"/>`
	bladeInnerSVG                                      = `<mask id="ipSBlade0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 14v3H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h2v3a2 2 0 0 0 2 2h27a2 2 0 0 0 2-2v-3h3a2 2 0 0 0 2-2V19a2 2 0 0 0-2-2h-3v-3a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 24h24"/><circle cx="24" cy="24" r="4" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 29V19M16 29V19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlade0)"/>`
	blockEightInnerSVG                                 = `<mask id="ipSBlockEight0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 6h12v12H6V6Zm12 0h12v12H18V6Zm0 12h12v12H18V18Zm0 12h12v12H18V30ZM30 6h12v12H30V6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockEight0)"/>`
	blockFiveInnerSVG                                  = `<mask id="ipSBlockFive0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 30h12v12H6V30Zm12-12h12v12H18V18ZM30 6h12v12H30V6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockFive0)"/>`
	blockFourInnerSVG                                  = `<mask id="ipSBlockFour0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 12h12v12H6V12Zm12 0h12v12H18V12Zm12 0h12v12H30V12ZM18 24h12v12H18V24Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockFour0)"/>`
	blockNineInnerSVG                                  = `<mask id="ipSBlockNine0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 14h12v12H18V14Zm0 12h12v12H18V26Zm12-12h12v12H30V14ZM6 26h12v12H6V26Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockNine0)"/>`
	blockOneInnerSVG                                   = `<mask id="ipSBlockOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 30h12v12H6V30ZM30 6h12v12H30V6Zm0 12h12v12H30V18Zm-12 0h12v12H18V18ZM6 18h12v12H6V18Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockOne0)"/>`
	blockSevenInnerSVG                                 = `<mask id="ipSBlockSeven0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 18h12v12H18V18Zm12 0h12v12H30V18ZM6 18h12v12H6V18Zm12 12h12v12H18V30Zm0-24h12v12H18V6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockSeven0)"/>`
	blockSixInnerSVG                                   = `<mask id="ipSBlockSix0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 18h12v12H18V18ZM6 18h12v12H6V18Zm24 0h12v12H30V18Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockSix0)"/>`
	blockTenInnerSVG                                   = `<mask id="ipSBlockTen0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 6h12v12H24V6Z"/><path d="M24 6h12v12H24V6ZM12 6h12v12H12V6Zm0 24h12v12H12V30Zm0-12h12v12H12V18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockTen0)"/>`
	blockThreeInnerSVG                                 = `<mask id="ipSBlockThree0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 24h12v12H6V24Zm24 0h12v12H30V24ZM6 12h12v12H6V12Zm12 0h12v12H18V12Zm12 0h12v12H30V12Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockThree0)"/>`
	blockTwoInnerSVG                                   = `<mask id="ipSBlockTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 6h12v12H18V6Zm12 0h12v12H30V6ZM6 6h12v12H6V6Zm0 12h12v12H6V18Zm0 12h12v12H6V30Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockTwo0)"/>`
	blockchainInnerSVG                                 = `<mask id="ipSBlockchain0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 30V15L27.5 7.969m-7 0L8 15v15m3 4.688L24 42l8-4.5l5-2.813"/><path fill="#fff" d="m21 18.75l-3 1.75v7l3 1.75L24 31l3-1.75l3-1.75v-7l-3-1.75L24 17l-3 1.75Z"/><path d="M24 17v-7m6 17l7 4m-19-4l-7 4"/><circle cx="24" cy="7" r="3" fill="#fff"/><circle cx="8" cy="33" r="3" fill="#fff"/><circle cx="40" cy="33" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlockchain0)"/>`
	blocksAndArrowsInnerSVG                            = `<mask id="ipSBlocksAndArrows0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M20 6H6v14h14V6Zm0 22H6v14h14V28ZM42 6H28v14h14V6Z"/><path d="m28 28l14 14M28 28h14h-14Zm0 0v14v-14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlocksAndArrows0)"/>`
	bloomInnerSVG                                      = `<mask id="ipSBloom0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m6 32l12 10m24-10L30 42m-6-10v12"/><path fill="#fff" d="m17 11l7-7l7 7l7-1s1 4.239 1 7c0 10-8.5 15-15 15S9 27 9 17c0-2.761 1-7 1-7l7 1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBloom0)"/>`
	blossomInnerSVG                                    = `<mask id="ipSBlossom0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M23.266 6.008c7.734.451 7.955 8.363 7.019 11.615c9.358-2.974 12.945 1.24 13.57 3.717c1.122 5.947-4.524 7.744-7.487 7.899c5.989 7.433 3.12 11.15.936 12.08c-6.738 1.858-10.606-2.943-11.698-5.576c-2.995 6.319-8.11 6.66-10.294 6.04c-6.364-1.858-3.587-8.518-1.404-11.615c-8.984-1.487-10.294-5.885-9.826-7.898c1.497-7.434 9.358-6.195 13.101-4.647c-1.497-9.664 3.432-11.77 6.083-11.615Z"/><path stroke="#000" d="m25 26l-4 5m-2-6l6 1m-1-7l1 7m6-2l-6 2m0 0l5 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBlossom0)"/>`
	boilerInnerSVG                                     = `<mask id="ipSBoiler0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="38" height="8" x="5" y="6" fill="#fff" rx="2"/><path d="M8 14v26a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V14"/><path fill="#fff" stroke-linecap="round" d="M31 29.067C31 32.896 27.866 36 24 36s-7-3.104-7-6.933c0-3.83 2.692-5.334 3.77-9.067c4.307 1.867 4.307 7.467 4.307 7.467s1.077-3.2 4.308-4C29.654 26.4 31 27.432 31 29.067Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoiler0)"/>`
	boltOneInnerSVG                                    = `<mask id="ipSBoltOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M12 12.28a.28.28 0 0 1 .28-.28h23.44a.28.28 0 0 1 .28.28V24c0 6.627-5.373 12-12 12s-12-5.373-12-12V12.28Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M20 12V4m8 8V4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 27h4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M24 36v5a3 3 0 0 0 3 3h11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoltOne0)"/>`
	bookInnerSVG                                       = `<mask id="ipSBook0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 40V10c0-3.314 2.865-6 6.4-6H40v32H14.4c-5.038 0-6.4.684-6.4 4Z"/><path stroke-linecap="round" d="M12 44h28v-8H12a4 4 0 0 0 0 8Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBook0)"/>`
	bookOneInnerSVG                                    = `<mask id="ipSBookOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M7 37V11a6 6 0 0 1 6-6h22v26H13c-3.3 0-6 2.684-6 6Z"/><path stroke-linecap="round" d="M35 31H13a6 6 0 0 0 0 12h28V7M14 37h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookOne0)"/>`
	bookOpenInnerSVG                                   = `<mask id="ipSBookOpen0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5 7h11a8 8 0 0 1 8 8v27a6 6 0 0 0-6-6H5V7Zm38 0H32a8 8 0 0 0-8 8v27a6 6 0 0 1 6-6h13V7Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookOpen0)"/>`
	bookmarkInnerSVG                                   = `<mask id="ipSBookmark0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v36a2 2 0 0 1-2 2H10Z"/><path fill="#000" fill-rule="evenodd" stroke="#000" stroke-linecap="round" d="M21 22V4h12v18l-6-6.273L21 22Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M10 4h28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookmark0)"/>`
	bookmarkOneInnerSVG                                = `<mask id="ipSBookmarkOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M34 10V4H8v34l6-3"/><path fill="#fff" d="M14 44V10h26v34l-13-6.273L14 44Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookmarkOne0)"/>`
	bookmarkThreeInnerSVG                              = `<mask id="ipSBookmarkThree0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 9a3 3 0 0 1 3-3h31v36H10a3 3 0 0 1-3-3V9Z"/><path stroke="#000" stroke-linecap="round" d="M7 34h34"/><path stroke="#fff" stroke-linecap="round" d="M7 30v8m34-8v8"/><path fill="#000" stroke="#000" d="M15 6h10v20l-5-4l-5 4V6Z"/><path stroke="#fff" stroke-linecap="round" d="M11 6h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookmarkThree0)"/>`
	bookshelfInnerSVG                                  = `<mask id="ipSBookshelf0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 6h34s4 2 4 7s-4 7-4 7H5s4-2 4-7s-4-7-4-7Zm38 22H9s-4 2-4 7s4 7 4 7h34s-4-2-4-7s4-7 4-7Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBookshelf0)"/>`
	boosterCarSeatInnerSVG                             = `<mask id="ipSBoosterCarSeat0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M32 15H16c0 3.47-5.78 7.903-9.317 10.291C5.123 26.345 4 27 4 27s1 3 3.5 8c1.894 3.788 4.075 5.854 5.02 6.633c.306.25.69.367 1.085.367h21.693c.455 0 .894-.154 1.217-.474c.86-.852 2.672-2.9 4.485-6.526c2.5-5 3-8 3-8s-1.278-.639-3-1.709c-3.554-2.207-9-6.25-9-10.291Z"/><path stroke="#fff" d="m32 15l2-9h8m-26 9l-2-9H6"/><path stroke="#000" d="M4 27s2 4 8 4h24c5 0 8-4 8-4"/><path stroke="#fff" d="M7.5 35C5 30 4 27 4 27s1.124-.655 2.683-1.709M41 35c2.5-5 3-8 3-8s-1.278-.639-3-1.709"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoosterCarSeat0)"/>`
	boothInnerSVG                                      = `<mask id="ipSBooth0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 5h40v8l-1.398.84a7 7 0 0 1-7.203 0L34 13l-1.398.84a7 7 0 0 1-7.203 0L24 13l-1.398.84a7 7 0 0 1-7.204 0L14 13l-1.399.84a7 7 0 0 1-7.202 0L4 13V5Z"/><path d="M6 25h36v18H6zm3-9v9m30-9v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBooth0)"/>`
	bottleInnerSVG                                     = `<mask id="ipSBottle0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M36 18H12v26h24V18Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19.894 11h8.212a4 4 0 0 1 3.8 2.75L33.303 18H14.695l1.4-4.25a4 4 0 0 1 3.8-2.75Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M21 11V7a3 3 0 1 1 6 0v4"/><path stroke="#000" stroke-linecap="round" d="M18.5 26v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBottle0)"/>`
	bottleOneInnerSVG                                  = `<mask id="ipSBottleOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M15 30a9 9 0 0 1 1.8-5.4l3.6-4.8A3 3 0 0 0 21 18V4h6v14a3 3 0 0 0 .6 1.8l3.6 4.8A9 9 0 0 1 33 30v12a2 2 0 0 1-2 2H17a2 2 0 0 1-2-2V30Z"/><path stroke="#000" d="M21 10h6"/><path stroke="#fff" d="M21 12V8m6 4V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBottleOne0)"/>`
	bottleThreeInnerSVG                                = `<mask id="ipSBottleThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M21.188 10h5.625L33 21.18V44H15V21.18L21.188 10Z"/><path fill="#fff" d="M20 4h8v6h-8z"/><rect width="6" height="12" x="21" y="23" fill="#fff" rx="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBottleThree0)"/>`
	bottleTwoInnerSVG                                  = `<mask id="ipSBottleTwo0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M15 21.56a9.82 9.82 0 0 1 4.767-8.42a.479.479 0 0 0 .233-.411V4h8v8.729c0 .168.088.324.233.41A9.82 9.82 0 0 1 33 21.56V42a2 2 0 0 1-2 2H17a2 2 0 0 1-2-2V21.56Z"/><path stroke="#000" d="M20 10h8"/><path stroke="#000" stroke-linejoin="round" d="M33 23h-9v15h9"/><path stroke="#fff" stroke-linejoin="round" d="M33 40V21m-13-9V8m8 4V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBottleTwo0)"/>`
	bottomBarInnerSVG                                  = `<mask id="ipSBottomBar0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 32h36"/><path stroke="#fff" stroke-linecap="round" d="M6 29v6m36-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBottomBar0)"/>`
	bottomBarOneInnerSVG                               = `<mask id="ipSBottomBarOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13.777 20h4s7 7.28 7 14s-6 10-6 10h-6s-6-3.28-6-10c0-6.72 7-14 7-14Zm2-16c2.084 0 5 1.52 5 6s-3.333 10-3.333 10h-3.333s-3.334-5.52-3.334-10s2.917-6 5-6Zm16 16h4s7 7.28 7 14s-6 10-6 10h-6s-6-3.28-6-10c0-6.72 7-14 7-14Zm2-16c2.084 0 5 1.52 5 6s-3.333 10-3.333 10h-3.333s-3.334-5.52-3.334-10s2.917-6 5-6Z"/></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSBottomBarOne0)"/>`
	bowInnerSVG                                        = `<mask id="ipSBow0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6.544 14.262C11.403 15.23 16.603 18.754 20 23c0 10.63-7.356 13.237-12.771 13.834c-1.478.163-2.451-1.401-1.853-2.763C6.826 30.773 8 27.3 8 25c0-2.391-1.906-5.418-3.186-8.573c-.49-1.206.453-2.418 1.73-2.165Zm34.912 0C36.597 15.23 31.397 18.754 28 23c0 10.63 7.356 13.237 12.771 13.834c1.478.163 2.451-1.401 1.853-2.763C41.174 30.773 40 27.3 40 25c0-2.391 1.906-5.418 3.186-8.573c.49-1.206-.453-2.418-1.73-2.165Z"/><path fill="#fff" d="M20 21h8v8h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBow0)"/>`
	bowlInnerSVG                                       = `<mask id="ipSBowl0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M32 44s0-3.864.002-3.872a17.964 17.964 0 0 0 4.726-3.4A17.943 17.943 0 0 0 42 24H6c0 4.97 2.015 9.47 5.272 12.728a18.085 18.085 0 0 0 4.741 3.407L16 44h16Z"/><path d="M24 18.008V8m12 10.008V12m-24 6.008V12m28-4a4 4 0 0 0-4 4m-8-8a4 4 0 0 0-4 4m-8 0a4 4 0 0 0-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBowl0)"/>`
	bowlOneInnerSVG                                    = `<mask id="ipSBowlOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M24 39c9.389 0 17-7.059 17-17H7c0 9.941 7.611 17 17 17Z"/><path stroke-linejoin="round" d="m18 38l-2 6h16l-2-6"/><path d="M12 10v4m24-4v4M24 5v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBowlOne0)"/>`
	boxInnerSVG                                        = `<mask id="ipSBox0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="30" x="6" y="12" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="M17.95 24.008h12"/><path stroke="#fff" stroke-linecap="round" d="m6 13l7-8h22l7 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBox0)"/>`
	boxingInnerSVG                                     = `<mask id="ipSBoxing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" stroke-miterlimit="2" d="M38 36v6a2 2 0 0 1-2 2H17a2 2 0 0 1-2-2v-6"/><path fill="#fff" stroke-linejoin="round" stroke-miterlimit="2" d="M11 15v-5a6 6 0 0 1 6-6h21a6 6 0 0 1 6 6v20c0 3.314-2.68 6-5.994 6H15C8 36 4 28 4 23v-8h7Z"/><path d="M11 14v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoxing0)"/>`
	boyInnerSVG                                        = `<mask id="ipSBoy0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="10" r="6" fill="#fff"/><path fill="#fff" d="M30 36H18l-8-20h28l-8 20Z"/><path d="M27 36v8m-6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoy0)"/>`
	boyOneInnerSVG                                     = `<mask id="ipSBoyOne0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7"/><path d="M27 44h-6L8 24h32L27 44Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoyOne0)"/>`
	boyStrollerInnerSVG                                = `<mask id="ipSBoyStroller0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M40 24H12l2.5 10H36l4-10Z"/><path d="m12 24l-4-9H3.5"/><circle cx="20" cy="41" r="3" fill="#fff"/><circle cx="31" cy="41" r="3" fill="#fff"/><path fill="#fff" d="m23 8l9 16h8l4-11c-2.333-3-7-9-10-9c-4 0-8.333 2.667-11 4Z"/><path d="m29 5l4 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoyStroller0)"/>`
	boyTwoInnerSVG                                     = `<mask id="ipSBoyTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="10" r="6" fill="#fff"/><path d="M31 44v-9l5-3l-4-13s-4-3-8-3s-8 3-8 3l-4 12l5 4v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBoyTwo0)"/>`
	brainInnerSVG                                      = `<mask id="ipSBrain0"><g fill="none" stroke="#fff"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="4.667" d="M19.036 44c-.98-3.195-2.458-5.578-4.435-7.147c-2.965-2.353-7.676-.89-9.416-3.318c-1.74-2.428 1.219-6.892 2.257-9.526c1.039-2.634-3.98-3.565-3.394-4.313c.39-.499 2.927-1.937 7.609-4.316C12.987 7.794 17.9 4 26.398 4C39.144 4 44 14.806 44 21.68c0 6.872-5.88 14.276-14.256 15.873c-.749 1.09.331 3.24 3.24 6.447"/><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" stroke-width="4" d="M19.5 14.5c-.654 2.534-.46 4.314.583 5.339c1.042 1.024 2.818 1.695 5.328 2.01c-.57 3.269.125 4.802 2.083 4.6c1.958-.201 3.135-1.015 3.53-2.44c3.06.86 4.719.14 4.976-2.16c.385-3.45-1.475-6.201-2.238-6.201c-.762 0-2.738-.093-2.738-1.148s-2.308-1.65-4.391-1.65s-.83-1.405-3.69-.85c-1.907.37-3.055 1.203-3.443 2.5Z" clip-rule="evenodd"/><path stroke-linecap="round" stroke-width="4" d="M30.5 25.5c-1.017.631-2.412 1.68-3 2.5c-1.469 2.05-2.66 3.298-2.92 4.608"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBrain0)"/>`
	brakePadsInnerSVG                                  = `<mask id="ipSBrakePads0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 40c8.837 0 16-7.163 16-16S32.837 8 24 8S8 15.163 8 24s7.163 16 16 16Z"/><path fill="#fff" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0-24a20 20 0 0 1 20 20h-7.994A12.006 12.006 0 0 0 24 11.994V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBrakePads0)"/>`
	branchInnerSVG                                     = `<mask id="ipSBranch0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M40 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM9 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M9 12v24v-11.992h27"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBranch0)"/>`
	branchOneInnerSVG                                  = `<mask id="ipSBranchOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 33V15"/><path fill="#fff" d="M10 9h28v6H10z"/><path d="m8 32l6-7h19.974L40 32"/><path fill="#fff" d="M4 33h8v8H4zm16 0h8v8h-8zm16 0h8v8h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBranchOne0)"/>`
	branchTwoInnerSVG                                  = `<mask id="ipSBranchTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M36 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm-22 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z" clip-rule="evenodd"/><path d="M14 12v24v-3c0-8 22-9 22-17v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBranchTwo0)"/>`
	breadInnerSVG                                      = `<mask id="ipSBread0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 32.083c0-1.202.266-2.395.971-3.368C7.045 25.85 12.671 20 24 20c11.33 0 16.955 5.851 19.029 8.715c.705.973.971 2.166.971 3.368A7.917 7.917 0 0 1 36.083 40H11.917A7.917 7.917 0 0 1 4 32.083Z"/><path stroke="#fff" d="M12 9v4"/><path stroke="#000" d="M14 22v4"/><path stroke="#fff" d="M36 9v4"/><path stroke="#000" d="M34 22v4"/><path stroke="#fff" d="M24 7v6"/><path stroke="#000" d="M24 20v8"/><path stroke="#fff" d="M40 25.443C36.906 22.78 31.808 20 24 20s-12.906 2.779-16 5.443"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBread0)"/>`
	breadMachineInnerSVG                               = `<mask id="ipSBreadMachine0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M7 27a8 8 0 0 1 8-8h18a8 8 0 0 1 8 8v8a4 4 0 0 1-4 4H11a4 4 0 0 1-4-4v-8Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M34 19v-7c5 0 5-7 0-7H14c-5 0-5 7 0 7v7m8-8l-2 2m8-2l-2 2"/><circle cx="24" cy="29" r="4" fill="#000" stroke="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M15 39v4m18-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBreadMachine0)"/>`
	breadOneInnerSVG                                   = `<mask id="ipSBreadOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M9 26s8-12 13-18c3.13-3.757 9-5.25 14-3s7 7 5 11s-10 19-10 19"/><path fill="#fff" stroke="#fff" d="M31 33.188c0 3.152-1.756 5.97-4.514 7.838c-2.166 1.468-4.95.841-7.986.841c-3.201 0-6.122.528-8.333-1.085C7.609 38.917 6 36.206 6 33.188C6 26.812 11.596 23 18.5 23S31 27.561 31 33.188Z"/><path fill="#000" stroke="#000" d="M23 33.217c0 .996-.632 1.885-1.625 2.476c-.78.463-1.782.265-2.875.265c-1.152 0-2.204.167-3-.343c-.92-.589-1.5-1.445-1.5-2.398C14 31.204 16.015 30 18.5 30s4.5 1.44 4.5 3.217Z"/><path stroke="#fff" d="M15 18s3.5-1 8 0m-3-7s3.5-1.5 7 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBreadOne0)"/>`
	breastPumpInnerSVG                                 = `<mask id="ipSBreastPump0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M35 25c0-4-6-6-6-6v-5H17v5s-6 2-6 6v19h24V25Z"/><path d="m20 4l-7 6m10 4l-6-7m9 1h9v7l6 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBreastPump0)"/>`
	bridgeOneInnerSVG                                  = `<mask id="ipSBridgeOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 19v14h8c0-6.627 5.373-12 12-12s12 5.373 12 12h8V19s-12.035-4-20-4s-20 4-20 4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBridgeOne0)"/>`
	briefcaseInnerSVG                                  = `<mask id="ipSBriefcase0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M32 16c0-6.075-3.582-12-8-12s-8 5.925-8 12"/><path fill="#fff" d="M9 16h30l1 12H27v-3h-6v3H8l1-12Z"/><path d="M8 28L6 42h36l-2-14"/><path d="M21 25h6v6h-6v-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBriefcase0)"/>`
	brightnessInnerSVG                                 = `<mask id="ipSBrightness0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24.02 35.353c6.076 0 11-4.924 11-11c0-6.075-4.924-11-11-11c-6.075 0-11 4.925-11 11c0 6.076 4.925 11 11 11Z"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m38.96 9.01l-2.46 2.474M11.067 36.745l-2.046 2.059M24 41.353v3m20-20.999h-4m-2.468 12.982L40 38.804"/><path fill="#000" fill-rule="evenodd" d="M24.02 17.354a7 7 0 1 0 0 14" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M4 24.354h4M10.044 9.01l2.053 2.053M24 3.354v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBrightness0)"/>`
	bringForwardInnerSVG                               = `<mask id="ipSBringForward0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 34h36v8H6zm0-14h36v8H6z"/><path stroke-linecap="round" d="m30 12l-6-6l-6 6v0m6 16v6m0-28v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBringForward0)"/>`
	bringToFrontInnerSVG                               = `<mask id="ipSBringToFront0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M41 18H19a1 1 0 0 0-1 1v22a1 1 0 0 0 1 1h22a1 1 0 0 0 1-1V19a1 1 0 0 0-1-1Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M9.97 6H6v4.034M9.997 30H6v-3.988M26.002 6H30v4.015M16.028 6h3.98M6 16v4m24-4v2.007"/><path stroke-linecap="round" d="M15.992 30H18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBringToFront0)"/>`
	bringToFrontOneInnerSVG                            = `<mask id="ipSBringToFrontOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M14 21v13h13m-6-20h13v13"/><path fill="#fff" d="M5 21V5h16v16H5Zm22 22V27h16v16H27Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBringToFrontOne0)"/>`
	broadcastInnerSVG                                  = `<mask id="ipSBroadcast0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 28.63a4.538 4.538 0 0 0 4.546-4.532A4.538 4.538 0 0 0 24 19.567a4.538 4.538 0 0 0-4.545 4.53A4.538 4.538 0 0 0 24 28.63Z"/><path stroke-linecap="round" d="M16 15c-5.333 4.97-5.333 13.03 0 18m16 0c5.333-4.97 5.333-13.03 0-18M9.858 10c-7.81 7.786-7.81 20.41 0 28.196m28.284 0c7.81-7.786 7.81-20.41 0-28.196"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBroadcast0)"/>`
	broadcastOneInnerSVG                               = `<mask id="ipSBroadcastOne0"><g fill="none" stroke="#fff"><path fill="#fff" stroke-width="4" d="M24 15a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-width="4" d="M24 15v8m6 0v10M18 23v10"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 33V23l34 .013V33"/><path stroke-linecap="round" stroke-width="5" d="M41 41v1M7 41v1m11-1v1m12-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBroadcastOne0)"/>`
	broadcastRadioInnerSVG                             = `<mask id="ipSBroadcastRadio0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 12h40v28H4z"/><path fill="#000" stroke="#000" d="M31 31a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke="#000" stroke-linecap="round" d="M12 22h6m-6 8h6"/><path stroke="#fff" stroke-linecap="round" d="M8 40v4m32-4v4M8 12l28-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBroadcastRadio0)"/>`
	browserInnerSVG                                    = `<mask id="ipSBrowser0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 18v22a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V18"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M6 8a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2v10H6V8Z"/><path fill="#000" fill-rule="evenodd" d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm6 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm6 0a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBrowser0)"/>`
	browserSafariInnerSVG                              = `<mask id="ipSBrowserSafari0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#fff" stroke="#000" stroke-linejoin="round" stroke-width="4" d="m15 33l4.5-13.5L33 15l-4.5 13.5L15 33Z"/><path fill="#000" fill-rule="evenodd" d="M24 26a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBrowserSafari0)"/>`
	bubbleChartInnerSVG                                = `<mask id="ipSBubbleChart0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="34" cy="14" r="9"/><circle cx="12" cy="25" r="7"/><circle cx="29" cy="37" r="5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBubbleChart0)"/>`
	bugInnerSVG                                        = `<mask id="ipSBug0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 42c12 0 14-10.468 14-14V14H10v14c0 3.45 2 14 14 14Z"/><path stroke="#fff" stroke-linecap="round" d="m4 8l6 6m34-6l-6 6M4 27h6m34 0h-6M7 44l6-6m28 6l-6-6"/><path stroke="#000" stroke-linecap="round" d="M24 42V14"/><path stroke="#fff" stroke-linecap="round" d="M14.92 39.04C17.002 40.784 19.924 42 24 42c4.111 0 7.049-1.229 9.134-2.986"/><path fill="#fff" stroke="#fff" d="M32 12.333C32 7.731 28.418 4 24 4s-8 3.731-8 8.333V14h16v-1.667Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBug0)"/>`
	buildingFourInnerSVG                               = `<mask id="ipSBuildingFour0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="m17 14l27 10v20H17V14Z" clip-rule="evenodd"/><path stroke="#fff" d="M17 14L4 24v20h13"/><path stroke="#000" d="M35 44V32l-9-3v15"/><path stroke="#fff" d="M44 44H17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBuildingFour0)"/>`
	buildingOneInnerSVG                                = `<mask id="ipSBuildingOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M11 14L25 4v40H11V14Z" clip-rule="evenodd"/><path d="m25 13l14 10v21M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBuildingOne0)"/>`
	buildingThreeInnerSVG                              = `<mask id="ipSBuildingThree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="m24 8l20 13v23H4V21L24 8Z" clip-rule="evenodd"/><path stroke="#000" d="M20 44V23l-8 5v16m16 0V23l8 5v16"/><path stroke="#fff" d="M41 44H8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBuildingThree0)"/>`
	buildingTwoInnerSVG                                = `<mask id="ipSBuildingTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m21 13l-10 7v24"/><path fill="#fff" fill-rule="evenodd" d="m21 4l10 7v13l7 5v15H21V4Z" clip-rule="evenodd"/><path d="M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBuildingTwo0)"/>`
	busInnerSVG                                        = `<mask id="ipSBus0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M6.012 34.005V8.036a2 2 0 0 1 2-2H40a2 2 0 0 1 2 2v25.969a3 3 0 0 1-3 3h-1.995V38a4 4 0 1 1-8 0v-.995h-9.997v.997a3.998 3.998 0 0 1-7.997 0v-.997H9.012a3 3 0 0 1-3-3Z"/><path stroke-linecap="round" d="M42 23H6"/><path fill="#fff" stroke-linecap="round" d="M34 13H14v10h20V13Z"/><path stroke-linecap="round" d="M14 30h2m16 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBus0)"/>`
	busOneInnerSVG                                     = `<mask id="ipSBusOne0"><g fill="none"><rect width="32" height="34" x="8" y="5" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 39v4m20-4v4"/><circle cx="34" cy="33" r="2" fill="#000"/><circle cx="14" cy="33" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 23h32"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 21v4m32-4v4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 13h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBusOne0)"/>`
	busTwoInnerSVG                                     = `<mask id="ipSBusTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M4 6a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v32a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6Z" clip-rule="evenodd"/><path stroke="#fff" d="M16 40H8v4h8v-4Zm24 0h-8v4h8v-4Z"/><path stroke="#000" d="M21 16h6M10 34h2m7 0h10M4 25h40M4 10h40m-8 24h2"/><path stroke="#fff" d="M4 6v8m40-8v8M4 21v8m40-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBusTwo0)"/>`
	butterflyInnerSVG                                  = `<mask id="ipSButterfly0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M5 12c3.664-4.294 14.081 6.82 19 13c4.92-6.18 15.337-17.294 19-13c.679.65 1.443 2.877-1 6c-.678.976-1.814 3.706-1 8c0 1.139-1.115 2.952-6 1c2.375 1.627 6.85 6.096 4 10c-2.714 3.416-9.035 7.457-13-2l-2-4l-2 4c-3.964 9.457-10.286 5.416-13 2c-2.85-3.904 1.626-8.373 4-10c-4.885 1.952-6 .139-6-1c.814-4.294-.321-7.024-1-8c-2.442-3.123-1.678-5.35-1-6Z"/><path d="M24.032 23C23.534 17.864 28.913 7 33 7"/><path d="M23.968 23C24.466 17.864 19.087 7 15 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSButterfly0)"/>`
	buyInnerSVG                                        = `<mask id="ipSBuy0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M6 15h36l-2 27H8L6 15Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M16 19V6h16v13"/><path stroke="#000" stroke-linecap="round" d="M16 34h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBuy0)"/>`
	bydesignInnerSVG                                   = `<mask id="ipSBydesign0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 7.282L19.556 4v12.718L8 20V7.282Zm0 18.393l11.556-3.282v12.718L8 38.393V25.675Zm16.889-4.599l11.555-2.854v22.924L24.89 44V21.076Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBydesign0)"/>`
	bytedanceInnerSVG                                  = `<mask id="ipSBytedance0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m5 7l5 2v28l-5 2V7Zm11 16l5 2v12l-5 2V23Zm11-2l5-2v16l-5-2V21ZM38 9l5 2v26l-5 2V9Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBytedance0)"/>`
	bytedanceMiniAppInnerSVG                           = `<mask id="ipSBytedanceMiniApp0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" d="m26.122 21.879l-4.243 4.242m10.606.707l1.414-1.414a4 4 0 0 0 0-5.657L28.242 14.1a4 4 0 0 0-5.656 0l-1.415 1.415m5.657 16.97L25.414 33.9a4 4 0 0 1-5.657 0L14.1 28.243a4 4 0 0 1 0-5.657l1.415-1.414"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSBytedanceMiniApp0)"/>`
	cableCarInnerSVG                                   = `<mask id="ipSCableCar0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="bevel" d="M13.28 42a2 2 0 0 1-1.816-1.162l-5.077-11a2 2 0 0 1 0-1.676l5.077-11A2 2 0 0 1 13.28 16h21.44a2 2 0 0 1 1.816 1.162l5.077 11a2 2 0 0 1 0 1.676l-5.077 11A2 2 0 0 1 34.72 42H13.28Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M9 23h9v10H8m31-10H25v9h15"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M38 4s-9.5 3.5-17.436 4.394C12.628 9.288 8 9 8 9m18-1v8l-9-7m-6.385 10l-4.228 9.162a2 2 0 0 0 0 1.676L9 35.5"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="bevel" d="m37.385 19l4.228 9.162a2 2 0 0 1 0 1.676L39 35.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCableCar0)"/>`
	cactusInnerSVG                                     = `<mask id="ipSCactus0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 43h32M6 16c0 5.5.5 14 10 14m26-16c0 5 0 20-10 20"/><path fill="#fff" d="M24 5a8 8 0 0 0-8 8v30h16V13a8 8 0 0 0-8-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCactus0)"/>`
	cakeInnerSVG                                       = `<mask id="ipSCake0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 12v5M8 27v13a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V27"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 21.97A4.97 4.97 0 0 1 8.97 17h30.06A4.969 4.969 0 0 1 44 21.97v.278a4.557 4.557 0 0 1-2.864 4.231a3.038 3.038 0 0 1-2.544-.132l-.342-.18a3.4 3.4 0 0 0-3.167 0a3.4 3.4 0 0 1-3.166 0a3.4 3.4 0 0 0-3.167 0a3.4 3.4 0 0 1-3.167 0a3.4 3.4 0 0 0-3.166 0a3.4 3.4 0 0 1-3.167 0a3.4 3.4 0 0 0-3.167 0a3.4 3.4 0 0 1-3.166 0a3.4 3.4 0 0 0-3.167 0l-.342.18a3.038 3.038 0 0 1-2.543.132A4.557 4.557 0 0 1 4 22.25v-.28Z"/><path d="M27 8c-.8-4-3-4-3-4s-2.2 0-3 4c-1 5 7 5 6 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCake0)"/>`
	cakeFiveInnerSVG                                   = `<mask id="ipSCakeFive0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M9 27h30l-4.688 17H13.689L9 27Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M39 27H9c0-5.5 5.5-8 5.5-8c0-2 2-8 9.5-8s9.5 6 9.5 8c0 0 5.5 2.5 5.5 8Z"/><path stroke-linecap="round" d="M6 27h36"/><path d="M28 12a4 4 0 0 0-8 0"/><path stroke-linecap="round" d="m24 8l4-4"/><path d="M20 27v17m8-17v17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCakeFive0)"/>`
	cakeFourInnerSVG                                   = `<mask id="ipSCakeFour0"><g fill="none" stroke="#fff" stroke-width="4"><path d="m6 25l5.171 15.628A2 2 0 0 0 13.07 42h21.86a2 2 0 0 0 1.899-1.372L42 25"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M11.407 25.123h-5.09a.312.312 0 0 1-.313-.318C6.164 17.782 11.634 11.885 19 10h10c7.077 2.036 12.823 7.958 12.996 14.806a.31.31 0 0 1-.313.317h-5.09a9.56 9.56 0 0 0-6.297 2.366a9.56 9.56 0 0 1-12.592 0a9.56 9.56 0 0 0-6.297-2.366Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M19.1 10a5 5 0 1 1 9.8 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCakeFour0)"/>`
	cakeOneInnerSVG                                    = `<mask id="ipSCakeOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M27 14L9 21.9h30L34 15"/><circle cx="31" cy="13" r="4" fill="#000"/><path stroke-linecap="round" d="m33 9l2-5"/><path d="M9.5 26.957c-.602.3-1.162.62-1.678.956C5.418 29.481 4 31.412 4 33.5c0 5.247 8.954 9.5 20 9.5s20-4.253 20-9.5c0-2.14-1.488-4.113-4-5.701"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M9 22h30v12H9z"/><path d="M9 22h31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCakeOne0)"/>`
	cakeThreeInnerSVG                                  = `<mask id="ipSCakeThree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 34V16a2 2 0 0 0-2-2H11a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h26a2 2 0 0 0 2-2Z"/><path stroke="#fff" d="M6 36h36M6 42h36"/><path stroke="#000" d="M9 21h6v5h6v-5h6v8h6v-8h6"/><path stroke="#fff" d="M9 23v-4m30 4v-4m-6-5V8m-9 6V4m-9 10V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCakeThree0)"/>`
	calculatorInnerSVG                                 = `<mask id="ipSCalculator0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M40 4H8a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path fill="#000" stroke="#000" d="M35 10H13v9h22v-9Z"/><path stroke="#000" stroke-linecap="round" d="m12 28l7 7m0-7l-7 7m16 0h8m-8-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalculator0)"/>`
	calculatorOneInnerSVG                              = `<mask id="ipSCalculatorOne0"><g fill="none"><rect width="32" height="40" x="8" y="4" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 11h20v9H14z"/><circle cx="17" cy="26" r="2" fill="#fff"/><circle cx="17" cy="32" r="2" fill="#fff"/><circle cx="17" cy="38" r="2" fill="#fff"/><circle cx="24" cy="26" r="2" fill="#fff"/><circle cx="24" cy="32" r="2" fill="#fff"/><circle cx="24" cy="38" r="2" fill="#fff"/><circle cx="31" cy="26" r="2" fill="#fff"/><circle cx="31" cy="32" r="2" fill="#fff"/><circle cx="31" cy="38" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalculatorOne0)"/>`
	calendarInnerSVG                                   = `<mask id="ipSCalendar0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 19h38v21a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V19Z"/><path stroke="#fff" d="M5 9a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v10H5V9Z"/><path stroke="#fff" stroke-linecap="round" d="M16 4v8m16-8v8"/><path stroke="#000" stroke-linecap="round" d="M28 34h6m-20 0h6m8-8h6m-20 0h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalendar0)"/>`
	calendarDotInnerSVG                                = `<mask id="ipSCalendarDot0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="40" x="4" y="4" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M4 14h40"/><path stroke="#fff" d="M44 11v12"/><path stroke="#000" d="M12 22h4m6 0h4m6 0h4m-24 7h4m6 0h4m6 0h4m-24 7h4m6 0h4m6 0h4"/><path stroke="#fff" d="M4 11v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalendarDot0)"/>`
	calendarThirtyInnerSVG                             = `<mask id="ipSCalendarThirty0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="40" x="4" y="4" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M4 14h40"/><path stroke="#fff" d="M4 11v12m40-12v12"/><path stroke="#000" d="M28 22v14h8V22h-8Z" clip-rule="evenodd"/><path stroke="#000" d="M12 22h8v14h-8m8-7h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalendarThirty0)"/>`
	calendarThirtyTwoInnerSVG                          = `<mask id="ipSCalendarThirtyTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 8h40v36H4z"/><path stroke="#000" stroke-linecap="round" d="M28 20v14h8V20h-8Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M17 4v8m14-8v8"/><path stroke="#000" stroke-linecap="round" d="M12 20h8v14h-8m8-7h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalendarThirtyTwo0)"/>`
	calendarThreeInnerSVG                              = `<mask id="ipSCalendarThree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="36" x="4" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M4 20h40M4 32h40"/><path stroke="#fff" d="M17 4v8m14-8v8"/><path stroke="#000" d="M17 20v24m14-24v24"/><path stroke="#fff" d="M44 13v26M4 13v26m10 5h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCalendarThree0)"/>`
	cameraInnerSVG                                     = `<mask id="ipSCamera0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m15 12l3-6h12l3 6H15Z"/><rect width="40" height="30" x="4" y="12" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M24 35a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCamera0)"/>`
	cameraFiveInnerSVG                                 = `<mask id="ipSCameraFive0"><g fill="none" stroke-width="4"><circle cx="24" cy="21" r="16" fill="#fff" stroke="#fff"/><circle cx="24" cy="21" r="7" fill="#000" stroke="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M16 43h16m-8-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCameraFive0)"/>`
	cameraFourInnerSVG                                 = `<mask id="ipSCameraFour0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M8 10v14c0 8.837 7.163 16 16 16s16-7.163 16-16V10"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 10h40"/><path fill="#fff" stroke-linejoin="round" d="M24 30a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCameraFour0)"/>`
	cameraOneInnerSVG                                  = `<mask id="ipSCameraOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="19" r="14"/><circle cx="24" cy="19" r="6" fill="#fff"/><path d="m17 31l-6 12h26l-6-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCameraOne0)"/>`
	cameraThreeInnerSVG                                = `<mask id="ipSCameraThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><rect width="36" height="26" x="6" y="14" stroke-linejoin="round" rx="2"/><path fill="#fff" stroke-linejoin="round" d="m10 14l2.167-6h7.666L22 14H10Z"/><circle cx="29" cy="27" r="7" fill="#fff" stroke-linejoin="round"/><path d="M36 10v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCameraThree0)"/>`
	cameraTwoInnerSVG                                  = `<mask id="ipSCameraTwo0"><g fill="none"><rect width="24" height="32" x="12" y="4" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 36v8m-8 0h16"/><circle cx="24" cy="17" r="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="24" cy="29" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCameraTwo0)"/>`
	campInnerSVG                                       = `<mask id="ipSCamp0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 35h-4L24 6.5L8 35H4"/><path fill="#fff" d="M24 31c-2.761 0-5 3.582-5 8v2h10v-2c0-4.418-2.239-8-5-8Z"/><path d="M4 41h40M15 23s5-4 9-4s9 4 9 4m7-17l-2 3l2 3m0-6l2 3l-2 3M7 17l-1 2l1 2m0-4l1 2l-1 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCamp0)"/>`
	cancerInnerSVG                                     = `<mask id="ipSCancer0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="37" cy="17" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M6 13s6-8 16-8s16 6 16 6"/><circle cx="11" cy="31" r="6" fill="#fff" transform="rotate(-180 11 31)"/><path stroke-linecap="round" stroke-linejoin="round" d="M42 35s-6 8-16 8s-16-6-16-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCancer0)"/>`
	candyInnerSVG                                      = `<mask id="ipSCandy0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="10" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke="#000" stroke-linecap="round" d="M24 28a4 4 0 0 1-4-4"/><path stroke="#fff" stroke-linejoin="round" d="m16.688 16.813l-12.78-1.846L14.842 4.033l1.845 12.78Zm14.625 14.5l12.779 1.845l-10.934 10.934l-1.846-12.78Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCandy0)"/>`
	cannedFruitInnerSVG                                = `<mask id="ipSCannedFruit0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M15 24s-.5 3 1 9"/><path stroke-linecap="round" stroke-linejoin="round" d="M37.567 12C38.727 14.81 40 18.642 40 21.938c0 3.877-1.345 11.412-2.315 16.339c-.544 2.765-2.982 4.723-5.8 4.723H16.042c-2.785 0-5.203-1.914-5.762-4.642C9.314 33.638 8 26.402 8 21.938c0-3.679 1.444-7.306 2.827-9.938"/><path fill="#fff" d="M11.587 6.457a1 1 0 0 1 .84-.457h23.147a1 1 0 0 1 .84.457l2.587 4a1 1 0 0 1-.84 1.543H9.839a1 1 0 0 1-.84-1.543l2.589-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCannedFruit0)"/>`
	capricornusInnerSVG                                = `<mask id="ipSCapricornus0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M18 11a6 6 0 0 0-12 0m12 0v18m12-18a6 6 0 0 0-12 0m12 0v24.75S30 43 22 43"/><circle cx="36" cy="30" r="6" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCapricornus0)"/>`
	carInnerSVG                                        = `<mask id="ipSCar0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M13.5 32a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm21 0a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M7 37a3 3 0 0 1-3-3v-9.29a6 6 0 0 1 3.319-5.368l.682-.34l2.31-9.91A4 4 0 0 1 14.205 6h19.688a4 4 0 0 1 3.904 3.128l2.205 9.873l.68.34A6 6 0 0 1 44 24.709V34a3 3 0 0 1-3 3h-1.997v1A4.001 4.001 0 0 1 31 38v-1H17v1a4 4 0 1 1-8 0v-1H7Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M14 22h20l-1.652-7.434A2 2 0 0 0 30.396 13H17.604a2 2 0 0 0-1.952 1.566L14 22Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCar0)"/>`
	carBatteryInnerSVG                                 = `<mask id="ipSCarBattery0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M43 12H3v30h40V12ZM11 6H3v6h8V6Zm32 0h-8v6h8V6Z"/><path stroke="#000" d="M9 21h6m16 0h6m-25-3v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCarBattery0)"/>`
	cardTwoInnerSVG                                    = `<mask id="ipSCardTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M28 12V4L8 14v28l12-6"/><path fill="#fff" d="M20 16L40 6v28L20 44V16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCardTwo0)"/>`
	carouselInnerSVG                                   = `<mask id="ipSCarousel0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 11a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V11Z"/><path fill="#000" stroke="#000" d="M28 17h-8v12h8V17Z"/><path stroke="#000" stroke-linecap="round" d="M44 17h-8v12h8M4 17h8v12H4"/><path stroke="#fff" stroke-linecap="round" d="M4 13v20m40-20v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCarousel0)"/>`
	carouselVideoInnerSVG                              = `<mask id="ipSCarouselVideo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M11 7h26v34H11z"/><path stroke="#fff" d="M4 11h7v26H4zm33 0h7v26h-7z"/><path fill="#000" stroke="#000" d="m22 20l6 4l-6 4v-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCarouselVideo0)"/>`
	castleInnerSVG                                     = `<mask id="ipSCastle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m4 11l7-7l7 7H4Zm26 0l7-7l7 7H30Z"/><path fill="#fff" d="M44 44V26h-4v-9h-6v9h-6v-5l-4-4l-4 4v5h-6v-9H8v9H4v18h14v-4a6 6 0 0 1 12 0v4h14Z"/><path d="M7 11h8v6H7zm26 0h8v6h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCastle0)"/>`
	categoryManagementInnerSVG                         = `<mask id="ipSCategoryManagement0"><g fill="none"><rect width="36" height="14" x="6" y="28" stroke="#fff" stroke-width="4" rx="4"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M20 7H10a4 4 0 0 0-4 4v6a4 4 0 0 0 4 4h10"/><circle cx="34" cy="14" r="8" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="34" cy="14" r="3" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCategoryManagement0)"/>`
	cattleInnerSVG                                     = `<mask id="ipSCattle0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M11.465 19.923C10.682 12.481 16.517 6 24 6c7.482 0 13.317 6.481 12.534 13.923l-1.488 14.132a11.108 11.108 0 0 1-22.093 0l-1.488-14.132Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 31c3.492-3.125 11.428-7.17 20 0"/><circle cx="19" cy="18" r="2" fill="#000"/><circle cx="21" cy="34" r="2" fill="#000"/><circle cx="29" cy="18" r="2" fill="#000"/><circle cx="27" cy="34" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 7.913c2.167-2 7.392-5.608 10-3c2.608 2.607 0 5-2 5.5c-2.5.625-4.2 2.3-5 3.5m-20.904-6c-2.166-2-7.392-5.608-10-3c-2.608 2.607 0 5 2 5.5c2.5.625 4.2 2.3 5 3.5"/><path stroke="#fff" stroke-width="4" d="m12 25l1 9.5M36 25l-1 9.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCattle0)"/>`
	cautionInnerSVG                                    = `<mask id="ipSCaution0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M24 5L2 43h44L24 5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M24 35v1m0-17l.008 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCaution0)"/>`
	cdInnerSVG                                         = `<mask id="ipSCd0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="24" r="18"/><path stroke-linecap="round" d="M13 24c0-6.075 4.925-11 11-11"/><circle cx="24" cy="24" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCd0)"/>`
	cellInnerSVG                                       = `<mask id="ipSCell0"><g fill="none" stroke-width="4.421"><path stroke="#fff" stroke-linecap="round" d="M28.416 21.847c-.116 2.586.542 4.399 1.974 5.438c2.148 1.56 7.447 1.742 11.644-5.438c4.197-7.181.126-11.082-1.42-11.732c-1.032-.434-2.068-.596-3.11-.488m-6.49 18.379c-1.22 1.414-1.355 3.112-.402 5.094c1.428 2.974 5.087 2.439 6.916 4.916c1.219 1.651 1.68 3.313 1.385 4.984"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M8.504 23.64c2.26 3.02 7.662 3.415 13.996.99c2.564-.981 5.282-2.425 8.005-4.343c2.053-1.447 3.54-2.923 4.587-4.367c3.771-5.204 1.824-9.998 0-11.514c-1.976-1.642-5.77-2.317-12.592.627a48.607 48.607 0 0 0-3.965 1.947c-2.798 1.523-5.101 3.243-6.873 5.02c-4.162 4.175-5.385 8.662-3.158 11.64Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M16.245 8.84c.44 2.949 1.671 5.528 3.697 7.736c2.025 2.209 4.446 3.619 8.058 4.924"/><path stroke="#fff" stroke-linecap="round" d="M9.981 25c-5.825 5.65-7.395 9.929-4.71 12.835c4.028 4.359 7.817-1.208 12.896-1.208c3.385 0 5.997 2.124 7.833 6.373m9.092-27.08c-1.047 1.444-2.534 2.92-4.587 4.367c-2.723 1.918-5.44 3.362-8.005 4.344m0-19.598a48.61 48.61 0 0 0-3.966 1.947c-2.797 1.523-5.1 3.243-6.872 5.02"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCell0)"/>`
	certificateInnerSVG                                = `<mask id="ipSCertificate0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M26 36H6a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2h-8M12 14h24m-24 7h6m-6 7h4"/><path fill="#fff" d="M30 33a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="m30 40l4 2V31.472S32.86 33 30 33c-2.86 0-4-1.5-4-1.5V42l4-2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCertificate0)"/>`
	chafingDishInnerSVG                                = `<mask id="ipSChafingDish0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 42c-9.941 0-18-8.059-18-18S14.059 6 24 6"/><path fill="#fff" d="M24 42c9.941 0 18-8.059 18-18S33.941 6 24 6c0 0-4 2-4 9s8 11 8 18s-4 9-4 9Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M42 20h2v8h-2M6 20H4v8h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChafingDish0)"/>`
	chafingDishOneInnerSVG                             = `<mask id="ipSChafingDishOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 18h36v6a6 6 0 0 1-6 6H12a6 6 0 0 1-6-6v-6Z"/><path d="M40 42H8m5 0l3-12m19 12l-3-12m-2-12L27 4h-6l-3 14m18-7h4M8 11h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChafingDishOne0)"/>`
	chairInnerSVG                                      = `<mask id="ipSChair0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m20 23l-8 21m16-21l8 21M16 34h16"/><path fill="#fff" d="M29.454 23H18.545C15.819 23 14 21.333 14 18.833V12h4V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v6h4v6.833c0 2.5-1.818 4.167-4.546 4.167Z"/><path d="M30 12h8m-20 0h-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChair0)"/>`
	chairOneInnerSVG                                   = `<mask id="ipSChairOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M29.454 23H18.545C15.819 23 14 21.333 14 18.833V12h4V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v6h4v6.833c0 2.5-1.818 4.167-4.546 4.167Z"/><path d="m20 23l-8 21m16-21l8 21m-6-32h8m-20 0h-8m7 19h14m-16 7h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChairOne0)"/>`
	changeDateSortInnerSVG                             = `<mask id="ipSChangeDateSort0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M6 5v25.004h36V5"/><path fill="#fff" d="M15 23h4.002l13.85-14.143L28.993 5L15 19.143V23Z"/><path stroke-linecap="round" d="m30 37l-6 6l-6-6m6-7v13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChangeDateSort0)"/>`
	chargingTreasureInnerSVG                           = `<mask id="ipSChargingTreasure0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M9.975 8.557A3 3 0 0 1 12.942 6h23.036a3 3 0 0 1 2.979 2.646l3.145 26.5a3 3 0 0 1-2.98 3.354H8.983a3 3 0 0 1-2.967-3.443l3.96-26.5Z"/><rect width="36" height="12" x="6" y="30" fill="#fff" stroke="#fff" stroke-width="4" rx="6"/><rect width="4" height="4" x="19" y="34" fill="#000" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M29 36h6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 12h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChargingTreasure0)"/>`
	chartGraphInnerSVG                                 = `<mask id="ipSChartGraph0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 6h14v9H17zM6 33h14v9H6zm22 0h14v9H28z"/><path stroke-linecap="round" d="M24 16v8m-11 9v-9h22v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartGraph0)"/>`
	chartHistogramTwoInnerSVG                          = `<mask id="ipSChartHistogramTwo0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M4 42h40H4Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 42h40"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M8 28h6v14H8zm13-10h6v24h-6zM34 6h6v36h-6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartHistogramTwo0)"/>`
	chartLineAreaInnerSVG                              = `<mask id="ipSChartLineArea0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M6 6v36h36"/><path fill="#fff" d="m14 34l8-16l10 9L42 6v28H14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartLineArea0)"/>`
	chartPieInnerSVG                                   = `<mask id="ipSChartPie0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 24c0 11.046-8.954 20-20 20S4 35.046 4 24S12.954 4 24 4v20h20Z"/><path d="M43.084 18H30V4.916A20.047 20.047 0 0 1 43.084 18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartPie0)"/>`
	chartPieOneInnerSVG                                = `<mask id="ipSChartPieOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M5 24c0 10.493 8.507 19 19 19V26a2 2 0 0 1 2-2h17c0-10.493-8.507-19-19-19S5 13.507 5 24Z"/><path d="M30 30h12v12H30z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartPieOne0)"/>`
	chartProportionInnerSVG                            = `<mask id="ipSChartProportion0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M16.345 5.518a20.029 20.029 0 0 0-6.487 4.34A19.938 19.938 0 0 0 4 24c0 11.046 8.954 20 20 20v0a19.937 19.937 0 0 0 14.142-5.858a20.026 20.026 0 0 0 4.34-6.487"/><path fill="#fff" d="M24 24h20c0-11.046-8.954-20-20-20v20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartProportion0)"/>`
	chartRingInnerSVG                                  = `<mask id="ipSChartRing0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M43.776 20.994c-1.303-8.639-8.13-15.466-16.768-16.77m-6.032.003C11.366 5.685 4 13.982 4 24c0 10.02 7.37 18.32 16.986 19.774a20.165 20.165 0 0 0 6.018.002C35.646 42.474 42.476 35.643 43.776 27"/><path fill="#fff" d="M24 16a8 8 0 1 0 0 16a8 8 0 0 0 0-16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartRing0)"/>`
	chartStockInnerSVG                                 = `<mask id="ipSChartStock0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 16h8v16H6z"/><path stroke-linecap="round" d="M10 6v10m0 16v10"/><path fill="#fff" d="M34 16h8v16h-8z"/><path stroke-linecap="round" d="M38 6v10m0 16v10"/><path fill="#fff" d="M20 14h8v16h-8z"/><path stroke-linecap="round" d="M24 4v10m0 16v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChartStock0)"/>`
	checkCorrectInnerSVG                               = `<mask id="ipSCheckCorrect0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSCheckCorrect1)"><path d="M42 20v19a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h21"/><path d="m16 20l10 8L41 7"/></g><defs><clipPath id="ipSCheckCorrect1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCheckCorrect0)"/>`
	checkOneInnerSVG                                   = `<mask id="ipSCheckOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44a19.937 19.937 0 0 0 14.142-5.858A19.937 19.937 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z"/><path stroke="#000" stroke-linecap="round" d="m16 24l6 6l12-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCheckOne0)"/>`
	checkboxInnerSVG                                   = `<mask id="ipSCheckbox0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M32 16H16v16h16V16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCheckbox0)"/>`
	checkerboardInnerSVG                               = `<mask id="ipSCheckerboard0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M17 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3H17Zm6 13h21M4 17h9m22 14h9M6 31h19m-8-10v23M31 4v23m0 8v9M17 4v9"/><path fill="#fff" d="M35 31a4 4 0 1 1-8 0a4 4 0 0 1 8 0ZM21 17a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCheckerboard0)"/>`
	checklistInnerSVG                                  = `<mask id="ipSChecklist0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m34 10l8 8m0-8l-8 8m10 12l-7 8l-4-4"/><path fill="#fff" d="M26 10H4v8h22v-8Zm0 20H4v8h22v-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChecklist0)"/>`
	cheeseInnerSVG                                     = `<mask id="ipSCheese0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M43 20c0-2.172-18.108-11.888-22.866-14.404a1.974 1.974 0 0 0-2.149.201L5 16"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 17.652c0-1.329 1.269-2.298 2.555-1.964c6.407 1.662 23.305 5.645 32.606 4.07c1.395-.235 2.839.779 2.839 2.193v16.151a2 2 0 0 1-1.895 1.998l-34 1.79A2 2 0 0 1 5 39.891v-22.24Z"/><circle cx="12" cy="25" r="2" fill="#000"/><circle cx="25" cy="27" r="2" fill="#000"/><circle cx="34" cy="32" r="2" fill="#000"/><circle cx="18" cy="32" r="2" fill="#000" stroke="#000" stroke-width="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCheese0)"/>`
	chefHatInnerSVG                                    = `<mask id="ipSChefHat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 34h24v8H12z"/><path d="M29 34V20m-7 14v-8m-10-1v9h24v-9s5-3 5-8s-4-7-9-7c0-2-3-6-8-6s-8 4-8 6c-4 0-9 2-9 7s5 8 5 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChefHat0)"/>`
	chefHatOneInnerSVG                                 = `<mask id="ipSChefHatOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M13 24.125a8.64 8.64 0 1 1 3.857-16.837A8.625 8.625 0 0 1 23.64 4a8.627 8.627 0 0 1 6.919 3.464A8.64 8.64 0 1 1 35 24.124V40a2 2 0 0 1-2 2H15a2 2 0 0 1-2-2V24.125Z"/><path stroke="#000" d="M13 31h22m-15-6v6"/><path stroke="#fff" d="M35 28v6m-22-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChefHatOne0)"/>`
	cherryInnerSVG                                     = `<mask id="ipSCherry0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><circle cx="14" cy="34" r="8" fill="#fff" stroke-linejoin="round"/><circle cx="35" cy="37" r="7" fill="#fff" stroke-linejoin="round"/><path d="M37 10c-2.651.812-8.372 3.014-11.72 6.26C20.255 21.13 19 24.5 18 27m19-17c-1.117 1.318-3.285 4.596-3.956 8.39C32.035 24.078 33 27.5 34 30M30 4l14 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCherry0)"/>`
	chessOneInnerSVG                                   = `<mask id="ipSChessOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M40 44H8v-4l6-3h20l6 3v4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M14 19h20"/><path fill="#fff" d="M27.74 19L33 37H15l5.26-18"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M27.74 19L33 37H15l5.26-18"/><path stroke="#fff" stroke-width="4" d="M24 4a8 8 0 0 0-3.876 15h7.752A8 8 0 0 0 24 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChessOne0)"/>`
	chickenInnerSVG                                    = `<mask id="ipSChicken0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M35.979 15.5a10.65 10.65 0 0 0-1.71-1.275l-1.466-.88a13.247 13.247 0 0 0-4.412-1.668l-.524-.096a27.106 27.106 0 0 1-8.051-2.855a2.792 2.792 0 1 0-2.965 3.396A22.772 22.772 0 0 1 21 17.647"/><path d="M11.307 25.02C11.045 25.3 8 28.65 8 32c0 3.5 1.558 5 3 6s3.72 2 5.61 2C18.5 40 28.5 41 33 40s5-2 7-4c1.081-1.081 1.882-2.602 2.39-3.77a22.524 22.524 0 0 0 1.175-3.502c.36-1.436.723-3.498.435-5.228c-.5-3-2-5-7-7.5c-4.604-2.302-8.647-1.212-9.258-1.025a4.026 4.026 0 0 0-.161.054c-.8.283-7.265 2.596-10.01 4.471c-2.802 1.914-5.962 5.202-6.228 5.481a3.304 3.304 0 0 0-.036.038Z"/><path fill="#fff" d="M6.103 20.01a2.792 2.792 0 1 1 2.965-3.396a27.105 27.105 0 0 0 8.051 2.854l.524.097c1.559.287 3.053.852 4.412 1.668l1.466.879a10.65 10.65 0 0 1 2.602 2.197l.406.472a6.597 6.597 0 0 1 1.532 5.17l-.028.211a5.952 5.952 0 0 1-1.637 3.367l-.462.473a6.672 6.672 0 0 1-5.875 1.924a8.34 8.34 0 0 1-4.425-2.23l-.739-.714a9.314 9.314 0 0 1-1.532-1.935l-2.172-3.652l-.634-1.27a22.766 22.766 0 0 0-4.454-6.116Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChicken0)"/>`
	chickenLegInnerSVG                                 = `<mask id="ipSChickenLeg0"><g fill="none"><g clip-path="url(#ipSChickenLeg1)"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33.375 33.874c4.242-4.242 1.414-18.384-4.95-24.748c-2.828-2.829-10.96-8.84-19.799 0c-8.839 8.838-2.828 16.97 0 19.799c6.364 6.364 20.506 9.192 24.749 4.95Z"/><path stroke="#fff" stroke-width="4" d="m41 41l-7-7"/><circle cx="42.193" cy="40.071" r="2.5" fill="#fff" transform="rotate(135 42.193 40.071)"/><circle cx="40.072" cy="42.192" r="2.5" fill="#fff" transform="rotate(135 40.072 42.192)"/><circle cx="17" cy="18" r="2" fill="#000"/><circle cx="12" cy="21" r="2" fill="#000"/><circle cx="17" cy="24" r="2" fill="#000"/></g><defs><clipPath id="ipSChickenLeg1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChickenLeg0)"/>`
	childrenCapInnerSVG                                = `<mask id="ipSChildrenCap0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 32c0-15 5-24 8-24s6 6 6 6h8s3-6 6-6s8 9 8 24"/><rect width="40" height="8" x="4" y="32" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChildrenCap0)"/>`
	childrenPyramidInnerSVG                            = `<mask id="ipSChildrenPyramid0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M15 17h18v8H15zm-5 8h28v8H10v-8Zm-5 8h38v8H5v-8Z"/><path d="M24 17V7m5 0H19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChildrenPyramid0)"/>`
	chiliInnerSVG                                      = `<mask id="ipSChili0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSChili1)"><path fill="#fff" d="M21.168 16.594c1.648-5.607 8.323-7.928 13.093-4.552c4.126 2.918 4.818 8.766 1.488 12.567l-3.13 3.574a48.818 48.818 0 0 1-19.203 13.4l-3.558 1.369a2.339 2.339 0 0 1-2.294-4.014l2.78-2.208a25.8 25.8 0 0 0 8.705-12.927l2.119-7.209Z"/><path d="M29.842 10.684a4.931 4.931 0 1 1 7.768 5.39"/><path stroke-linecap="round" d="m42 4l-4 4"/></g><defs><clipPath id="ipSChili1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChili0)"/>`
	chimneyInnerSVG                                    = `<mask id="ipSChimney0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 44h40M13 14h22"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M16 14h16l4 30H12l4-30Z"/><path stroke="#000" stroke-linecap="round" d="M15 24h18M13 34h22"/><path stroke="#fff" stroke-linejoin="round" d="m32 14l4 30M16 14l-4 30"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m24 8l.828-.828A4 4 0 0 1 27.657 6h.686a4 4 0 0 0 2.829-1.172L32 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChimney0)"/>`
	chineseInnerSVG                                    = `<mask id="ipSChinese0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M14 18h20v10H14z"/><path stroke="#000" d="M24 14v21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChinese0)"/>`
	chineseOneInnerSVG                                 = `<mask id="ipSChineseOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M21 19.939c-.4-1.164-1.597-3.202-3.992-2.91c-2.396.29-4.193 3.492-3.993 7.567c.2 4.075 2.396 6.404 4.392 6.404C19.802 31 21 28.206 21 28.206M26 31V19m0 12v-6.5a4.5 4.5 0 0 1 4.5-4.5v0a4.5 4.5 0 0 1 4.5 4.5V31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChineseOne0)"/>`
	chinesePavilionInnerSVG                            = `<mask id="ipSChinesePavilion0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M15 12h18s3.363 3.011 6 4c1.864.7 5 1 5 1s-1.816.649-3 1c-1.544.458-4 1-4 1H11s-2.456-.542-4-1c-1.184-.351-3-1-3-1s3.136-.3 5-1c2.637-.989 6-4 6-4Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m18 12l6-8l6 8H18Z"/><path stroke-linecap="round" d="M11 19v19m26-19v19"/><path stroke-linejoin="round" d="M6 38h36v6H6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChinesePavilion0)"/>`
	chipInnerSVG                                       = `<mask id="ipSChip0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="24" height="36" x="12" y="6" fill="#fff" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 12H6m6 8H6m6 8H6m6 8H6m36-24h-6m6 8h-6m6 8h-6m6 8h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChip0)"/>`
	choppingBoardInnerSVG                              = `<mask id="ipSChoppingBoard0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M14 8h28.011A1.99 1.99 0 0 1 44 10v28c0 1.105-.883 2-1.987 2H14c-4 0-10-2-10-16S11 8 14 8Z"/><path stroke="#000" d="M12 20v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChoppingBoard0)"/>`
	christmasTreeInnerSVG                              = `<mask id="ipSChristmasTree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m20 14l-4-2l8-8l8 8l-4 2l8 8l-6 2l9 10H9l8-10l-5-2l8-8Z"/><path d="M31 44H17m4-10l-1 10m7-10l1 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChristmasTree0)"/>`
	christmasTreeOneInnerSVG                           = `<mask id="ipSChristmasTreeOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 36v8"/><path fill="#fff" d="M14 15L24 4l10 11l-3 3l8 8l-5 1.158L42 36H6l8-8.842L9 26l8-8l-3-3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChristmasTreeOne0)"/>`
	churchOneInnerSVG                                  = `<mask id="ipSChurchOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M24 4v12m-4-8h8"/><path stroke="#fff" stroke-linejoin="round" d="M15 28H9a2 2 0 0 0-2 2v14m26-16h6a2 2 0 0 1 2 2v14"/><path stroke="#fff" stroke-linecap="round" d="M4 44h40"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m15 23l9-8l9 8v21H15V23Z"/><path stroke="#000" stroke-linecap="round" d="M24 34v10"/><path stroke="#fff" stroke-linecap="round" d="M20 44h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChurchOne0)"/>`
	churchTwoInnerSVG                                  = `<mask id="ipSChurchTwo0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="m13 24l11-10l11 10v20H13V24Z"/><path stroke="#fff" stroke-linejoin="round" d="m7 8l3-4l3 4v36H7V8Zm28 0l3-4l3 4v36h-6V8Z"/><path stroke="#000" d="M24 25v10m-4-6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSChurchTwo0)"/>`
	circleDoubleDownInnerSVG                           = `<mask id="ipSCircleDoubleDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m31 17l-7 7l-7-7m14 9l-7 7l-7-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleDoubleDown0)"/>`
	circleDoubleLeftInnerSVG                           = `<mask id="ipSCircleDoubleLeft0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m22 31l-7-7l7-7m9 14l-7-7l7-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleDoubleLeft0)"/>`
	circleDoubleRightInnerSVG                          = `<mask id="ipSCircleDoubleRight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m17 31l7-7l-7-7m9 14l7-7l-7-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleDoubleRight0)"/>`
	circleDoubleUpInnerSVG                             = `<mask id="ipSCircleDoubleUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m31 22l-7-7l-7 7m14 9l-7-7l-7 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleDoubleUp0)"/>`
	circleFiveLineInnerSVG                             = `<mask id="ipSCircleFiveLine0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M40 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm16 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M20 40h8M20 8h8M8 20v8m32-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleFiveLine0)"/>`
	circleFourInnerSVG                                 = `<mask id="ipSCircleFour0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill-rule="evenodd" d="M24 10a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 34a3 3 0 1 0 0-6a3 3 0 0 0 0 6ZM7 27a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm34 0a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z" clip-rule="evenodd"/><path d="M24.197 15.744a8.99 8.99 0 0 0 7.438-3.931a14.528 14.528 0 0 1 4.686 4.498A8.995 8.995 0 0 0 32 24a8.997 8.997 0 0 0 4.527 7.811a14.53 14.53 0 0 1-4.426 4.532a8.998 8.998 0 0 0-7.905-4.694c-3.4 0-6.36 1.885-7.89 4.668a14.528 14.528 0 0 1-4.494-4.683a8.99 8.99 0 0 0 3.93-7.438a8.99 8.99 0 0 0-3.907-7.422a14.526 14.526 0 0 1 4.94-4.938a8.99 8.99 0 0 0 7.42 3.907Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleFour0)"/>`
	circleFourLineInnerSVG                             = `<mask id="ipSCircleFourLine0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M40 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 8h8"/><path fill="#fff" fill-rule="evenodd" d="M32 16L16 32l16-16Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 16L16 32m24-12v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleFourLine0)"/>`
	circleHouseInnerSVG                                = `<mask id="ipSCircleHouse0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 23H4s10.5-6 15-11s5.5-8 5.5-8s1 3 5.5 8s14 11 14 11Z"/><path fill="#fff" d="M8 31h32v13H8zm5-8h22v8H13z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleHouse0)"/>`
	circleLeftDownInnerSVG                             = `<mask id="ipSCircleLeftDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m17 31l14-14m-2 14H17V19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleLeftDown0)"/>`
	circleLeftUpInnerSVG                               = `<mask id="ipSCircleLeftUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31L17 17m12 0H17v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleLeftUp0)"/>`
	circleRightDownInnerSVG                            = `<mask id="ipSCircleRightDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31L17 17m2 14h12V19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleRightDown0)"/>`
	circleRightUpInnerSVG                              = `<mask id="ipSCircleRightUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 17L17 31m2-14h12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleRightUp0)"/>`
	circleThreeInnerSVG                                = `<mask id="ipSCircleThree0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M32.904 13.927A10 10 0 0 1 24 19.37a10 10 0 0 1-8.904-5.443A14.979 14.979 0 0 0 9 26c0 .818.065 1.62.191 2.402c.267-.02.537-.032.809-.032c5.523 0 10 4.477 10 10c0 .697-.071 1.376-.207 2.032c1.335.39 2.747.598 4.207.598s2.872-.209 4.207-.598A10.038 10.038 0 0 1 28 38.37c0-5.523 4.477-10 10-10c.272 0 .542.011.809.032A15.11 15.11 0 0 0 39 26c0-4.95-2.398-9.34-6.096-12.073Z"/><path fill-rule="evenodd" d="M24 13a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM9 43a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm30 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleThree0)"/>`
	circleTwoLineInnerSVG                              = `<mask id="ipSCircleTwoLine0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M40 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M40 20v20H20M8 28V8h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircleTwoLine0)"/>`
	circlesAndTrianglesInnerSVG                        = `<mask id="ipSCirclesAndTriangles0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="m24 4l17.32 30H6.68L24 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCirclesAndTriangles0)"/>`
	circlesSevenInnerSVG                               = `<mask id="ipSCirclesSeven0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm10.392-10a4 4 0 1 0 6.929-4a4 4 0 0 0-6.928 4Zm0 12a4 4 0 1 0 6.929 4a4 4 0 0 0-6.928-4ZM24 36a4 4 0 1 0 0 8a4 4 0 0 0 0-8Zm-10.392-6a4 4 0 1 0-6.928 4a4 4 0 0 0 6.928-4Zm0-12a4 4 0 1 0-6.928-4a4 4 0 0 0 6.928 4Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCirclesSeven0)"/>`
	circularConnectionInnerSVG                         = `<mask id="ipSCircularConnection0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M13.5 39.37A16.927 16.927 0 0 0 24 43c3.963 0 7.61-1.356 10.5-3.63M19 9.747C12.051 11.882 7 18.351 7 26c0 1.925.32 3.775.91 5.5M29 9.747C35.949 11.882 41 18.351 41 26c0 1.925-.32 3.775-.91 5.5"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M43 36c0 1.342-.528 2.56-1.388 3.458A5 5 0 1 1 43 36Zm-28 0c0 1.342-.528 2.56-1.388 3.458A5 5 0 1 1 15 36ZM29 9c0 1.342-.528 2.56-1.388 3.458A5 5 0 1 1 29 9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircularConnection0)"/>`
	circusInnerSVG                                     = `<mask id="ipSCircus0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M9 26s-.076.787-1 5c-.98 4.465-4 13-4 13h40s-3.02-8.535-4-13c-.924-4.213-1-5-1-5"/><path stroke-linejoin="round" d="M20 28c1 9-4 16-4 16m12-16c-1 9 4 16 4 16"/><path fill="#fff" stroke-linejoin="round" d="M6 18s7.592-.055 11-1c2.866-.795 7-3 7-3s3.823 2.194 6.5 3c3.572 1.075 11.5 1 11.5 1l-1 7s-4 2-5 2s-3-2-4-2s-3.5 3-4 3s-3-3-4-3s-3 3.5-4 3.5s-3-3.5-4-3.5c-.198 0-.474.078-.79.204c-2.142.852-4.489 1.284-6.629.428L7 25l-1-7Z"/><path d="M24 5v10"/><path stroke-linejoin="round" d="M36 11V5s-1.5 3-6 0s-6 0-6 0v6s1.5-3 6 0s6 0 6 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCircus0)"/>`
	cityInnerSVG                                       = `<mask id="ipSCity0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 42h40"/><rect width="8" height="16" x="8" y="26" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="2"/><path stroke="#000" stroke-linecap="square" stroke-linejoin="round" stroke-width="4" d="M12 34h1"/><rect width="24" height="38" x="16" y="4" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="2"/><path fill="#000" d="M22 10h4v4h-4zm8 0h4v4h-4zm-8 7h4v4h-4zm8 0h4v4h-4zm0 7h4v4h-4zm0 7h4v4h-4z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCity0)"/>`
	cityGateInnerSVG                                   = `<mask id="ipSCityGate0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M15 11h17s5.048 2.966 7 4c1.091.578 5 1 5 1s-1.816.649-3 1c-1.544.458-4 1-4 1H11s-2.456-.542-4-1c-1.184-.351-3-1-3-1s3.909-.422 5-1c1.952-1.034 6-4 6-4Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m17 11l7-7l6 7H17Z"/><path d="M35 18v6m-23-6v6"/><path stroke-linejoin="round" d="m4 44l2-20h36l2 20H4Z"/><path d="M20 38a4 4 0 0 1 8 0v6h-8v-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCityGate0)"/>`
	cityOneInnerSVG                                    = `<mask id="ipSCityOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M4 42h40"/><rect width="12" height="20" x="8" y="22" fill="#fff" stroke="#fff" rx="2"/><rect width="20" height="38" x="20" y="4" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="M28 32.008h4m-20 0h4m12-9h4m-4-9h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCityOne0)"/>`
	clapInnerSVG                                       = `<mask id="ipSClap0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSClap1)"><path d="M17.118 26.013L9.253 12.39a1.605 1.605 0 0 0-2.896 1.36l5.52 14.918c.082.22.123.452.125.686l.057 12.672a2 2 0 0 0 2 1.991h4.957a2 2 0 0 0 1.954-2.426L18 28l-.882-1.987ZM12 29l6-1m12.564-2.271l7.69-13.322a1.625 1.625 0 0 1 2.947 1.337l-5.106 14.977a2.002 2.002 0 0 0-.105.573l-.466 12.798a2 2 0 0 1-2 1.928h-4.963a2 2 0 0 1-1.94-2.485L30 28l.334-1.665a2 2 0 0 1 .229-.606ZM30 28l6 1M15 7l3.5 4M23 4l1 6m9-4l-3 4"/></g><defs><clipPath id="ipSClap1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClap0)"/>`
	classroomInnerSVG                                  = `<mask id="ipSClassroom0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="13" r="9" fill="#fff"/><path d="M5 44c0-8.438 6.175-16.313 11.4-18c0 0 4.75 5.063 7.6 8.438L31.6 26c4.275.563 11.4 9.563 11.4 18"/><path stroke-linecap="round" d="M2 44h44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClassroom0)"/>`
	clearInnerSVG                                      = `<mask id="ipSClear0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M20 5.914h8v8h15v8H5v-8h15v-8Z" clip-rule="evenodd"/><path fill="#fff" stroke="#fff" d="M8 40h32V22H8v18Z"/><path stroke="#000" stroke-linecap="round" d="M16 39.898v-5.984m8 5.984v-6m8 6v-5.984"/><path stroke="#fff" stroke-linecap="round" d="M12 40h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClear0)"/>`
	clearFormatInnerSVG                                = `<mask id="ipSClearFormat0"><g fill="none"><g stroke="#fff" clip-path="url(#ipSClearFormat1)"><path fill="#fff" stroke-linejoin="round" stroke-width="4.302" d="M44.782 24.17L31.918 7.1L14.135 20.5L27.5 37l3.356-2.336L44.782 24.17Z"/><path stroke-linejoin="round" stroke-width="4.302" d="m27.5 37l-3.839 3.075l-10.563-.001l-2.6-3.45l-6.433-8.536L14.5 20.225"/><path stroke-linecap="round" stroke-width="4.5" d="M13.206 40.072h31.36"/></g><defs><clipPath id="ipSClearFormat1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClearFormat0)"/>`
	clickInnerSVG                                      = `<mask id="ipSClick0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 4v8"/><path fill="#fff" fill-rule="evenodd" d="m22 22l20 4l-6 4l6 6l-6 6l-6-6l-4 6l-4-20Z" clip-rule="evenodd"/><path d="m38.142 9.858l-5.657 5.657M9.858 38.142l5.657-5.657M4 24h8M9.858 9.858l5.657 5.657"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClick0)"/>`
	clipboardInnerSVG                                  = `<mask id="ipSClipboard0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M17 7h-7a2 2 0 0 0-2 2v33a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-7"/><path fill="#fff" d="M17 4h14v6H17z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClipboard0)"/>`
	clockTowerInnerSVG                                 = `<mask id="ipSClockTower0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 44h40M27 32h12v12H27zm11-22v6m-10-6v6m0-6l5-6l5 6H28Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M25 20H11a2 2 0 0 0-2 2v22"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M15 29h4m-4 7h4"/><rect width="16" height="16" x="25" y="16" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="1"/><circle cx="33" cy="24" r="3" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M33 32v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClockTower0)"/>`
	closeOneInnerSVG                                   = `<mask id="ipSCloseOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M29.657 18.343L18.343 29.657m0-11.314l11.314 11.314"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCloseOne0)"/>`
	clothesBriefsInnerSVG                              = `<mask id="ipSClothesBriefs0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22.158 37s-.9-8.075-4.158-12c-3.044-3.669-12-6-12-6v-5h36v5s-8.956 2.331-12 6c-3.257 3.925-4.158 12-4.158 12h-3.684Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesBriefs0)"/>`
	clothesGlovesInnerSVG                              = `<mask id="ipSClothesGloves0"><g fill="none"><path fill="#fff" d="M27 4H15c-3.771 0-5.657 0-6.828 1.172C7 6.343 7 8.229 7 12v32h28v-7s7 0 7-6v-8c0-6-7-6-7-6v-5c0-3.771 0-5.657-1.172-6.828C32.657 4 30.771 4 27 4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M35 27V17m0 0v-5c0-3.771 0-5.657-1.172-6.828C32.657 4 30.771 4 27 4H15c-3.771 0-5.657 0-6.828 1.172C7 6.343 7 8.229 7 12v32h28v-7s7 0 7-6v-8c0-6-7-6-7-6Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 22V4m7 18V4m7 18V4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 4h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesGloves0)"/>`
	clothesGlovesTwoInnerSVG                           = `<mask id="ipSClothesGlovesTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M34 22v-7m0 0v0c0-4.691 0-7.037-1.24-8.653a6 6 0 0 0-1.107-1.107C30.037 4 27.69 4 23 4h-1c-5.657 0-8.485 0-10.243 1.757C10 7.515 10 10.343 10 16v22h24v-6s7 0 7-6v-5c0-6-7-6-7-6Z"/><path fill="#fff" d="M9 38h26a3 3 0 1 1 0 6H9a3 3 0 1 1 0-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesGlovesTwo0)"/>`
	clothesHoodieInnerSVG                              = `<mask id="ipSClothesHoodie0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37 22v15m-26 0v7h26v-7m-26 0H4V22c0-3 2-6.5 5-9s7-3 7-3l8 8M11 37V22m26 15h7V22c0-3-2-6.5-5-9s-7-3-7-3l-8 8m0 0v9"/><path fill="#fff" d="M9 13c3-2.5 7-3 7-3l8 8l8-8s4 .5 7 3l2-4.5L39 4H9L7 8.5L9 13Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesHoodie0)"/>`
	clothesPantsShortInnerSVG                          = `<mask id="ipSClothesPantsShort0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m6 36l2-24h32l2 24H26.842L24 25l-2.842 11H6Z"/><path stroke="#000" d="m24 12l3 7m-3-7l-4 7.5"/><path stroke="#fff" d="M18 12h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesPantsShort0)"/>`
	clothesPantsSweatInnerSVG                          = `<mask id="ipSClothesPantsSweat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m24 19l9 19h9L38 4H10L6 38h9l9-19Z"/><path fill="#fff" d="m34 38l1 6h6v-6h-7Zm-21 6H7v-6h7l-1 6Z"/><path d="m24 4l4 7.5M24 4l-4 7.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesPantsSweat0)"/>`
	clothesSkatesInnerSVG                              = `<mask id="ipSClothesSkates0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M18 4H8c-1.886 0-2.828 0-3.414.586C4 5.172 4 6.114 4 8v32c0 1.886 0 2.828.586 3.414C5.172 44 6.114 44 8 44h4l4-4l4 4h20c1.886 0 2.828 0 3.414-.586C44 42.828 44 41.886 44 40v-7.525c0-4.992 0-7.488-1.48-9.183c-1.48-1.696-3.953-2.033-8.899-2.707l-1.242-.17c-4.946-.674-7.42-1.011-8.9-2.707C22 16.013 22 13.518 22 8.525V8c0-1.886 0-2.828-.586-3.414C20.828 4 19.886 4 18 4Zm26 30H4m0-22.5h18"/><circle cx="15" cy="23" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesSkates0)"/>`
	clothesTurtleneckInnerSVG                          = `<mask id="ipSClothesTurtleneck0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37 23v14m-26 0v7h26v-7m-26 0H4V23c0-3 2-6.5 5-9s9-4 9-4h12s6 1.5 9 4s5 6 5 9v14h-7m-26 0V23"/><path fill="#fff" d="M30 10H18V4h12v6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesTurtleneck0)"/>`
	clothesWindbreakerInnerSVG                         = `<mask id="ipSClothesWindbreaker0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 25v12m-26 0v7h26v-7m-26 0H4V18l6.125-5L17 18l7-8l7 8l6.875-5L44 18v19h-7m-26 0V25"/><path fill="#fff" d="m17 18l7-8l7 8l11-8l-2.5-6H9l-3 6l11 8Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 10h5m5 0h-5m0 0l-7 8l-11-8l3-6h30.5l2.5 6l-11 8l-7-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClothesWindbreaker0)"/>`
	cloudStorageInnerSVG                               = `<mask id="ipSCloudStorage0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 29H4v13h40V29Z"/><path fill="#000" d="M35.5 38a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 29L9.038 4.999H39.02l4.98 24"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19.006 16.026c-2.143 0-4.006 1.486-4.006 3.487C15 22 17.095 23 19.697 23h1.28m8.03-6.974c2.097 0 3.993.973 3.993 3.487C33 22 30.89 23 28.288 23h-1.3m2.019-6.974C29.007 13.042 27.023 11 24 11c-3.023 0-4.994 1.993-4.994 5.026"/><path stroke="#fff" stroke-width="4" d="M20 23h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCloudStorage0)"/>`
	cloudyInnerSVG                                     = `<mask id="ipSCloudy0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M9.455 30.994A13.95 13.95 0 0 1 4 19.885C4 12.217 10.105 6 17.636 6c6.297 0 11.598 4.346 13.166 10.253a8.921 8.921 0 0 1 4.107-.996c5.02 0 9.091 4.144 9.091 9.257c0 3.795-2.244 7.058-5.455 8.486"/><path fill="#fff" d="M26 42a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke-linecap="round" d="M22.243 15.757a6 6 0 0 0-8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCloudy0)"/>`
	cloudyNightInnerSVG                                = `<mask id="ipSCloudyNight0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M9.455 30.994A13.95 13.95 0 0 1 4 19.885C4 12.217 10.105 6 17.636 6c6.297 0 11.598 4.346 13.166 10.253a8.921 8.921 0 0 1 4.107-.996c5.02 0 9.091 4.144 9.091 9.257c0 3.795-2.244 7.058-5.455 8.486"/><path fill="#fff" d="M27.216 30.123a3.82 3.82 0 1 0 4.66 4.661a6 6 0 1 1-4.66-4.66Z"/><path stroke-linecap="round" d="M22.243 15.757a6 6 0 0 0-8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCloudyNight0)"/>`
	clueInnerSVG                                       = `<mask id="ipSClue0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M37 16a5 5 0 1 0 0-10a5 5 0 0 0 0 10ZM11 42a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" d="M37 16v19.504A6.496 6.496 0 0 1 30.504 42v0a6.496 6.496 0 0 1-6.496-6.496v-23A6.504 6.504 0 0 0 17.504 6v0A6.504 6.504 0 0 0 11 12.504V32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSClue0)"/>`
	coatHangerInnerSVG                                 = `<mask id="ipSCoatHanger0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M19 13a5 5 0 1 1 5 5v4"/><path fill="#fff" d="M44 36H4c0-5 6-14 20-14s20 9 20 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoatHanger0)"/>`
	cocktailInnerSVG                                   = `<mask id="ipSCocktail0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-width="4" clip-path="url(#ipSCocktail1)"><path stroke-linejoin="round" d="M35.8 13H32L21 32L9.8 13H6"/><path d="M25.75 25.596c5.602 3.15 12.696 1.164 15.846-4.437c3.15-5.6 1.165-12.695-4.436-15.845c-5.601-3.15-12.695-1.164-15.846 4.437"/><path stroke-linejoin="round" d="M26 44H16m5 0V32m-9-16s2-2 5-2s5 3 8 3s5-1 5-1"/></g><defs><clipPath id="ipSCocktail1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCocktail0)"/>`
	coconutTreeInnerSVG                                = `<mask id="ipSCoconutTree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M22 14s-2.7 5.293-4 12c-1.3 6.707-1 16-1 16"/><path fill="#fff" stroke-linejoin="round" d="M33.953 23.272c.346.23.893.391 1.428.503c.932.194 1.792-.446 1.768-1.397c-.045-1.774-.737-4.675-4.258-7.014c-3.325-2.207-6.626-2.238-8.708-1.92c-1.187.18-1.66 1.478-.978 2.467c.608.883 1.316 1.774 1.795 1.945c1 .355 2.203-.582 3.08 0c.876.581.615 1.925 1.492 2.507c.876.582 2.013-.18 2.89.402c.875.582.615 1.925 1.491 2.507ZM20 17c.858-.286 1.389-1.226 1.686-1.979c.246-.622.026-1.308-.55-1.648c-1.295-.766-4.06-1.814-8.374-.561c-4.265 1.238-5.39 4.056-5.677 5.715a1.33 1.33 0 0 0 1.178 1.565c.56.063 1.176.035 1.544-.277c.807-.685 1.025-1.582 1.927-1.824c.901-.241 1.679.858 2.58.616c.902-.241 1.026-1.582 1.927-1.824c.902-.241 2.26.717 3.76.217Zm7-11c-2.5 1-5 6-5 8l13-6c-1.38-2.391-5.5-3-8-2Z"/><path fill="#fff" stroke-linejoin="round" d="M20 5c4 1.422 3.38 6.609 2 9L10 5.922C11 4 16 3.579 20 5Z"/><path d="M26 35c8.284 0 13 1.79 13 4s-6.716 4-15 4c-8.284 0-15-1.79-15-4c0-.54.4-1.053 1.125-1.523"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoconutTree0)"/>`
	codeLaptopInnerSVG                                 = `<mask id="ipSCodeLaptop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M22 9H11a3 3 0 0 0-3 3v21h32V22"/><path fill="#fff" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><path stroke-linecap="round" d="m33 7l-4 4l4 4m6-8l4 4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCodeLaptop0)"/>`
	coffeeMachineInnerSVG                              = `<mask id="ipSCoffeeMachine0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 42h29a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3H17"/><path fill="#fff" d="M22 36c5.523 0 10-4.477 10-10H12c0 5.523 4.477 10 10 10Z"/><path stroke-linecap="round" d="M16 18v2m6-2v2m6-2v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoffeeMachine0)"/>`
	colaInnerSVG                                       = `<mask id="ipSCola0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m36 37l-2.79 6.4a1 1 0 0 1-.918.6H15.707a1 1 0 0 1-.916-.6L12 37m0-26l2.79-6.4a1 1 0 0 1 .918-.6h16.584a1 1 0 0 1 .917.6L36 11"/><path fill="#fff" stroke="#fff" d="M12 12a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H14a2 2 0 0 1-2-2V12Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m13 22.5l6.396-1.01a8.934 8.934 0 0 0 5.218-2.815v0a8.935 8.935 0 0 1 7.168-2.907L35.5 16m-23 16.5l5.553-.252a9.54 9.54 0 0 0 7.998-5.067v0a9.54 9.54 0 0 1 5.974-4.754L35.5 21.5"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 12v20M12 16v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCola0)"/>`
	collectComputerInnerSVG                            = `<mask id="ipSCollectComputer0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M22 6H9a3 3 0 0 0-3 3v22a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3v-9M24 34v8m-10 0h20"/><path fill="#fff" d="M33.3 6C31.478 6 30 7.435 30 9.205c0 3.204 3.9 6.117 6 6.795c2.1-.678 6-3.59 6-6.795C42 7.435 40.523 6 38.7 6A3.326 3.326 0 0 0 36 7.362A3.326 3.326 0 0 0 33.3 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCollectComputer0)"/>`
	collectLaptopInnerSVG                              = `<mask id="ipSCollectLaptop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M21 9H11a3 3 0 0 0-3 3v21h32V23"/><path fill="#fff" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><path fill="#fff" stroke-linecap="round" d="M32.3 7C30.478 7 29 8.435 29 10.205c0 3.204 3.9 6.117 6 6.795c2.1-.678 6-3.59 6-6.795C41 8.435 39.523 7 37.7 7A3.326 3.326 0 0 0 35 8.362A3.326 3.326 0 0 0 32.3 7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCollectLaptop0)"/>`
	collectPictureInnerSVG                             = `<mask id="ipSCollectPicture0"><g fill="none"><path fill="#fff" d="M44 21a2 2 0 1 0-4 0h4ZM23 8a2 2 0 1 0 0-4v4Zm16 32H9v4h30v-4ZM8 39V9H4v30h4Zm32-18v18h4V21h-4ZM9 8h14V4H9v4Zm0 32a1 1 0 0 1-1-1H4a5 5 0 0 0 5 5v-4Zm30 4a5 5 0 0 0 5-5h-4a1 1 0 0 1-1 1v4ZM8 9a1 1 0 0 1 1-1V4a5 5 0 0 0-5 5h4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 35l10.693-9.802a2 2 0 0 1 2.653-.044L32 36m-4-5l4.773-4.773a2 2 0 0 1 2.615-.186L42 31"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33.3 6C31.478 6 30 7.435 30 9.205c0 3.204 3.9 6.117 6 6.795c2.1-.678 6-3.59 6-6.795C42 7.435 40.523 6 38.7 6A3.326 3.326 0 0 0 36 7.362A3.326 3.326 0 0 0 33.3 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCollectPicture0)"/>`
	collectionFilesInnerSVG                            = `<mask id="ipSCollectionFiles0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V4h23l9 10.5V44H8Z"/><path fill="#000" stroke="#000" d="m24 15l3.084 6.755l7.378.846l-5.472 5.02l1.476 7.278L24 31.247l-6.466 3.652l1.476-7.278l-5.472-5.02l7.378-.846L24 15Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCollectionFiles0)"/>`
	collectionRecordsInnerSVG                          = `<mask id="ipSCollectionRecords0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M40 22c0-9.941-8.059-18-18-18S4 12.059 4 22s8.059 18 18 18"/><path stroke-linecap="round" stroke-linejoin="round" d="M33.3 30c-1.822 0-3.3 1.722-3.3 3.846c0 3.845 3.9 7.34 6 8.154c2.1-.813 6-4.31 6-8.154C42 31.722 40.523 30 38.7 30c-1.116 0-2.103.646-2.7 1.634c-.597-.988-1.584-1.634-2.7-1.634Z"/><path fill="#fff" d="M22 27a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCollectionRecords0)"/>`
	colorCardInnerSVG                                  = `<defs><path id="ipSColorCard0" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24.485 32H44v12H12.5"/></defs><mask id="ipSColorCard1"><g fill="none"><path fill="#fff" d="M10 44a6 6 0 0 0 6-6V4H4v34a6 6 0 0 0 6 6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 44a6 6 0 0 0 6-6V23.515M10 44a6 6 0 0 1-6-6V4h12v19.515M10 44h34V32H24.485M5.757 42.243a6 6 0 0 0 8.486 0L24.485 32M16 23.515L35.015 4.5l.47-.5l8.5 8.5l-19.5 19.5"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14.243 42.243L43.985 12.5l-8.5-8.5L16 23.515"/><use href="#ipSColorCard0" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><use href="#ipSColorCard0" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 44a6 6 0 0 0 6-6V4H4v34a6 6 0 0 0 6 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSColorCard1)"/>`
	colorFilterInnerSVG                                = `<mask id="ipSColorFilter0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M24 40.944A11.955 11.955 0 0 0 32 44c6.627 0 12-5.373 12-12c0-5.591-3.824-10.29-9-11.622"/><path d="M13 20.378C7.824 21.71 4 26.408 4 32c0 6.627 5.373 12 12 12s12-5.373 12-12c0-1.55-.294-3.03-.828-4.39"/><path fill="#fff" d="M24 28c6.627 0 12-5.373 12-12S30.627 4 24 4S12 9.373 12 16s5.373 12 12 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSColorFilter0)"/>`
	comeInnerSVG                                       = `<mask id="ipSCome0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 40C10.128 35.564 7 26 4 19.5c-1.35-2.924 3.526-3.69 6.5-2.5c2.5 1 5.5 3 5.5 3v-8.5a3.5 3.5 0 1 1 7 0v-2a3.5 3.5 0 1 1 7 0v4a3.5 3.5 0 1 1 7 0v3a3.5 3.5 0 0 1 7-.002V29c0 3.5-2 8-7 11c-4.793 2.876-12 3-18 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCome0)"/>`
	commandInnerSVG                                    = `<mask id="ipSCommand0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M9.455 14.91h5.454V9.454a5.455 5.455 0 1 0-5.454 5.454Zm0 18.18h5.454v5.455a5.455 5.455 0 1 1-5.454-5.454Z"/><path stroke-linecap="round" d="M14.909 14.909h18.182v18.182H14.909z"/><path fill="#fff" d="M38.545 14.91h-5.454V9.454a5.455 5.455 0 1 1 5.454 5.454Zm0 18.18a5.455 5.455 0 1 1-5.454 5.455v-5.454h5.454Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCommand0)"/>`
	commentInnerSVG                                    = `<mask id="ipSComment0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 6H4v30h9v5l10-5h21V6Z"/><path stroke="#000" d="M14 19.5v3m10-3v3m10-3v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSComment0)"/>`
	commentOneInnerSVG                                 = `<mask id="ipSCommentOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 6H4v30h9v5l10-5h21V6Z"/><path stroke="#000" d="M14 21h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCommentOne0)"/>`
	commentsInnerSVG                                   = `<mask id="ipSComments0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M33 38H22v-8h14v-8h8v16h-5l-3 3l-3-3Z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 6h32v24H17l-4 4l-4-4H4V6Z"/><path stroke="#000" d="M12 22h6m-6-8h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSComments0)"/>`
	commodityInnerSVG                                  = `<mask id="ipSCommodity0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9.781 9.752A2 2 0 0 1 11.766 8h24.468a2 2 0 0 1 1.985 1.752l3.5 28A2 2 0 0 1 39.734 40H8.266a2 2 0 0 1-1.985-2.248l3.5-28Z"/><path stroke="#000" stroke-linecap="round" d="M15 18s2 4 9 4s9-4 9-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCommodity0)"/>`
	communicationInnerSVG                              = `<mask id="ipSCommunication0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M33 38H22v-8h14v-8h8v16h-5l-3 3l-3-3Z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 6h32v24H17l-4 4l-4-4H4V6Z"/><path stroke="#000" d="M19 18h1m6 0h1m-15 0h1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCommunication0)"/>`
	commuterBagInnerSVG                                = `<mask id="ipSCommuterBag0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M31.992 22c.005-.308.008-.617.008-.927C32 9.515 28.418 4 24 4s-8 5.515-8 17.073c0 .31.003.62.008.927"/><rect width="22" height="22" x="13" y="22" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCommuterBag0)"/>`
	compassInnerSVG                                    = `<mask id="ipSCompass0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m12 44l10.688-28.5M36 44L25.312 15.5"/><circle cx="24" cy="12" r="4" fill="#fff"/><path d="M37.57 33A24.89 24.89 0 0 1 24 37c-5.003 0-9.662-1.47-13.57-4M24 8V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCompass0)"/>`
	compassOneInnerSVG                                 = `<mask id="ipSCompassOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c9.389 0 17-7.611 17-17s-7.611-17-17-17S7 17.611 7 27s7.611 17 17 17Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19 4h10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m20 27l4-7l4 7l-4 7l-4-7ZM7 27h4m26 0h4M24 10v4m0 26v4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M17.5 42.713A16.949 16.949 0 0 0 24 44c2.302 0 4.498-.458 6.5-1.287M8.287 20.5A16.95 16.95 0 0 0 7 27c0 2.302.458 4.498 1.287 6.5m31.426-13A16.949 16.949 0 0 1 41 27c0 2.302-.458 4.498-1.287 6.5m-22.705-22A16.94 16.94 0 0 1 24 10c2.492 0 4.86.536 6.992 1.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCompassOne0)"/>`
	componentsInnerSVG                                 = `<mask id="ipSComponents0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17 11l7-7l7 7l-7 7l-7-7Zm13 14l7-7l7 7l-7 7l-7-7ZM17 37l7-7l7 7l-7 7l-7-7ZM4 24l7-7l7 7l-7 7l-7-7Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSComponents0)"/>`
	compositionInnerSVG                                = `<mask id="ipSComposition0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="m39.828 21.786l-17.86 17.86c-3.414 3.414-9.03 3.332-12.545-.182c-3.515-3.515-3.597-9.132-.182-12.546L27.1 9.058" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m39.828 21.786l-17.86 17.86c-3.414 3.414-9.03 3.332-12.545-.182c-3.515-3.515-3.597-9.132-.182-12.546L27.1 9.058M8.734 27.424l26.144-.688"/><path fill="#000" d="M29.393 20.907a2 2 0 1 0-2.828-2.829a2 2 0 0 0 2.828 2.829Zm-5.657 2.828a2 2 0 1 0-2.828-2.828a2 2 0 0 0 2.828 2.828Z"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m23.564 5.522l19.8 19.8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSComposition0)"/>`
	compressionInnerSVG                                = `<mask id="ipSCompression0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M8.92 8.714C8.495 7.39 9.476 6 10.867 6h26.266c1.391 0 2.372 1.39 1.947 2.714C37.9 12.4 36 19.09 36 24s1.9 11.6 3.08 15.286c.425 1.325-.556 2.714-1.947 2.714H10.867c-1.391 0-2.372-1.39-1.947-2.714C10.1 35.6 12 28.91 12 24S10.1 12.4 8.92 8.714Z"/><path stroke="#fff" stroke-linejoin="round" d="M4 15c1.5 2 2 6 2 9s-.5 7-2 9"/><path stroke="#000" d="M18 15.5h12M18 24h12m-12 8h4"/><path stroke="#fff" stroke-linejoin="round" d="M44 15c-1.5 2-2 6-2 9s.5 6 2 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCompression0)"/>`
	computerInnerSVG                                   = `<mask id="ipSComputer0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19 32h10v9H19z"/><rect width="38" height="24" x="5" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 27h4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M14 41h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSComputer0)"/>`
	conceptSharingInnerSVG                             = `<mask id="ipSConceptSharing0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M28.367 36H24l-9-4.96l-10.991 4.042l3.002 5.944l7.072-2.953C20.7 42.024 24.727 44 26.165 44c1.438 0 7.383-2.667 17.835-8"/><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" d="M28.992 26.988v-4.67c1.1-.457 2.543-1.125 3.372-1.954a9 9 0 1 0-12.728 0c.829.829 2.264 1.497 3.364 1.953c.006.335.006 1.892 0 4.67h5.992Z" clip-rule="evenodd"/><path stroke-linecap="round" d="m12 21l1-1m27 1l-1-1M15 5l-1-1m23 1l1-1m3 8h-1m-28 0h-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConceptSharing0)"/>`
	concernInnerSVG                                    = `<mask id="ipSConcern0"><g fill="none" stroke="#fff"><path stroke-linecap="round" stroke-width="4" d="M10.858 9.858A19.937 19.937 0 0 0 5 24a19.937 19.937 0 0 0 5.858 14.142m28.284 0A19.937 19.937 0 0 0 45 24a19.937 19.937 0 0 0-5.858-14.142M34.9 33.9A13.956 13.956 0 0 0 39 24a13.96 13.96 0 0 0-4.1-9.9m-19.8 0A13.956 13.956 0 0 0 11 24a13.96 13.96 0 0 0 4.1 9.9"/><path fill="#fff" stroke-linejoin="round" stroke-width="3.5" d="M28.182 20C30.29 20 32 21.612 32 23.6c0 2.588-2.546 4.8-3.818 6c-.849.8-1.91 1.6-3.182 2.4c-1.273-.8-2.333-1.6-3.182-2.4c-1.273-1.2-3.818-3.412-3.818-6c0-1.988 1.71-3.6 3.818-3.6c1.328 0 2.498.64 3.182 1.61c.684-.97 1.854-1.61 3.182-1.61Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConcern0)"/>`
	conditionerInnerSVG                                = `<mask id="ipSConditioner0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 24h32v20H8z"/><path stroke="#fff" d="M37 24v-7H11v7m6-7c2-2.167 3-6.5 3-13c3 0 10 5.417 10 12.733"/><path stroke="#000" d="M16 31h16v6H16z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConditioner0)"/>`
	conesInnerSVG                                      = `<mask id="ipSCones0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 8L4 40h40L24 8Z"/><path stroke="#000" stroke-linecap="round" d="m30 32l-6-4l-6 4m6-4v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCones0)"/>`
	configInnerSVG                                     = `<mask id="ipSConfig0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24 4l-6 6h-8v8l-6 6l6 6v8h8l6 6l6-6h8v-8l6-6l-6-6v-8h-8l-6-6Z"/><path fill="#000" stroke="#000" d="M24 30a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConfig0)"/>`
	confoundedFaceInnerSVG                             = `<mask id="ipSConfoundedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m32 17l-3 3l3 3m-16-6l3 3l-3 3m-1 8l3 3l3-3l3 3l3-3l3 3l3-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConfoundedFace0)"/>`
	confusedFaceInnerSVG                               = `<mask id="ipSConfusedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m0 13l14-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConfusedFace0)"/>`
	connectInnerSVG                                    = `<mask id="ipSConnect0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M8 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm2 30a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm28 2a6 6 0 1 0 0-12a6 6 0 0 0 0 12ZM22 28a8 8 0 1 0 0-16a8 8 0 0 0 0 16Zm12-16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z" clip-rule="evenodd"/><path d="m11 11l4 4m15-3l-2 2m6 19.5L28 26m-14 5l4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnect0)"/>`
	connectAddressOneInnerSVG                          = `<mask id="ipSConnectAddressOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 24c0 9.941 8.059 18 18 18s18-8.059 18-18M24 14v28"/><circle cx="24" cy="10" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnectAddressOne0)"/>`
	connectAddressTwoInnerSVG                          = `<mask id="ipSConnectAddressTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 24c0 9.941 8.059 18 18 18s18-8.059 18-18M24 14v28M6 24h6m24 0h6"/><circle cx="24" cy="10" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnectAddressTwo0)"/>`
	connectionInnerSVG                                 = `<mask id="ipSConnection0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="m39 34l5 5l-5 5"/><path fill="#fff" d="M8 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M12 8h8a4 4 0 0 1 4 4v23a4 4 0 0 0 4 4h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnection0)"/>`
	connectionBoxInnerSVG                              = `<mask id="ipSConnectionBox0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M43 4H5c-.552 0-1 .488-1 1.09v9.82c0 .602.448 1.09 1 1.09h38c.552 0 1-.488 1-1.09V5.09C44 4.489 43.552 4 43 4Zm0 28H5c-.552 0-1 .488-1 1.09v9.82c0 .602.448 1.09 1 1.09h38c.552 0 1-.488 1-1.09v-9.82c0-.602-.448-1.09-1-1.09Z"/><path stroke="#fff" stroke-linecap="round" d="M14 16v8.008l20 .01V32"/><path stroke="#000" stroke-linecap="round" d="M18 38h12M18 10h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnectionBox0)"/>`
	connectionPointInnerSVG                            = `<mask id="ipSConnectionPoint0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M5 24h38"/><path fill="#fff" d="M28 4h-8a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM16 32H8a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2Zm24 0h-8a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2Z"/><path stroke-linecap="round" d="M24 24v-8m12 16v-8m-24 8v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnectionPoint0)"/>`
	connectionPointTwoInnerSVG                         = `<mask id="ipSConnectionPointTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M36 8H13c-3 0-9 2-9 8s6 8 9 8h22c3 0 9 2 9 8s-6 8-9 8H12"/><path fill="#fff" d="M40 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConnectionPointTwo0)"/>`
	consignmentInnerSVG                                = `<mask id="ipSConsignment0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M8 14a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V14Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M16 12v20m16-20v20"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M28 12h8m-24 0h8m-8 20h8m8 0h8M4 38h40"/><path stroke="#fff" stroke-linecap="round" d="M18 38v2m-6-2v2m-6-2v2m18-2v2m6-2v2m6-2v2m6-2v2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M30 12V6H18v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConsignment0)"/>`
	consumeInnerSVG                                    = `<mask id="ipSConsume0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 14a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V14Z"/><path stroke="#000" stroke-linecap="round" d="m19 19l5 5l5-5m-11 6h12m-12 6h12m-6-6v10"/><path stroke="#fff" stroke-linecap="round" d="M8 6h32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConsume0)"/>`
	contrastInnerSVG                                   = `<mask id="ipSContrast0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M24 36V12c-6.627 0-12 5.373-12 12s5.373 12 12 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSContrast0)"/>`
	contrastViewInnerSVG                               = `<mask id="ipSContrastView0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M7 7h17v34H7z"/><path stroke-linecap="round" d="M24 7h4m5 0h2m-2 34h2m6-34v2m0 6v2m0 6v2m0 6v2m0 6v2m-14 0h-3m0-37v40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSContrastView0)"/>`
	contrastViewCircleInnerSVG                         = `<mask id="ipSContrastViewCircle0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 4C12.954 4 4 12.954 4 24s8.954 20 20 20V4Z" clip-rule="evenodd"/><path fill="#fff" d="M24 4c11.046 0 20 8.954 20 20s-8.954 20-20 20V4Z"/><path stroke-linecap="round" d="M24 36H9m15-8H5m19-8H5m19-8H9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSContrastViewCircle0)"/>`
	controlInnerSVG                                    = `<mask id="ipSControl0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="30" height="40" x="9" y="4" rx="2"/><circle cx="24" cy="31" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M18 12h3m-3 6h3m6 0h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSControl0)"/>`
	convergingGatewayInnerSVG                          = `<mask id="ipSConvergingGateway0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M22.8 4.201L4.413 22.586a2 2 0 0 0 0 2.828L22.8 43.8a2 2 0 0 0 2.829 0l18.384-18.385a2 2 0 0 0 0-2.828L25.628 4.2a2 2 0 0 0-2.829 0Z"/><path stroke="#000" stroke-linecap="round" d="M24.043 15.534v16.944m-8.472-8.472h16.944m-2.481-5.991L18.053 29.996m0-11.981l11.98 11.981"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSConvergingGateway0)"/>`
	cookInnerSVG                                       = `<mask id="ipSCook0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M42 36V20H14v16a6 6 0 0 0 6 6h16a6 6 0 0 0 6-6Z"/><path d="M4 20h40M18 8v4m10-6v6m10-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCook0)"/>`
	cookingInnerSVG                                    = `<mask id="ipSCooking0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M6 42h36M6 36h36"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M9 25c0-8.284 6.716-15 15-15c8.284 0 15 6.716 15 15v11H9V25Z"/><path stroke="#000" stroke-linecap="round" d="M17 25v4"/><path stroke="#fff" d="M28 10V8a4 4 0 0 0-8 0v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCooking0)"/>`
	cookingPotInnerSVG                                 = `<mask id="ipSCookingPot0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M10 44h28V20.947C38 14.901 31.732 10 24 10s-14 4.901-14 10.947V44Z" clip-rule="evenodd"/><path fill="#fff" d="M38 22.044v-1.097C38 14.901 31.732 10 24 10s-14 4.901-14 10.947v1.093l28 .004Z"/><path stroke-linecap="round" d="M4 22h40M21 4h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCookingPot0)"/>`
	coolInnerSVG                                       = `<mask id="ipSCool0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 41C13.5 38.25 8.001 31 5 26c-3-5 3.313-9.688 7-6l4 4V7.5a3.5 3.5 0 1 1 7 0V17a3.5 3.5 0 1 1 7 0v1.5a3.5 3.5 0 1 1 7 0v-5a3.5 3.5 0 1 1 7 0v16.615c0 1.897-.422 3.789-1.573 5.297C41.133 37.106 39.017 39.354 36 41c-5.5 3-11.5 2.75-17 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCool0)"/>`
	coordinateSystemInnerSVG                           = `<mask id="ipSCoordinateSystem0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24 12l14 8v16l-14 8l-14-8V20l14-8Z"/><path stroke="#fff" stroke-linecap="round" d="M24 6v6"/><path stroke="#000" stroke-linecap="round" d="m10 20l14 8l14-8"/><path stroke="#fff" stroke-linecap="round" d="m38 36l6 3M4 39l6-3"/><path stroke="#000" stroke-linecap="round" d="M24 28v16"/><path stroke="#fff" d="m31 16l7 4v8M17 16l-7 4v8m7 12l7 4l7-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoordinateSystem0)"/>`
	copyInnerSVG                                       = `<mask id="ipSCopy0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M13 12.432v-4.62A2.813 2.813 0 0 1 15.813 5h24.374A2.813 2.813 0 0 1 43 7.813v24.375A2.813 2.813 0 0 1 40.187 35h-4.67"/><path fill="#fff" d="M32.188 13H7.811A2.813 2.813 0 0 0 5 15.813v24.374A2.813 2.813 0 0 0 7.813 43h24.375A2.813 2.813 0 0 0 35 40.187V15.814A2.813 2.813 0 0 0 32.187 13Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCopy0)"/>`
	copyLinkInnerSVG                                   = `<mask id="ipSCopyLink0"><g fill="none" stroke-width="4"><path stroke="#fff" d="M12 9.927V7a3 3 0 0 1 3-3h26a3 3 0 0 1 3 3v26a3 3 0 0 1-3 3h-2.983"/><rect width="34" height="34" x="4" y="10" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m18.44 23.11l5.292-5.51c1.451-1.451 3.837-1.42 5.328.072c1.491 1.491 1.523 3.877.072 5.328l-1.91 2.023m-13.756 3.724c-.51.51-1.565 1.53-1.565 1.53c-1.452 1.451-1.492 4.038 0 5.53c1.49 1.49 3.876 1.523 5.328.071l5.164-4.688"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M18.663 28.328a3.863 3.863 0 0 1-1.131-2.473A3.665 3.665 0 0 1 18.592 23m3.729 2.861c1.491 1.491 1.523 3.877.072 5.329"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCopyLink0)"/>`
	copyOneInnerSVG                                    = `<mask id="ipSCopyOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M13 38h28V16H30V4H13v34Z"/><path stroke="#fff" stroke-linejoin="round" d="m30 4l11 12M7 20v24h21"/><path stroke="#000" d="M19 20h4m-4 8h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCopyOne0)"/>`
	copyrightInnerSVG                                  = `<mask id="ipSCopyright0"><g fill="none"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" d="M24 17h-4v7h4c3 0 4-2 4-3.5S27 17 24 17Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 31v-7m0 0v-7h4c3 0 4 2 4 3.5S27 24 24 24h-1m-3 0h3m5 7l-5-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCopyright0)"/>`
	coronavirusInnerSVG                                = `<mask id="ipSCoronavirus0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M7.635 35.5A20.11 20.11 0 0 0 13 40.706m14.868 2.92A20.107 20.107 0 0 1 24 44c-1.324 0-2.617-.129-3.869-.374M43.55 28.243a20.173 20.173 0 0 0 .017-8.4M40.365 12.5A20.102 20.102 0 0 0 35 7.294M20.155 4.37A20.1 20.1 0 0 1 24 4c1.315 0 2.6.127 3.845.37M7.635 12.5A20.104 20.104 0 0 1 13 7.294m27.5 28a20.096 20.096 0 0 1-5.365 5.206M16 24H4m6 14l8.343-8.343M24 32v12m14-6l-8.343-8.343M32 24h12m-6-14l-8.343 8.343M24 16V4m-14 6l8.343 8.343m-13.91 1.5A20.083 20.083 0 0 0 4 24c0 1.425.15 2.816.433 4.157"/><path fill="#fff" d="M24 32a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoronavirus0)"/>`
	correctInnerSVG                                    = `<mask id="ipSCorrect0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m4 24l5-5l10 10L39 9l5 5l-25 25L4 24Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCorrect0)"/>`
	cosmeticBrushInnerSVG                              = `<mask id="ipSCosmeticBrush0"><g fill="none"><g stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSCosmeticBrush1)"><path fill="#fff" stroke="#fff" d="m16.1 25.829l22.627-19.8s2.12-2.12 4.242 0c2.121 2.122 0 4.243 0 4.243L23.17 32.9l-7.07-7.071Z"/><path stroke="#000" stroke-linecap="round" d="m22.464 20.879l5.657 5.657"/><path stroke="#fff" d="m5.493 30.778l10.607-4.95l7.07 7.072l-4.95 10.606s-4.95.707-9.192-3.535c-4.243-4.243-3.536-9.193-3.536-9.193Z"/><path stroke="#fff" stroke-linecap="round" d="m6.908 36.435l4.95-2.121m.707 7.778l1.415-2.828"/><path stroke="#fff" d="m18.93 23.354l2.828-2.475l2.828-2.475m6.01 6.01l-2.475 2.828l-2.475 2.829"/></g><defs><clipPath id="ipSCosmeticBrush1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCosmeticBrush0)"/>`
	couponInnerSVG                                     = `<mask id="ipSCoupon0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 19.313V9h40v10.313a5.5 5.5 0 0 0-3.636 5.187A5.5 5.5 0 0 0 44 29.687V40H4V29.687A5.5 5.5 0 0 0 7.636 24.5A5.5 5.5 0 0 0 4 19.313Z"/><path stroke="#000" stroke-linecap="round" d="m19 16l5 5l5-5m-11 6h12m-12 6.167h12M24 22v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCoupon0)"/>`
	cpuInnerSVG                                        = `<mask id="ipSCpu0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M38 8H10a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M30 18H18v12h12V18Z"/><path fill="#fff" fill-rule="evenodd" d="M14.91 2v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14.91 2v6"/><path fill="#fff" fill-rule="evenodd" d="M14.91 40v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14.91 40v6"/><path fill="#fff" fill-rule="evenodd" d="M24 2v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 2v6"/><path fill="#fff" fill-rule="evenodd" d="M24 40v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 40v6"/><path fill="#fff" fill-rule="evenodd" d="M33.09 2v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33.09 2v6"/><path fill="#fff" fill-rule="evenodd" d="M33.09 40v6v-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33.09 40v6"/><path fill="#fff" fill-rule="evenodd" d="M2 14.91h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M2 14.91h6"/><path fill="#fff" fill-rule="evenodd" d="M40 14.91h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 14.91h6"/><path fill="#fff" fill-rule="evenodd" d="M2 24h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M2 24h6"/><path fill="#fff" fill-rule="evenodd" d="M40 24h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 24h6"/><path fill="#fff" fill-rule="evenodd" d="M2 33.09h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M2 33.09h6"/><path fill="#fff" fill-rule="evenodd" d="M40 33.09h6h-6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 33.09h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCpu0)"/>`
	crabInnerSVG                                       = `<mask id="ipSCrab0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M5 17C5 12 6 2 17 6c.946 3.782-2 11-12 11Zm38 0c0-5-1-15-12-11c-.946 3.782 2 11 12 11Z"/><rect width="32" height="20" x="8" y="22" fill="#fff" rx="10"/><path d="M27 22v-4m-6 4v-4m22-1c1 3 1 9-3 12M5 17c-1 3 0 8 3 12m22 13h14l-4-9m-22 9H4l4-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrab0)"/>`
	creativeInnerSVG                                   = `<mask id="ipSCreative0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 39V9a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3Z"/><path fill="#000" stroke="#000" d="m24 18.316l-2.896 5.91l-6.578.954l4.765 4.658l-1.139 6.478L24 33.199l5.849 3.117l-1.13-6.478l4.756-4.658l-6.541-.954L24 18.316Z"/><path stroke="#000" stroke-linecap="round" d="M18.316 12.632h11.368"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCreative0)"/>`
	croissantInnerSVG                                  = `<mask id="ipSCroissant0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSCroissant1)"><path stroke-linecap="round" stroke-linejoin="round" d="M7 29s-.044 3.748 1.456 8.248c.873 2.616 1.914 4.219 3.223 5.003c1.677 1.005 3.397-.98 4.379-2.67c.962-1.657 2.375-3.353 3.49-4.581M33 7.911c2.623.44 5.532 1.006 6.626 1.508c1.426.654 2.86 1.986 3.431 3.411c.531 1.324-.847 2.34-2.093 3.034c-1.405.783-2.869 2.01-4.065 3.136"/><path stroke-linecap="round" stroke-linejoin="round" d="M24.202 29.776L21.7 31.513a2.97 2.97 0 0 0-1.036 1.27v0a2.97 2.97 0 0 1-3.886 1.566L8.803 30.98a2.96 2.96 0 0 1-1.61-3.792l.45-1.169a11.112 11.112 0 0 1 4.576-5.486v0m18.501 3.975l1.39-1.504l.912-.987a3.312 3.312 0 0 1 1.125-.795v0a3.305 3.305 0 0 0 1.812-4.146l-2.852-8.01a2.797 2.797 0 0 0-3.259-1.789l-1.218.279A10.798 10.798 0 0 0 22.114 12v0"/><path d="M13.41 23.078a3.817 3.817 0 0 1-1.017-5.12a19.032 19.032 0 0 1 6.154-6.135a3.8 3.8 0 0 1 5.036.954l5.932 7.909a4 4 0 0 1-.913 5.682l-.24.167c-.301.21-.572.46-.804.743l-.684.832a4 4 0 0 1-5.416.716l-8.047-5.748Z"/></g><defs><clipPath id="ipSCroissant1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCroissant0)"/>`
	crossRingInnerSVG                                  = `<mask id="ipSCrossRing0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm32 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M12 24h24M24 12v24m13.305-20.89a16.073 16.073 0 0 0-4.415-4.415m-17.78 0a16.074 16.074 0 0 0-4.415 4.415l4.415-4.415ZM10.696 32.89a16.08 16.08 0 0 0 4.415 4.415l-4.415-4.415Zm22.195 4.415a16.079 16.079 0 0 0 4.415-4.415l-4.415 4.415Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrossRing0)"/>`
	crossSocietyInnerSVG                               = `<mask id="ipSCrossSociety0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 18h11V7a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v11h11a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H30v11a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2V30H7a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrossSociety0)"/>`
	crownInnerSVG                                      = `<mask id="ipSCrown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9 40L4 17l10 5L24 8l10 14l10-5l-5 23H9Z"/><path fill="#000" stroke="#000" d="M24 33a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrown0)"/>`
	crownThreeInnerSVG                                 = `<mask id="ipSCrownThree0"><g fill="#fff" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M13 42h22l6-21l-10 5l-7-14l-7 14l-10-5l6 21Z"/><circle cx="7" cy="18" r="3"/><circle cx="24" cy="9" r="3"/><circle cx="41" cy="18" r="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrownThree0)"/>`
	crownTwoInnerSVG                                   = `<mask id="ipSCrownTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M13 29V19l6 3l5-7l5 7l6-3v10H13Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCrownTwo0)"/>`
	cruiseInnerSVG                                     = `<mask id="ipSCruise0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linejoin="round" d="m38 42l3.39-9.325a2 2 0 0 0-.984-2.472l-15.512-7.756a2 2 0 0 0-1.788 0L7.594 30.203a2 2 0 0 0-.985 2.472L10 42"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M35 14H13a2 2 0 0 0-2 2v12l12.162-5.613a2 2 0 0 1 1.676 0L37 28V16a2 2 0 0 0-2-2Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M29 14V6a2 2 0 0 0-2-2h-6a2 2 0 0 0-2 2v8"/><path stroke-linecap="round" d="M24 32v8"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 44c4 0 4-2 7-2s3 2 6 2s3.5-2 7-2s4 2 7 2s3-2 6-2s3 2 7 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCruise0)"/>`
	cryingBabyInnerSVG                                 = `<mask id="ipSCryingBaby0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c9.941 0 18-8.059 18-18S33.941 8 24 8S6 16.059 6 26s8.059 18 18 18Z"/><path stroke="#fff" stroke-linecap="round" d="M24 8c-.25-1-2-4-6-4m6 4c.083-1 .6-3.2 2-4"/><path stroke="#000" stroke-linecap="round" d="M31 35s-2-4-7-4s-7 4-7 4m17-15l-6-1m-8 0l-6 1m1 0v5m18-5v5"/><path stroke="#fff" stroke-linecap="round" d="M4 24v4m40-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCryingBaby0)"/>`
	cubeFourInnerSVG                                   = `<mask id="ipSCubeFour0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m15.34 9l-8.66 5v20l8.66 5L24 44l8.66-5l8.66-5V14l-8.66-5L24 4l-8.66 5Z"/><path stroke="#000" d="m24 24l-10.392 6M24 24V11v13Zm0 0l10.392 6L24 24Zm2.815 11.375L24 37l-2.814-1.625m11.258-19.5l2.814 1.625v3.25m-22.516 0V17.5l2.814-1.625"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCubeFour0)"/>`
	cupInnerSVG                                        = `<mask id="ipSCup0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M8.778 17.012c0-.559.453-1.012 1.012-1.012h23.976c.559 0 1.012.453 1.012 1.012V31c0 7.18-5.82 13-13 13s-13-5.82-13-13V17.012Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M8.778 23h26v8h-26z"/><path stroke-linecap="round" stroke-linejoin="round" d="M21.778 4v6m-8-4v2m16-2v2"/><path stroke-linecap="round" d="M34.778 34a7 7 0 1 0 0-14"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSCup0)"/>`
	cupOneInnerSVG                                     = `<mask id="ipSCupOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 17h28c2 0 6 0 6 3s-4 3-6 3v18a2 2 0 0 1-2 2H12a2 2 0 0 1-2-2V23c-2 0-6 0-6-3s4-3 6-3Z"/><path d="M41 17c0-5.873-5.541-7.681-13-9V6a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2c-7.459 1.319-13 3.127-13 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCupOne0)"/>`
	curlingInnerSVG                                    = `<mask id="ipSCurling0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M38 42H10c-3.31 0-6-2.68-6-6v-8c0-3.31 2.68-6 6-6h28c3.31 0 6 2.68 6 6v8c0 3.32-2.68 6-6 6Z"/><path stroke-linecap="round" d="M4 32h40"/><path fill="#fff" stroke-linecap="round" d="m10 22l6.48-14.8A1.98 1.98 0 0 1 18.31 6H35.5C37.43 6 39 7.57 39 9.5S37.43 13 35.5 13H22v9H10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCurling0)"/>`
	curveAdjustmentInnerSVG                            = `<mask id="ipSCurveAdjustment0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 4H4v40h40V4Z"/><path stroke="#000" stroke-linecap="round" d="M38 10c-6 0-11 4-14 14s-8 14-14 14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCurveAdjustment0)"/>`
	cuttingOneInnerSVG                                 = `<mask id="ipSCuttingOne0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M11 42a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm26 0a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" d="m15.377 39.413l2.123-3.597l17-29.445"/><path stroke-linecap="round" d="m13.496 6.175l17 29.445l2.13 3.793"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCuttingOne0)"/>`
	cuvetteInnerSVG                                    = `<mask id="ipSCuvette0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M18 10h12v17l14 14v3H4v-3l14-14V10Z" clip-rule="evenodd"/><path stroke="#fff" d="M40.5 37.5L37 34l-3.5-3.5m7 7L37 34l-3.5-3.5m-19 0L11 34l-3.5 3.5m7-7L11 34l-3.5 3.5M18 4h12"/><path stroke="#000" d="M24 27v1m0-10v3"/><path stroke="#fff" d="M10 35h28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCuvette0)"/>`
	cycleOneInnerSVG                                   = `<mask id="ipSCycleOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 20c0-8 4-12 12-12m22 22c0 8-4 12-12 12"/><path fill="#fff" d="M28 18c0-5.523 4.477-10 10-10h4v14H28v-4ZM6 28h14v4c0 5.523-4.477 10-10 10H6V28Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCycleOne0)"/>`
	cylinderInnerSVG                                   = `<mask id="ipSCylinder0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 10c0 3.314-8.954 6-20 6S4 13.314 4 10s8.954-6 20-6s20 2.686 20 6Zm0 28c0 3.314-8.954 6-20 6S4 41.314 4 38s8.954-6 20-6s20 2.686 20 6Z"/><path d="M44 10v28M4 10v28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSCylinder0)"/>`
	damageMapInnerSVG                                  = `<mask id="ipSDamageMap0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 10v28a2 2 0 0 0 2 2h11l-3-11l7-2l-1-7l8-4l-2-3l3-5H7a2 2 0 0 0-2 2Zm38 28V10a2 2 0 0 0-2-2h-3l-4 6l3 5l-9 4l1 8l-7 2l2 7h17a2 2 0 0 0 2-2Z"/><path fill="#000" fill-rule="evenodd" stroke="#000" d="M14.5 18a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDamageMap0)"/>`
	darkModeInnerSVG                                   = `<mask id="ipSDarkMode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24.003 4l5.27 5.27h9.457v9.456l5.27 5.27l-5.27 5.278v9.456h-9.456L24.004 44l-5.278-5.27H9.27v-9.456L4 23.997l5.27-5.27V9.27h9.456L24.003 4Z"/><path fill="#000" stroke="#000" d="M27 17c0 8-5 9-10 9c0 4 6.5 8 12 4s2-13-2-13Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDarkMode0)"/>`
	dashboardCarInnerSVG                               = `<mask id="ipSDashboardCar0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6.572 37.428A21.904 21.904 0 0 1 2 24C2 11.85 11.85 2 24 2s22 9.85 22 22c0 5.056-1.705 9.713-4.572 13.428"/><path d="M12.303 31.697A13.935 13.935 0 0 1 10 24c0-7.732 6.268-14 14-14s14 6.268 14 14c0 2.843-.847 5.488-2.303 7.697"/><path fill="#fff" fill-rule="evenodd" d="m24 30l16 16H8l16-16Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDashboardCar0)"/>`
	dashboardOneInnerSVG                               = `<mask id="ipSDashboardOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24.778 7c-11.046 0-20 8.954-20 20c0 5.23 1.713 10.436 5 14h30c3.286-3.564 5-8.77 5-14c0-11.046-8.954-20-20-20Z"/><circle cx="24.778" cy="30" r="4" fill="#fff"/><path d="M24.778 20v6m0-14v2m-15 14h2m2-10l1.414 1.414M37.778 28h2m-5-8.586L36.192 18"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSDashboardOne0)"/>`
	dataInnerSVG                                       = `<mask id="ipSData0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 11v27c0 3.314-8.954 6-20 6S4 41.314 4 38V11"/><path d="M44 29c0 3.314-8.954 6-20 6S4 32.314 4 29m40-9c0 3.314-8.954 6-20 6S4 23.314 4 20"/><ellipse cx="24" cy="10" fill="#fff" rx="20" ry="6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSData0)"/>`
	dataAllInnerSVG                                    = `<mask id="ipSDataAll0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><ellipse cx="24" cy="11" rx="20" ry="6"/><path d="M10.77 15.5C6.62 16.6 4 18.208 4 20c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.933-8.158 1.5-13.23 1.5c-5.072 0-9.704-.567-13.23-1.5Z"/><path d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.933-8.158 1.5-13.23 1.5c-5.072 0-9.704-.567-13.23-1.5Z"/><path d="M10.77 33.5C6.62 34.6 4 36.208 4 38c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.934-8.158 1.5-13.23 1.5c-5.072 0-9.704-.566-13.23-1.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataAll0)"/>`
	dataArrivalInnerSVG                                = `<mask id="ipSDataArrival0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M6 42h36V6H30c-1.324 3.159-3.324 4.738-6 4.738S19.324 9.158 18 6H6v36Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="m15 24l6 6l12-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataArrival0)"/>`
	dataDisplayInnerSVG                                = `<mask id="ipSDataDisplay0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M22 8v12c0 2.21-4.03 4-9 4s-9-1.79-9-4V8"/><path d="M22 14c0 2.21-4.03 4-9 4s-9-1.79-9-4"/><path fill="#fff" d="M22 8c0 2.21-4.03 4-9 4s-9-1.79-9-4s4.03-4 9-4s9 1.79 9 4Z"/><path d="M32 6h6a4 4 0 0 1 4 4v6M16 42h-6a4 4 0 0 1-4-4v-6m29 6v6m6 0H29"/><path fill="#fff" d="M44 38V26H26v12h18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataDisplay0)"/>`
	dataFileInnerSVG                                   = `<mask id="ipSDataFile0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V4h23l9 10.5V44H8Z"/><path fill="#000" stroke="#000" d="M15 28h6v7h-6z"/><path stroke="#000" d="M14 35h20"/><path fill="#000" stroke="#000" d="M21 23h6v12h-6zm6-5h6v17h-6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataFile0)"/>`
	dataFourInnerSVG                                   = `<mask id="ipSDataFour0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSDataFour1)"><ellipse cx="24" cy="11" rx="20" ry="6"/><path d="M10.77 15.5C6.62 16.6 4 18.208 4 20c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path fill="#fff" d="M10.77 33.5C6.62 34.6 4 36.208 4 38c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.934-8.158 1.5-13.23 1.5c-5.072 0-9.704-.566-13.23-1.5Z"/></g><defs><clipPath id="ipSDataFour1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataFour0)"/>`
	dataLockInnerSVG                                   = `<mask id="ipSDataLock0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M39 28v4h-8v-4a4 4 0 0 1 8 0Zm-13 4h18v12H26V32Z"/><path d="M32 6h6a4 4 0 0 1 4 4v6M16 42h-6a4 4 0 0 1-4-4v-6M22 8v12c0 2.21-4.03 4-9 4s-9-1.79-9-4V8"/><path d="M22 14c0 2.21-4.03 4-9 4s-9-1.79-9-4"/><path fill="#fff" d="M22 8c0 2.21-4.03 4-9 4s-9-1.79-9-4s4.03-4 9-4s9 1.79 9 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataLock0)"/>`
	dataOneInnerSVG                                    = `<mask id="ipSDataOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><ellipse cx="24" cy="11" fill="#fff" rx="20" ry="6"/><path d="M10.77 15.5C6.62 16.6 4 18.208 4 20c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path d="M10.77 33.5C6.62 34.6 4 36.208 4 38c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataOne0)"/>`
	dataScreenInnerSVG                                 = `<mask id="ipSDataScreen0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="30" x="4" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#fff" d="M24 36v7"/><path stroke="#000" d="M32 14L16 28"/><path stroke="#fff" d="M10 43h28"/><circle cx="15" cy="17" r="3" fill="#000" stroke="#000"/><circle cx="33" cy="25" r="3" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataScreen0)"/>`
	dataServerInnerSVG                                 = `<mask id="ipSDataServer0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path stroke="#000" d="M4 32h40"/><path stroke="#000" stroke-linejoin="round" d="M10 38h1m15 0h12"/><path stroke="#fff" stroke-linejoin="round" d="M44 37V27M4 37V27"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataServer0)"/>`
	dataSheetInnerSVG                                  = `<mask id="ipSDataSheet0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="32" x="4" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M32 25v7m-8-16v16m-8-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataSheet0)"/>`
	dataSwitchingInnerSVG                              = `<mask id="ipSDataSwitching0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M22 8v12c0 2.21-4.03 4-9 4s-9-1.79-9-4V8"/><path d="M22 14c0 2.21-4.03 4-9 4s-9-1.79-9-4"/><path fill="#fff" d="M22 8c0 2.21-4.03 4-9 4s-9-1.79-9-4s4.03-4 9-4s9 1.79 9 4Z"/><path d="M44 28v12c0 2.21-4.03 4-9 4s-9-1.79-9-4V28"/><path d="M44 34c0 2.21-4.03 4-9 4s-9-1.79-9-4"/><path fill="#fff" d="M44 28c0 2.21-4.03 4-9 4s-9-1.79-9-4s4.03-4 9-4s9 1.79 9 4Z"/><path d="M32 6h6a4 4 0 0 1 4 4v6M16 42h-6a4 4 0 0 1-4-4v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataSwitching0)"/>`
	dataThreeInnerSVG                                  = `<mask id="ipSDataThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M10.77 33.5C6.62 34.6 4 36.208 4 38c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><ellipse cx="24" cy="11" rx="20" ry="6"/><path d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path d="M10.77 15.5C6.62 16.6 4 18.208 4 20c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path fill="#fff" d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.933-8.158 1.5-13.23 1.5c-5.072 0-9.704-.567-13.23-1.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataThree0)"/>`
	dataTwoInnerSVG                                    = `<mask id="ipSDataTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><ellipse cx="24" cy="11" rx="20" ry="6"/><path fill="#fff" d="M10.77 15.5C6.62 16.6 4 18.208 4 20c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5c-3.526.933-8.158 1.5-13.23 1.5c-5.072 0-9.704-.567-13.23-1.5Z"/><path d="M10.77 24.5C6.62 25.6 4 27.208 4 29c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/><path d="M10.77 33.5C6.62 34.6 4 36.208 4 38c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.792-2.619-3.4-6.77-4.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataTwo0)"/>`
	dataUserInnerSVG                                   = `<mask id="ipSDataUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M22 8v12c0 2.21-4.03 4-9 4s-9-1.79-9-4V8"/><path d="M22 14c0 2.21-4.03 4-9 4s-9-1.79-9-4"/><path fill="#fff" d="M22 8c0 2.21-4.03 4-9 4s-9-1.79-9-4s4.03-4 9-4s9 1.79 9 4Z"/><path d="M32 6h6a4 4 0 0 1 4 4v6M16 42h-6a4 4 0 0 1-4-4v-6"/><circle cx="35" cy="29" r="5" fill="#fff"/><path fill="#fff" d="M44 44H26a9 9 0 1 1 18 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDataUser0)"/>`
	databaseAlertInnerSVG                              = `<mask id="ipSDatabaseAlert0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10ZM34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M34 26v4m0 5v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseAlert0)"/>`
	databaseCodeInnerSVG                               = `<mask id="ipSDatabaseCode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#000" d="m37 29l2 2l-2 2m-6 0l-2-2l2-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseCode0)"/>`
	databaseConfigInnerSVG                             = `<mask id="ipSDatabaseConfig0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#000" d="M34 27v4m3.464-2L34 31m3.464 2L34 31m0 4v-4m-3.464 2L34 31m-3.464-2L34 31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseConfig0)"/>`
	databaseDownloadInnerSVG                           = `<mask id="ipSDatabaseDownload0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M34 26v10m0 0l4-4m-4 4l-4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseDownload0)"/>`
	databaseEnterInnerSVG                              = `<mask id="ipSDatabaseEnter0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="m39 31l-4-4m4 4l-4 4m4-4H29"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseEnter0)"/>`
	databaseFailInnerSVG                               = `<mask id="ipSDatabaseFail0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="m37 34l-3-3m0 0l3-3m-3 3l-3-3m3 3l-3 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseFail0)"/>`
	databaseFirstInnerSVG                              = `<mask id="ipSDatabaseFirst0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#000" d="M34 35v-8l-2 2m2 6h2m-2 0h-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseFirst0)"/>`
	databaseForbidInnerSVG                             = `<mask id="ipSDatabaseForbid0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10ZM34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="m37 28l-6 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseForbid0)"/>`
	databaseLockInnerSVG                               = `<mask id="ipSDatabaseLock0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" stroke="#000" d="M39 31a5 5 0 0 1-10 0h10Zm-5-5a3 3 0 0 1 3 3v2h-6v-2a3 3 0 0 1 3-3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseLock0)"/>`
	databaseNetworkInnerSVG                            = `<mask id="ipSDatabaseNetwork0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68M34 41s-3.5-5.862-3.5-10c0-4.137 3.5-10 3.5-10m0 20s3.5-5.862 3.5-10c0-4.137-3.5-10-3.5-10m10 10H24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseNetwork0)"/>`
	databaseNetworkPointInnerSVG                       = `<mask id="ipSDatabaseNetworkPoint0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 36v-6m-4 10H6m22 0h14"/><path fill="#fff" d="M28 40a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/><path d="M37 17c0 7.18-5.82 13-13 13s-13-5.82-13-13m26 0c0-7.18-5.82-13-13-13S11 9.82 11 17m26 0H11"/><path fill="#fff" d="M29 17c0 7.18-2.239 13-5 13s-5-5.82-5-13s2.239-13 5-13s5 5.82 5 13Z"/><path d="M37 17H11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseNetworkPoint0)"/>`
	databasePointInnerSVG                              = `<defs><path id="ipSDatabasePoint0" fill="#fff" d="M39 9c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path id="ipSDatabasePoint1" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M39 9c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/></defs><mask id="ipSDatabasePoint2"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 36v-6m-4 10H6m22 0h14"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M28 40a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M39 9v16c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5V9"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M39 17c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5"/><use href="#ipSDatabasePoint0"/><use href="#ipSDatabasePoint0"/><use href="#ipSDatabasePoint1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><use href="#ipSDatabasePoint1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabasePoint2)"/>`
	databasePositionInnerSVG                           = `<mask id="ipSDatabasePosition0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabasePosition0)"/>`
	databasePowerInnerSVG                              = `<mask id="ipSDatabasePower0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="m34 26l-3 4l6 2l-3 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabasePower0)"/>`
	databaseProportionInnerSVG                         = `<mask id="ipSDatabaseProportion0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="m37 28l-6 6m0-6l1-1m5 8l1-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseProportion0)"/>`
	databaseSearchInnerSVG                             = `<mask id="ipSDatabaseSearch0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10ZM34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M36.828 33.828L41 38"/><path fill="#fff" stroke="#000" d="M38 31a3.987 3.987 0 0 1-1.172 2.828A4 4 0 1 1 38 31Z"/><path stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseSearch0)"/>`
	databaseSettingInnerSVG                            = `<mask id="ipSDatabaseSetting0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10ZM34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path fill="#fff" stroke="#000" d="m34 27l3.464 2v4L34 35l-3.464-2v-4L34 27Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseSetting0)"/>`
	databaseSuccessInnerSVG                            = `<mask id="ipSDatabaseSuccess0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M38.5 29L33 34.5l-3-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseSuccess0)"/>`
	databaseSyncInnerSVG                               = `<mask id="ipSDatabaseSync0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M38 31a4 4 0 0 1-4 4m-4-4a4 4 0 0 1 4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseSync0)"/>`
	databaseTimeInnerSVG                               = `<mask id="ipSDatabaseTime0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 31c0 5.523-4.477 10-10 10c-1.79 0-3.472-.47-4.926-1.295A10.01 10.01 0 0 1 24 31c0-2.568.968-4.91 2.558-6.68A9.975 9.975 0 0 1 34 21c5.523 0 10 4.477 10 10Z"/><path stroke="#fff" d="M34 12v9a9.975 9.975 0 0 0-7.442 3.32A9.963 9.963 0 0 0 24 31a10.01 10.01 0 0 0 5.074 8.705C26.412 40.51 22.878 41 19 41c-8.284 0-15-2.239-15-5V12"/><path fill="#fff" stroke="#fff" d="M34 12c0 2.761-6.716 5-15 5c-8.284 0-15-2.239-15-5s6.716-5 15-5c8.284 0 15 2.239 15 5Z"/><path stroke="#fff" d="M4 28c0 2.761 6.716 5 15 5c1.807 0 3.54-.106 5.144-.302M4 20c0 2.761 6.716 5 15 5c2.756 0 5.339-.248 7.558-.68"/><path stroke="#000" d="M38 31h-4v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDatabaseTime0)"/>`
	deathStarInnerSVG                                  = `<mask id="ipSDeathStar0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" d="M5 25h39"/><circle cx="19" cy="15" r="4" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" d="M31 31h12m-9-14h8M25 37h14"/><path stroke="#fff" d="M40 11.998A19.91 19.91 0 0 1 44 24c0 7.808-4.475 14.572-11 17.865M4.4 20c-.262 1.292-.4 2.63-.4 4c0 1.727.219 3.402.63 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeathStar0)"/>`
	deerInnerSVG                                       = `<mask id="ipSDeer0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M36 27c0 7.217-5.373 17-12 17s-12-9.783-12-17c0-7.216 1.5-11 12-11s12 3.784 12 11Z"/><ellipse fill="#fff" stroke="#fff" stroke-width="4" rx="5" ry="3.5" transform="scale(1 -1) rotate(45 40.625 38.327)"/><ellipse cx="9" cy="17.5" fill="#fff" stroke="#fff" stroke-width="4" rx="5" ry="3.5" transform="rotate(45 9 17.5)"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M12 4c0 6.627 5.373 12 12 12s12-5.373 12-12"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M18 7c0 4.97 2.686 9 6 9s6-4.03 6-9"/><circle cx="20" cy="26" r="2" fill="#000"/><circle cx="24" cy="34" r="2" fill="#000"/><circle cx="28" cy="26" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeer0)"/>`
	degreeHatInnerSVG                                  = `<mask id="ipSDegreeHat0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M2 17.4L23.022 9l21.022 8.4l-21.022 8.4L2 17.4Z"/><path stroke-linecap="round" d="M44.044 17.51v9.223m-32.488-4.908v12.442S16.366 39 23.022 39c6.657 0 11.467-4.733 11.467-4.733V21.825"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDegreeHat0)"/>`
	deleteInnerSVG                                     = `<mask id="ipSDelete0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9 10v34h30V10H9Z"/><path stroke="#000" stroke-linecap="round" d="M20 20v13m8-13v13"/><path stroke="#fff" stroke-linecap="round" d="M4 10h40"/><path fill="#fff" stroke="#fff" d="m16 10l3.289-6h9.488L32 10H16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDelete0)"/>`
	deleteFiveInnerSVG                                 = `<mask id="ipSDeleteFive0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M8 11h32M18 5h12"/><path fill="#fff" stroke="#fff" d="M12 17h24v23a3 3 0 0 1-3 3H15a3 3 0 0 1-3-3V17Z"/><path stroke="#000" stroke-linecap="round" d="m20 25l8 8m0-8l-8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteFive0)"/>`
	deleteFourInnerSVG                                 = `<mask id="ipSDeleteFour0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 11h32M18 5h12"/><path fill="#fff" d="M12 17h24v23a3 3 0 0 1-3 3H15a3 3 0 0 1-3-3V17Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteFour0)"/>`
	deleteKeyInnerSVG                                  = `<mask id="ipSDeleteKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M18.424 10.538A2 2 0 0 1 19.788 10H42a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H19.788a2 2 0 0 1-1.364-.538L4 24l14.424-13.462Z"/><path stroke="#000" d="M36 19L26 29m0-10l10 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteKey0)"/>`
	deleteModeInnerSVG                                 = `<mask id="ipSDeleteMode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24.003 4l5.27 5.27h9.457v9.456l5.27 5.27l-5.27 5.278v9.456h-9.456L24.004 44l-5.278-5.27H9.27v-9.456L4 23.997l5.27-5.27V9.27h9.456L24.003 4Z"/><path stroke="#000" d="M17 24h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteMode0)"/>`
	deleteOneInnerSVG                                  = `<mask id="ipSDeleteOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="m15 12l1.2-7h15.6l1.2 7"/><path stroke="#fff" stroke-linecap="round" d="M6 12h36"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m37 12l-2 31H13l-2-31h26Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M19 35h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteOne0)"/>`
	deleteThemesInnerSVG                               = `<mask id="ipSDeleteThemes0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M8 15h32l-3 29H11L8 15Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M20.002 25.002v10m8-10.002v9.997"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M12 15L28.324 3L36 15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteThemes0)"/>`
	deleteThreeInnerSVG                                = `<mask id="ipSDeleteThree0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m17 31l14-14m-12 2l-2-2m14 14l-2-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteThree0)"/>`
	deleteTwoInnerSVG                                  = `<mask id="ipSDeleteTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M14 11L4 24l10 13h30V11H14Z"/><path stroke="#000" d="m21 19l10 10m0-10L21 29"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeleteTwo0)"/>`
	deliveryInnerSVG                                   = `<mask id="ipSDelivery0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m20 33l6 2s15-3 17-3s2 2 0 4s-9 8-15 8s-10-3-14-3H4"/><path d="M4 29c2-2 6-5 10-5s13.5 4 15 6s-3 5-3 5M16 18v-8a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v16"/><path fill="#fff" d="M25 8h10v9H25z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDelivery0)"/>`
	descendInnerSVG                                    = `<mask id="ipSDescend0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSDescend1)"><path fill="#fff" d="m11.549 16.625l1.464-5.464s-4.794 1.152-7.1 2.857c-2.308 1.706-2.653 5.399.074 6.973c2.726 1.574 38.186 18.945 38.186 18.945l-2.768-8.794L11.55 16.625Z"/><path d="m20 35l6 3m3-13L26 9l-4-2l-3 13"/></g><defs><clipPath id="ipSDescend1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDescend0)"/>`
	deskLampInnerSVG                                   = `<mask id="ipSDeskLamp0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M8 24.596C8 25.37 8.629 26 9.404 26h29.192C39.37 26 40 25.371 40 24.596V20c0-8.837-7.163-16-16-16S8 11.163 8 20v4.596Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M24 42V26m-9 6v-6m18 16H15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeskLamp0)"/>`
	deskLampOneInnerSVG                                = `<mask id="ipSDeskLampOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M6 40.999h36m-3-22v22m-12-27l12 10"/><path fill="#fff" d="M26.34 14.577a4.43 4.43 0 0 0 .567-.794c1.182-2.115.45-4.982-1.6-6.204c-2.048-1.22-4.819-.44-6.003 1.673c-.187.334-.29.595-.384.904c-3.576-.276-7.007 1.475-8.92 4.895L26.694 25c1.913-3.42 1.666-7.364-.354-10.423Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDeskLampOne0)"/>`
	devicesInnerSVG                                    = `<mask id="ipSDevices0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M23 43h20V5H14v10"/><path fill="#fff" stroke="#fff" d="M5 15h18v28H5V15Z"/><path stroke="#000" stroke-linecap="round" d="M13 37h2"/><path stroke="#fff" stroke-linecap="round" d="M28 37h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDevices0)"/>`
	diamondNecklaceInnerSVG                            = `<mask id="ipSDiamondNecklace0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 32.41L24 29l7 3.41v7.5L24 44l-7-4.09v-7.5Z"/><path d="M8 4c.455 8.333 6 25 16 25S40 12.784 40 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamondNecklace0)"/>`
	diamondOneInnerSVG                                 = `<mask id="ipSDiamondOne0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M5.939 13.934L23.036 4.53a2 2 0 0 1 1.928 0l17.097 9.404a2 2 0 0 1 .683 2.888l-17.098 24.79a2 2 0 0 1-3.292 0L5.256 16.823a2 2 0 0 1 .683-2.888Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamondOne0)"/>`
	diamondRingInnerSVG                                = `<mask id="ipSDiamondRing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="25" cy="29" r="15"/><path fill="#fff" d="m18 8l3-4h8.054L32 8l-7 6l-7-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamondRing0)"/>`
	diamondThreeInnerSVG                               = `<mask id="ipSDiamondThree0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M5.414 22.586L22.586 5.414a2 2 0 0 1 2.828 0l17.172 17.172a2 2 0 0 1 0 2.828L25.414 42.586a2 2 0 0 1-2.828 0L5.414 25.414a2 2 0 0 1 0-2.828Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamondThree0)"/>`
	diamondTwoInnerSVG                                 = `<mask id="ipSDiamondTwo0"><path fill="#fff" stroke="#fff" stroke-width="4" d="m8.923 22.788l13.486-17.7a2 2 0 0 1 3.182 0l13.486 17.7a2 2 0 0 1 0 2.424l-13.486 17.7a2 2 0 0 1-3.182 0l-13.486-17.7a2 2 0 0 1 0-2.424Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamondTwo0)"/>`
	diamondsInnerSVG                                   = `<mask id="ipSDiamonds0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M12 8h24l8 10l-20 24L4 18l8-10Z"/><path stroke="#000" d="M4 18h40M24 42l-8-24m8 24l8-24"/><path stroke="#fff" d="m8 13l-4 5l20 24l20-24l-4-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiamonds0)"/>`
	differenceSetInnerSVG                              = `<mask id="ipSDifferenceSet0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 40V19a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2ZM42 8v21a2 2 0 0 1-2 2h-7a2 2 0 0 1-2-2V19a2 2 0 0 0-2-2H19a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h21a2 2 0 0 1 2 2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDifferenceSet0)"/>`
	digitalWatchesInnerSVG                             = `<mask id="ipSDigitalWatches0"><g fill="none" stroke-width="4"><rect width="22" height="22" x="13" y="13" fill="#fff" stroke="#fff" rx="3"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M29 35v7a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-7m0-22V6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v7m6 8h2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M19 24h2m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDigitalWatches0)"/>`
	directionInnerSVG                                  = `<mask id="ipSDirection0"><g fill="none"><g clip-path="url(#ipSDirection1)"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-width="4" rx="3"/><path fill="#000" d="m23.293 10.565l-3.243 3.242c-.63.63-.183 1.708.707 1.708h6.486c.89 0 1.337-1.078.707-1.708l-3.243-3.242a1 1 0 0 0-1.414 0ZM10.565 24.707l3.242 3.243c.63.63 1.708.183 1.708-.707v-6.486c0-.89-1.078-1.337-1.708-.707l-3.242 3.243a1 1 0 0 0 0 1.414Zm14.142 12.728l3.243-3.242c.63-.63.183-1.708-.707-1.708h-6.486c-.89 0-1.337 1.078-.707 1.708l3.243 3.242a1 1 0 0 0 1.414 0Zm12.728-14.142l-3.242-3.243c-.63-.63-1.708-.183-1.708.707v6.486c0 .89 1.078 1.337 1.708.707l3.242-3.243a1 1 0 0 0 0-1.414Z"/></g><defs><clipPath id="ipSDirection1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDirection0)"/>`
	directionAdjustmentTwoInnerSVG                     = `<mask id="ipSDirectionAdjustmentTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m18 10l6-6m0 0l6 6m-6-6v10m-6 24l6 6m0 0l6-6m-6 6V34m14-16l6 6m0 0l-6 6m6-6H34m-24-6l-6 6m0 0l6 6m-6-6h10"/><circle cx="24" cy="24" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDirectionAdjustmentTwo0)"/>`
	disabaledWebInnerSVG                               = `<mask id="ipSDisabaledWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v12.059"/><circle cx="38" cy="35" r="6" stroke="#fff" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m34 31l8 8"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDisabaledWeb0)"/>`
	disabledLaptopInnerSVG                             = `<mask id="ipSDisabledLaptop0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M23 8.999H11a3 3 0 0 0-3 3v21h32v-7"/><path fill="#fff" stroke-linejoin="round" d="M4 32.999h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><circle cx="36" cy="13" r="6"/><path stroke-linecap="round" stroke-linejoin="round" d="m32 9l8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDisabledLaptop0)"/>`
	disappointedFaceInnerSVG                           = `<mask id="ipSDisappointedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m33 25l-4-2m-11 0l-4 2m17 10s-2-4-7-4s-7 4-7 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDisappointedFace0)"/>`
	discoveryIndexInnerSVG                             = `<mask id="ipSDiscoveryIndex0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M16 6H8a2 2 0 0 0-2 2v8m10 26H8a2 2 0 0 1-2-2v-8m26 10h8a2 2 0 0 0 2-2v-8M32 6h8a2 2 0 0 1 2 2v8"/><path fill="#fff" d="M19 18h10v12H19z"/><path stroke-linecap="round" d="M24 18v-6m0 24v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiscoveryIndex0)"/>`
	diskInnerSVG                                       = `<mask id="ipSDisk0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M34 4v18H15V4h19Z"/><path stroke="#000" stroke-linecap="round" d="M29 11v4"/><path stroke="#fff" stroke-linecap="round" d="M11.997 4h25.001"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDisk0)"/>`
	diskOneInnerSVG                                    = `<mask id="ipSDiskOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M12.778 17.012c0-.559.453-1.012 1.012-1.012h21.976c.559 0 1.012.453 1.012 1.012V32c0 6.627-5.373 12-12 12v0c-6.628 0-12-5.373-12-12V17.012Z"/><path fill="#fff" stroke="#fff" d="M15.778 4h18v12h-18z"/><path stroke="#000" stroke-linecap="round" d="M21.778 9v2m6-2v2"/><path stroke="#fff" stroke-linecap="round" d="M12.778 32h24"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSDiskOne0)"/>`
	diskTwoInnerSVG                                    = `<mask id="ipSDiskTwo0"><g fill="none"><rect width="32" height="22" x="4" y="13" stroke="#fff" stroke-width="4" rx="2"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 13h10v22H4V13Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 19h8v10h-8"/><circle cx="30" cy="21" r="2" fill="#fff"/><circle cx="30" cy="27" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiskTwo0)"/>`
	dislikeTwoInnerSVG                                 = `<mask id="ipSDislikeTwo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15 8C8.925 8 4 12.925 4 19c0 11 13 21 20 23.326C31 40 44 30 44 19c0-6.075-4.925-11-11-11c-3.72 0-7.01 1.847-9 4.674A10.987 10.987 0 0 0 15 8Z"/><path fill="#fff" fill-rule="evenodd" d="m28 20l-8 8l8-8Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m28 20l-8 8"/><path fill="#fff" fill-rule="evenodd" d="m20 20l8 8l-8-8Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m20 20l8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDislikeTwo0)"/>`
	displayInnerSVG                                    = `<mask id="ipSDisplay0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="20" x="6" y="6" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="M14 13h8m-8 6h20"/><path stroke="#fff" stroke-linecap="round" d="m8 44l4.889-6h21.778L40 44M24 26v18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDisplay0)"/>`
	distraughtFaceInnerSVG                             = `<mask id="ipSDistraughtFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm8-12l-3 3l3 3m-16-6l3 3l-3 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDistraughtFace0)"/>`
	distributeHorizontalSpacingInnerSVG                = `<mask id="ipSDistributeHorizontalSpacing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M8 43V5m32 38V5"/><path fill="#fff" stroke-linejoin="round" d="M20 14h8v20h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDistributeHorizontalSpacing0)"/>`
	distributeHorizontallyInnerSVG                     = `<mask id="ipSDistributeHorizontally0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M30 10v28H18V10z"/><path stroke-linecap="round" d="M40 6v36M8 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDistributeHorizontally0)"/>`
	distributeVerticalSpacingInnerSVG                  = `<mask id="ipSDistributeVerticalSpacing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M5 8h38M5 40h38"/><path fill="#fff" stroke-linejoin="round" d="M14 20h20v8H14z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDistributeVerticalSpacing0)"/>`
	distributeVerticallyInnerSVG                       = `<mask id="ipSDistributeVertically0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M38 30H10V18h28z"/><path stroke-linecap="round" d="M42 40H6M42 8H6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDistributeVertically0)"/>`
	divingInnerSVG                                     = `<mask id="ipSDiving0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M31.8 6H10.2C7.88 6 6 7.79 6 10v8h11c0-2 1.5-4 4-4s4 2 4 4h11v-8c0-2.21-1.88-4-4.2-4Z"/><path d="M16 24c0 1.491 1.25 6 5 6s5-4.509 5-6M42 6v32c0 4-3 6-6 6s-6-2-6-6v-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDiving0)"/>`
	divingBottleInnerSVG                               = `<mask id="ipSDivingBottle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke-miterlimit="2" d="m4 40l2.5 1.351c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0L44 40M14 11V4m17 7V4M21 8V4m17 4V4"/><path d="M12 6h8m9 0h8"/><rect width="8" height="24" x="10" y="11" rx="4"/><rect width="8" height="24" x="27" y="11" rx="4"/><path fill="#fff" d="M27 15a4 4 0 0 1 8 0v4h-8v-4Zm-17 0a4 4 0 0 1 8 0v4h-8v-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDivingBottle0)"/>`
	divingSuitInnerSVG                                 = `<mask id="ipSDivingSuit0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M17 24h-2.91C8.52 24 4 19.52 4 14S8.52 4 14.09 4L20 9l5.91-5C31.48 4 36 8.48 36 14s-4.52 10-10.09 10H23"/><path fill="#fff" d="M26 36H14v8h12v-8Z"/><path d="M26 40h10c4.42 0 8-3.58 8-8V14h-8"/><path fill="#fff" d="M21.22 30h-2.44c-1.46 0-2.57-1.31-2.33-2.74l1.22-7.29A2.354 2.354 0 0 1 20 18c1.15 0 2.14.83 2.33 1.97l1.22 7.29c.23 1.43-.88 2.74-2.33 2.74Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDivingSuit0)"/>`
	divisionInnerSVG                                   = `<mask id="ipSDivision0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="5" fill="#fff"/><circle cx="24" cy="37" r="5" fill="#fff"/><path d="M44 24H4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDivision0)"/>`
	dizzyFaceInnerSVG                                  = `<mask id="ipSDizzyFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m19 18l-4 4m0-4l4 4m14-4l-4 4m0-4l4 4"/><rect width="8" height="8" x="20" y="28" fill="#000" stroke="#000" stroke-linecap="round" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDizzyFace0)"/>`
	docAddInnerSVG                                     = `<mask id="ipSDocAdd0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" d="M17 30h14m-14 6h7m-5-19h10m-5 5V12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocAdd0)"/>`
	docDetailInnerSVG                                  = `<mask id="ipSDocDetail0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 4H11a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" d="M17 30h14m-14 6h7"/><path fill="#fff" stroke="#000" d="M17 12h14v10H17z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocDetail0)"/>`
	docFailInnerSVG                                    = `<mask id="ipSDocFail0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" d="M17 30h14m-14 6h7m-4-15l8-8m0 8l-8-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocFail0)"/>`
	docSearchInnerSVG                                  = `<mask id="ipSDocSearch0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path fill="#fff" d="M28 16c0 1.38-.56 2.63-1.465 3.535A5 5 0 1 1 28 16Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m30 23l-3.465-3.465m0 0a5 5 0 1 0-7.071-7.07a5 5 0 0 0 7.072 7.07ZM17 30h14m-14 6h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocSearch0)"/>`
	docSearchTwoInnerSVG                               = `<mask id="ipSDocSearchTwo0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 27V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h11m-4-32h14m-14 8h14m-14 8h6"/><path fill="#fff" d="M37 37c0 1.38-.56 2.63-1.465 3.535A5 5 0 1 1 37 37Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m39 44l-3.465-3.465m0 0a5 5 0 1 0-7.071-7.07a5 5 0 0 0 7.072 7.07Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocSearchTwo0)"/>`
	docSuccessInnerSVG                                 = `<mask id="ipSDocSuccess0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" d="M17 30h14m-14 6h7m6-23l-8 8l-4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocSuccess0)"/>`
	documentFolderInnerSVG                             = `<mask id="ipSDocumentFolder0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M32 6H22v36h10V6Zm10 0H32v36h10V6ZM10 6l8 1l-3.5 35L6 41l4-35Z"/><path stroke="#000" stroke-linecap="round" d="M37 18v-3m-10 3v-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDocumentFolder0)"/>`
	dogInnerSVG                                        = `<mask id="ipSDog0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17 10l-2-5c-2.167.833-6.8 5.8-6 13m22-8l2-5c2.167.833 6.8 5.8 6 13"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M42 28.5C42 38.165 33.941 43 24 43S6 38.165 6 28.5S14.059 9 24 9s18 9.835 18 19.5Z"/><circle cx="20" cy="17" r="2" fill="#000"/><circle cx="28" cy="17" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 26c0 1.657.5 5.5-3 5.5a3 3 0 0 1-3-3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24.025 26c0 1.657-.5 5.5 3 5.5a3 3 0 0 0 3-3"/><path stroke="#000" stroke-linejoin="round" stroke-width="4" d="M26 25.75c0 .69-2 1.75-2 1.75s-2-1.06-2-1.75s.5-1.25 2-1.25s2 .56 2 1.25Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDog0)"/>`
	dolphinInnerSVG                                    = `<mask id="ipSDolphin0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 7C14.23 1.613 9.686 8.632 8 11c-5.664 1.218-2.854 3.324-1 4c1.214.406 4.146 1.323 6 2c.405 3.248 1.663 6.154 2 7c0-.812 1.326-3.647 2-5c8.092 3.248 13.797 11.602 17 16c-1.214 2.436-2.494 6.308-3 8l6-3l7 2c0-3.248-4.145-6.647-6-8c.81-12.992-5.29-20.8-9-23c.405-1.624 1.157-4.323 2-5c-3.237-1.624-5.82.154-7 1Z"/><circle cx="16" cy="11" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDolphin0)"/>`
	domeLightInnerSVG                                  = `<mask id="ipSDomeLight0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24.778 8c-11.046 0-20 8.954-20 20h40c0-11.046-8.954-20-20-20Z"/><path d="M24.778 4v4m0 30c-5.523 0-10-4.477-10-10h20c0 5.523-4.477 10-10 10Zm16.034.977l-2.068-2.954m-27.691.202l-2.55 2.55M34.778 42l-1.147-1.638m-17.72.112l-1.414 1.414"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSDomeLight0)"/>`
	doorHandleInnerSVG                                 = `<mask id="ipSDoorHandle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="26" height="40" x="6" y="4" rx="2"/><path d="M14 34h10"/><path fill="#fff" d="M42 20v-6H23a5 5 0 1 0 0 6h19Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDoorHandle0)"/>`
	doubleBedInnerSVG                                  = `<mask id="ipSDoubleBed0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 12a3 3 0 0 1 3-3h26a3 3 0 0 1 3 3v11H8V12ZM6 35v4m36-4v4"/><path fill="#fff" d="M20 18h-6a3 3 0 0 0-3 3v2h12v-2a3 3 0 0 0-3-3Zm14 0h-6a3 3 0 0 0-3 3v2h12v-2a3 3 0 0 0-3-3Z"/><path d="M4 26a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDoubleBed0)"/>`
	doughnutInnerSVG                                   = `<mask id="ipSDoughnut0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="24" r="19"/><circle cx="24" cy="24" r="7" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M6 28s3.389-2.958 6-1c4 3 6 1 6 1m11 1c.667-1 4-4.286 7-3c4 1.714 7 0 7-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDoughnut0)"/>`
	downCInnerSVG                                      = `<mask id="ipSDownC0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m33 21l-9 9l-9-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownC0)"/>`
	downOneInnerSVG                                    = `<mask id="ipSDownOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M36 19L24 31L12 19h24Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownOne0)"/>`
	downSquareInnerSVG                                 = `<mask id="ipSDownSquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M34 19L24 29L14 19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownSquare0)"/>`
	downTwoInnerSVG                                    = `<mask id="ipSDownTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m5 24l19 18l19-18H31V6H17v18H5Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownTwo0)"/>`
	downloadFourInnerSVG                               = `<mask id="ipSDownloadFour0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" d="M24 29L12 17h8V6h8v11h8L24 29Z" clip-rule="evenodd"/><path d="M42 37H6m28 7H14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownloadFour0)"/>`
	downloadLaptopInnerSVG                             = `<mask id="ipSDownloadLaptop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M25 9H11a3 3 0 0 0-3 3v21h32v-8"/><path fill="#fff" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><path stroke-linecap="round" d="m31 14l5 5l5-5m-5-7v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownloadLaptop0)"/>`
	downloadThreeInnerSVG                              = `<mask id="ipSDownloadThree0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" d="m32 28l-8 8l-8-8m8-8v15.5M16 14h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownloadThree0)"/>`
	downloadWebInnerSVG                                = `<mask id="ipSDownloadWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M27 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v13M34 36l5 5l5-5m-5-7v12"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDownloadWeb0)"/>`
	dragonZodiacInnerSVG                               = `<mask id="ipSDragonZodiac0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-width="4" clip-path="url(#ipSDragonZodiac1)"><path d="m34.021 42.494l3.74-3.74a6 6 0 0 0 0-8.485v0a6 6 0 0 0-8.485 0L27.045 32.5m-9.97-7l6.544-6.544a6 6 0 0 0 0-8.486v0a6 6 0 0 0-8.485 0l-7.071 7.071m9.012 7.959L8.77 33.806a6 6 0 0 0 0 8.485v0a6 6 0 0 0 8.485 0l9.766-9.766"/><path stroke-linejoin="round" d="M13 12V4m25 26l5-5"/></g><defs><clipPath id="ipSDragonZodiac1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDragonZodiac0)"/>`
	dribbleInnerSVG                                    = `<mask id="ipSDribble0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 24a19.938 19.938 0 0 1-5.889 14.173A19.937 19.937 0 0 1 24 44C12.954 44 4 35.046 4 24a19.932 19.932 0 0 1 5.5-13.775A19.943 19.943 0 0 1 24 4a19.937 19.937 0 0 1 14.111 5.827A19.938 19.938 0 0 1 44 24Z"/><path stroke="#000" d="M44 24c-2.918 0-10.968-1.1-18.173 2.063C18 29.5 12.333 34.831 9.863 38.147"/><path stroke="#000" d="M16.5 5.454C19.63 8.343 26.46 15.698 29 23c2.54 7.302 3.48 16.28 4.06 18.835"/><path stroke="#000" d="M4.154 21.5c3.778.228 13.779.433 20.179-2.3c6.4-2.733 11.907-7.76 13.796-9.355"/><path stroke="#fff" d="M5.5 31.613a20.076 20.076 0 0 0 9 9.991M4 24a19.932 19.932 0 0 1 5.5-13.775M24 4a19.943 19.943 0 0 0-14.5 6.225M32 5.664a20.037 20.037 0 0 1 6.111 4.163A19.938 19.938 0 0 1 44 24c0 2.462-.445 4.821-1.26 7M24 44a19.937 19.937 0 0 0 14.111-5.827"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDribble0)"/>`
	drinkInnerSVG                                      = `<mask id="ipSDrink0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M10 16h28"/><path d="M14.153 18.142A2 2 0 0 1 16.148 16h15.704a2 2 0 0 1 1.995 2.142l-1.714 24A2 2 0 0 1 30.138 44H17.862a2 2 0 0 1-1.995-1.858l-1.714-24Z"/><path stroke-linecap="round" d="M24 10V6a2 2 0 0 1 2-2h3"/><path fill="#fff" d="M14.722 11.671A2 2 0 0 1 16.694 10h14.612a2 2 0 0 1 1.973 1.671L34 16H14l.722-4.329Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDrink0)"/>`
	droneInnerSVG                                      = `<mask id="ipSDrone0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m12 12l7 7m17 17l-7-7m7-17l-7 7M12 36l7-7"/><path fill="#fff" d="M19 19h10v10H19z"/><path d="M36 19a7 7 0 1 0-7-7m7 17a7 7 0 1 1-7 7m-17-7a7 7 0 1 0 7 7m-7-17a7 7 0 1 1 7-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDrone0)"/>`
	droneOneInnerSVG                                   = `<mask id="ipSDroneOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M29 18v-2a5 5 0 0 0-5-5v0a5 5 0 0 0-5 5v2"/><path fill="#fff" stroke-linecap="round" d="M17 18h14l-2.154 7h-9.692L17 18Z"/><path fill="#fff" d="M5 22h7v7H5zm31 0h7v7h-7z"/><path stroke-linecap="round" d="M16 8H4m26 25l4 7m-16-7l-4 7M44 8H32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDroneOne0)"/>`
	dropShadowDownInnerSVG                             = `<mask id="ipSDropShadowDown0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M24 37a15.95 15.95 0 0 0 11.314-4.686A15.95 15.95 0 0 0 40 21a15.95 15.95 0 0 0-4.686-11.314A15.95 15.95 0 0 0 24 5a15.95 15.95 0 0 0-11.314 4.686A15.95 15.95 0 0 0 8 21a15.95 15.95 0 0 0 4.686 11.314A15.95 15.95 0 0 0 24 37Z" clip-rule="evenodd"/><path d="M39.556 36.556A21.932 21.932 0 0 1 24 43a21.932 21.932 0 0 1-15.557-6.444"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDropShadowDown0)"/>`
	dropShadowLeftInnerSVG                             = `<mask id="ipSDropShadowLeft0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M27 40a15.95 15.95 0 0 0 11.314-4.686A15.95 15.95 0 0 0 43 24a15.95 15.95 0 0 0-4.686-11.314A15.95 15.95 0 0 0 27 8a15.95 15.95 0 0 0-11.314 4.686A15.95 15.95 0 0 0 11 24a15.95 15.95 0 0 0 4.686 11.314A15.95 15.95 0 0 0 27 40Z" clip-rule="evenodd"/><path d="M11.444 8.444A21.931 21.931 0 0 0 5 24a21.931 21.931 0 0 0 6.444 15.556"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDropShadowLeft0)"/>`
	dropShadowRightInnerSVG                            = `<mask id="ipSDropShadowRight0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M21 40a15.95 15.95 0 0 0 11.314-4.686A15.95 15.95 0 0 0 37 24a15.95 15.95 0 0 0-4.686-11.314A15.95 15.95 0 0 0 21 8a15.95 15.95 0 0 0-11.314 4.686A15.95 15.95 0 0 0 5 24a15.95 15.95 0 0 0 4.686 11.314A15.95 15.95 0 0 0 21 40Z" clip-rule="evenodd"/><path d="M36.557 39.556A21.932 21.932 0 0 0 43 24a21.932 21.932 0 0 0-6.443-15.556"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDropShadowRight0)"/>`
	dropShadowUpInnerSVG                               = `<mask id="ipSDropShadowUp0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M24 43a15.95 15.95 0 0 0 11.314-4.686A15.95 15.95 0 0 0 40 27a15.95 15.95 0 0 0-4.686-11.314A15.95 15.95 0 0 0 24 11a15.95 15.95 0 0 0-11.314 4.686A15.95 15.95 0 0 0 8 27a15.95 15.95 0 0 0 4.686 11.314A15.95 15.95 0 0 0 24 43Z" clip-rule="evenodd"/><path d="M39.557 11.444A21.931 21.931 0 0 0 24 5a21.931 21.931 0 0 0-15.556 6.444"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDropShadowUp0)"/>`
	dropboxInnerSVG                                    = `<mask id="ipSDropbox0"><g fill="none"><g stroke="#fff" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSDropbox1)"><path fill="#fff" d="m24 10l-12 8l12 8l12-8l-12-8Z"/><path d="m24 10l12 8l5-7l-11-7l-6 6Zm0 0l-12 8l-5-7l11-7l6 6Zm19 12l-7-4l-12 8l7 5l12-9ZM5 22l7-4l12 8l-7 5l-12-9Z"/><path stroke-linecap="round" d="M36 28v9l-12 7l-12-7v-9"/></g><defs><clipPath id="ipSDropbox1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDropbox0)"/>`
	drumstickInnerSVG                                  = `<mask id="ipSDrumstick0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m14.15 33.82l-1.413 9.9l-8.486-8.486l9.9-1.414Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24.05 6.95l-9.9 9.9c-4.686 4.686-4.686 12.284 0 16.97v0c4.687 4.687 12.285 4.687 16.97 0l9.9-9.9"/><ellipse cx="32.535" cy="15.435" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="12" ry="7" transform="rotate(45 32.535 15.435)"/><circle cx="30.061" cy="11.398" r="2" fill="#000" transform="rotate(45 30.06 11.398)"/><circle cx="37.132" cy="18.469" r="2" fill="#000" transform="rotate(45 37.132 18.47)"/><circle cx="31.475" cy="17.055" r="2" fill="#000" transform="rotate(45 31.475 17.055)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDrumstick0)"/>`
	duckInnerSVG                                       = `<mask id="ipSDuck0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 8c-3.052 4.517-5.987 5.81-8 5c.543 1.833 4.443 4.375 6.927 5.838c1.07.63 1.383 2.065.638 3.059C10.202 23.717 8.315 26.289 8 27C.954 39.79 16.482 44.648 24 44c22.144-1.908 21.355-19.197 18-26c-8.052 13.994-20.481 5.915-20 3c.481-2.915 3.792-2.335 5-7C29.013 4.768 16.374.399 12 8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 31c2.5 3.5 10 7 16 2"/><circle cx="17" cy="12" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDuck0)"/>`
	dviInnerSVG                                        = `<mask id="ipSDvi0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 16a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v7.802c0 .132-.013.263-.039.392l-1.64 8.198A2 2 0 0 1 40.362 34H7.64a2 2 0 0 1-1.962-1.608l-1.64-8.198A2 2 0 0 1 4 23.802V16Z"/><path stroke="#000" d="M10 24h6m5-3h2m-2 6h2m5-6h2m-2 6h2m5-6h2m-2 6h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSDvi0)"/>`
	eagleInnerSVG                                      = `<mask id="ipSEagle0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 23c-4.04-7.043 3.624-11.136 8-12c14.541-12.844 26.485-.287 28 8c1.514 8.287 1.158 14.893 2 18c-6.463-8.7-10.877-7.159-12-5c-2.02 4.144-5.314 4.252-7 3c-4.04-3.314-10.476 3.202-13 7c4.847-8.7 5.505-14.273 5-16c-2.02-8.286-8.307-5.416-11-3Z"/><circle cx="23" cy="16" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEagle0)"/>`
	easyInnerSVG                                       = `<mask id="ipSEasy0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 41c-5.48 3.003-10 3-16 1c-6.076-2.026-10-9-10-14c0-2.744 4.114-4.372 5.529-4.85a.687.687 0 0 0 .471-.648V15a3.5 3.5 0 1 1 7 0v-2.5a3.5 3.5 0 1 1 7 0V15a3.5 3.5 0 1 1 7 0V7.5a3.5 3.5 0 0 1 7 0v20.732c0 2.472-.592 4.928-2.038 6.934C37.492 37.205 35.357 39.708 33 41Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEasy0)"/>`
	editInnerSVG                                       = `<mask id="ipSEdit0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M7 42h36"/><path fill="#fff" d="M11 26.72V34h7.317L39 13.308L31.695 6L11 26.72Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEdit0)"/>`
	editMovieInnerSVG                                  = `<mask id="ipSEditMovie0"><g fill="none"><path fill="#fff" d="M43 9v30h-9v-8h9V17h-9V9h9ZM5 17V9h9v8H5v14h9v8H5V17Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M43 17V9h-9m9 8v14m0-14h-9M5 17V9h9m-9 8v14m0-14h9M5 31v8h9m-9-8h9m29 0v8h-9m9-8h-9m0-22v8m0-8h-4m4 30v-8m0 8h-4M14 9v8m0-8h4m-4 30v-8m0 8h4m-4-22h4m16 0h-4m4 14h-4m-16 0h4"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M24 7v4m0 6v4m0 6v4m0 6v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEditMovie0)"/>`
	editNameInnerSVG                                   = `<mask id="ipSEditName0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff"/><path d="M4 41c0-8.837 8.059-16 18-16"/><path fill="#fff" d="m31 42l10-10l-4-4l-10 10v4h4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEditName0)"/>`
	editTwoInnerSVG                                    = `<mask id="ipSEditTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M42 26v14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h14"/><path fill="#fff" d="M14 26.72V34h7.317L42 13.308L34.695 6L14 26.72Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEditTwo0)"/>`
	editingInnerSVG                                    = `<mask id="ipSEditing0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="13" cy="35" r="7" fill="#fff"/><circle cx="35" cy="35" r="7" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m8 6l24 22m8-22L16 28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEditing0)"/>`
	effectsInnerSVG                                    = `<mask id="ipSEffects0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m24.95 42.36l5.466-11.99l12.689-3.72l-9.767-8.88l.368-13.163l-11.502 6.503l-12.46-4.416l2.657 12.9l-8.069 10.433l13.145 1.47L24.95 42.36Z"/><path d="m36.178 36.054l8 7.964"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEffects0)"/>`
	eggInnerSVG                                        = `<mask id="ipSEgg0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="10" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke="#fff" d="M44 24c0 2.633-.508 5.146-1.433 7.448c-.936 2.331-4.129.071-7.346 3.521c-3.216 3.45-.71 6.267-3.204 7.36A19.931 19.931 0 0 1 24 44C12.954 44 4 35.046 4 24S12.954 4 24 4s20 8.954 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M20 25s.21 1.21 1 2s2 1 2 1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEgg0)"/>`
	eggOneInnerSVG                                     = `<mask id="ipSEggOne0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M29 22.133C29 30.97 23.627 36 17 36S5 30.97 5 22.133C5 11.163 11.373 4 17 4s12 7.163 12 18.133Z"/><path d="M29 24.068c8.536.634 14 5.554 14 9.932c0 4.69-6.268 10-15.867 10c-6.773 0-10.99-3.436-11.932-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEggOne0)"/>`
	eggplantInnerSVG                                   = `<mask id="ipSEggplant0"><g fill="none" stroke="#fff" stroke-width="4"><path d="m35 18l-3.88 12.612c-.08.259-.155.514-.248.768c-.548 1.498-2.99 7.04-9.871 9.62C13 44 4.999 40 5 32.077C5 24.154 13 25 17 22s8-9 8-9"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M39.255 24.488S40.371 19.176 40 16c-.505-4.327-2.5-7.5-5-9c-2.502-1.5-7.748-2.5-12 0c-4.253 2.5-6.033 5.845-6.033 5.845l8.206-.767a1 1 0 0 1 1.055.72l1.497 5.24a1 1 0 0 0 1.236.688l5.282-1.51a1 1 0 0 1 1.145.468l3.865 6.804Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m36 8l6-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEggplant0)"/>`
	eightKeyInnerSVG                                   = `<mask id="ipSEightKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24 22a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 11a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEightKey0)"/>`
	electricDrillInnerSVG                              = `<mask id="ipSElectricDrill0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M20 9h19.698a4 4 0 0 1 3.99 4.29l-.584 8a4 4 0 0 1-3.99 3.71H20V9Z"/><path d="M30.09 25H39l-4.089 11.244A4.186 4.186 0 0 1 30.977 39c-2.905 0-4.927-2.887-3.934-5.617L30.09 25Z"/><path fill="#fff" d="M14 12h6v10h-6z"/><path stroke-linecap="round" d="M14 17H4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectricDrill0)"/>`
	electricIronInnerSVG                               = `<mask id="ipSElectricIron0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M5 18.712c0-.393.319-.712.713-.712h13.439C32.322 18 43 28.677 43 41.848v0a.152.152 0 0 1-.152.152H5V18.712ZM5 18V8h20"/><circle cx="15" cy="27" r="4" fill="#fff"/><path stroke-linecap="round" d="M5 36h37"/><path stroke-linecap="round" stroke-linejoin="round" d="M29 20c1.333-2 5.4-6.4 9-4c3.5 2.334.5 8-1 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectricIron0)"/>`
	electricWaveInnerSVG                               = `<mask id="ipSElectricWave0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M12 25h3l4-11l3 22l5-13l4 6l3-4h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectricWave0)"/>`
	electrocardiogramInnerSVG                          = `<mask id="ipSElectrocardiogram0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M11 28.132h5.684L21.224 13l3.671 22l4.553-10.383l3.465 3.515H37"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectrocardiogram0)"/>`
	electronicDoorLockInnerSVG                         = `<mask id="ipSElectronicDoorLock0"><g fill="none"><rect width="26" height="40" x="6" y="4" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><rect width="24" height="8" x="20" y="30" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="4"/><circle cx="12" cy="12" r="2" fill="#fff"/><circle cx="12" cy="18" r="2" fill="#fff"/><circle cx="12" cy="24" r="2" fill="#fff"/><circle cx="19" cy="12" r="2" fill="#fff"/><circle cx="19" cy="18" r="2" fill="#fff"/><circle cx="19" cy="24" r="2" fill="#fff"/><circle cx="26" cy="12" r="2" fill="#fff"/><circle cx="26" cy="18" r="2" fill="#fff"/><circle cx="26" cy="24" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectronicDoorLock0)"/>`
	electronicLocksCloseInnerSVG                       = `<mask id="ipSElectronicLocksClose0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="24" height="18" x="12" y="20" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M18 20v-6c0-3.682 2.686-6 6-6s6 2.318 6 6v6"/><path stroke="#000" stroke-linecap="round" d="M24 28v2"/><path stroke="#fff" stroke-linecap="round" d="M6 18v12m36-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectronicLocksClose0)"/>`
	electronicLocksOpenInnerSVG                        = `<mask id="ipSElectronicLocksOpen0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="24" height="18" x="12" y="20" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M18 20v-6c0-3.682 2.686-6 6-6c1.85 0 3.503.722 4.604 2a5.62 5.62 0 0 1 1.102 2"/><path stroke="#000" stroke-linecap="round" d="M24 28v2"/><path stroke="#fff" stroke-linecap="round" d="M6 18v12m36-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectronicLocksOpen0)"/>`
	electronicPenInnerSVG                              = `<mask id="ipSElectronicPen0"><g fill="none"><g clip-path="url(#ipSElectronicPen1)"><rect width="12" height="38" x="35.193" y="5.322" fill="#fff" stroke="#fff" stroke-width="4" rx="6" transform="rotate(45 35.193 5.322)"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m18 23l8 8M6 43l6-6"/><rect width="4" height="4" x="33.268" y="12.34" fill="#000" rx="2" transform="rotate(30 33.268 12.34)"/></g><defs><clipPath id="ipSElectronicPen1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElectronicPen0)"/>`
	elevatorInnerSVG                                   = `<mask id="ipSElevator0"><g fill="none"><path fill="#fff" d="M42 41V7H6v34h36Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 7v34m0-34H4h2v34M42 7h2m-2 34h2m-2 0H6m0 0H4M24 7v34"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 20v8m-3-5l3-3l3 3m-21 5v-8m-3 5l3 3l3-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSElevator0)"/>`
	emailBlockInnerSVG                                 = `<mask id="ipSEmailBlock0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M44 35V9H4v28h22"/><circle cx="35" cy="35" r="9" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m37 33l-4 4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m4 9l20 13L44 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmailBlock0)"/>`
	emailDelectInnerSVG                                = `<mask id="ipSEmailDelect0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 24V9H4v30h20"/><path d="m4 9l20 15L44 9"/><path fill="#fff" d="M32 31h10l-2 10h-6l-2-10Z"/><path d="m36 31l2-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmailDelect0)"/>`
	emailLockInnerSVG                                  = `<mask id="ipSEmailLock0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 24V9H4v30h20"/><path d="m4 9l20 15L44 9"/><path fill="#fff" d="M31 33h12v8H31z"/><path d="M40 33v-3a3 3 0 1 0-6 0v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmailLock0)"/>`
	emailSearchInnerSVG                                = `<mask id="ipSEmailSearch0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M44 24V9H4v30h20"/><circle cx="36" cy="34" r="5" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m40 37l4 3M4 9l20 15L44 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmailSearch0)"/>`
	emailSecurityInnerSVG                              = `<mask id="ipSEmailSecurity0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 24V9H4v30h20"/><path fill="#fff" d="M30 30c0-1 5-3 5-3s5 2 5 3c0 8-5 10-5 10s-5-2-5-10Z"/><path d="m4 9l20 15L44 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmailSecurity0)"/>`
	emotionHappyInnerSVG                               = `<mask id="ipSEmotionHappy0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m14 12s-2 4-7 4s-7-4-7-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmotionHappy0)"/>`
	emotionUnhappyInnerSVG                             = `<mask id="ipSEmotionUnhappy0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m14 12s-2-4-7-4s-7 4-7 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmotionUnhappy0)"/>`
	emptyInnerSVG                                      = `<mask id="ipSEmpty0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSEmpty1)"><path d="M9.438 42h3.185a2 2 0 0 0 1.868-1.286l2.2-5.753l.025-5.526c0-.116.011-.233.032-.348L20.152 10.3a2 2 0 0 0-1.968-2.357h-7.321a2 2 0 0 0-2 2.056l.523 18.871l-1.77 3.33a2 2 0 0 0 .269 2.266l.561.633l-.963 4.48A2 2 0 0 0 9.438 42Zm7.279-12.74l-7.331-.39M38.578 42h-3.18a2 2 0 0 1-1.878-1.313l-2.093-5.726l-.025-5.526c0-.117-.011-.233-.032-.348L27.965 10.3a2 2 0 0 1 1.968-2.357h7.322a2 2 0 0 1 2 2.055l-.523 18.872l1.771 3.33a2 2 0 0 1-.27 2.266l-.561.633l.87 4.523A2 2 0 0 1 38.578 42ZM31.4 29.26l7.331-.39"/></g><defs><clipPath id="ipSEmpty1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEmpty0)"/>`
	endocrineInnerSVG                                  = `<mask id="ipSEndocrine0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M23.147 44C31.293 44 40 43.01 40 30.18c0-6.216-1.492-11.276-4.474-15.18c-2.787 4.667-4.852 7-6.196 7c-2.016 0 0-6.09-2.331-10.709c-1.554-3.08-4.311-5.51-8.27-7.291c.55 4.437.431 7.655-.357 9.655c-1.184 3-11.22 8.255-10.314 17.28C8.965 39.96 15 44 23.147 44Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" d="M21.708 24.008c-3.805 3.459-5.427 6.66-4.865 9.603c.483 2.534 2.406 3.765 3.854 4.163c1.123.307 3.067.48 4.803-1.067c1.84-1.639 1.107-3.968-1.56-6.85c-1.126-1.215-1.87-3.165-2.232-5.849Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEndocrine0)"/>`
	endpointDisplacementInnerSVG                       = `<mask id="ipSEndpointDisplacement0"><g fill="none"><path fill="#fff" d="M16 10a5 5 0 1 1-10 0a5 5 0 0 1 10 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 10a5 5 0 1 1-10 0a5 5 0 0 1 10 0Zm0 0h11m0 0l-4-4m4 4l-4 4"/><path fill="#fff" d="M32 38a5 5 0 1 0 10 0a5 5 0 0 0-10 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 38a5 5 0 1 0 10 0a5 5 0 0 0-10 0Zm0 0H21m0 0l4-4m-4 4l4 4"/><path fill="#fff" d="M33 11a5 5 0 1 0 10 0a5 5 0 0 0-10 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 16a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm0 0v11m0 0l4-4m-4 4l-4-4"/><path fill="#fff" d="M5 37a5 5 0 1 1 10 0a5 5 0 0 1-10 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 32a5 5 0 1 0 0 10a5 5 0 0 0 0-10Zm0 0V21m0 0l4 4m-4-4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEndpointDisplacement0)"/>`
	energySocketInnerSVG                               = `<mask id="ipSEnergySocket0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Zm4-23v-5m-8 5v-5"/><path fill="#fff" d="M24 32a8 8 0 0 0 8-8v-3H16v3a8 8 0 0 0 8 8Z"/><path d="M24 44V32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnergySocket0)"/>`
	engineeringBrandInnerSVG                           = `<mask id="ipSEngineeringBrand0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="38" height="20" x="5" y="6" fill="#fff" rx="2"/><path stroke-linecap="round" d="M12 26v16m24-9H12m4 9H8m32 0h-8m4-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEngineeringBrand0)"/>`
	engineeringVehicleInnerSVG                         = `<mask id="ipSEngineeringVehicle0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M32 6h6M10 36H6v-8h26v8H18m14 0V12h6.5L44 24v12h-3"/><path fill="#fff" stroke-linejoin="round" d="M4 8h22v14H7L4 8Z"/><circle cx="37" cy="38" r="4" fill="#fff"/><circle cx="14" cy="38" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEngineeringVehicle0)"/>`
	englishInnerSVG                                    = `<mask id="ipSEnglish0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M13 31V17h8m-8 7h7.5M13 31h7.5m5.5 0V19m0 12v-6.5a4.5 4.5 0 0 1 4.5-4.5v0a4.5 4.5 0 0 1 4.5 4.5V31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnglish0)"/>`
	englishMustacheInnerSVG                            = `<mask id="ipSEnglishMustache0"><g fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M10.064 24.058c3.287-1.073 3.465-5.092 7.797-5.94c3.465-.68 5.547 1.708 6.064 4.243c.433 2.122-.866 7.639-7.797 7.639C7.465 30 4.578 24.483 4 22.361c.866.849 3.465 2.546 6.064 1.697Z"/><path d="M37.936 24.058c-3.288-1.073-3.465-5.092-7.797-5.94c-3.465-.68-5.547 1.708-6.064 4.243c-.433 2.122.866 7.639 7.797 7.639c8.663 0 11.55-5.517 12.128-7.639c-.866.849-3.465 2.546-6.064 1.697Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnglishMustache0)"/>`
	enquireInnerSVG                                    = `<mask id="ipSEnquire0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-miterlimit="2" d="M37 16a5 5 0 1 1 0-10a5 5 0 0 1 0 10Zm-25-4a4 4 0 1 1 0-8a4 4 0 0 1 0 8Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m26 39l6-5v-6c0-3.466 2-6 5-6s5 2.534 5 6v14m-18-9l-6-5v-4c0-3.466-2-6-5-6s-5 2.534-5 6v18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnquire0)"/>`
	enterKeyInnerSVG                                   = `<mask id="ipSEnterKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 44V4H24v16H4v24h40Z"/><path stroke="#000" d="m21 28l-4 4l4 4"/><path stroke="#000" d="M34 23v9H17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnterKey0)"/>`
	enterKeyOneInnerSVG                                = `<mask id="ipSEnterKeyOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M23 23V5h20v38H5V23h18Z"/><path stroke="#000" d="M33 13v20H13"/><path stroke="#000" d="m17 29l-4 4l4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnterKeyOne0)"/>`
	enterTheKeyboardInnerSVG                           = `<mask id="ipSEnterTheKeyboard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 7H6a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" d="M12 19h2m7 0h2m6 0h7m-24 9h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEnterTheKeyboard0)"/>`
	entertainmentInnerSVG                              = `<mask id="ipSEntertainment0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M16 24c5.523 0 10-4.477 10-10S21.523 4 16 4S6 8.477 6 14s4.477 10 10 10Z"/><path stroke-linecap="round" d="M26 15.202c.014.014 4.723 5.936 14.126 17.764a1 1 0 0 1-.062 1.346l-4.084 4.084a1 1 0 0 1-1.346.062L17.822 24m8.648.47l2.829 2.829"/><path stroke-linecap="round" d="M17 44.086c1.917-2.498 4.247-3.747 6.99-3.747c4.116 0 8.973 5.17 13.116 4.459c4.144-.712 5.33-4.798 2.78-7.06"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEntertainment0)"/>`
	equalRatioInnerSVG                                 = `<mask id="ipSEqualRatio0"><g fill="none"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path fill="#000" fill-rule="evenodd" d="M24 22.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15.5 17v14m17-14v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEqualRatio0)"/>`
	equalizerInnerSVG                                  = `<mask id="ipSEqualizer0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M11 16v26m13-13v13m0-23V6m13 0v26"/><path fill="#fff" d="M11 16a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm13 13a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm13 13a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEqualizer0)"/>`
	eraseInnerSVG                                      = `<mask id="ipSErase0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 42h40"/><path fill="#fff" d="M31 4L7 28l6 6h8l20-20L31 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSErase0)"/>`
	errorInnerSVG                                      = `<mask id="ipSError0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 11l5-5l13 13L37 6l5 5l-13 13l13 13l-5 5l-13-13l-13 13l-5-5l13-13L6 11Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSError0)"/>`
	escalatorsInnerSVG                                 = `<mask id="ipSEscalators0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M35 13L13 35H4v9h9l22-22h9v-9h-9Z"/><path d="m19 13l9-9m-6 0h6v6m-14 8l-9 9m6 0H5v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEscalators0)"/>`
	ethernetOffInnerSVG                                = `<mask id="ipSEthernetOff0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M19 27h10v6H19zm-5-8h20v8H14z"/><path stroke="#000" d="M33 19v-4m-6 4v-4m-6 4v-4m-6 4v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEthernetOff0)"/>`
	ethernetOnInnerSVG                                 = `<mask id="ipSEthernetOn0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M19 27h10v6H19zm-5-12h20v12H14z"/><path stroke="#000" d="M21 19v-4m6 4v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEthernetOn0)"/>`
	everyUserInnerSVG                                  = `<mask id="ipSEveryUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="14" cy="29" r="5" fill="#fff"/><circle cx="34" cy="29" r="5" fill="#fff"/><circle cx="24" cy="9" r="5" fill="#fff"/><path d="M24 44c0-5.523-4.477-10-10-10S4 38.477 4 44m40 0c0-5.523-4.477-10-10-10s-10 4.477-10 10m10-20c0-5.523-4.477-10-10-10s-10 4.477-10 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEveryUser0)"/>`
	excelInnerSVG                                      = `<mask id="ipSExcel0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M8 15V6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v36a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-9"/><path stroke="#fff" d="M31 15h3m-6 8h6m-6 8h6"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 15h18v18H4z"/><path stroke="#000" stroke-linejoin="round" d="m10 21l6 6m0-6l-6 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExcel0)"/>`
	excelOneInnerSVG                                   = `<mask id="ipSExcelOne0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M30 16H18m0 16V16m10 8H18m12 8H18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExcelOne0)"/>`
	exchangeFourInnerSVG                               = `<mask id="ipSExchangeFour0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" d="M15 21h18m-18 6h18m0-6l-7-7m-4 20l-7-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExchangeFour0)"/>`
	exchangeOneInnerSVG                                = `<mask id="ipSExchangeOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9 18v24h30V18L24 6L9 18Z"/><path stroke="#000" d="M17 24h14m-14 6h14m0-6l-5-5m-4 16l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExchangeOne0)"/>`
	exchangeThreeInnerSVG                              = `<mask id="ipSExchangeThree0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 8.256L24.009 3L42 8.256v10.778A26.316 26.316 0 0 1 24.003 44A26.32 26.32 0 0 1 6 19.029V8.256Z"/><path stroke="#000" stroke-linecap="round" d="M17 19h14m-14 6h14m0-6l-5-5m-4 16l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExchangeThree0)"/>`
	exchangeTwoInnerSVG                                = `<mask id="ipSExchangeTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9 18v24h30V18L24 6L9 18Z"/><path stroke="#000" d="M24 30v6m7-10v10m-14-4v4m0-11l5-4l3 3l6-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExchangeTwo0)"/>`
	exclusiveGatewayInnerSVG                           = `<mask id="ipSExclusiveGateway0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M22.8 4.201L4.413 22.586a2 2 0 0 0 0 2.828L22.8 43.8a2 2 0 0 0 2.829 0l18.384-18.385a2 2 0 0 0 0-2.828L25.628 4.2a2 2 0 0 0-2.829 0Z"/><path stroke="#000" stroke-linecap="round" d="m18.043 29.987l12-11.962m-11.99-.009l11.98 11.98"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExclusiveGateway0)"/>`
	expandDownInnerSVG                                 = `<mask id="ipSExpandDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 10a4 4 0 0 1 4-4h28a4 4 0 0 1 4 4v28a4 4 0 0 1-4 4H10a4 4 0 0 1-4-4V10Z"/><path stroke="#000" stroke-linecap="round" d="M6 32h36M20 16l4 4l4-4"/><path stroke="#fff" stroke-linecap="round" d="M6 26v12m36-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpandDown0)"/>`
	expandLeftInnerSVG                                 = `<mask id="ipSExpandLeft0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 9a3 3 0 0 1 3-3h30a3 3 0 0 1 3 3v30a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9Z"/><path stroke="#000" stroke-linecap="round" d="M32 6v36M16 20l4 4l-4 4"/><path stroke="#fff" stroke-linecap="round" d="M26 6h12M26 42h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpandLeft0)"/>`
	expandRightInnerSVG                                = `<mask id="ipSExpandRight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M18 6v36"/><path stroke="#fff" stroke-linecap="round" d="M11 6h25M11 42h25"/><path stroke="#000" stroke-linecap="round" d="m32 20l-4 4l4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpandRight0)"/>`
	expandUpInnerSVG                                   = `<mask id="ipSExpandUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 16h36M20 32l4-4l4 4"/><path stroke="#fff" stroke-linecap="round" d="M6 10v12m36-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpandUp0)"/>`
	experimentInnerSVG                                 = `<mask id="ipSExperiment0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M12 4h24"/><path stroke-linecap="round" stroke-linejoin="round" d="m10.777 30l7.242-14.961V4h12.01v11.039L37.245 30"/><path fill="#fff" stroke-linejoin="round" d="M7.794 43.673a3.273 3.273 0 0 1-1.52-4.372L10.777 30S18 35 24 30c6-5 13.246 0 13.246 0l4.49 9.305A3.273 3.273 0 0 1 38.787 44H9.22c-.494 0-.981-.112-1.426-.327Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExperiment0)"/>`
	experimentOneInnerSVG                              = `<mask id="ipSExperimentOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="m10.777 30l7.242-14.961V4h12.01v11.039L37.245 30"/><path fill="#fff" d="M7.794 43.673a3.273 3.273 0 0 1-1.52-4.372L10.777 30S18 35 24 30c6-5 13.246 0 13.246 0l4.49 9.305A3.273 3.273 0 0 1 38.787 44H9.22c-.494 0-.981-.112-1.426-.327Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExperimentOne0)"/>`
	expressDeliveryInnerSVG                            = `<mask id="ipSExpressDelivery0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 31v11a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V31"/><path fill="#fff" d="M38 14H10a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2Z"/><path stroke-linecap="round" d="M16 4v4m8-4v4m8-4v4M16 34h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpressDelivery0)"/>`
	expressionlessFaceInnerSVG                         = `<mask id="ipSExpressionlessFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M16 19h4m8 0h4M16 31h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExpressionlessFace0)"/>`
	extendInnerSVG                                     = `<mask id="ipSExtend0"><g fill="none"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-width="4" rx="3"/><path fill="#000" d="M35 12h-4.586c-.89 0-1.337 1.077-.707 1.707l4.586 4.586c.63.63 1.707.184 1.707-.707V13a1 1 0 0 0-1-1Zm-23 1v4.586c0 .89 1.077 1.337 1.707.707l4.586-4.586c.63-.63.184-1.707-.707-1.707H13a1 1 0 0 0-1 1Zm1 23h4.586c.89 0 1.337-1.077.707-1.707l-4.586-4.586c-.63-.63-1.707-.184-1.707.707V35a1 1 0 0 0 1 1Zm23-1v-4.586c0-.89-1.077-1.337-1.707-.707l-4.586 4.586c-.63.63-.184 1.707.707 1.707H35a1 1 0 0 0 1-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSExtend0)"/>`
	eyebrowInnerSVG                                    = `<mask id="ipSEyebrow0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 40c9.941 0 18-10 18-10s-8.059-10-18-10S6 30 6 30s8.059 10 18 10Z"/><path fill="#000" stroke="#000" d="M24 34a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path fill="#fff" stroke="#fff" d="M28 6c-7 0-18 3.5-21 6s-1 7 1 6s15.2-5.8 20-7c4.8-1.2 11.667.833 14 2c-2.333-2-7-7-14-7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEyebrow0)"/>`
	eyesInnerSVG                                       = `<mask id="ipSEyes0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M24 41c9.941 0 18-8.322 18-14c0-5.678-8.059-14-18-14S6 21.328 6 27c0 5.672 8.059 14 18 14Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M24 33a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke="#fff" stroke-linecap="round" d="m13.264 11.266l2.594 3.62m19.767-3.176l-2.595 3.62M24.009 7v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSEyes0)"/>`
	fEightKeyInnerSVG                                  = `<mask id="ipSFEightKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M30 24a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 9a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFEightKey0)"/>`
	fFiveKeyInnerSVG                                   = `<mask id="ipSFFiveKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M34 16h-8v6.919s1.833-1.419 4.5-1.419S34 23.659 34 27s-1.5 5-4.444 5C26.889 32 26 30.315 26 28.637M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFFiveKey0)"/>`
	fFourKeyInnerSVG                                   = `<mask id="ipSFFourKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M32.733 32V16L26 26.397v1.619h9M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFFourKey0)"/>`
	fNKeyInnerSVG                                      = `<mask id="ipSFNKey0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M26 17v15m0-9c0-2.379 1.6-4 4-4s4 1.527 4 4v9"/><path stroke="#000" stroke-linejoin="round" d="M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFNKey0)"/>`
	fNineKeyInnerSVG                                   = `<mask id="ipSFNineKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M30 24a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M26 29.124C26.618 30.81 28.108 32 29.848 32C32.14 32 34 30.549 34 28v-8m-13-4h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFNineKey0)"/>`
	fOneKeyInnerSVG                                    = `<mask id="ipSFOneKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="m27 21l5-5v16M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFOneKey0)"/>`
	fSevenKeyInnerSVG                                  = `<mask id="ipSFSevenKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M26 16h8l-6 16m-7-16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFSevenKey0)"/>`
	fSixKeyInnerSVG                                    = `<mask id="ipSFSixKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M30 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M34 18.876C33.382 17.19 31.892 16 30.152 16C27.86 16 26 17.451 26 20v8m-5-12h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFSixKey0)"/>`
	fThreeKeyInnerSVG                                  = `<mask id="ipSFThreeKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M27 16h7l-4.9 7.2c2.8 0 4.9 1.8 4.9 4.8s-2 4-3.5 4c-1.667 0-3-1-3.5-2m-6-14h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFThreeKey0)"/>`
	fTwoKeyInnerSVG                                    = `<mask id="ipSFTwoKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M26 20c0-2.533 2.133-4 4-4s4 1.467 4 4c0 4.56-8 7.947-8 12h8M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFTwoKey0)"/>`
	fZeroKeyInnerSVG                                   = `<mask id="ipSFZeroKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><rect width="8" height="16" x="26" y="16" fill="#fff" stroke="#000" rx="4"/><path stroke="#000" d="M21 16h-7v16m0-8h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFZeroKey0)"/>`
	facePowderInnerSVG                                 = `<mask id="ipSFacePowder0"><g fill="none"><ellipse cx="24" cy="30" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="16" ry="6"/><ellipse cx="24" cy="14" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="16" ry="10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m23 10l-5 3m12 1l-5 3"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 38c0 3.314-7.163 6-16 6S8 41.314 8 38m32 0v-8M8 38v-8"/><ellipse cx="24" cy="30" fill="#000" rx="7" ry="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFacePowder0)"/>`
	faceWithSmilingOpenEyesInnerSVG                    = `<mask id="ipSFaceWithSmilingOpenEyes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31s-2 4-7 4s-7-4-7-4"/><circle cx="17" cy="20" r="4" fill="#000" stroke="#000" stroke-linecap="round"/><circle cx="31" cy="20" r="4" fill="#000" stroke="#000" stroke-linecap="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFaceWithSmilingOpenEyes0)"/>`
	faceWithoutMouthInnerSVG                           = `<mask id="ipSFaceWithoutMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFaceWithoutMouth0)"/>`
	facebookInnerSVG                                   = `<mask id="ipSFacebook0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="3.8" d="M36 12.6h-6.013c-1.086 0-1.967.88-1.967 1.967v6.9H36l-1.169 7.597h-6.81V43h-8.776V29.064H12v-7.597h7.151l.094-7.21l-.013-1.31A7.868 7.868 0 0 1 27.099 5H36v7.6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFacebook0)"/>`
	facetimeInnerSVG                                   = `<mask id="ipSFacetime0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M24 19H12v10h12V19Zm11-1l-5 4v4l5 4V18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFacetime0)"/>`
	faceuInnerSVG                                      = `<mask id="ipSFaceu0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M27 12v4c2.667.833 9 3 9 10s-6 10-12 10s-12-3-12-10c0-8 9.667-12.833 15-14Z"/><ellipse cx="29" cy="26" fill="#000" rx="3" ry="4"/><ellipse cx="19" cy="26" fill="#000" rx="3" ry="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFaceu0)"/>`
	facialCleanserInnerSVG                             = `<mask id="ipSFacialCleanser0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M15 34v10h18V34"/><path fill="#fff" stroke="#fff" d="M31.935 4h-15.95C9.043 4 8.514 8.605 9.25 11.04L14.989 34h17.942s4.644-17.817 5.888-22.96c.589-2.435.09-7.057-6.884-7.04Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20.488 19.09c1.64-1.944 2.903-4.631 3.586-6.09c1.196 1.459 3.792 5.118 4.612 7.063c1.025 2.432-1.537 5.35-4.612 5.35c-3.074 0-5.636-3.89-3.586-6.322Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFacialCleanser0)"/>`
	facialMaskInnerSVG                                 = `<mask id="ipSFacialMask0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M10 15.114a3 3 0 0 1 1.991-2.825l11-3.929a3 3 0 0 1 2.018 0l11 3.929A3 3 0 0 1 38 15.114v16.49c0 .885-.39 1.725-1.092 2.264C34.468 35.742 28.434 40 24 40c-4.434 0-10.467-4.258-12.908-6.132A2.838 2.838 0 0 1 10 31.604v-16.49Z"/><path stroke="#fff" stroke-linecap="round" d="M10 28c-3.314 0-6-3.11-6-6.947S6.686 16 10 16m28 12c3.314 0 6-3.11 6-6.947S41.314 16 38 16"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m16 25l8-4l8 4m-13 6l5-2l5 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFacialMask0)"/>`
	factoryBuildingInnerSVG                            = `<mask id="ipSFactoryBuilding0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 44V4h8v16l16-8v8l16-8v32H4Z"/><path fill="#000" stroke="#000" d="M12 28h8v8h-8zm16 0h8v8h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFactoryBuilding0)"/>`
	familyInnerSVG                                     = `<mask id="ipSFamily0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M10 19s-5.143 2-6 9m34-9s5.143 2 6 9m-26-9s4.8 1.167 6 7m6-7s-4.8 1.167-6 7m-4 8s-4.2.75-6 6m14-6s4.2.75 6 6"/><circle cx="24" cy="31" r="5" fill="#fff" stroke-linejoin="round"/><circle cx="34" cy="14" r="6" fill="#fff" stroke-linejoin="round"/><circle cx="14" cy="14" r="6" fill="#fff" stroke-linejoin="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFamily0)"/>`
	feelgoodInnerSVG                                   = `<mask id="ipSFeelgood0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M23.142 15.858L11.828 27.172a4 4 0 0 0 0 5.656l9.9 9.9a4 4 0 0 0 5.657 0l9.9-9.9a4 4 0 0 0 0-5.656L25.97 15.858a2 2 0 0 0-2.829 0Z"/><path d="M25 13.84s4.554-5.11 6.373-7.266c1.818-2.156 3.768-1.878 5.392-.476c1.625 1.402 1.668 3.616 0 5.677C35.097 13.835 30.556 19 30.556 19M25 13.839s-4.554-5.11-6.373-7.266c-1.818-2.156-3.767-1.878-5.392-.476c-1.625 1.403-1.668 3.617 0 5.677C14.903 13.835 19.444 19 19.444 19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFeelgood0)"/>`
	feelgoodOneInnerSVG                                = `<mask id="ipSFeelgoodOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 6H4v30h21l10 5v-5h9V6Z"/><path stroke="#000" d="M13 23s4 4 11 4s11-4 11-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFeelgoodOne0)"/>`
	femaleInnerSVG                                     = `<mask id="ipSFemale0"><g fill="none"><g stroke="#fff" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSFemale1)"><path fill="#fff" d="M38.379 9.851c-5.468-5.467-14.332-5.467-19.8 0a13.956 13.956 0 0 0-4.1 9.9a13.96 13.96 0 0 0 4.1 9.9c5.468 5.467 14.332 5.467 19.8 0c5.467-5.468 5.467-14.332 0-19.8Z"/><path stroke-linecap="round" d="M18.464 29.535L5.736 42.263m13.435-.707L6.443 28.828"/></g><defs><clipPath id="ipSFemale1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFemale0)"/>`
	ferrisWheelInnerSVG                                = `<mask id="ipSFerrisWheel0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m9 44l15-22m15 22L24 22"/><path stroke="#fff" stroke-width="4" d="M9.132 24A15.14 15.14 0 0 1 9 22a14.95 14.95 0 0 1 1.5-6.546m.656 14.299A15.018 15.018 0 0 0 21 36.7m6 0a15.02 15.02 0 0 0 9.911-7.06M38.868 24c.087-.654.132-1.322.132-2a14.94 14.94 0 0 0-1.5-6.546M27 7.3a14.955 14.955 0 0 1 7 3.52M21 7.3a14.955 14.955 0 0 0-7.614 4.101"/><circle cx="10" cy="27" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="24" cy="37" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="24" cy="7" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="12" cy="13" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="36" cy="13" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="38" cy="27" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="24" cy="22" r="4" fill="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 44h8m20 0h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFerrisWheel0)"/>`
	figmaInnerSVG                                      = `<mask id="ipSFigma0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M18 18a3 3 0 0 1 3-3h3v6h-3a3 3 0 0 1-3-3Zm0 6a3 3 0 0 1 3-3h3v6h-3a3 3 0 0 1-3-3Zm0 6a3 3 0 0 1 3-3h3v3a3 3 0 1 1-6 0Zm6-15h3a3 3 0 1 1 0 6h-3v-6Z"/><path fill="#000" stroke="#000" d="M24 24a3 3 0 1 1 6 0a3 3 0 0 1-6 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFigma0)"/>`
	figmaComponentInnerSVG                             = `<mask id="ipSFigmaComponent0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17 12l7-7l7 7l-7 7l-7-7Zm0 24l7-7l7 7l-7 7l-7-7Zm12-12l7-7l7 7l-7 7l-7-7ZM5 24l7-7l7 7l-7 7l-7-7Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFigmaComponent0)"/>`
	figmaMaskInnerSVG                                  = `<mask id="ipSFigmaMask0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M14 41.324C19.978 37.866 24 31.403 24 24c0-7.403-4.022-13.866-10-17.324C8.022 10.134 4 16.597 4 24c0 7.403 4.022 13.866 10 17.324Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFigmaMask0)"/>`
	fileAdditionInnerSVG                               = `<mask id="ipSFileAddition0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M24 21v14m-7-7h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileAddition0)"/>`
	fileCabinetInnerSVG                                = `<mask id="ipSFileCabinet0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M42 4H6v10h36V4Zm0 15H6v10h36V19Zm0 15H6v10h36V34Z"/><path stroke="#000" stroke-linecap="round" d="M21 9h6m-6 15h6m-6 15h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileCabinet0)"/>`
	fileCodeInnerSVG                                   = `<mask id="ipSFileCode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="m27 24l5 5l-5 5m-6-10l-5 5l5 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileCode0)"/>`
	fileCollectionInnerSVG                             = `<mask id="ipSFileCollection0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="M20.85 21C18.724 21 17 23.009 17 25.486c0 4.487 4.55 8.565 7 9.514c2.45-.949 7-5.027 7-9.514C31 23.01 29.276 21 27.15 21c-1.302 0-2.453.753-3.15 1.906C23.303 21.753 22.152 21 20.85 21Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileCollection0)"/>`
	fileCollectionOneInnerSVG                          = `<mask id="ipSFileCollectionOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="M30.85 30C28.724 30 27 32.009 27 34.486c0 4.487 4.55 8.565 7 9.514c2.45-.949 7-5.027 7-9.514C41 32.01 39.276 30 37.15 30c-1.302 0-2.453.753-3.15 1.906C33.303 30.753 32.152 30 30.85 30Z"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileCollectionOne0)"/>`
	fileConversionInnerSVG                             = `<mask id="ipSFileConversion0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M17 25h14m-14 6h14m0-6l-5-5m-4 16l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileConversion0)"/>`
	fileDateInnerSVG                                   = `<mask id="ipSFileDate0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m30 4l10 10"/><circle cx="24" cy="28" r="8" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M23 25v4h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileDate0)"/>`
	fileDateOneInnerSVG                                = `<mask id="ipSFileDateOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><circle cx="34" cy="36" r="8" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M33 33v4h4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileDateOne0)"/>`
	fileDisplayInnerSVG                                = `<mask id="ipSFileDisplay0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m30 4l10 10"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M24 34c4.97 0 9-6 9-6s-4.03-6-9-6s-9 6-9 6s4.03 6 9 6Z"/><path fill="#000" d="M24 30a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileDisplay0)"/>`
	fileDisplayOneInnerSVG                             = `<mask id="ipSFileDisplayOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M33 41c4.97 0 9-6 9-6s-4.03-6-9-6s-9 6-9 6s4.03 6 9 6Z"/><path fill="#000" d="M33 37a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileDisplayOne0)"/>`
	fileEditingInnerSVG                                = `<mask id="ipSFileEditing0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="m21 35l10-10l-4-4l-10 10v4h4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileEditing0)"/>`
	fileEditingOneInnerSVG                             = `<mask id="ipSFileEditingOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="m32 44l10-10l-4-4l-10 10v4h4Z"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileEditingOne0)"/>`
	fileExcelInnerSVG                                  = `<mask id="ipSFileExcel0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" d="M29 18H19v16h10m0-8H19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileExcel0)"/>`
	fileFailedInnerSVG                                 = `<mask id="ipSFileFailed0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="m18 22l12 12m0-12L18 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileFailed0)"/>`
	fileFocusInnerSVG                                  = `<mask id="ipSFileFocus0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="m24 19l2.523 5.527l6.037.692l-4.477 4.108l1.207 5.954L24 32.293l-5.29 2.988l1.207-5.954l-4.477-4.108l6.037-.692L24 19Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileFocus0)"/>`
	fileFocusOneInnerSVG                               = `<mask id="ipSFileFocusOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="m34 27l2.523 5.527l6.036.692l-4.476 4.108l1.207 5.954L34 40.293l-5.29 2.988l1.207-5.954l-4.477-4.108l6.037-.692L34 27Z"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileFocusOne0)"/>`
	fileGifInnerSVG                                    = `<mask id="ipSFileGif0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" d="M31.008 18H17v16h14.008v-6.992H26"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileGif0)"/>`
	fileHashInnerSVG                                   = `<mask id="ipSFileHash0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M17 25h14m-14 6h14M21 21v14m6-14v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileHash0)"/>`
	fileHidingInnerSVG                                 = `<mask id="ipSFileHiding0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M16 23a8.64 8.64 0 0 0 1.255 2.517C18.783 27.63 21.235 29 24 29s5.217-1.37 6.745-3.483A8.64 8.64 0 0 0 32 23m-10.479 6.068l-1.035 3.864m6-3.864l1.036 3.864m2.832-5.578l2.828 2.828M15 30.01l2.828-2.828"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileHiding0)"/>`
	fileJpgInnerSVG                                    = `<mask id="ipSFileJpg0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M31 18H21m5 0v12"/><path stroke="#000" stroke-linecap="round" d="M18 30a4 4 0 0 0 8 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileJpg0)"/>`
	fileLockInnerSVG                                   = `<mask id="ipSFileLock0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="M17 27h14v8H17z"/><path stroke="#000" d="M28 27v-4c0-1.657-1-4-4-4s-4 2.343-4 4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileLock0)"/>`
	fileLockOneInnerSVG                                = `<mask id="ipSFileLockOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="M28 34h14v8H28z"/><path d="M38 34v-3a3 3 0 1 0-6 0v3M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileLockOne0)"/>`
	fileMusicInnerSVG                                  = `<mask id="ipSFileMusic0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="m31 20l-6 2.969V33.5"/><circle cx="21" cy="33" r="4" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileMusic0)"/>`
	fileMusicOneInnerSVG                               = `<mask id="ipSFileMusicOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12m18-15l-4 .969V40.5"/><circle cx="32" cy="40" r="4" fill="#fff"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileMusicOne0)"/>`
	filePdfInnerSVG                                    = `<mask id="ipSFilePdf0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M18 18h12v7.992L18.008 26L18 18Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M18 18v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFilePdf0)"/>`
	fileProtectionInnerSVG                             = `<mask id="ipSFileProtection0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="M17 23.2c0-1.067 7-3.2 7-3.2s7 2.133 7 3.2c0 8.533-7 12.8-7 12.8s-7-4.267-7-12.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileProtection0)"/>`
	fileProtectionOneInnerSVG                          = `<mask id="ipSFileProtectionOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="M27 31.2c0-1.067 7-3.2 7-3.2s7 2.133 7 3.2c0 8.533-7 12.8-7 12.8s-7-4.267-7-12.8Z"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileProtectionOne0)"/>`
	fileQualityInnerSVG                                = `<mask id="ipSFileQuality0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="M19.2 21h9.6l3.2 4.118L24 35l-8-9.882L19.2 21Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileQuality0)"/>`
	fileQualityOneInnerSVG                             = `<mask id="ipSFileQualityOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><path fill="#fff" d="M28.2 30h9.6l3.2 4.118L33 44l-8-9.882L28.2 30Z"/><path d="M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileQualityOne0)"/>`
	fileQuestionInnerSVG                               = `<mask id="ipSFileQuestion0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m30 4l10 10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 31v-3c2.21 0 4-2.015 4-4.5S26.21 19 24 19s-4 2.015-4 4.5"/><path fill="#000" fill-rule="evenodd" d="M24 39a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileQuestion0)"/>`
	fileRemovalInnerSVG                                = `<mask id="ipSFileRemoval0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M17 28h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileRemoval0)"/>`
	fileSearchInnerSVG                                 = `<mask id="ipSFileSearch0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M40 20.842V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h16"/><path d="M14 17h6m8 0h6M14 28h6m-6 6h6m-3-14v-6m20.728 23.728l4.243 4.243"/><circle cx="33.485" cy="33.485" r="6" fill="#fff" stroke-linejoin="round" transform="rotate(45 33.485 33.485)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSearch0)"/>`
	fileSearchOneInnerSVG                              = `<mask id="ipSFileSearchOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><circle cx="31" cy="34" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m36 38l5 4M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSearchOne0)"/>`
	fileSearchTwoInnerSVG                              = `<mask id="ipSFileSearchTwo0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m30 4l10 10"/><circle cx="22" cy="26" r="6" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m27 30l5 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSearchTwo0)"/>`
	fileSettingsInnerSVG                               = `<mask id="ipSFileSettings0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m30 4l10 10"/><circle cx="24" cy="27" r="5" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 19v3m0 10v3m5.828-14l-2.121 2.121M19.828 31l-2.121 2.121M18 21l2.121 2.121M28 31l2.121 2.121M16 27h3m10 0h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSettings0)"/>`
	fileSettingsOneInnerSVG                            = `<mask id="ipSFileSettingsOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h12"/><circle cx="34" cy="36" r="5" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M34 28v3m0 10v3m5.828-14l-2.121 2.121M29.828 40l-2.121 2.121M28 30l2.121 2.121M38 40l2.121 2.121M26 36h3m10 0h3M30 4v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSettingsOne0)"/>`
	fileStaffInnerSVG                                  = `<mask id="ipSFileStaff0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><circle cx="24" cy="24" r="4" fill="#000" stroke="#000"/><path stroke="#000" d="M32 36a8 8 0 1 0-16 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileStaff0)"/>`
	fileStaffOneInnerSVG                               = `<mask id="ipSFileStaffOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 23v-9L31 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h10"/><circle cx="34" cy="32" r="4" fill="#fff"/><path d="M42 44a8 8 0 1 0-16 0m4-40v10h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileStaffOne0)"/>`
	fileSuccessInnerSVG                                = `<mask id="ipSFileSuccess0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="m17 29l6 5l9-11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileSuccess0)"/>`
	fileTextInnerSVG                                   = `<mask id="ipSFileText0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="M24 22v14m-6-14h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileText0)"/>`
	fileTipsInnerSVG                                   = `<mask id="ipSFileTips0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m30 4l10 10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 19v10"/><path fill="#000" fill-rule="evenodd" d="M24 39a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileTips0)"/>`
	fileTxtInnerSVG                                    = `<mask id="ipSFileTxt0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" d="M18 18.008h12m-5.992 0V34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileTxt0)"/>`
	fileWithdrawalInnerSVG                             = `<mask id="ipSFileWithdrawal0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path stroke="#000" d="m21 25l-5 5l5 5"/><path stroke="#000" d="M16 30h16v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileWithdrawal0)"/>`
	fileWordInnerSVG                                   = `<mask id="ipSFileWord0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 4h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2Z"/><path stroke="#000" stroke-linecap="round" d="m16.008 20l3 14l5-10l5 10l3-14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFileWord0)"/>`
	fillInnerSVG                                       = `<mask id="ipSFill0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M14 14h20v20H14z"/><path stroke="#000" d="M34 23L23 34m2-20L14 25m20-11L14 34m0-12v12h12m-4-20h12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFill0)"/>`
	filterInnerSVG                                     = `<mask id="ipSFilter0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m6 9l14.4 16.818v12.626L27.6 42V25.818L42 9H6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFilter0)"/>`
	financeInnerSVG                                    = `<mask id="ipSFinance0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M18 22h12m-12 6h12m-5.992-6v12M30 15l-6 6l-6-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFinance0)"/>`
	financingInnerSVG                                  = `<mask id="ipSFinancing0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><rect width="10" height="10" x="24" y="16.929" fill="#000" stroke="#000" rx="2" transform="rotate(45 24 16.929)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFinancing0)"/>`
	financingOneInnerSVG                               = `<mask id="ipSFinancingOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M15 14.385C19.126 16 24.01 16 24.01 16s4.87 0 8.99-1.615c4.502 5.254 7.657 12.18 9.73 18.013C44.829 38.303 40.2 44 33.934 44H14.02c-6.252 0-10.874-5.67-8.786-11.563C7.298 26.614 10.455 19.686 15 14.385Z"/><path stroke="#000" stroke-linecap="round" d="M18 28h12m-12 6h12m-5.991-6v10M30 22l-6 6l-6-6"/><path stroke="#fff" stroke-linecap="round" d="M24 16c7.18 0 13-2.686 13-6s-5.82-6-13-6s-13 2.686-13 6s5.82 6 13 6Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFinancingOne0)"/>`
	financingTwoInnerSVG                               = `<mask id="ipSFinancingTwo0"><g fill="none" stroke-width="4"><path stroke="#fff" d="M12 9.927V7a3 3 0 0 1 3-3h26a3 3 0 0 1 3 3v26a3 3 0 0 1-3 3h-2.983"/><rect width="34" height="34" x="4" y="10" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m15 17l6 6l6-6m-13 8h14m-14 6h14m-7-6v11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFinancingTwo0)"/>`
	findInnerSVG                                       = `<mask id="ipSFind0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M4 7h40M4 23h11M4 39h11"/><path fill="#fff" d="M31.5 34a8.5 8.5 0 1 0 0-17a8.5 8.5 0 0 0 0 17Z"/><path stroke-linecap="round" d="m37 32l7 7.05"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFind0)"/>`
	fingernailInnerSVG                                 = `<mask id="ipSFingernail0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M44 24c0 11.046-8.954 20-20 20S4 35.046 4 24S12.954 4 24 4"/><path d="m38 9.472l.343 1.056h1.11l-.898.652l.343 1.056l-.898-.652l-.898.652l.343-1.056l-.898-.652h1.11L38 9.472Z"/><rect width="12" height="24" x="18" y="13" fill="#fff" stroke-linecap="round" stroke-linejoin="round" rx="6"/><path stroke-linecap="round" stroke-linejoin="round" d="M18 25c-2 0-5 2.118-5 6v9.784M30 25c2 0 5 2.118 5 6v9.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFingernail0)"/>`
	fireInnerSVG                                       = `<mask id="ipSFire0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c8.235 0 15-6.526 15-14.902c0-2.056-.105-4.26-1.245-7.686c-1.14-3.426-1.369-3.868-2.574-5.984c-.515 4.317-3.27 6.117-3.97 6.655c0-.56-1.666-6.747-4.193-10.45C24.537 8 21.163 5.617 19.185 4c0 3.07-.863 7.634-2.1 9.96c-1.236 2.325-1.468 2.41-3.013 4.14c-1.544 1.73-2.253 2.265-3.545 4.365C9.236 24.565 9 27.362 9 29.418C9 37.794 15.765 44 24 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFire0)"/>`
	fireExtinguisherInnerSVG                           = `<mask id="ipSFireExtinguisher0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 20a8 8 0 1 1 16 0v24H6V20Z"/><path fill="#fff" d="M30 44h12l-6-18l-6 18Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m36 26l-6 18h12l-6-18Zm0 0v-2c0-7.543 0-11.314-2.343-13.657S27.543 8 20 8h-2m-8 0H6"/><circle cx="14" cy="8" r="4" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFireExtinguisher0)"/>`
	fireExtinguisherOneInnerSVG                        = `<mask id="ipSFireExtinguisherOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M16 18a8 8 0 1 1 16 0v24a2 2 0 0 1-2 2H18a2 2 0 0 1-2-2V18Z"/><path stroke="#000" stroke-linecap="round" d="M24 24v10"/><path fill="#fff" stroke="#fff" d="M20 5h9v4h-9zm9 0l9-1v6l-9-1V5Z"/><path stroke="#fff" stroke-linecap="round" d="M20 7c-3 0-7.5-.5-10 2c-2.417 2.416-2 5-2 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFireExtinguisherOne0)"/>`
	fireworksInnerSVG                                  = `<mask id="ipSFireworks0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m6 42l8.674-24.736L31 34.038L6 42Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m23 19l5-5c2.667-2.667 3-5 1-7m0 18l5-5c3.333-3.333 6.667-3.333 10 0"/><path fill="#fff" d="M20 7a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm22-1a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 23a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm-3 9a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFireworks0)"/>`
	firstAidKitInnerSVG                                = `<mask id="ipSFirstAidKit0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M8 20v18a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V20"/><path fill="#fff" d="M5 14h38v6H5v-6Zm26-6H17v6h14V8Z"/><path stroke-linecap="round" d="M20 30h8m-4-4v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFirstAidKit0)"/>`
	fishInnerSVG                                       = `<mask id="ipSFish0"><g fill="none"><g clip-path="url(#ipSFish1)"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15.38 32.844C9.725 31.429.532 34.965 9.725 38.501c3.535 9.192 7.07 0 5.657-5.657Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22.482 10.248c-4.903-.014-11.232 1.536-12.029 3.727c-.577 1.589 2.425 3.702 6.25 4.818m21.275 6.949c.013 4.904-1.537 11.232-3.728 12.03c-1.589.577-3.702-2.425-4.818-6.251"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 25.765C44.662 19.7 40.124 8.09 40.124 8.09S28.108 4.56 22.45 10.216c-5.657 5.657-7.071 22.628-7.071 22.628s15.956-1.015 22.62-7.08Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38.008 25.773s-6.718-1.06-10.607-4.95c-3.89-3.889-4.95-10.606-4.95-10.606"/><circle cx="33.766" cy="14.459" r="2" fill="#000" transform="rotate(45 33.766 14.46)"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M41 20.945c-.54 1.76-1.478 3.434-3 4.82c-1.648 1.5-3.864 2.69-6.266 3.633M27 7.656c-1.697.489-3.282 1.294-4.549 2.56c-1.184 1.186-2.183 2.867-3.022 4.784"/></g><defs><clipPath id="ipSFish1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFish0)"/>`
	fishOneInnerSVG                                    = `<mask id="ipSFishOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 24c-1.215 4.69-7.962 8.467-11 9c-2.43 5.97-8.962 6.533-12 6l4-6c-4.456-.427-9.975-5.046-12-7c-2.614 2.85-6.806 5.08-9 5.969C7.646 24.294 5.519 17.309 4 15c2.835 0 7.143 3.224 9 5c2.025-2.132 8.962-5.112 12-6l-4-5c7.696-.853 11.156 2.868 12 5c7.696 1.706 10.662 7.69 11 10Z"/><circle cx="36" cy="24" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFishOne0)"/>`
	fistInnerSVG                                       = `<mask id="ipSFist0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M34 41c-5.83 3.175-12.5 2.5-16 1S6 35.5 6 27c0-4.247 5.771-6.33 7.51-6.86a.686.686 0 0 0 .49-.652V12a3.5 3.5 0 1 1 7 0V9.5a3.5 3.5 0 0 1 7 0V12a3.5 3.5 0 1 1 7 0v4.493a3.5 3.5 0 0 1 7 .003V30c0 4-3.87 8.751-8 11Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFist0)"/>`
	fiveInnerSVG                                       = `<mask id="ipSFive0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11 40L6 25.5l-1.958-9.792a2.14 2.14 0 0 1-.042-.42v-.16c0-1.371 1.782-1.902 2.532-.755c.056.085.105.173.147.265l3.932 8.519a1 1 0 0 0 1.259.517l.13-.049l-1.87-13.68a2.32 2.32 0 0 1 .442-1.707a1.547 1.547 0 0 1 2.166-.31l.133.1c.41.308.719.73.886 1.215l4.112 11.879a.562.562 0 0 0 1.092-.22l-.883-13.685a2.696 2.696 0 0 1 .785-2.08a1.797 1.797 0 0 1 2.393-.132l.34.272a3 3 0 0 1 1.088 1.865l2.239 13.88a.568.568 0 0 0 1.127-.036l1.328-13.724a3 3 0 0 1 1.112-2.054l.206-.165a1.865 1.865 0 0 1 2.484.138c.525.524.82 1.236.82 1.978v19.51a1 1 0 0 0 1.54.84l4.472-2.874A4 4 0 0 1 40.175 24h2.068a1 1 0 0 1 .86 1.51L34.5 40S31 44 23 44s-11.333-2.667-12-4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFive0)"/>`
	fiveFiveInnerSVG                                   = `<mask id="ipSFiveFive0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14.223 37.471L6.55 26.984a4.423 4.423 0 0 1 6.696-5.738L16 24V7.25a3.25 3.25 0 0 1 6.5 0v-1a3.25 3.25 0 0 1 6.5 0v1a3.25 3.25 0 0 1 6.5 0v4a3.25 3.25 0 0 1 6.5 0v19.058c0 2.73-.838 5.417-2.38 7.671C37.056 41.726 32.785 44 28.245 44H27.09a15.944 15.944 0 0 1-12.867-6.529Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFiveFive0)"/>`
	fiveKeyInnerSVG                                    = `<mask id="ipSFiveKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M29 14.01h-9v7.024C20 21 22 20 25 20s4 2.034 4 6s-1 7-5 7c-3 0-4-2-4-3.992"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFiveKey0)"/>`
	fiveStarBadgeInnerSVG                              = `<mask id="ipSFiveStarBadge0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M23.103 20.817a1 1 0 0 1 1.794 0l2.985 6.048a1 1 0 0 0 .753.548l6.675.97a1 1 0 0 1 .554 1.705l-4.83 4.708a1 1 0 0 0-.288.885l1.14 6.648a1 1 0 0 1-1.45 1.054l-5.97-3.138a1 1 0 0 0-.931 0l-5.97 3.138a1 1 0 0 1-1.452-1.054l1.14-6.648a1 1 0 0 0-.287-.885l-4.83-4.708a1 1 0 0 1 .554-1.706l6.675-.97a1 1 0 0 0 .753-.547l2.985-6.048ZM36 4H12v10l12 5l12-5V4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFiveStarBadge0)"/>`
	flagInnerSVG                                       = `<mask id="ipSFlag0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 44h8m-4 0V4"/><path fill="#fff" d="M40 6H12v16h28l-4-8l4-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlag0)"/>`
	flashPaymentInnerSVG                               = `<mask id="ipSFlashPayment0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M31 4H16l-6 23h8l-4 17l26-28H28l3-12Z"/><path stroke="#000" d="m21 11l-2 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlashPayment0)"/>`
	flashlampInnerSVG                                  = `<mask id="ipSFlashlamp0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m23 14l-5 10h12l-5 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlashlamp0)"/>`
	flashlightInnerSVG                                 = `<mask id="ipSFlashlight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M17 22.196a.392.392 0 0 0-.157-.314A19.608 19.608 0 0 1 9 6.196V4h30v2.196a19.608 19.608 0 0 1-7.843 15.686a.392.392 0 0 0-.157.314V44H17V22.196Z"/><path stroke="#000" stroke-linecap="round" d="M38 11H10m14 17.008v4"/><path stroke="#fff" stroke-linecap="round" d="M17 22v0A20 20 0 0 1 9 6V4m30 0v2a20 20 0 0 1-8 16v0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlashlight0)"/>`
	flaskInnerSVG                                      = `<mask id="ipSFlask0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M37.845 35.022L44 41.316V44H4v-2.684l6.118-6.257l27.727-.037Z"/><path stroke-linecap="round" d="M10.104 35.074L18 27V6h12v21l7.873 8.05M11 35h26m-7-21h-6m6 6h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlask0)"/>`
	flightAirflowInnerSVG                              = `<mask id="ipSFlightAirflow0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M6 25c0-9.941 8.283-18 18.5-18S43 15.059 43 25"/><path fill="#fff" stroke-linejoin="round" d="m10 35l-1.064-5s-3.435 3.109-4.58 5.74C3.211 38.37 4.852 41 8 41h36l-8-5.978L10 35Z"/><path stroke-linejoin="round" d="M29 35L18 25h-3l2 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlightAirflow0)"/>`
	flightSafetyInnerSVG                               = `<mask id="ipSFlightSafety0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M38.986 23c-.313 10.709-5.866 16.522-13.984 20c-4.393-1.881-8.034-4.447-10.502-8.101M39 19v-8.744L25.007 5L11 10.256v11.773c0 2.587.294 4.9.848 6.971"/><path fill="#fff" stroke-linecap="round" d="M9.268 30.632c-1.373-1.257-2.99-3.877-3.587-4.027c0 0-1.798 4.434-1.68 7.395c.117 2.96 2.896 4.635 5.824 3.22C12.753 35.806 44 20 44 20l-9-2L9.268 30.632Z"/><path stroke-linecap="round" d="m28 21l-9-3l-2 1l3 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlightSafety0)"/>`
	flipCameraInnerSVG                                 = `<mask id="ipSFlipCamera0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M12 11h5l2-4h10l2 4h5v16H12V11Z"/><circle cx="24" cy="18" r="4" fill="#000" stroke="#000"/><path stroke="#fff" d="M24 38C12.954 38 4 33.523 4 28c0-1.422.594-2.775 1.664-4M24 38l-4-4m4 4l-4 4m12-4.832C39.064 35.625 44 32.1 44 28c0-1.422-.594-2.775-1.664-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlipCamera0)"/>`
	flipHorizontallyInnerSVG                           = `<mask id="ipSFlipHorizontally0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 6v36"/><path fill="#fff" d="m4 34l12-22v22H4Zm40 0H32V12l12 22Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlipHorizontally0)"/>`
	flipVerticallyInnerSVG                             = `<mask id="ipSFlipVertically0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M42 24H6"/><path fill="#fff" d="m14 4l22 12H14V4Zm0 40V32h22L14 44Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFlipVertically0)"/>`
	floatInnerSVG                                      = `<mask id="ipSFloat0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M24 40c11.046 0 20-7.163 20-16S35.046 8 24 8S4 15.163 4 24s8.954 16 20 16Z"/><path fill="#fff" d="M24 28c5.523 0 10-2.686 10-6s-4.477-6-10-6s-10 2.686-10 6s4.477 6 10 6Z"/><path stroke-linecap="round" d="M24 16V8m8 10s2.625-4 7-4m-23 4s-2-4-7-4m9 13s-6 2-7 9m19-9s6.5 2 7 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFloat0)"/>`
	fmInnerSVG                                         = `<mask id="ipSFm0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="22" r="4" fill="#fff"/><path fill="#fff" d="M21.524 33.054c1.238-1.405 3.714-1.405 4.952 0s0 10.307-.825 11.243c-.826.937-2.476.937-3.302 0c-.825-.936-2.063-9.838-.825-11.243Z"/><path d="M30.967 30.513A10.978 10.978 0 0 0 35 22c0-6.075-4.925-11-11-11s-11 4.925-11 11c0 3.431 1.571 6.496 4.033 8.513"/><path d="M31.926 38.166C37.893 35.235 42 29.096 42 22c0-9.941-8.059-18-18-18S6 12.059 6 22c0 7.097 4.107 13.234 10.074 16.166"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFm0)"/>`
	focusInnerSVG                                      = `<mask id="ipSFocus0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 6H8a2 2 0 0 0-2 2v8m10 26H8a2 2 0 0 1-2-2v-8m26 10h8a2 2 0 0 0 2-2v-8M32 6h8a2 2 0 0 1 2 2v8"/><rect width="20" height="20" x="14" y="14" fill="#fff" stroke="#fff" stroke-width="4" rx="10"/><circle r="3" fill="#000" transform="matrix(-1 0 0 1 24 24)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFocus0)"/>`
	focusOneInnerSVG                                   = `<mask id="ipSFocusOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 6H8a2 2 0 0 0-2 2v8m10 26H8a2 2 0 0 1-2-2v-8m26 10h8a2 2 0 0 0 2-2v-8M32 6h8a2 2 0 0 1 2 2v8"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4" d="M24 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4" d="M24 17v-4m0 22v-4m11-7h-4m-14 0h-4"/><path fill="#000" d="M24 26a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFocusOne0)"/>`
	folderInnerSVG                                     = `<mask id="ipSFolder0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 6a2 2 0 0 1 2-2h30a2 2 0 0 1 2 2v36a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V6Z"/><path stroke="#000" d="M16 29h4m-4 6h10M8 5s3.765 13 16 13S40 5 40 5"/><circle cx="24" cy="18" r="4" fill="#000" stroke="#000"/><path stroke="#fff" d="M15 4H9a2 2 0 0 0-2 2v6m26-8h6a2 2 0 0 1 2 2v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolder0)"/>`
	folderBlockInnerSVG                                = `<mask id="ipSFolderBlock0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><circle cx="25" cy="27" r="7" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m27 25l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderBlock0)"/>`
	folderBlockOneInnerSVG                             = `<mask id="ipSFolderBlockOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><circle cx="35" cy="35" r="8" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m37 33l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderBlockOne0)"/>`
	folderCloseInnerSVG                                = `<mask id="ipSFolderClose0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" d="M43 22H5"/><path stroke="#fff" stroke-linecap="round" d="M5 16v12m38-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderClose0)"/>`
	folderCodeInnerSVG                                 = `<mask id="ipSFolderCode0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m28 22l5 5l-5 5m-8-10l-5 5l5 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderCode0)"/>`
	folderConversionInnerSVG                           = `<mask id="ipSFolderConversion0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="M17 24h14m-14 6h14m0-6l-5-5m-4 16l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderConversion0)"/>`
	folderDownloadInnerSVG                             = `<mask id="ipSFolderDownload0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m30 28l-6.007 6L18 28.013M24 20v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderDownload0)"/>`
	folderFailedInnerSVG                               = `<mask id="ipSFolderFailed0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m19 22l10 10m0-10L19 32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderFailed0)"/>`
	folderFocusInnerSVG                                = `<mask id="ipSFolderFocus0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="m24 20l2.243 4.913l5.366.615l-3.98 3.651l1.073 5.293L24 31.816l-4.702 2.656l1.073-5.293l-3.98-3.651l5.366-.615L24 20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderFocus0)"/>`
	folderFocusOneInnerSVG                             = `<mask id="ipSFolderFocusOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><path fill="#fff" d="m35 27l2.243 4.913l5.365.615l-3.979 3.651l1.073 5.293L35 38.816l-4.702 2.656l1.073-5.293l-3.98-3.651l5.366-.615L35 27Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderFocusOne0)"/>`
	folderLockInnerSVG                                 = `<mask id="ipSFolderLock0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M17 26h14v8H17z"/><path stroke="#000" stroke-linecap="round" d="M27 26v-3a3 3 0 1 0-6 0v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderLock0)"/>`
	folderLockOneInnerSVG                              = `<mask id="ipSFolderLockOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><path fill="#fff" d="M29 34h14v8H29z"/><path d="M39 34v-3a3 3 0 1 0-6 0v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderLockOne0)"/>`
	folderMinusInnerSVG                                = `<mask id="ipSFolderMinus0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 9a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V9Z"/><path stroke="#000" stroke-linecap="round" d="M17.95 28h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderMinus0)"/>`
	folderMusicInnerSVG                                = `<mask id="ipSFolderMusic0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m30 20l-4 .969V30.5"/><circle cx="22" cy="30" r="4" fill="#000" stroke="#000" stroke-linecap="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderMusic0)"/>`
	folderMusicOneInnerSVG                             = `<mask id="ipSFolderMusicOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><path d="m40 28l-4 .969V38.5"/><circle cx="32" cy="38" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderMusicOne0)"/>`
	folderOneInnerSVG                                  = `<mask id="ipSFolderOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5 6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v36a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6Z"/><circle cx="11" cy="35" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11 11v14"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m23.977 9.756l10.06-2.515a1 1 0 0 1 1.211.72l7.5 29.063a1 1 0 0 1-.725 1.22l-10.06 2.515a1 1 0 0 1-1.211-.72l-7.5-29.063a1 1 0 0 1 .726-1.22Z"/><circle cx="35" cy="32" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m31 16l2.5 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderOne0)"/>`
	folderOpenInnerSVG                                 = `<mask id="ipSFolderOpen0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 9v32l5-20h30.5v-6a2 2 0 0 0-2-2H24l-5-6H6a2 2 0 0 0-2 2Z"/><path fill="#fff" d="m40 41l4-20H8.812L4 41h36Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderOpen0)"/>`
	folderPlusInnerSVG                                 = `<mask id="ipSFolderPlus0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="M18 27h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderPlus0)"/>`
	folderProtectionInnerSVG                           = `<mask id="ipSFolderProtection0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M18 22.8c0-.933 6-2.8 6-2.8s6 1.867 6 2.8c0 7.467-6 11.2-6 11.2s-6-3.733-6-11.2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderProtection0)"/>`
	folderProtectionOneInnerSVG                        = `<mask id="ipSFolderProtectionOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><path fill="#fff" d="M28 30.8c0-.933 6-2.8 6-2.8s6 1.867 6 2.8c0 7.467-6 11.2-6 11.2s-6-3.733-6-11.2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderProtectionOne0)"/>`
	folderQualityInnerSVG                              = `<mask id="ipSFolderQuality0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M19.8 21h8.4l2.8 3.53L24 33l-7-8.47L19.8 21Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderQuality0)"/>`
	folderQualityOneInnerSVG                           = `<mask id="ipSFolderQualityOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><path fill="#fff" d="M29.8 29h8.4l2.8 3.53L34 41l-7-8.47L29.8 29Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderQualityOne0)"/>`
	folderSearchInnerSVG                               = `<mask id="ipSFolderSearch0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><circle cx="22" cy="26" r="6" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m27 30l5 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderSearch0)"/>`
	folderSearchOneInnerSVG                            = `<mask id="ipSFolderSearchOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><circle cx="32" cy="32" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m37 36l5 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderSearchOne0)"/>`
	folderSettingsInnerSVG                             = `<mask id="ipSFolderSettings0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><circle cx="24" cy="28" r="4" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 21v3m0 8v3m4.828-12l-2.121 2.121M20.828 31l-2.121 2.121M19 23l2.121 2.121M27 31l2.121 2.121M17 28h3m8 0h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderSettings0)"/>`
	folderSettingsOneInnerSVG                          = `<mask id="ipSFolderSettingsOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M43 23v-9a2 2 0 0 0-2-2H24l-5-6H7a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h15"/><circle cx="35" cy="35" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M35 28v3m0 8v3m4.828-12l-2.121 2.121M31.828 38l-2.121 2.121M30 30l2.121 2.121M38 38l2.121 2.121M28 35h3m8 0h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderSettingsOne0)"/>`
	folderSuccessInnerSVG                              = `<mask id="ipSFolderSuccess0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m18 29l5 4l9-11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderSuccess0)"/>`
	folderUploadInnerSVG                               = `<mask id="ipSFolderUpload0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="M30 25.987L24 20l-6 6m6-6v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderUpload0)"/>`
	folderWithdrawalInnerSVG                           = `<mask id="ipSFolderWithdrawal0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" d="m21 23l-5 5l5 5"/><path stroke="#000" stroke-linecap="round" d="M16 28h16v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFolderWithdrawal0)"/>`
	fontSearchInnerSVG                                 = `<mask id="ipSFontSearch0"><g fill="none" stroke-linecap="round" stroke-width="4"><circle cx="22.834" cy="22.834" r="17" fill="#fff" stroke="#fff" stroke-linejoin="round"/><path stroke="#fff" d="m35 35l6 6"/><path stroke="#000" stroke-linejoin="round" d="M23 17v14m-5-14h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFontSearch0)"/>`
	forbidInnerSVG                                     = `<mask id="ipSForbid0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z" clip-rule="evenodd"/><path stroke="#000" d="m15 15l18 18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSForbid0)"/>`
	forkInnerSVG                                       = `<mask id="ipSFork0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M37 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm-26 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm13 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M11 12v3c0 7 13 10 13 17v4v-4c0-7 13-10 13-17v-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFork0)"/>`
	forkSpoonInnerSVG                                  = `<mask id="ipSForkSpoon0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M14 4v40M8 5v10c0 5 6 5 6 5s6 0 6-5V5m14 15v24"/><path fill="#fff" d="M40 12c0 4.418-2.686 8-6 8s-6-3.582-6-8s2.686-8 6-8s6 3.582 6 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSForkSpoon0)"/>`
	formInnerSVG                                       = `<mask id="ipSForm0"><g fill="none"><rect width="40" height="32" x="4" y="8" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="2"/><path fill="#fff" fill-rule="evenodd" d="M4 29h40H4Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 29h40"/><path fill="#fff" fill-rule="evenodd" d="M4 19h40H4Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 19h40"/><path fill="#fff" fill-rule="evenodd" d="M17 40V19v21Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 40V19"/><path fill="#fff" fill-rule="evenodd" d="M4 38V17v21Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 38V17"/><path fill="#fff" fill-rule="evenodd" d="M44 38V17v21Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 38V17"/><path fill="#fff" fill-rule="evenodd" d="M31 40V19v21Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M31 40V19"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 40h30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSForm0)"/>`
	formatInnerSVG                                     = `<mask id="ipSFormat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M8 24h32v18H8z"/><path fill="#fff" stroke-linejoin="round" d="M4 13h14V6h12v7h14v11H4V13Z"/><path d="M16 32v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFormat0)"/>`
	formatBrushInnerSVG                                = `<mask id="ipSFormatBrush0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M34 5H6v15h28V5Z"/><path stroke-linecap="round" d="M34.025 12H43v16.101l-24 3.1V43"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFormatBrush0)"/>`
	foundationMakeupInnerSVG                           = `<mask id="ipSFoundationMakeup0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M13 19a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v19s0 6-6 6h-8c-6 0-6-6-6-6V19Z"/><path d="M18 12h10v5H18zm0 0V9c0-3 3-5 6-5h11s-7 2-7 6v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFoundationMakeup0)"/>`
	fourInnerSVG                                       = `<mask id="ipSFour0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 40L8 25.5l-1.958-9.792a2.14 2.14 0 0 1-.042-.42v-.16c0-1.371 1.782-1.902 2.532-.755c.056.085.105.173.147.265l3.932 8.519a1 1 0 0 0 1.259.517l.13-.049l-1.87-13.68a2.32 2.32 0 0 1 .442-1.707a1.547 1.547 0 0 1 2.166-.31l.133.1c.41.308.719.73.886 1.215l4.112 11.879a.562.562 0 0 0 1.092-.22l-.883-13.685a2.696 2.696 0 0 1 .785-2.08a1.797 1.797 0 0 1 2.393-.132l.34.272a3 3 0 0 1 1.088 1.865l2.239 13.88a.568.568 0 0 0 1.127-.036l1.328-13.724a3 3 0 0 1 1.112-2.054l.206-.165a1.865 1.865 0 0 1 2.485.138c.524.524.819 1.236.819 1.978V19.91a.82.82 0 0 0 .017.175c.112.514.79 3.183 2.983 3.914c.907.302 2.364 2.8 3.373 4.727c.74 1.414.669 3.097-.106 4.492L36.5 40S33 44 25 44s-11.333-2.667-12-4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFour0)"/>`
	fourArrowsInnerSVG                                 = `<mask id="ipSFourArrows0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m24 24l-5-5m5-11v16V8Zm0 16l5-5l-5 5Zm0 0l-5 5m5 11V24v16Zm0-16l5 5l-5-5Z"/><path fill="#fff" d="M20 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM8 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M8 24h32"/><path fill="#fff" d="M40 24a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM28 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFourArrows0)"/>`
	fourFourInnerSVG                                   = `<mask id="ipSFourFour0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25.745 44h-.896c-5.21 0-10.07-2.626-12.925-6.984l-2.195-3.35a5.629 5.629 0 0 1 1.072-7.382l2.288-1.936c.26-.22.411-.545.411-.887V7.25a3.25 3.25 0 0 1 6.5 0v-1a3.25 3.25 0 0 1 6.5 0v1a3.25 3.25 0 0 1 6.5 0v4a3.25 3.25 0 0 1 6.5 0v19.058c0 2.73-.838 5.417-2.38 7.671C34.556 41.726 30.285 44 25.745 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFourFour0)"/>`
	fourKeyInnerSVG                                    = `<mask id="ipSFourKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M26.977 34V14L18 26.997v2.023h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFourKey0)"/>`
	fourPointConnectionInnerSVG                        = `<mask id="ipSFourPointConnection0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 28v12h12m8 0h12V28m0-8V8H28m-8 0H8v12"/><path fill="#fff" d="M44 20h-8v8h8v-8Zm-32 0H4v8h8v-8Zm16 16h-8v8h8v-8Zm0-32h-8v8h8V4Z"/><path d="M24 18v12m-6-6h12M28 8l12 12M20 8L8 20m12 20L8 28m32 0L29 40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFourPointConnection0)"/>`
	fourRoundPointConnectionInnerSVG                   = `<mask id="ipSFourRoundPointConnection0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 16a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path d="M6.283 14.71A19.859 19.859 0 0 0 4.4 20M14.71 6.283A19.86 19.86 0 0 1 20 4.4"/><path fill="#fff" d="M38 16a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path d="M33.29 6.283A19.86 19.86 0 0 0 28 4.4m13.716 10.31A19.857 19.857 0 0 1 43.6 20"/><path fill="#fff" d="M38 44a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path d="M41.716 33.29A19.859 19.859 0 0 0 43.6 28M33.29 41.716A19.859 19.859 0 0 1 28 43.6"/><path fill="#fff" d="M10 44a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path d="M14.71 41.716A19.859 19.859 0 0 0 20 43.6M6.283 33.29A19.86 19.86 0 0 1 4.4 28M24 30V18m-6 6h12h-12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFourRoundPointConnection0)"/>`
	foursquareInnerSVG                                 = `<mask id="ipSFoursquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 4H14v40l10-18h8l6-22Z"/><path stroke="#000" d="M35 15H25"/><path stroke="#fff" d="m36.636 9l-3.273 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFoursquare0)"/>`
	frenchFriesInnerSVG                                = `<mask id="ipSFrenchFries0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M21 22V12a2 2 0 0 0-2-2h-3a2 2 0 0 0-2 2v9m21 0v-7a2 2 0 0 0-2-2h-3a2 2 0 0 0-2 2v8m0 0V6a2 2 0 0 0-2-2h-3a2 2 0 0 0-2 2v16"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M7 18s7 5 17 5s17-5 17-5l-4.818 26H11.818L7 18Z"/><ellipse cx="24" cy="33" fill="#000" stroke="#000" rx="6" ry="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFrenchFries0)"/>`
	friendsCircleInnerSVG                              = `<mask id="ipSFriendsCircle0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#fff" fill-rule="evenodd" d="M31 7v17V7Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M31 7v17"/><path fill="#fff" fill-rule="evenodd" d="m16.636 6.636l14.142 14.142L16.636 6.636Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m16.636 6.636l14.142 14.142"/><path fill="#fff" fill-rule="evenodd" d="M7 17h17H7Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 17h17"/><path fill="#fff" fill-rule="evenodd" d="M20.364 17.636L6.222 31.778l14.142-14.142Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20.364 17.636L6.222 31.778"/><path fill="#fff" fill-rule="evenodd" d="M17 25v17v-17Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 25v17"/><path fill="#fff" fill-rule="evenodd" d="m17.636 27.636l14.142 14.142l-14.142-14.142Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17.636 27.636l14.142 14.142"/><path fill="#fff" fill-rule="evenodd" d="M24 31h18h-18Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 31h18"/><path fill="#fff" fill-rule="evenodd" d="M42.364 16.636L28.222 30.778l14.142-14.142Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42.364 16.636L28.222 30.778"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFriendsCircle0)"/>`
	frigateInnerSVG                                    = `<mask id="ipSFrigate0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M11 12v12l13-5l13 5V12H11Z"/><path d="M19 7v5h10V7a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm-7 37L6 26l18-7l18 7l-6 18"/><path d="M4 42s4.663 2 8 2c5 0 7-2 12-2s7 2 12 2c3.337 0 8-2 8-2M24 19v23"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFrigate0)"/>`
	frogInnerSVG                                       = `<mask id="ipSFrog0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19.102 10.894c.424.775.641 1.629.67 2.512a28.24 28.24 0 0 1 3.728-.245c1.63 0 3.212.138 4.725.397a5.597 5.597 0 0 1 .673-2.664c1.76-3.209 6.415-3.846 10.4-1.423c3.983 2.422 5.787 6.988 4.028 10.198a5.233 5.233 0 0 1-1.745 1.877C42.496 23.1 43 24.8 43 26.58C43 33.99 34.27 40 23.5 40S4 33.992 4 26.58c0-1.98.624-3.861 1.744-5.554a5.196 5.196 0 0 1-1.07-1.357c-1.76-3.21.045-7.776 4.029-10.198c3.984-2.423 8.64-1.786 10.399 1.423Z"/><circle cx="12" cy="17" r="2" fill="#000"/><circle cx="20.156" cy="28.576" r="2" fill="#000"/><circle cx="28.156" cy="28.576" r="2" fill="#000"/><circle cx="36" cy="17" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFrog0)"/>`
	frowningFaceWhitOpenMouthInnerSVG                  = `<mask id="ipSFrowningFaceWhitOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm7-9v1m-14-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFrowningFaceWhitOpenMouth0)"/>`
	fruiterInnerSVG                                    = `<mask id="ipSFruiter0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M19 32c-4 0-13 .13-13-9.059c0-1.749.594-5.244 3.865-7.328a2.726 2.726 0 0 0 1.235-1.897C11.6 10.226 14.11 4 22 4c2.293 0 5.988.3 8.384 3.93c.416.631 1.096 1.059 1.838 1.204C35.79 9.83 42.058 13.276 42 20c.06 2.17-.443 5.346-4.506 7.37c-.846.421-1.379 1.313-1.546 2.243C35.497 32.117 33.277 35.375 27 36"/><path fill="#fff" d="M16 44c7.093-12.93 2.956-18.653 0-20l14-2c-6.72 9.339-3.422 18.558-.933 22H16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFruiter0)"/>`
	fullDressLonguetteInnerSVG                         = `<mask id="ipSFullDressLonguette0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m18 18l-4-8h20l-4 8v6l10.5 20H7l11-20v-6Z"/><path stroke="#fff" d="M20 4v6m8-6v6"/><path stroke="#000" d="M18 21h12"/><path stroke="#fff" d="M18 19v4m12-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFullDressLonguette0)"/>`
	fullScreenPlayInnerSVG                             = `<mask id="ipSFullScreenPlay0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M16 40H6a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v6"/><path fill="#fff" d="M42 24H26a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V26a2 2 0 0 0-2-2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFullScreenPlay0)"/>`
	fullSelectionInnerSVG                              = `<mask id="ipSFullSelection0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M34 5H8a3 3 0 0 0-3 3v26a3 3 0 0 0 3 3h26a3 3 0 0 0 3-3V8a3 3 0 0 0-3-3Z"/><path stroke="#fff" stroke-linecap="round" d="M44 13.002V42a2 2 0 0 1-2 2H13.003"/><path stroke="#000" stroke-linecap="round" d="m13 20.486l6 5.525l10-10.292"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSFullSelection0)"/>`
	gameInnerSVG                                       = `<mask id="ipSGame0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38.512 9.536A20.429 20.429 0 0 0 24.5 4C13.178 4 4 13.178 4 24.5S13.178 45 24.5 45a20.435 20.435 0 0 0 14.405-5.914L24 24L38.512 9.536Z"/><path fill="#fff" stroke="#fff" d="M40 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#000" stroke-linecap="round" d="M17 13v8m-4-4h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGame0)"/>`
	gameConsoleInnerSVG                                = `<mask id="ipSGameConsole0"><g fill="none"><rect width="28" height="40" x="10" y="4" stroke="#fff" stroke-width="4" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 34h8m-4-4v8"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M16 10h16v9H16z"/><circle cx="31" cy="30" r="2" fill="#fff"/><circle cx="31" cy="38" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameConsole0)"/>`
	gameConsoleOneInnerSVG                             = `<mask id="ipSGameConsoleOne0"><g fill="none"><rect width="28" height="40" x="10" y="4" stroke="#fff" stroke-width="4" rx="2"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 12h16v10H16z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 32h8m-4 4v-8"/><rect width="4" height="4" x="27" y="33" fill="#fff" rx="2"/><rect width="4" height="4" x="30" y="26" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameConsoleOne0)"/>`
	gameEmojiInnerSVG                                  = `<mask id="ipSGameEmoji0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 30H10a6 6 0 0 0 0 12h28a6 6 0 0 0 0-12Zm-2-8a8 8 0 1 0 0-16a8 8 0 0 0 0 16ZM4 14l9-9l9 9l-9 9l-9-9Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameEmoji0)"/>`
	gameHandleInnerSVG                                 = `<mask id="ipSGameHandle0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M32 18H16C9.373 18 4 23.373 4 30s5.373 12 12 12h16c6.627 0 12-5.373 12-12s-5.373-12-12-12Z"/><path stroke="#000" stroke-linecap="round" d="M16 26v8m-4-4h8"/><path stroke="#fff" stroke-linecap="round" d="M24 16V9.714h8V4"/><path fill="#000" stroke="#000" d="M32 34a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameHandle0)"/>`
	gamePsInnerSVG                                     = `<mask id="ipSGamePs0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 28H28v16h16V28ZM13 4l9 16H4l9-16Zm23 16a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/><path stroke-linecap="round" d="m4 28l16 16m0-16L4 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGamePs0)"/>`
	gameThreeInnerSVG                                  = `<mask id="ipSGameThree0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 30v3a7 7 0 0 1-7 7v0a7 7 0 0 1-7-7V19m24 11v3a7 7 0 0 0 7 7v0a7 7 0 0 0 7-7V19"/><rect width="38" height="22" x="5" y="8" fill="#fff" stroke="#fff" stroke-width="4" rx="11"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21 19h-8m4-4v8"/><rect width="4" height="4" x="32" y="15" fill="#000" rx="2"/><rect width="4" height="4" x="28" y="20" fill="#000" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameThree0)"/>`
	gameTwoInnerSVG                                    = `<mask id="ipSGameTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m20 15l4 4l4-4V4h-8v11Zm0 18l4-4l4 4v11h-8V33Zm13-5l-4-4l4-4h11v8H33Zm-18-8l4 4l-4 4H4v-8h11Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGameTwo0)"/>`
	gamepadInnerSVG                                    = `<mask id="ipSGamepad0"><g fill="none"><rect width="40" height="28" x="4" y="13" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="14"/><circle cx="31" cy="22" r="2" fill="#000"/><circle cx="35" cy="27" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 27h10m-10 0h10"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 7v6m0-6v6"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 22v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGamepad0)"/>`
	gasInnerSVG                                        = `<mask id="ipSGas0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M23.049 9.789c1.626-.436 3.291.508 3.72 2.109c.429 1.6-.541 3.25-2.167 3.686C22.976 16.02 6.708 17 6.708 17s14.715-6.776 16.34-7.211Zm.058 28.658c1.625.435 3.291-.509 3.72-2.11c.429-1.6-.542-3.25-2.168-3.686c-1.625-.436-17.893-1.647-17.893-1.647s14.715 7.007 16.34 7.443Z"/><path stroke-linecap="round" d="M34 16.004a5 5 0 1 1 4 8H16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGas0)"/>`
	gateInnerSVG                                       = `<mask id="ipSGate0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M13 10v25m22-25v25"/><path d="M8 18h32"/><path stroke-linejoin="round" d="M24 10v8"/><path fill="#fff" stroke-linejoin="round" d="M39 10H9L5 4s11.07 1 19 1s19-1 19-1l-4 6ZM10 35h6v9h-6zm22 0h6v9h-6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGate0)"/>`
	gateMachineInnerSVG                                = `<mask id="ipSGateMachine0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M6 42v-8h6v8zm30 0v-8h6v8z"/><path stroke-linejoin="round" d="M24 14v3m0-11v2m0 18v4M9 6v28M39 6v28m-15 4v4"/><path fill="#fff" stroke-linejoin="round" d="M20 21H9v9l11-9Zm8 0h11v9l-11-9Z"/><path d="M18 15H9m21 0h9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGateMachine0)"/>`
	gauzeInnerSVG                                      = `<mask id="ipSGauze0"><g fill="none" stroke-width="4"><circle cx="26" cy="24" r="17" fill="#fff" stroke="#fff"/><circle cx="26" cy="24" r="7" fill="#000" stroke="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M5 41h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGauze0)"/>`
	gavelInnerSVG                                      = `<mask id="ipSGavel0"><g fill="#fff"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11.075 37.08c-3.386 1.46-5.039 3.444-5.71 4.83c-.266.548.181 1.09.79 1.09h21.232c.742 0 1.212-.776.779-1.38c-1.75-2.438-4.384-3.977-5.777-4.552a.933.933 0 0 0-.357-.068h-10.57a.98.98 0 0 0-.387.08Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m14.732 18.856l5-8.66l8.66 5l-5 8.66z"/><path d="m27.392 16.928l1-1.732a2 2 0 0 0-2.732.732l1.732 1Zm-3 5.196l-1.732-1a2 2 0 0 0 .732 2.732l1-1.732Zm2-3.464l12.99 7.5l2-3.464l-12.99-7.5l-2 3.464Zm11.99 9.232l-12.99-7.5l-2 3.464l12.99 7.5l2-3.464Zm-12.258-4.768l3-5.196l-3.464-2l-3 5.196l3.464 2Zm13.625 4.402a1 1 0 0 1-1.367.366l-2 3.464a5 5 0 0 0 6.83-1.83l-3.464-2Zm-.367-1.366a1 1 0 0 1 .367 1.366l3.464 2a5 5 0 0 0-1.83-6.83l-2 3.464Z"/><rect width="14" height="6" x="21" y="4" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3" transform="rotate(30 21 4)"/><rect width="14" height="6" x="13" y="17.856" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3" transform="rotate(30 13 17.856)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGavel0)"/>`
	generalBranchInnerSVG                              = `<mask id="ipSGeneralBranch0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M40 9H8a2 2 0 0 0-2 2v30a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2Z"/><path stroke="#fff" stroke-linecap="round" d="M15 5v4m18-4v4"/><path stroke="#000" stroke-linecap="round" d="M6 17h36M18 30h12m-6-6v12"/><path stroke="#fff" stroke-linecap="round" d="M6 11v12m36-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGeneralBranch0)"/>`
	germsInnerSVG                                      = `<mask id="ipSGerms0"><g fill="none"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c1.336 0 2.364-3.75 3.626-4c1.3-.257 2.833 2.979 4.03 2.483c1.217-.505.75-3.616 1.831-4.34c1.091-.73 3.73.924 4.655 0c.925-.925-1.478-4.052-.748-5.143c.725-1.082 4.584-.127 5.089-1.344c.496-1.197-3.304-3.543-3.047-4.843C39.686 25.55 44 25.336 44 24c0-1.335-3.75-2.64-4-3.903c-.257-1.3 2.979-2.556 2.483-3.752c-.505-1.218-4.364-.263-5.089-1.345c-.73-1.09 1.673-4.217.748-5.142c-.925-.925-4.051 1.091-5.142.361c-1.082-.724-.127-4.196-1.345-4.701C30.46 5.022 28.3 7.905 27 7.648C25.738 7.397 25.336 4 24 4s-1.88 3.398-3.142 3.647c-1.3.258-3.317-2.625-4.513-2.13c-1.218.506-.263 3.617-1.345 4.341c-1.09.73-4.217-.925-5.142 0c-.925.925 1.667 4.052.937 5.142c-.725 1.082-4.773.127-5.278 1.345C5.021 17.54 8.257 19.24 8 20.54c-.25 1.262-4 2.125-4 3.46c0 1.336 4.097 1.927 4.347 3.19c.257 1.3-3.326 3.27-2.83 4.466c.505 1.217 4.29.262 5.014 1.344c.73 1.09-1.598 4.218-.673 5.142c.925.925 4.051-1.287 5.142-.557c1.082.725.127 4.393 1.345 4.898c1.196.496 3.212-2.74 4.513-2.483c1.262.25 1.806 4 3.142 4Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M29 29a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path fill="#000" d="M16.5 26a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGerms0)"/>`
	ghostInnerSVG                                      = `<mask id="ipSGhost0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m8 44l4-4l4 4l4-6l4 6l4-6l4 6l4-4l4 4V20c0-8.837-7.163-16-16-16S8 11.163 8 20v24Z"/><path stroke="#000" stroke-linecap="round" d="M19 20h2m10 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGhost0)"/>`
	giftInnerSVG                                       = `<mask id="ipSGift0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" d="M41 44V20H7v24h34Z"/><path stroke="#000" stroke-linecap="round" d="M24 44V20"/><path stroke="#fff" stroke-linecap="round" d="M41 44H7"/><path fill="#fff" stroke="#fff" d="M4 12h40v8H4z"/><path stroke="#fff" stroke-linecap="round" d="m16 4l8 8l8-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGift0)"/>`
	giftBagInnerSVG                                    = `<mask id="ipSGiftBag0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="36" height="28" x="6" y="14" stroke-linejoin="round" rx="3"/><path fill="#fff" stroke-linejoin="round" d="M6 32h36v7a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3v-7Z"/><circle cx="19" cy="9" r="5" fill="#fff"/><circle cx="28" cy="10" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m17 20l7-6l7 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGiftBag0)"/>`
	giftBoxInnerSVG                                    = `<mask id="ipSGiftBox0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 9a3 3 0 0 1 3-3h30a3 3 0 0 1 3 3v30a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9Z"/><path stroke="#000" d="M4 24h40M24 44V4"/><path stroke="#fff" d="M6 30V18m36 12V18M30 42H18M30 6H18"/><path stroke="#000" d="M24 24s7.897-3.546 9.099-4.747a3.077 3.077 0 1 0-4.352-4.352C27.546 16.103 24 24 24 24Zm0 0s-7.897-3.546-9.099-4.747m9.1 4.747s-3.547-7.897-4.748-9.099M24 24s7.897 3.546 9.099 4.747M24 24s3.546 7.897 4.747 9.099M24 23.999s-7.897 3.547-9.099 4.748a3.077 3.077 0 1 0 4.352 4.352c1.201-1.202 4.747-9.1 4.747-9.1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGiftBox0)"/>`
	girlInnerSVG                                       = `<mask id="ipSGirl0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="10" r="6" fill="#fff"/><path fill="#fff" d="M27.23 16h-6.46L10 36h28L27.23 16Z"/><path d="M27 36v8m-6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGirl0)"/>`
	girlOneInnerSVG                                    = `<mask id="ipSGirlOne0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7"/><path d="M27 24h-6L8 44h32L27 24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGirlOne0)"/>`
	girlTwoInnerSVG                                    = `<mask id="ipSGirlTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="10" r="6" fill="#fff"/><path d="M28 44v-8h10L27.23 16h-6.46L10 36h10v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGirlTwo0)"/>`
	gitlabInnerSVG                                     = `<mask id="ipSGitlab0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M23.963 42L42 27.415L36.996 6l-6.03 12.994H17.993L11.015 6L6 27.415L23.963 42Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGitlab0)"/>`
	glassesInnerSVG                                    = `<mask id="ipSGlasses0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="12" cy="35" r="7" fill="#fff"/><circle cx="36" cy="35" r="7" fill="#fff"/><path d="M5 34V10.883c0-1.391 0-2.087.378-2.61c.377-.525 1.037-.745 2.357-1.185L11 6m32 28V10.883c0-1.391 0-2.087-.377-2.61c-.378-.525-1.038-.745-2.358-1.185L37 6m-8 28a5 5 0 0 0-10 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGlasses0)"/>`
	glassesOneInnerSVG                                 = `<mask id="ipSGlassesOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="14.5" cy="24.5" r="6.5" fill="#fff"/><circle r="6.5" fill="#fff" transform="matrix(-1 0 0 1 33.5 24.5)"/><path d="M4 24h4m36 0h-4m-20-3c.5-2 2-4 4-4s3.5 2 4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGlassesOne0)"/>`
	glassesThreeInnerSVG                               = `<mask id="ipSGlassesThree0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="12" cy="33" r="7" fill="#fff"/><path stroke-linecap="round" d="M29 33c0-3.314-1.5-6-5-6s-5 2.686-5 6"/><circle cx="36" cy="33" r="7" fill="#fff"/><path stroke-linecap="round" d="M14 8h-2a6 6 0 0 0-6 6v8M34 8h2a6 6 0 0 1 6 6v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGlassesThree0)"/>`
	globeInnerSVG                                      = `<mask id="ipSGlobe0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37.826 4A19.629 19.629 0 0 1 44 18.316C44 29.187 35.187 38 24.316 38A19.629 19.629 0 0 1 10 31.826"/><path fill="#fff" fill-rule="evenodd" d="M24 32c7.732 0 14-6.268 14-14S31.732 4 24 4s-14 6.268-14 14s6.268 14 14 14Z" clip-rule="evenodd"/><path d="M24 38v6m-6 0h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGlobe0)"/>`
	gloveInnerSVG                                      = `<mask id="ipSGlove0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M8 42h27.833v-8S41 20.582 42 18c1-2.582-.5-5.335-4-5c-3.5.335-6.889 8.33-6.889 8.33S30.5 13 30 10.5S29 4 19.306 4C9.61 4 8 11.12 8 15v27Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGlove0)"/>`
	gobletInnerSVG                                     = `<mask id="ipSGoblet0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M33 44H13m10-16v16"/><path fill="#fff" d="M35 16c0 6.5-5.373 12-12 12s-12-5.373-12-12c0-6.5 4-12 4-12h16s4 5.5 4 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoblet0)"/>`
	gobletCrackingInnerSVG                             = `<mask id="ipSGobletCracking0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M33 44H13m10-16v16"/><path fill="#fff" stroke="#fff" d="M35 16c0 6.5-5.373 12-12 12s-12-5.373-12-12c0-6.5 4-12 4-12h16s4 5.5 4 12Z"/><path stroke="#000" d="m23 4l-2 6l4 1l-2 6"/><path stroke="#fff" d="M15 4h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGobletCracking0)"/>`
	gobletFullInnerSVG                                 = `<mask id="ipSGobletFull0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M33 44H13m10-16v16"/><path fill="#fff" stroke="#fff" d="M35 16c0 1.675-.357 3.284-1 4.75C32.148 24.97 27.92 28 23 28a12 12 0 0 1-10.79-6.742A11.953 11.953 0 0 1 11 16c0-2.373.533-4.613 1.21-6.5C13.387 6.217 15 4 15 4h16s1.815 2.496 3 6.112c.574 1.752 1 3.767 1 5.888Z"/><path stroke="#000" d="M35 16s-7 3-12 0s-12 0-12 0"/><path stroke="#fff" d="M34 10.112c.574 1.752 1 3.767 1 5.888c0 1.675-.357 3.284-1 4.75M12.21 9.5C11.533 11.387 11 13.627 11 16c0 1.886.435 3.67 1.21 5.258"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGobletFull0)"/>`
	gobletOneInnerSVG                                  = `<mask id="ipSGobletOne0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSGobletOne1)"><path stroke-linecap="round" stroke-linejoin="round" d="m5.736 24.121l4.95 4.95c5.077 5.077 13.308 5.077 18.385 0v0c5.077-5.077 5.077-13.308 0-18.385l-4.95-4.95"/><path stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" d="m30 30l6 6"/><ellipse cx="14" cy="14" rx="13" ry="7" transform="rotate(-45 14 14)"/><ellipse cx="38" cy="38" rx="6" ry="3" transform="rotate(-45 38 38)"/></g><defs><clipPath id="ipSGobletOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGobletOne0)"/>`
	goldMedalInnerSVG                                  = `<mask id="ipSGoldMedal0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 4H31l-4 10.3A15.023 15.023 0 0 1 37.27 22L44 4ZM17 4H4l6.73 18A15.023 15.023 0 0 1 21 14.3L17 4Z"/><path fill="#fff" stroke="#fff" d="M39 29c0 8.284-6.716 15-15 15c-8.284 0-15-6.716-15-15c0-2.528.625-4.91 1.73-7A15.023 15.023 0 0 1 21 14.3c.97-.197 1.973-.3 3-.3s2.03.103 3 .3A15.023 15.023 0 0 1 37.27 22A14.935 14.935 0 0 1 39 29Z"/><path stroke="#000" d="M24 35V22l-3 1m3 12h4m-4 0h-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoldMedal0)"/>`
	goldMedalTwoInnerSVG                               = `<mask id="ipSGoldMedalTwo0"><g fill="none"><path fill="#fff" d="M36 32a11.97 11.97 0 0 0-4-8.944A11.955 11.955 0 0 0 24 20a11.955 11.955 0 0 0-8 3.056A11.97 11.97 0 0 0 12 32c0 6.627 5.373 12 12 12s12-5.373 12-12Z"/><path fill="#fff" d="M16 4h16v19.056A11.955 11.955 0 0 0 24 20a11.955 11.955 0 0 0-8 3.056V4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 4h16M16 4H8v10l8 6m0-16v16M32 4h8v10l-8 6m0-16v16m-16 3.056A11.955 11.955 0 0 1 24 20c3.073 0 5.877 1.155 8 3.056m-16 0A11.97 11.97 0 0 0 12 32c0 6.627 5.373 12 12 12s12-5.373 12-12a11.97 11.97 0 0 0-4-8.944m-16 0V20m16 3.056V20"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 4h8v10l-8 6M16 4H8v10l8 6"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 32a11.97 11.97 0 0 0-4-8.944A11.955 11.955 0 0 0 24 20a11.955 11.955 0 0 0-8 3.056A11.97 11.97 0 0 0 12 32c0 6.627 5.373 12 12 12s12-5.373 12-12Z"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 4h16v19.056A11.955 11.955 0 0 0 24 20a11.955 11.955 0 0 0-8 3.056V4Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 37V27l-2 1m2 9h2m-2 0h-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoldMedalTwo0)"/>`
	golfCourseInnerSVG                                 = `<mask id="ipSGolfCourse0"><g fill="none"><ellipse cx="24" cy="34" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="20" ry="10"/><circle cx="32" cy="34" r="2" fill="#fff" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path fill="#fff" d="M24 9L13 4v10l11-5Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 34V14m0 0V4l11 5l-11 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGolfCourse0)"/>`
	gongfuInnerSVG                                     = `<mask id="ipSGongfu0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="22" cy="8" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M8 18h10v11h-7v14m25.182-25H26v10.86L40 43"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGongfu0)"/>`
	goodInnerSVG                                       = `<mask id="ipSGood0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8.006 19.197C12.443 10.325 22 7 28.506 4.197c2.958-1.274 3.69 3.526 2.5 6.5c-1 2.5-3 5.303-3 5.303h8.5a3.5 3.5 0 1 1 0 7h2a3.5 3.5 0 1 1 0 7h-4a3.5 3.5 0 1 1 0 7h-3a3.5 3.5 0 0 1 .002 7H19.006c-3.5 0-8-1.803-11-6.803c-2.875-4.793-3-12 0-18Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGood0)"/>`
	goodOneInnerSVG                                    = `<mask id="ipSGoodOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m35.911 41.544l5.37-19A2 2 0 0 0 39.356 20H27.875a1.094 1.094 0 0 1-1.066-1.34l.5-2.164c.458-1.985.605-4.03.436-6.06l-.092-1.103A5.02 5.02 0 0 0 26.2 6.2A4.096 4.096 0 0 0 23.304 5h-.24c-.657 0-1.262.356-1.58.93l-2.659 4.785a12.962 12.962 0 0 1-5.124 5.085l-6.659 3.63A2 2 0 0 0 6 21.188V41a2 2 0 0 0 2 2h25.987a2 2 0 0 0 1.924-1.456Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoodOne0)"/>`
	goodTwoInnerSVG                                    = `<mask id="ipSGoodTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4.189 22.173A2 2 0 0 1 6.181 20H10a2 2 0 0 1 2 2v19a2 2 0 0 1-2 2H7.834a2 2 0 0 1-1.993-1.827l-1.652-19ZM18 21.375c0-.836.52-1.584 1.275-1.94c1.649-.778 4.458-2.341 5.725-4.454c1.633-2.724 1.941-7.645 1.991-8.772c.007-.158.003-.316.024-.472c.271-1.953 4.04.328 5.485 2.74c.785 1.308.885 3.027.803 4.37c-.089 1.436-.51 2.823-.923 4.201l-.88 2.937h10.857a2 2 0 0 1 1.925 2.543l-5.37 19.016A2 2 0 0 1 36.986 43H20a2 2 0 0 1-2-2V21.375Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoodTwo0)"/>`
	googleInnerSVG                                     = `<mask id="ipSGoogle0"><g fill="#fff"><path d="m34.5 7l-5 7.5c-1-.532-3-1.5-5.5-1.5c-6 0-11 5-11 10.5S17 35 24 35c5.6 0 9.5-4 9.5-7H24v-7h20c.5 7.5-1.71 11.9-4.5 15.5C35.324 41.888 29.171 44 24 44C14 44 4 36 4 23.5C4 11.5 14.724 4 23 4s11.5 3 11.5 3Z"/><path d="m29.5 14.5l-.939 1.766a2 2 0 0 0 2.603-.657L29.5 14.5Zm5-7.5l1.664 1.11a2 2 0 0 0-.302-2.574L34.5 7ZM44 21l1.996-.133A2 2 0 0 0 44 19v2Zm-20 0v-2a2 2 0 0 0-2 2h2Zm0 7h-2a2 2 0 0 0 2 2v-2Zm9.5 0h2a2 2 0 0 0-2-2v2Zm6 8.5l-1.58-1.225L39.5 36.5Zm-8.336-20.89l5-7.5l-3.328-2.22l-5 7.5l3.328 2.22ZM34.5 7a149.779 149.779 0 0 0 1.36-1.466l-.001-.002a.158.158 0 0 0-.014-.012a1.64 1.64 0 0 0-.082-.072a8.657 8.657 0 0 0-.804-.592a13.949 13.949 0 0 0-2.35-1.208C30.518 2.796 27.385 2 23 2v4c3.89 0 6.508.704 8.099 1.352a9.98 9.98 0 0 1 1.676.855a4.71 4.71 0 0 1 .385.278l-.002-.002l-.008-.007a.285.285 0 0 1-.006-.006l-.003-.003A158.53 158.53 0 0 1 34.5 7ZM23 2c-4.694 0-9.91 2.101-13.948 5.77C4.978 11.47 2 16.86 2 23.5h4c0-5.361 2.384-9.72 5.741-12.77C15.134 7.65 19.417 6 23 6V2ZM2 23.5C2 37.2 12.993 46 24 46v-4c-8.993 0-18-7.2-18-18.5H2ZM44 21v-2H24v4h20v-2Zm-22 0v7h4v-7h-4Zm2 9h9.5v-4H24v4Zm7.5-2c0 .698-.522 1.933-1.919 3.08C28.248 32.174 26.317 33 24 33v4c3.283 0 6.102-1.173 8.119-2.829c1.953-1.602 3.381-3.868 3.381-6.17h-4ZM24 33c-5.617 0-9-4.804-9-9.5h-4C11 29.804 15.617 37 24 37v-4Zm-9-9.5c0-4.336 4.044-8.5 9-8.5v-4c-7.044 0-13 5.836-13 12.5h4Zm9-8.5c2 0 3.645.779 4.561 1.266l1.878-3.532C29.355 12.158 26.999 11 24 11v4Zm0 31c5.672 0 12.46-2.312 17.08-8.275l-3.16-2.45C34.188 40.089 28.67 42 24 42v4Zm17.08-8.275c3.038-3.919 5.453-8.79 4.916-16.858l-3.992.266c.463 6.933-1.543 10.861-4.085 14.142l3.162 2.45Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoogle0)"/>`
	googleAdsInnerSVG                                  = `<mask id="ipSGoogleAds0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSGoogleAds1)"><path fill="#fff" d="M41.355 34.153L29.522 8.776a6 6 0 0 0-10.876 5.072L30.48 39.224a6 6 0 1 0 10.876-5.071Z"/><path stroke-linecap="round" d="M23.438 26.536L17.52 39.224a6 6 0 0 1-7.974 2.902v0a6 6 0 0 1-2.902-7.973L18.374 9"/><circle cx="12.083" cy="36.688" r="6" fill="#fff" transform="rotate(25 12.083 36.688)"/></g><defs><clipPath id="ipSGoogleAds1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGoogleAds0)"/>`
	goproInnerSVG                                      = `<mask id="ipSGopro0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 7h13v34H5z"/><rect width="19" height="22" x="24" y="13" fill="#fff" stroke="#fff" stroke-width="4" rx="3"/><circle cx="33.5" cy="24.5" r="3.5" fill="#000" stroke="#000" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 24h6"/><rect width="5" height="5" x="9" y="15" fill="#fff" rx="2.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGopro0)"/>`
	gpsInnerSVG                                        = `<mask id="ipSGps0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" d="m24 13l-7 21l7-5l7 5l-7-21Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGps0)"/>`
	graphicDesignInnerSVG                              = `<mask id="ipSGraphicDesign0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M19 32c-7.732 0-14-6.268-14-14S11.268 4 19 4s14 6.268 14 14"/><path fill="#fff" d="M44 18H18v26h26V18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGraphicDesign0)"/>`
	graphicDesignTwoInnerSVG                           = `<mask id="ipSGraphicDesignTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M15.65 28.238A13.98 13.98 0 0 1 10 17c0-7.732 6.268-14 14-14s14 6.268 14 14c0 4.535-2.157 8.567-5.5 11.125"/><path fill="#fff" fill-rule="evenodd" d="m24 17l20 27H4l20-27Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGraphicDesignTwo0)"/>`
	graphicStitchingFourInnerSVG                       = `<mask id="ipSGraphicStitchingFour0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M39 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10ZM9 44a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm5-40H4v10h10V4Zm30 30H34v10h10V34Z"/><path d="M34 9H14m20 30H14m-5-5V14m30 20V14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGraphicStitchingFour0)"/>`
	graphicStitchingThreeInnerSVG                      = `<mask id="ipSGraphicStitchingThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm0 30a5 5 0 1 0 0-10a5 5 0 0 0 0 10ZM14 19H4v10h10V19Zm30 0H34v10h10V19Z"/><path d="M19 9H9v10m10 20H9V29M29 9h11v10M29 39h10V29"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGraphicStitchingThree0)"/>`
	greenHouseInnerSVG                                 = `<mask id="ipSGreenHouse0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M42 20v24H6V20L24 4l18 16Z"/><path stroke-linecap="round" d="M6 24h36M13 14v30m22-30v30"/><path fill="#fff" stroke-linecap="round" d="M20 32h8v12h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGreenHouse0)"/>`
	greenNewEnergyInnerSVG                             = `<mask id="ipSGreenNewEnergy0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M42.336 16C39.249 8.936 32.2 4 24 4C15.799 4 8.75 8.936 5.664 16"/><path fill="#fff" d="M24 14a19.94 19.94 0 0 0-6 14.283c0 .5.018.996.055 1.488A19.938 19.938 0 0 1 24 44a19.938 19.938 0 0 1 5.945-14.23A19.94 19.94 0 0 0 24 14Z"/><path fill="#fff" d="M4 24c0 11.046 8.954 20 20 20a19.938 19.938 0 0 0-5.945-14.23A19.936 19.936 0 0 0 4 24Z"/><path fill="#fff" d="M44 24c0 11.046-8.954 20-20 20a19.938 19.938 0 0 1 5.945-14.23A19.936 19.936 0 0 1 44 24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGreenNewEnergy0)"/>`
	grimacingFaceInnerSVG                              = `<mask id="ipSGrimacingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/><rect width="18" height="8" x="15" y="28" fill="#000" stroke="#000" stroke-linecap="round" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrimacingFace0)"/>`
	grinningFaceInnerSVG                               = `<mask id="ipSGrinningFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 35c5 0 7-4 7-4H17s2 4 7 4Zm7-15v1m-14-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrinningFace0)"/>`
	grinningFaceWithOpenMouthInnerSVG                  = `<mask id="ipSGrinningFaceWithOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 35c5 0 7-4 7-4H17s2 4 7 4Zm7-17v4m-14-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrinningFaceWithOpenMouth0)"/>`
	grinningFaceWithSquintingEyesInnerSVG              = `<mask id="ipSGrinningFaceWithSquintingEyes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 35c5 0 7-4 7-4H17s2 4 7 4Zm-3-14s-1-4-4-4s-4 4-4 4m22 0s-1-4-4-4s-4 4-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrinningFaceWithSquintingEyes0)"/>`
	grinningFaceWithTightlyClosedEyesInnerSVG          = `<mask id="ipSGrinningFaceWithTightlyClosedEyes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M17 31s2 4 7 4s7-4 7-4M16 16l3 3l-3 3m16-6l-3 3l3 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrinningFaceWithTightlyClosedEyes0)"/>`
	grinningFaceWithTightlyClosedEyesOpenMouthInnerSVG = `<mask id="ipSGrinningFaceWithTightlyClosedEyesOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 35c5 0 7-4 7-4H17s2 4 7 4Zm8-18l-3 3l3 3m-16-6l3 3l-3 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGrinningFaceWithTightlyClosedEyesOpenMouth0)"/>`
	groupInnerSVG                                      = `<mask id="ipSGroup0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 4H4v8h8V4Zm32 32h-8v8h8v-8Zm-32 0H4v8h8v-8ZM44 4h-8v8h8V4Z"/><path stroke-linecap="round" d="M8 36V12m32 24V12M12 8h24M12 40h24"/><path fill="#fff" fill-rule="evenodd" stroke-linecap="round" d="M16 16h9.6v6.4H32V32h-9.6v-6.4H16V16Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGroup0)"/>`
	guideBoardInnerSVG                                 = `<mask id="ipSGuideBoard0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 4v37"/><path fill="#fff" d="M24 8h15.545L42 12l-2.455 4H24V8Zm0 14H8.455L6 26l2.455 4H24v-8Z"/><path stroke-linecap="round" d="M16 42h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGuideBoard0)"/>`
	gymnasticsInnerSVG                                 = `<mask id="ipSGymnastics0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M24 22a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m23 29l-2 7l-9-2l-5 10m14-8l2 8h11M7 23l16 6l12-2l6.04-4.97M12 4c14-2 24 2 32 11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGymnastics0)"/>`
	gymnasticsOneInnerSVG                              = `<mask id="ipSGymnasticsOne0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M27 24a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m23 29l-2 7l-9-3l-4 11m13-8l1.49 6.48A2 2 0 0 0 24.43 44h10.58M7 23l16 6l-9-9l-1-9m-1-7h5c12 0 27 1.45 27 28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSGymnasticsOne0)"/>`
	hairClipInnerSVG                                   = `<mask id="ipSHairClip0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSHairClip1)"><path d="M38.848 5.339c-6.964 1.228-14.584 6.88-17.534 14.58c-3.225 8.417-4.097 9.338-8.03 11.468C9.502 33.435 4.6 35.072 4.6 35.072"/><path d="M9.638 33.107c4.22-2.54 9.708.083 12.165 1.804c2.457 1.72 4.956 1.64 6.39-.409c1.434-2.048.656-4.424-1.801-6.144c-1.639-1.147-7.127-3.77-5.078-8.44"/><path d="M43.189 9.6c-10.323 2.538-14.42 5.773-18.435 17.61m-3.77 7.127c-.778 1.693-2.295 5.718-2.131 8.274"/></g><defs><clipPath id="ipSHairClip1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHairClip0)"/>`
	hairDryerInnerSVG                                  = `<mask id="ipSHairDryer0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="m19.193 21.544l2.319 18.552a3.473 3.473 0 0 1-6.892.862l-2.374-18.989"/><path fill="#fff" stroke="#fff" d="M13 4a9 9 0 0 0 0 18c1.578 0 3.74-.175 6.193-.456l12.403-2.022L44 17.5v-9L28.5 6.25L13 4Z"/><path stroke="#000" d="M37 8.2v9.6"/><path stroke="#fff" d="m44 17.5l-12.403 2.022M44 8.5L28.5 6.25"/><path fill="#000" stroke="#000" d="M16 13a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHairDryer0)"/>`
	hairDryerOneInnerSVG                               = `<mask id="ipSHairDryerOne0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M11 12.138c0-.079.059-.146.137-.156L32.082 9.28C37.342 8.6 42 12.697 42 18c0 5.303-4.659 9.399-9.918 8.72l-20.945-2.702a.157.157 0 0 1-.137-.156V12.138Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M11 12L4 8v20l7-4"/><path d="m38 25l-6.694 15.898A5.07 5.07 0 0 1 26.634 44c-3.625 0-6.078-3.695-4.672-7.036L27 25"/><circle cx="35" cy="18" r="9" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHairDryerOne0)"/>`
	haloInnerSVG                                       = `<mask id="ipSHalo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M17.364 14a12.05 12.05 0 0 0-3.453 3.5m-1.714 8.68a12.073 12.073 0 0 1 0-4.36M17.364 34a12.05 12.05 0 0 1-3.453-3.5m12.449 5.268a12.062 12.062 0 0 1-4.72 0M30.636 34a12.055 12.055 0 0 0 3.453-3.5m1.714-4.32a12.064 12.064 0 0 0 0-4.36M30.636 14a12.055 12.055 0 0 1 3.453 3.5M21.64 12.232a12.054 12.054 0 0 1 4.72 0M44 24a20.211 20.211 0 0 0-.4-4M4 24a20.239 20.239 0 0 1 .4-4m34.246 17.62a20.125 20.125 0 0 1-2.796 2.493M9.354 37.62a20.122 20.122 0 0 0 2.796 2.493m3.562-34.32a19.945 19.945 0 0 0-3.562 2.094m20.138-2.094a19.945 19.945 0 0 1 3.562 2.094m-9.604-3.762a20.215 20.215 0 0 0-4.492 0m4.492 39.75a19.926 19.926 0 0 0 4.254-.955m-8.747.955a19.926 19.926 0 0 1-4.253-.955M8.155 11.794a20.061 20.061 0 0 0-1.908 2.986m33.598-2.986a20.098 20.098 0 0 1 1.908 2.986M6.247 33.22a19.892 19.892 0 0 1-1.378-3.372m36.884 3.372a19.892 19.892 0 0 0 1.378-3.372"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHalo0)"/>`
	hamburgerInnerSVG                                  = `<mask id="ipSHamburger0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M44 22c0-9.941-8.954-18-20-18S4 12.059 4 22h40Z" clip-rule="evenodd"/><path fill="#fff" d="M4 38h40v6H4z"/><path d="m4 28l5.455 4l7.272-4L24 32l7.273-4l7.272 4L44 28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHamburger0)"/>`
	hamburgerOneInnerSVG                               = `<mask id="ipSHamburgerOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M40 22v-1c0-8.837-7.163-16-16-16S8 12.163 8 21v1m0 12s-2 5 2 7s24 2 28 0s2-7 2-7"/><rect width="38" height="14" x="5" y="21" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="7"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m11 29l1.592-.796A5.996 5.996 0 0 1 17.5 28l.424.17A4.979 4.979 0 0 0 22 28v0a4.979 4.979 0 0 1 4.076-.17l.96.384a4.71 4.71 0 0 0 3.857-.16v0a4.712 4.712 0 0 1 4.214 0L37 29"/><circle cx="17" cy="15.05" r="2.5" fill="#fff"/><circle cx="23.75" cy="12.3" r="2.5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHamburgerOne0)"/>`
	hammerAndAnvilInnerSVG                             = `<mask id="ipSHammerAndAnvil0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M6 14C6 4 14 4 14 4v20H6V14Zm8-4h28v6H14zM6 30h36s0 8-6 8h-7l2 6H13l2-6H6v-8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHammerAndAnvil0)"/>`
	handCreamInnerSVG                                  = `<mask id="ipSHandCream0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M19 17c-2.731 1.137-2.488 4.578-2 6h14c3.902-5.687-4.216-11.849-4.216-9.479c0 2.37-4.37 2.057-7.784 3.479Z"/><path d="M13 23h22v8H13z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandCream0)"/>`
	handDownInnerSVG                                   = `<mask id="ipSHandDown0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M7.053 10h22V4h-22v6Z"/><path d="M29.053 10c6.52 7.123 10.26 11.251 11.222 12.384c1.443 1.7.837 3.62-2.775 3.62s-5.695-5.285-8.447-5.285c-.016-.003-.017 6.756-.003 20.277a3.001 3.001 0 0 1-2.998 3.005h-.003a3.004 3.004 0 0 1-3.004-3.005v-8.01c-7.973-1.208-12.308-1.875-13.004-2c-1.044-.187-2.988-1.184-2.988-4.053V10h22Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandDown0)"/>`
	handLeftInnerSVG                                   = `<mask id="ipSHandLeft0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 41V19h-6v22h6Z"/><path d="M38 19C30.895 12.43 26.776 8.664 25.643 7.7c-1.7-1.446-3.62-.839-3.62 2.779s5.263 5.765 5.263 8.521c.004.017-6.757.018-20.282.003A3 3 0 0 0 4 22.002v.003a3.004 3.004 0 0 0 3.004 3.005h7.013c1.206 7.968 1.872 12.301 1.997 12.998C16.202 39.054 17.2 41 20.068 41H38V19Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandLeft0)"/>`
	handPaintedPlateInnerSVG                           = `<mask id="ipSHandPaintedPlate0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M18 10h24a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H18"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 12a2 2 0 0 1 2-2h12v30H6a2 2 0 0 1-2-2V12Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11 17v4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 16L25 33"/><rect width="4" height="4" x="9" y="25" fill="#000" rx="2"/><rect width="4" height="4" x="9" y="31" fill="#000" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandPaintedPlate0)"/>`
	handRightInnerSVG                                  = `<mask id="ipSHandRight0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10.026 40.974v-22h-6v22h6Z"/><path d="M10.026 18.974c7.123-6.52 11.251-10.26 12.384-11.222c1.7-1.443 3.62-.837 3.62 2.775s-5.285 5.695-5.285 8.447c-.004.016 6.756.017 20.277.003a3 3 0 0 1 3.004 2.998v.003a3.004 3.004 0 0 1-3.004 3.004h-8.01c-1.208 7.973-1.875 12.307-2 13.004c-.188 1.044-1.185 2.988-4.054 2.988H10.026v-22Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandRight0)"/>`
	handUpInnerSVG                                     = `<mask id="ipSHandUp0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M41 38H19v6h22v-6Z"/><path d="M19 38C12.481 30.877 8.74 26.75 7.778 25.616c-1.443-1.7-.837-3.62 2.775-3.62s5.695 5.285 8.447 5.285c.017.004.018-6.755.003-20.277A3 3 0 0 1 22.001 4h.003a3.004 3.004 0 0 1 3.005 3.004v8.01c7.972 1.208 12.307 1.875 13.003 2C39.057 17.202 41 18.2 41 21.068V38H19Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandUp0)"/>`
	handbagInnerSVG                                    = `<mask id="ipSHandbag0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 14a6 6 0 0 1 6-6h9a6 6 0 0 1 6 6v2H14v-2Z"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m4 25l19.515 4.879c.318.08.652.08.97 0L44 25v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V25Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 27v-9a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9"/><path fill="#fff" d="M26.5 23a2.5 2.5 0 1 1-5 0a2.5 2.5 0 0 1 5 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandbag0)"/>`
	handheldInnerSVG                                   = `<mask id="ipSHandheld0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M42 18v26H6V18"/><path fill="#fff" d="M42 4H6v14h36V4Z"/><path stroke-linecap="round" d="M16 27v8m-4-4h8"/><path fill="#fff" d="M32 35a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandheld0)"/>`
	handleAInnerSVG                                    = `<mask id="ipSHandleA0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M24 11L14 33m4-7h12m-6-15l10 22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleA0)"/>`
	handleBInnerSVG                                    = `<mask id="ipSHandleB0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M24.792 23C27.668 23 30 20.761 30 18s-2.332-5-5.208-5H18v10h6.792Zm2.039 12C29.686 35 32 32.314 32 29s-2.314-6-5.169-6H18v12h8.831Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleB0)"/>`
	handleCInnerSVG                                    = `<mask id="ipSHandleC0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M32 17.618c-.898-1.83-3.593-5.031-8.983-4.574c-5.39.458-9.433 5.49-8.983 11.893c.45 6.404 5.39 10.063 9.881 10.063C29.305 35 32 30.609 32 30.609"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleC0)"/>`
	handleDownInnerSVG                                 = `<mask id="ipSHandleDown0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" rx="3"/><path fill="#000" stroke="#000" d="M34 20L24 30L14 20h20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleDown0)"/>`
	handleLeftInnerSVG                                 = `<mask id="ipSHandleLeft0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" rx="3"/><path fill="#000" stroke="#000" d="M28 34L18 24l10-10v20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleLeft0)"/>`
	handleRightInnerSVG                                = `<mask id="ipSHandleRight0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" rx="3"/><path fill="#000" stroke="#000" d="m20 14l10 10l-10 10V14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleRight0)"/>`
	handleRoundInnerSVG                                = `<mask id="ipSHandleRound0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><circle cx="24" cy="24" r="12" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleRound0)"/>`
	handleSquareInnerSVG                               = `<mask id="ipSHandleSquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M14 14h20v20H14z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleSquare0)"/>`
	handleTriangleInnerSVG                             = `<mask id="ipSHandleTriangle0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="m12 31l12-20l12 20H12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleTriangle0)"/>`
	handleUpInnerSVG                                   = `<mask id="ipSHandleUp0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" rx="3"/><path fill="#000" stroke="#000" d="m14 28l10-10l10 10H14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleUp0)"/>`
	handleXInnerSVG                                    = `<mask id="ipSHandleX0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M33 15L15 33m0-18l18 18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleX0)"/>`
	handleYInnerSVG                                    = `<mask id="ipSHandleY0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="m15 15l9 14l9-14m-9 13v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleY0)"/>`
	handleZInnerSVG                                    = `<mask id="ipSHandleZ0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M14 16h20L14 32h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandleZ0)"/>`
	handsInnerSVG                                      = `<mask id="ipSHands0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="13" r="9" fill="#fff" stroke-linejoin="round"/><path d="M4.5 44c0-6 7-16 19.5-16c0 0 2.759 0 5.782 1.09C32.744 30.16 36.5 31.149 36.5 28V7.75a3.75 3.75 0 1 1 7.5 0V44"/><path stroke-linecap="round" stroke-linejoin="round" d="M2 44h44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHands0)"/>`
	handwashingInnerSVG                                = `<mask id="ipSHandwashing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 24h7v20H4z"/><path fill="#fff" d="M32 16c-1.5-3.5 4-10 4-10s5.5 6.5 4 10s-6.5 3.5-8 0Zm-1 26.5c-9 0-16-2.5-20-2.5V30c7 0 6.5-2.5 11-4s8 0 7.5 3s-5.5 6-5.5 6c8 0 8-2 12-5s8-2 8 1s-4 11.5-13 11.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandwashing0)"/>`
	handwashingFluidInnerSVG                           = `<mask id="ipSHandwashingFluid0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 4v7m5 6v-6H19v6M31 4H19.8C17.142 4 15 5.2 15 8m23 18.977V26a9 9 0 0 0-9-9H19a9 9 0 0 0-9 9v9a9 9 0 0 0 9 9h5"/><path fill="#fff" d="M40 39.77c0 2.336-2.015 4.23-4.5 4.23S31 42.106 31 39.77c0-2.337 2.94-6.77 4.5-6.77s4.5 4.433 4.5 6.77Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHandwashingFluid0)"/>`
	hangerInnerSVG                                     = `<mask id="ipSHanger0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M20.73 27.125a6 6 0 0 1 6.54 0l15.55 10.108A2.593 2.593 0 0 1 41.407 42H6.593a2.593 2.593 0 0 1-1.413-4.767l15.55-10.107Z" clip-rule="evenodd"/><path d="M24 25s6-8.686 6-12a6 6 0 0 0-12 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHanger0)"/>`
	hangerTwoInnerSVG                                  = `<mask id="ipSHangerTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37 32h3.91a3.09 3.09 0 0 0 1.382-5.854L24 17L5.708 26.146A3.09 3.09 0 0 0 7.09 32H11"/><path fill="#fff" d="M11 30h26v14H11V30Z"/><path d="M24 17s4-6.79 4-9a4 4 0 0 0-8 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHangerTwo0)"/>`
	hardDiskInnerSVG                                   = `<mask id="ipSHardDisk0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 29H4v13h40V29Z"/><path fill="#000" d="M35.5 38a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 29L9.038 4.999H39.02l4.98 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHardDisk0)"/>`
	hardDiskOneInnerSVG                                = `<mask id="ipSHardDiskOne0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M32 6H16v10h16V6Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M17 36h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHardDiskOne0)"/>`
	harmInnerSVG                                       = `<mask id="ipSHarm0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 9.256L24.009 4L42 9.256v10.778A26.316 26.316 0 0 1 24.003 45A26.32 26.32 0 0 1 6 20.029V9.256Z"/><path stroke="#000" stroke-linecap="round" d="M29.5 18.408L18.186 29.722m0-11.314L29.5 29.722"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHarm0)"/>`
	hashtagKeyInnerSVG                                 = `<mask id="ipSHashtagKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M19 16v16m10-16v16M16 19h16M16 29h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHashtagKey0)"/>`
	hatInnerSVG                                        = `<mask id="ipSHat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M9 16a8 8 0 0 1 8-8h14a8 8 0 0 1 8 8v16H9V16Z"/><rect width="40" height="8" x="4" y="32" fill="#fff" rx="2"/><path d="M9 22h8m14 0h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHat0)"/>`
	hddInnerSVG                                        = `<mask id="ipSHdd0"><g fill="none"><rect width="30" height="40" x="9" y="4" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><circle cx="32" cy="10" r="2" fill="#000"/><circle cx="16" cy="10" r="2" fill="#000"/><circle cx="32" cy="38" r="2" fill="#000"/><circle cx="16" cy="38" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 30a8 8 0 1 0-8-8m8 0l-6 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHdd0)"/>`
	hdmiCableInnerSVG                                  = `<mask id="ipSHdmiCable0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 16a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v8.646c0 .818-.502 1.556-1.18 2.014c-1.219.825-3.026 2.49-3.622 5.352C38.973 33.093 38.105 34 37 34H11c-1.105 0-1.973-.907-2.198-1.988c-.596-2.863-2.403-4.527-3.623-5.352C4.502 26.202 4 25.464 4 24.646V16Z"/><path stroke="#000" d="M14 28h20m-20 0v-3m7 3v-3m6 3v-3m7 3v-3m-23-5h2m6 0h2m6 0h2m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHdmiCable0)"/>`
	hdmiConnectorInnerSVG                              = `<mask id="ipSHdmiConnector0"><g fill="none"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M29 43a5 5 0 0 0-10 0"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15.5 42.11A19.923 19.923 0 0 0 24 44c3.04 0 5.92-.678 8.5-1.89"/><circle cx="15" cy="15" r="3" fill="#000"/><circle cx="11" cy="23" r="3" fill="#000"/><circle cx="24" cy="11" r="3" fill="#000"/><circle cx="33" cy="15" r="3" fill="#000"/><circle cx="37" cy="23" r="3" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHdmiConnector0)"/>`
	headphoneSoundInnerSVG                             = `<mask id="ipSHeadphoneSound0"><g fill="none"><path fill="#fff" d="M4 28a2 2 0 0 1 2-2h4v12H6a2 2 0 0 1-2-2v-8Zm34-2h4a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-4V26Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 36V24c0-7.732 6.268-14 14-14s14 6.268 14 14v12M10 26H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h4V26Zm28 0h4a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-4V26Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 32h4l2-6l4 12l2-6h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeadphoneSound0)"/>`
	headsetInnerSVG                                    = `<mask id="ipSHeadset0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 30v-5.538C42 14.265 33.941 6 24 6S6 14.265 6 24.462V30"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M34 32a4 4 0 0 1 4-4h4v14h-4a4 4 0 0 1-4-4v-6Z"/><path fill="#fff" d="M42 32h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2v-6ZM6 32H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2v-6Z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M6 28h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4H6V28Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeadset0)"/>`
	headsetOneInnerSVG                                 = `<mask id="ipSHeadsetOne0"><g fill="none"><path fill="#fff" d="M36 32a8 8 0 1 0 0-16"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M36 32a8 8 0 1 0 0-16"/><path fill="#fff" d="M12 16a8 8 0 1 0 0 16"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M12 16a8 8 0 1 0 0 16"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 32V16c0-6.627 5.373-12 12-12s12 5.373 12 12v16c0 6.627-5.373 12-12 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeadsetOne0)"/>`
	headsetTwoInnerSVG                                 = `<mask id="ipSHeadsetTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M21 16h-6v9a3 3 0 1 0 6 0v-9Z"/><path d="M18 28v10h-6m9-22V4H10.5C8 4 5 6 5 10s3.5 6 6 6h10Zm6 6V10h10.5c2.5 0 5.5 2 5.5 6s-3.5 6-6 6H27Z"/><path fill="#fff" d="M33 22h-6v9a3 3 0 1 0 6 0v-9Z"/><path d="M30 34v10h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeadsetTwo0)"/>`
	headwearInnerSVG                                   = `<mask id="ipSHeadwear0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M12.417 43C10.095 40.068 8 35.779 8 31c0-8.837 7.163-16 16-16s16 7.163 16 16c0 4.779-2.095 9.068-4.417 12"/><path fill="#fff" d="M34 13.5L43 5l-3 12l-5 1l-1-4.5Zm-20 0L5 5l3 12l5 1l1-4.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeadwear0)"/>`
	healthInnerSVG                                     = `<mask id="ipSHealth0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M27.3 12c-1.823 0-3.3 1.435-3.3 3.204c0 3.205 3.9 6.118 6 6.796c2.1-.678 6-3.59 6-6.796C36 13.434 34.523 12 32.7 12a3.326 3.326 0 0 0-2.7 1.362A3.326 3.326 0 0 0 27.3 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHealth0)"/>`
	healthProductsInnerSVG                             = `<mask id="ipSHealthProducts0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33 12H15l-5 5.843v20.249L15 44h18l5-5.908v-20.25L33 12Z"/><path stroke="#000" d="M19 20h10"/><path stroke="#fff" d="M33 12V7a3 3 0 0 0-3-3H18a3 3 0 0 0-3 3v5"/><circle cx="24" cy="32" r="5" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHealthProducts0)"/>`
	healthyRecognitionInnerSVG                         = `<mask id="ipSHealthyRecognition0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 33v6a3 3 0 0 0 3 3h6m18 0h6a3 3 0 0 0 3-3v-6m0-18V9a3 3 0 0 0-3-3h-6M6 15V9a3 3 0 0 1 3-3h6"/><path fill="#fff" d="M34 24L24 34L14 24c-1-1-1.5-3 0-5s4.5-2 6-1s2 2 4 2s2.5-1 4-2s4.5-1 6 1s1 4 0 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHealthyRecognition0)"/>`
	heartBallonInnerSVG                                = `<mask id="ipSHeartBallon0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17.333 4C13.333 4 12 7.156 12 11.05C12 18.1 19.8 24.51 24 26c4.2-1.49 12-7.9 12-14.95C36 7.156 34.312 4 30.667 4C28.434 4 25.194 7.077 24 8.889C22.806 7.077 19.566 4 17.333 4Z"/><path d="M24 26c-2 1.09-5 3.5-5 7s10 2.5 10 6s-11 5-11 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeartBallon0)"/>`
	heaterResistorInnerSVG                             = `<mask id="ipSHeaterResistor0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="28" height="12" x="9.858" y="29.657" fill="#fff" stroke="#fff" rx="2" transform="rotate(-45 9.858 29.657)"/><path stroke="#fff" stroke-linecap="round" d="m7.03 40.97l7.07-7.07m19.801-19.8l7.071-7.07"/><path stroke="#000" stroke-linecap="round" d="m14.808 24.707l8.485 8.485m-3.535-13.435l8.485 8.486m-3.536-13.435l8.485 8.485"/><path stroke="#fff" stroke-linecap="round" d="m12.687 26.829l14.142-14.143m-5.657 22.628l14.142-14.142"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHeaterResistor0)"/>`
	helmetInnerSVG                                     = `<mask id="ipSHelmet0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M42.34 32c1.07-2.45 1.66-5.16 1.66-8c0-11.05-8.95-20-20-20S4 12.95 4 24h20l.01 8c0 3.87 3.13 7 7 7s7-3.13 7-7h4.33Z"/><path fill="#fff" d="M31 34c1.1 0 2-.9 2-2s-.9-2-2-2s-2 .9-2 2s.9 2 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M24 32L6 36c2.23 3.17 4.45 6.37 8 8l12-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHelmet0)"/>`
	helmetOneInnerSVG                                  = `<mask id="ipSHelmetOne0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 11c-9.389 0-17 7.815-17 17.454V35h34v-6.546C41 18.814 33.389 11 24 11ZM4 35h40v6H4z"/><path d="M21 6h6v18h-6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHelmetOne0)"/>`
	helpInnerSVG                                       = `<mask id="ipSHelp0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44a19.937 19.937 0 0 0 14.142-5.858A19.937 19.937 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 28.625v-4a6 6 0 1 0-6-6"/><path fill="#000" fill-rule="evenodd" d="M24 37.625a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHelp0)"/>`
	helpcenterInnerSVG                                 = `<mask id="ipSHelpcenter0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 28.625v-4a6 6 0 1 0-6-6"/><path fill="#000" fill-rule="evenodd" d="M24 37.625a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHelpcenter0)"/>`
	hexagonOneInnerSVG                                 = `<mask id="ipSHexagonOne0"><path fill="#fff" stroke="#fff" stroke-width="4" d="m23.029 43.46l-16-8.889A2 2 0 0 1 6 32.824V15.177a2 2 0 0 1 1.029-1.748l16-8.89a2 2 0 0 1 1.942 0l16 8.89A2 2 0 0 1 42 15.176v17.646a2 2 0 0 1-1.029 1.748l-16 8.89a2 2 0 0 1-1.942 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHexagonOne0)"/>`
	hexagonStripInnerSVG                               = `<mask id="ipSHexagonStrip0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 4h10v11.34l9.82-5.67l5 8.66L34 24l9.82 5.67l-5 8.66L29 32.66V44H19V32.66l-9.82 5.67l-5-8.66L14 24l-9.82-5.67l5-8.66L19 15.34V4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHexagonStrip0)"/>`
	hiInnerSVG                                         = `<mask id="ipSHi0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 43H17.476a.257.257 0 0 1-.218-.121L7.86 27.727a4.095 4.095 0 1 1 7.011-4.23l2.462 4.194V8.576a3 3 0 0 1 3.522-2.955L37.52 8.563A3 3 0 0 1 40 11.517V40a3 3 0 0 1-3 3Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHi0)"/>`
	highHeeledShoesInnerSVG                            = `<mask id="ipSHighHeeledShoes0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M29.183 20C31.264 15.054 36.35 10.667 39 8c1.104.667 5 2.604 5 7c0 4-1.455 7.111-3 8l-5.987 4.191a23 23 0 0 0-6.533 7.01L25 40H4v-4c2.429-1.333 9.82-5.867 13-8c7 4 10.5-4 12.183-8Z"/><path d="M43 21v19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHighHeeledShoes0)"/>`
	highLightInnerSVG                                  = `<mask id="ipSHighLight0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 44V25h6v-8h24v8h6v19H6Z"/><path stroke-linecap="round" d="M17 17V8l14-4v13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHighLight0)"/>`
	highSpeedRailInnerSVG                              = `<mask id="ipSHighSpeedRail0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 20v10a8 8 0 0 0 8 8h14a8 8 0 0 0 8-8V20m-5 18v4m-20-4v4m6 2h8"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M9 16.36C9 13 15 4 24 4s15 9 15 12.36V20H9v-3.64Z"/><path fill="#fff" stroke="#fff" d="M20.5 32a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm10 0a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 11h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHighSpeedRail0)"/>`
	hippoInnerSVG                                      = `<mask id="ipSHippo0"><g fill="none"><rect width="34" height="18" x="7" y="25" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="6"/><circle cx="17" cy="34" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="31" cy="34" r="3" fill="#fff" stroke="#fff" stroke-width="4"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M11 19a6 6 0 0 1 6-6h14a6 6 0 0 1 6 6v6H11v-6Z"/><circle cx="20" cy="19" r="2" fill="#000"/><circle cx="28" cy="19" r="2" fill="#000"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M18 5a3 3 0 0 1 3 3v5h-6V8a3 3 0 0 1 3-3Zm12 0a3 3 0 0 1 3 3v5h-6V8a3 3 0 0 1 3-3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHippo0)"/>`
	historyQueryInnerSVG                               = `<mask id="ipSHistoryQuery0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M42 24V9a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h15"/><circle cx="32" cy="32" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m37 36l5 4M14 16h20m-20 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHistoryQuery0)"/>`
	hockeyInnerSVG                                     = `<mask id="ipSHockey0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="m36 4l-5.77 27.41c-.2.93-1.01 1.59-1.96 1.59H9c-1.66 0-3 1.34-3 3v1.55c0 3.48 2.95 6.23 6.43 5.98l17.06-1.22a5.996 5.996 0 0 0 5.44-4.75L42 4h-6Z"/><path d="M15 16c4.418 0 8-1.343 8-3s-3.582-3-8-3s-8 1.343-8 3s3.582 3 8 3Z"/><path d="M23 13v6c0 1.66-3.58 3-8 3s-8-1.34-8-3v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHockey0)"/>`
	holdInterfaceInnerSVG                              = `<mask id="ipSHoldInterface0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="m20 33l6 2s15-3 17-3s2 2 0 4s-9 8-15 8s-10-3-14-3H4"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 29c2-2 6-5 10-5s13.5 4 15 6s-3 5-3 5"/><rect width="16" height="6" x="26" y="15" fill="#fff" rx="3"/><path stroke-linecap="round" d="M26 9h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHoldInterface0)"/>`
	holdSeedsInnerSVG                                  = `<mask id="ipSHoldSeeds0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="m20 33l6 2s15-3 17-3s2 2 0 4s-9 8-15 8s-10-3-14-3H4"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 29c2-2 6-5 10-5s13.5 4 15 6s-3 5-3 5"/><circle cx="34" cy="22" r="3" fill="#fff"/><circle cx="22" cy="15" r="3" fill="#fff"/><circle cx="34" cy="7" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHoldSeeds0)"/>`
	holySwordInnerSVG                                  = `<mask id="ipSHolySword0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m17 13l7-9l7 9l-5 26h-4l-5-26Z"/><path d="M17 39h14m-7 0v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHolySword0)"/>`
	homeInnerSVG                                       = `<mask id="ipSHome0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M9 18v24h30V18L24 6L9 18Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M19 29v13h10V29H19Z"/><path stroke="#fff" stroke-linecap="round" d="M9 42h30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHome0)"/>`
	homeTwoInnerSVG                                    = `<mask id="ipSHomeTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 44V20L24 4L4 20v24h12V26h16v18h12Z"/><path stroke-linecap="round" d="M24 44V34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHomeTwo0)"/>`
	homestayInnerSVG                                   = `<mask id="ipSHomestay0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 26c2.319.197 10 2 10 5s-4.135 1.989-6 2c-1.601-.136-6 0-6 3s7 5 14 6s18 1 18 1M8 20l6-6m14-8h10l4 4"/><path fill="#fff" d="m30 14l6 6H20l-6-6h16Z"/><path d="M42 22v-6M26 30v-4m6 8v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHomestay0)"/>`
	honeyInnerSVG                                      = `<mask id="ipSHoney0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="m14.613 4.843l-4.69 4.689a3.316 3.316 0 1 0 4.69 4.689l4.689-4.69a3.316 3.316 0 0 0-4.69-4.688Zm10.16 8.597l-6.252 6.252a3.316 3.316 0 1 0 4.69 4.69l6.252-6.253a3.316 3.316 0 1 0-4.69-4.69Z"/><path d="m28.68 18.91l13.77 13.77c1.028 1.028.811 2.91-.483 4.206c-1.295 1.295-3.178 1.511-4.206.484L23.991 23.6"/><path fill="#fff" d="M22.428 6.406L11.487 17.347a3.316 3.316 0 1 0 4.69 4.69l10.94-10.942a3.316 3.316 0 1 0-4.689-4.69Z"/><path stroke-linecap="round" d="M13.854 23.142c1.424 4.437 1.187 7.715-.71 9.834c-2.847 3.179-2.405 11.166 4.026 11.166c6.431 0 8.32-7.987 2.872-10.79"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHoney0)"/>`
	honeyOneInnerSVG                                   = `<mask id="ipSHoneyOne0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="11" height="5" x="4.929" y="13.224" rx="2" transform="rotate(-46.025 4.929 13.224)"/><rect width="11" height="5" x="19.321" y="27.111" rx="2" transform="rotate(-46.025 19.321 27.11)"/><rect width="17" height="5" x="6.443" y="18.855" rx="2" transform="rotate(-46.025 6.443 18.855)"/><rect width="17" height="5" x="13.641" y="25.798" rx="2" transform="rotate(-46.025 13.64 25.798)"/><rect width="25" height="5" x="7.265" y="25.205" rx="2" transform="rotate(-46.025 7.265 25.205)"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="m25.003 28.424l4.166-4.318l14.407 13.9l-4.166 4.318l-14.407-13.9Z"/><path stroke-linejoin="round" d="M21 40.25c0 2.071-1.79 3.75-4 3.75s-4-1.679-4-3.75c0-2.071 4-6.25 4-6.25s4 4.179 4 6.25Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHoneyOne0)"/>`
	horizontalTidyUpInnerSVG                           = `<mask id="ipSHorizontalTidyUp0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 8h6v32H7zm14 0h6v32h-6zm14 0h6v32h-6z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHorizontalTidyUp0)"/>`
	horizontallyCenteredInnerSVG                       = `<mask id="ipSHorizontallyCentered0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M16 16h16v16H16z"/><path d="M5 40V8m38 32V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHorizontallyCentered0)"/>`
	hospitalInnerSVG                                   = `<mask id="ipSHospital0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M33 5H5v38h28V5Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M33 21h10v22H33"/><path stroke="#000" stroke-linecap="round" d="M13 21h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHospital0)"/>`
	hospitalFourInnerSVG                               = `<mask id="ipSHospitalFour0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 8a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v34H6a2 2 0 0 1-2-2V8Z"/><path stroke="#000" d="M21 42v-9a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3v9"/><path fill="#fff" stroke="#fff" d="M28 24h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H28V24Z"/><path stroke="#000" stroke-linecap="round" d="M12 18h8m14 12h4m-4 6h4M16 14v8"/><path stroke="#fff" stroke-linecap="round" d="M7 42h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHospitalFour0)"/>`
	hospitalThreeInnerSVG                              = `<mask id="ipSHospitalThree0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M11 26v18h26V26L24 13L11 26Z"/><path fill="#fff" d="M3.586 21.586a2 2 0 1 0 2.828 2.828l-2.828-2.828ZM24 4l1.414-1.414a2 2 0 0 0-2.828 0L24 4Zm17.586 20.414a2 2 0 1 0 2.828-2.828l-2.828 2.828Zm-35.172 0l19-19l-2.828-2.828l-19 19l2.828 2.828Zm16.172-19l19 19l2.828-2.828l-19-19l-2.828 2.828Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 31h10m-5-5v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHospitalThree0)"/>`
	hospitalTwoInnerSVG                                = `<mask id="ipSHospitalTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M32 11h8l4 10H4l4-10h8"/><path fill="#fff" stroke="#fff" d="M8 21h32v22H8V21Zm8-16h16v16H16z"/><path fill="#fff" stroke="#000" d="M16 29h8v14h-8zm8 0h8v14h-8z"/><path stroke="#000" d="M21 13h6"/><path stroke="#fff" d="M36 43H12"/><path stroke="#000" d="M24 16v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHospitalTwo0)"/>`
	hotAirBalloonInnerSVG                              = `<mask id="ipSHotAirBalloon0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M39 18.352C39 27.855 31 36 24 36S9 27.855 9 18.352C9 10.654 14.893 4 24 4s15 6.654 15 14.352Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M25 4c3.7 3.819 7 10.12 7 16c0 5.807-3.38 12.192-7 16M23 4c-4.317 4.087-7 9.706-7 16c0 6.215 2.777 11.924 7 16"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 16.018s5.065 1.017 9 0C34.935 15 38 13 38 13M9 20s5 2.5 9 3.5s8 .5 8 .5"/><path fill="#fff" d="m18 35l1.4 7.095S22.125 44 24 44c1.875 0 4.6-1.905 4.6-1.905l1.394-7.065L24 36l-6-1Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m30 35l-.006.03m0 0L28.6 42.095S25.875 44 24 44c-1.875 0-4.6-1.905-4.6-1.905L18 35l6 1l5.994-.97Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotAirBalloon0)"/>`
	hotPotInnerSVG                                     = `<mask id="ipSHotPot0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M24 11V4m8 7V7m-16 4V7"/><path fill="#fff" stroke="#fff" d="M44 17H4c0 5.586 3.578 10.503 9 13.365C16.156 32.03 19.936 33 24 33s7.844-.97 11-2.635c5.422-2.862 9-7.78 9-13.365Z"/><path stroke="#fff" d="M10.467 39h27.066M13 30.365L9 44m26-13.635L39 44"/><path stroke="#000" d="M20 25h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotPot0)"/>`
	hotPotOneInnerSVG                                  = `<mask id="ipSHotPotOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M24 36c12 0 17-8.059 17-18H7c0 9.941 5 18 17 18Z"/><path stroke="#fff" stroke-linejoin="round" d="m17 35l-3 9h20l-3-9m-2-17L27.889 4H20.11L19 18"/><path stroke="#000" d="M15 25s.07 1.07 1 2c.93.93 2 1 2 1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotPotOne0)"/>`
	hotelInnerSVG                                      = `<mask id="ipSHotel0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 4h40"/><rect width="32" height="40" x="8" y="4" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20 32h8v12h-8V32Z"/><path stroke="#000" stroke-linecap="round" d="M15 12h2m-2 6h2m6-6h2m-2 6h2m6-6h2m-2 6h2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 44h40"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M28 32h2c.552 0 1.01-.452.904-.994C30.352 28.166 27.471 26 24 26c-3.47 0-6.352 2.165-6.904 5.006c-.106.542.352.994.904.994h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotel0)"/>`
	hotelDoNotCleanInnerSVG                            = `<mask id="ipSHotelDoNotClean0"><g fill="none"><path fill="#fff" d="M13 27s20 0 20-12v29H13V27Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 15v-1c0-5.523-4.477-10-10-10S13 8.477 13 14m20 1c0 12-20 12-20 12v17h20V15Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m20 32l6 6m0-6l-6 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotelDoNotClean0)"/>`
	hotelPleaseCleanInnerSVG                           = `<mask id="ipSHotelPleaseClean0"><g fill="none"><path fill="#fff" d="M13 27s20 0 20-12v29H13V27Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 15v-1c0-5.523-4.477-10-10-10S13 8.477 13 14m20 1c0 12-20 12-20 12v17h20V15Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m19 34l3 3l5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHotelPleaseClean0)"/>`
	hourglassFullInnerSVG                              = `<mask id="ipSHourglassFull0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M7 4h34M7 44h34"/><path fill="#fff" stroke="#fff" d="M11 44c2.667-13.339 7-20.006 13-20c6 .006 10.333 6.672 13 20H11Z"/><path fill="#fff" stroke="#fff" d="M37 4c-2.667 13.339-7 20.006-13 20c-6-.006-10.333-6.672-13-20h26Z"/><path stroke="#000" stroke-linecap="round" d="M21 15h6m-8 23h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHourglassFull0)"/>`
	hourglassNullInnerSVG                              = `<mask id="ipSHourglassNull0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M7 4h34M7 44h34"/><path fill="#fff" d="M11 44c2.667-13.339 7-20.006 13-20c6 .006 10.333 6.672 13 20H11Z"/><path fill="#fff" d="M37 4c-2.667 13.339-7 20.006-13 20c-6-.006-10.333-6.672-13-20h26Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHourglassNull0)"/>`
	htmlFiveInnerSVG                                   = `<mask id="ipSHtmlFive0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M37.804 5H10.196a2 2 0 0 0-1.991 2.187l2.688 28.666a2 2 0 0 0 1.153 1.63l11.116 5.13a2 2 0 0 0 1.676 0l11.116-5.13a2 2 0 0 0 1.154-1.63l2.687-28.666A2 2 0 0 0 37.804 5Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M32 12H16l1 9h14l-1 11l-6 3l-6-3l-.5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHtmlFive0)"/>`
	huntingGearInnerSVG                                = `<mask id="ipSHuntingGear0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M44 29H4v13h40V29Z"/><path stroke-linejoin="round" d="M4 29L9.038 4.999H39.02l4.98 24"/><path stroke-linecap="round" d="M19 12a5 5 0 0 0 0 10m10 0a5 5 0 0 0 0-10m-9 5h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSHuntingGear0)"/>`
	iMacInnerSVG                                       = `<mask id="ipSIMac0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 6h40v22H4V6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 28v8H4v-8"/><path fill="#000" d="M13.09 18h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm0-6h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm8 6h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm0-6h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm8 6h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm0-6h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Zm8 0h-2.18a.91.91 0 0 0-.91.91v2.18c0 .503.407.91.91.91h2.18a.91.91 0 0 0 .91-.91v-2.18a.91.91 0 0 0-.91-.91Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20.846 36L16 42h16l-4.846-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIMac0)"/>`
	icecreamInnerSVG                                   = `<mask id="ipSIcecream0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M33 18H15l6 22s1 3 3 3s3-3 3-3l6-22Z"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 18H12c0-8 5-14 12-14s12 6 12 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIcecream0)"/>`
	icecreamFiveInnerSVG                               = `<mask id="ipSIcecreamFive0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M14 14c0-5.523 4.477-10 10-10s10 4.477 10 10v17.73a.27.27 0 0 1-.27.27H14.27a.27.27 0 0 1-.27-.27V14Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M21 16v6m6-6v6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M21 32v9a3 3 0 1 0 6 0v-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIcecreamFive0)"/>`
	icecreamFourInnerSVG                               = `<mask id="ipSIcecreamFour0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSIcecreamFour1)"><path d="m18.843 13.723l13.435 13.435L11.679 40.5l-6.045-6.045l13.209-20.732Z"/><path fill="#fff" d="M38.773 19.51c-1.06 1.061-1.76 1.07-2.812 1.431c-.033 2.796.006 5.61-3.542 6.304L18.603 13.429s-.009-1.37 1.396-2.085c.495-.232 1.499-.123 2.097-.025c1.406-3.025 3.535-3.536 5.903-2.558c1.135-1.718 3.94-2.45 6.028-1.775c2.089.675 2.072 2.073 3.462 2.755c1.39.683 2.804-.731 2.812-1.43c.008-.7-.114-2.036.828-1.794c.575.156 1.038.715 1.596 3.044c.31 1.308.13 3.242-.987 4.429c-.686.729-2.217 1.11-2.916 1.327c.066.19 1.012 3.133-.05 4.193Z"/><path d="M38.822 15.316c-2.813 1.43-4.901.756-6.974-1.316"/></g><defs><clipPath id="ipSIcecreamFour1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIcecreamFour0)"/>`
	icecreamTwoInnerSVG                                = `<mask id="ipSIcecreamTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M15.34 22.5L21 37l3 6l3-6l5.66-14.5"/><path d="M19 32h10"/><path fill="#fff" stroke-linejoin="round" d="M24 3c-6 0-8 6-8 6s-6 2-6 7s5 7 5 7s3.5-2 9-2s9 2 9 2s5-2 5-7s-6-7-6-7s-2-6-8-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIcecreamTwo0)"/>`
	idCardInnerSVG                                     = `<mask id="ipSIdCard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 8H6a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/><path fill="#000" stroke="#000" d="M36 16h-8v8h8v-8Z"/><path stroke="#000" stroke-linecap="round" d="M12 32h24M12 16h6m-6 8h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIdCard0)"/>`
	idCardHInnerSVG                                    = `<mask id="ipSIdCardH0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="40" height="32" x="4" y="8" rx="2"/><path fill="#fff" d="M17 25a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M23 31a6 6 0 0 0-12 0m17-11h8m-6 8h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIdCardH0)"/>`
	idCardVInnerSVG                                    = `<mask id="ipSIdCardV0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="32" height="40" x="8" y="4" rx="2"/><path fill="#fff" d="M24 19a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M30 25a6 6 0 0 0-12 0m0 6h12m-12 6h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIdCardV0)"/>`
	imageFilesInnerSVG                                 = `<mask id="ipSImageFiles0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><circle cx="18" cy="17" r="4" fill="#000" stroke="#000"/><path fill="#000" stroke="#000" d="M15 28v9h18V21l-9.51 10.5L15 28Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSImageFiles0)"/>`
	imbalanceInnerSVG                                  = `<mask id="ipSImbalance0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 19V4M12 22l12-3l12-3m-8 14l8-14m8 14l-8-14M20 36l-8-14M4 36l8-14"/><path fill="#fff" fill-rule="evenodd" d="M12 44a8 8 0 0 0 8-8H4a8 8 0 0 0 8 8Zm24-6a8 8 0 0 0 8-8H28a8 8 0 0 0 8 8Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSImbalance0)"/>`
	inFlightInnerSVG                                   = `<mask id="ipSInFlight0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M12 40c0-7.18 5.373-13 12-13s12 5.82 12 13"/><path d="M13 37c0 1 2.5 2 4 1s1.96-3.505 3.5-3.074C22.04 35.357 22 38.5 24 40s5.5 1 7-1.5s-.08-3.175 1.061-4.797c.76-1.081 1.73-.816 1.939-.703"/><path stroke-linejoin="round" d="M23 21h2m7.151 1.47l1.696 1.06m-19.696 0l1.697-1.06m23.211 5.664l1 1.732m-32 0l1-1.732m32.836 8.872l.209 1.989m-37.209 0l.209-1.99"/><path d="M42 10L9 18"/><path fill="#fff" stroke-linejoin="round" d="m16 7l13 6l-12 3l-5-7l4-2Z"/><path stroke-linejoin="round" d="m9 18l-3-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInFlight0)"/>`
	inboxInnerSVG                                      = `<mask id="ipSInbox0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 30L9 6h30l5 24"/><path fill="#fff" d="M4 30h10.91l1.817 6h14.546l1.818-6H44v13H4V30Z"/><path stroke-linecap="round" d="M19 14h10m-13 8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInbox0)"/>`
	inboxDownloadRInnerSVG                             = `<mask id="ipSInboxDownloadR0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M4 31h11l2 4h14l2-4h11"/><path stroke="#fff" stroke-linecap="round" d="M42 36V26"/><path stroke="#000" stroke-linecap="round" d="m18 22l6 6l6-6m-6 6V12"/><path stroke="#fff" stroke-linecap="round" d="M6 36V26"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxDownloadR0)"/>`
	inboxInInnerSVG                                    = `<mask id="ipSInboxIn0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="m5 30l5-24h28l5 24"/><path fill="#fff" d="M5 30h9.91l1.817 6h14.546l1.818-6H43v13H5V30Z"/><path stroke-linecap="round" d="m18 20l6 6l6-6m-6 6V14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxIn0)"/>`
	inboxOutInnerSVG                                   = `<mask id="ipSInboxOut0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 30L9 6h30l5 24"/><path fill="#fff" d="M4 30h10.91l1.817 6h14.546l1.818-6H44v13H4V30Z"/><path stroke-linecap="round" d="m18 20l6-6l6 6m-6 6V14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxOut0)"/>`
	inboxRInnerSVG                                     = `<mask id="ipSInboxR0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M4 31h11l2 4h14l2-4h11"/><path stroke="#fff" stroke-linecap="round" d="M42 36V26M6 36V26"/><path stroke="#000" stroke-linecap="round" d="M17 15h14m-14 8h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxR0)"/>`
	inboxSuccessInnerSVG                               = `<mask id="ipSInboxSuccess0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 30L9 6h30l5 24"/><path fill="#fff" d="M4 30h10.91l1.817 6h14.546l1.818-6H44v13H4V30Z"/><path stroke-linecap="round" d="M19 19.214L23 24l8-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxSuccess0)"/>`
	inboxSuccessRInnerSVG                              = `<mask id="ipSInboxSuccessR0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M4 31h11l2 4h14l2-4h11"/><path stroke="#fff" stroke-linecap="round" d="M42 36V26M6 36V26"/><path stroke="#000" stroke-linecap="round" d="M17 18.615L22.6 24L33 14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxSuccessR0)"/>`
	inboxUploadRInnerSVG                               = `<mask id="ipSInboxUploadR0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M4 31h11l2 4h14l2-4h11"/><path stroke="#fff" stroke-linecap="round" d="M42 36V26"/><path stroke="#000" stroke-linecap="round" d="m18 18l6-6l6 6m-6-6v16"/><path stroke="#fff" stroke-linecap="round" d="M6 36V26"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInboxUploadR0)"/>`
	inclusiveGatewayInnerSVG                           = `<mask id="ipSInclusiveGateway0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M22.8 4.201L4.413 22.586a2 2 0 0 0 0 2.828L22.8 43.8a2 2 0 0 0 2.829 0l18.384-18.385a2 2 0 0 0 0-2.828L25.628 4.2a2 2 0 0 0-2.829 0Z"/><path fill="#000" stroke="#000" d="M24 32a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInclusiveGateway0)"/>`
	incomingInnerSVG                                   = `<mask id="ipSIncoming0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M18 13a4 4 0 1 0-8 0a4 4 0 0 0 8 0Zm19 0a4 4 0 1 0-8 0a4 4 0 0 0 8 0Z"/><path stroke-linecap="round" d="M4 13h6m8 0h11m8 0h7"/><path stroke-linecap="round" stroke-linejoin="round" d="m10 29l-6 6l6 6m-6-6h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIncoming0)"/>`
	inductionLockInnerSVG                              = `<mask id="ipSInductionLock0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M9 18v24h30V18L24 6L9 18Z"/><path stroke="#000" d="M24 22v12m7-8v4m-14-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInductionLock0)"/>`
	industrialScalesInnerSVG                           = `<mask id="ipSIndustrialScales0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 32h28l4 8H6l4-8Z"/><path stroke-linecap="round" d="M16 40v4m8-32v20"/><path fill="#fff" d="M17 4h14v8H17z"/><path stroke-linecap="round" d="M32 40v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIndustrialScales0)"/>`
	infoInnerSVG                                       = `<mask id="ipSInfo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44a19.937 19.937 0 0 0 14.142-5.858A19.937 19.937 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z"/><path fill="#000" fill-rule="evenodd" d="M24 11a2.5 2.5 0 1 1 0 5a2.5 2.5 0 0 1 0-5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24.5 34V20h-2M21 34h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInfo0)"/>`
	infusionInnerSVG                                   = `<mask id="ipSInfusion0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 30c0 7.732-6.268 14-14 14s-14-6.268-14-14S24 4 24 4s14 18.268 14 26Z"/><path stroke="#000" stroke-linecap="round" d="M18 30h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInfusion0)"/>`
	injectionInnerSVG                                  = `<mask id="ipSInjection0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M38.168 22.262L19.077 41.354L6.349 28.626L25.44 9.534" clip-rule="evenodd"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M38.168 22.262L19.077 41.354L6.349 28.626L25.44 9.534"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m21.905 5.999l19.8 19.799"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="m14.834 28.626l4.243 4.243"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m6.35 41.353l6.363-6.363m19.092-19.092l3.534-3.535"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInjection0)"/>`
	innerShadowBottomLeftInnerSVG                      = `<mask id="ipSInnerShadowBottomLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M24 38a13.957 13.957 0 0 1-9.9-4.1A13.957 13.957 0 0 1 10 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowBottomLeft0)"/>`
	innerShadowBottomRightInnerSVG                     = `<mask id="ipSInnerShadowBottomRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M24 38a13.96 13.96 0 0 0 9.9-4.1A13.957 13.957 0 0 0 38 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowBottomRight0)"/>`
	innerShadowDownInnerSVG                            = `<mask id="ipSInnerShadowDown0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M33.9 33.9A13.957 13.957 0 0 1 24 38a13.957 13.957 0 0 1-9.9-4.1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowDown0)"/>`
	innerShadowLeftInnerSVG                            = `<mask id="ipSInnerShadowLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M14.1 14.1A13.956 13.956 0 0 0 10 24a13.96 13.96 0 0 0 4.1 9.9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowLeft0)"/>`
	innerShadowRightInnerSVG                           = `<mask id="ipSInnerShadowRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M33.9 33.9A13.957 13.957 0 0 0 38 24a13.96 13.96 0 0 0-4.1-9.9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowRight0)"/>`
	innerShadowTopLeftInnerSVG                         = `<mask id="ipSInnerShadowTopLeft0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M24 10a13.956 13.956 0 0 0-9.9 4.1A13.956 13.956 0 0 0 10 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowTopLeft0)"/>`
	innerShadowTopRightInnerSVG                        = `<mask id="ipSInnerShadowTopRight0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M38 24a13.96 13.96 0 0 0-4.1-9.9A13.957 13.957 0 0 0 24 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowTopRight0)"/>`
	innerShadowUpInnerSVG                              = `<mask id="ipSInnerShadowUp0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a19.938 19.938 0 0 0 14.142-5.858A19.938 19.938 0 0 0 44 24a19.938 19.938 0 0 0-5.858-14.142A19.937 19.937 0 0 0 24 4A19.938 19.938 0 0 0 9.858 9.858A19.938 19.938 0 0 0 4 24a19.937 19.937 0 0 0 5.858 14.142A19.938 19.938 0 0 0 24 44Z" clip-rule="evenodd"/><path stroke="#000" d="M33.9 14.1A13.956 13.956 0 0 0 24 10a13.956 13.956 0 0 0-9.9 4.1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInnerShadowUp0)"/>`
	insertCardInnerSVG                                 = `<mask id="ipSInsertCard0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M10 18H4V6h40v12h-6"/><path fill="#fff" d="M12 12L4 41h40l-8-29H12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInsertCard0)"/>`
	inspectionInnerSVG                                 = `<mask id="ipSInspection0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M43 33V19H5v22a2 2 0 0 0 2 2h17"/><path stroke-linejoin="round" d="M5 10a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v9H5v-9Z"/><path stroke-linecap="round" d="M16 5v8m16-8v8"/><circle cx="30" cy="32" r="7" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m36 37l6 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInspection0)"/>`
	instagramInnerSVG                                  = `<mask id="ipSInstagram0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M34 6H14a8 8 0 0 0-8 8v20a8 8 0 0 0 8 8h20a8 8 0 0 0 8-8V14a8 8 0 0 0-8-8Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M24 32a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/><path fill="#000" d="M35 15a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInstagram0)"/>`
	instagramOneInnerSVG                               = `<mask id="ipSInstagramOne0"><g fill="#fff" stroke="#fff" stroke-width="4"><circle cx="9" cy="8" r="4"/><path stroke-linejoin="round" d="M5 18h8v25H5zm16 9.5V43h7V29c0-2.5 1.5-4.5 4-4.5s4 2.5 4 4.5v14h7V27.5c0-3-3.5-9.5-11-9.5s-11 6.5-11 9.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInstagramOne0)"/>`
	installInnerSVG                                    = `<mask id="ipSInstall0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M41.4 11.551L36.333 5H11.667l-5.083 6.551"/><path fill="#fff" stroke="#fff" d="M6 13a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2v27a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V13Z"/><path stroke="#000" stroke-linecap="round" d="m32 27l-8 8l-8-8m7.992-8v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInstall0)"/>`
	instructionInnerSVG                                = `<mask id="ipSInstruction0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><rect width="40" height="32" x="4" y="8" stroke-linejoin="round" rx="2"/><path fill="#fff" stroke-linejoin="round" d="M4 10a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v6H4v-6Z"/><path d="m25 23l-2 11"/><path stroke-linejoin="round" d="m31 23l6 5l-6 6M17 23l-6 5l6 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInstruction0)"/>`
	intercomInnerSVG                                   = `<mask id="ipSIntercom0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M13 14a3 3 0 0 1 3-3h16a3 3 0 0 1 3 3v11l-2 6v10a3 3 0 0 1-3 3H18a3 3 0 0 1-3-3V31l-2-6V14Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19 11V4m9 7V7"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M28 19h-8m6 7h-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIntercom0)"/>`
	intermediateModeInnerSVG                           = `<mask id="ipSIntermediateMode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24.003 4l5.27 5.27h9.457v9.456l5.27 5.27l-5.27 5.278v9.456h-9.456L24.004 44l-5.278-5.27H9.27v-9.456L4 23.997l5.27-5.27V9.27h9.456L24.003 4Z"/><path stroke="#000" d="M24 16c3.993.5 7 4 7 8s-3 7.5-7 7.955"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIntermediateMode0)"/>`
	internalExpansionInnerSVG                          = `<mask id="ipSInternalExpansion0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 42h32a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2Z"/><path fill="#fff" fill-rule="evenodd" d="M42 8a2 2 0 0 0-2-2H28v14h14V8Z" clip-rule="evenodd"/><path d="m13 35l10-10m0 0v7m0-7h-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInternalExpansion0)"/>`
	internalReductionInnerSVG                          = `<mask id="ipSInternalReduction0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 42h32a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2Z"/><path fill="#fff" fill-rule="evenodd" d="M42 8a2 2 0 0 0-2-2H28v14h14V8Z" clip-rule="evenodd"/><path d="M23 25L13 35m0 0v-7m0 7h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInternalReduction0)"/>`
	intersectionInnerSVG                               = `<mask id="ipSIntersection0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M31 31h9a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H19a2 2 0 0 0-2 2v9"/><path d="M17 17H8a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h21a2 2 0 0 0 2-2v-9"/><rect width="14" height="14" x="17" y="17" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIntersection0)"/>`
	invalidFilesInnerSVG                               = `<mask id="ipSInvalidFiles0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V4h23l9 10.5V44H8Z"/><path fill="#000" stroke="#000" d="M34 25c0 5.523-4.477 10-10 10s-10-4.477-10-10s4.477-10 10-10a9.965 9.965 0 0 1 6.865 2.729A9.972 9.972 0 0 1 34 25Z"/><path stroke="#000" d="m17 18l14 14m3-7c0 5.523-4.477 10-10 10M14 25c0-5.523 4.477-10 10-10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInvalidFiles0)"/>`
	invertCameraInnerSVG                               = `<mask id="ipSInvertCamera0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M9 14s7.5-11.5 20.5-7S42 24.5 42 24.5M39 34s-6 11-19.5 7.5S6 24 6 24M42 8v16M6 24v16"/><path fill="#fff" stroke-linecap="round" d="M14 20h12v8H14z"/><path d="m34 28l-2-1.333v-5.334L34 20v8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSInvertCamera0)"/>`
	ipadInnerSVG                                       = `<mask id="ipSIpad0"><g fill="none" stroke-width="4"><rect width="30" height="38" x="9" y="5" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 36h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIpad0)"/>`
	ipadOneInnerSVG                                    = `<mask id="ipSIpadOne0"><g fill="none" stroke-width="4"><rect width="38" height="30" x="5" y="10" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M11 27v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIpadOne0)"/>`
	iphoneInnerSVG                                     = `<mask id="ipSIphone0"><g fill="none" stroke-width="4"><rect width="26" height="40" x="11" y="4" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 10h4m-6 28h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIphone0)"/>`
	ipoInnerSVG                                        = `<mask id="ipSIpo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 18.313V7h40v11.313a5.5 5.5 0 0 0-3.636 5.187A5.5 5.5 0 0 0 44 28.687V40H4V28.687A5.5 5.5 0 0 0 7.636 23.5A5.5 5.5 0 0 0 4 18.313Z"/><path stroke="#000" stroke-linecap="round" d="M13 18v11m5-11v11"/><path fill="#000" stroke="#000" d="M18 18h3a3 3 0 1 1 0 6h-3v-6Z"/><ellipse cx="32" cy="24" fill="#000" stroke="#000" rx="3" ry="5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIpo0)"/>`
	ironInnerSVG                                       = `<mask id="ipSIron0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 40h40l-2-16H20c-8.837 0-16 7.163-16 16Z"/><path stroke="#fff" d="M16 8h24l2 16"/><path stroke="#000" d="M17 32h2m6 0h2m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIron0)"/>`
	ironDisableInnerSVG                                = `<mask id="ipSIronDisable0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 40h40l-2-16H20c-8.837 0-16 7.163-16 16Z"/><path stroke="#fff" d="M16 8h24l2 16"/><circle cx="24" cy="24" r="9" fill="#fff" stroke="#fff"/><path stroke="#000" d="m26 26l-2-2l-2-2m4 0l-2 2l-2 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIronDisable0)"/>`
	ironThreeInnerSVG                                  = `<mask id="ipSIronThree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 40h40l-2-16H20c-8.837 0-16 7.163-16 16Z"/><path stroke="#fff" d="M16 8h24l2 16"/><path stroke="#000" d="M17 32h2m6 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIronThree0)"/>`
	ironTwoInnerSVG                                    = `<mask id="ipSIronTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 40h40l-2-16H20c-8.837 0-16 7.163-16 16Z"/><path stroke="#fff" d="M16 8h24l2 16"/><path stroke="#000" d="M17 32h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIronTwo0)"/>`
	iwatchInnerSVG                                     = `<mask id="ipSIwatch0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M36 12H10v24h26V12Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M27 24a4 4 0 1 0-8 0a4 4 0 0 0 8 0Z"/><path stroke="#fff" stroke-linecap="round" d="M15 12c0-.073.008-.146.025-.217l1.607-7A1.026 1.026 0 0 1 17.641 4h10.743c.484 0 .903.326 1.008.783l1.608 7M15 36c0 .073.008.146.025.217l1.607 7c.105.458.524.783 1.009.783h10.743c.484 0 .903-.325 1.008-.783l1.608-7M39 16v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIwatch0)"/>`
	iwatchOneInnerSVG                                  = `<mask id="ipSIwatchOne0"><g fill="none" stroke-width="4"><rect width="22" height="24" x="13" y="12" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 12v6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M21 12h6"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 30v6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M21 36h6"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M35 23.934L29 24"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M35 21v6"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m19 24l-6 .066"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M13 21v6m18-15V4H17v8m14 24v7a1 1 0 0 1-1 1H18a1 1 0 0 1-1-1v-7M7 20v8m34-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIwatchOne0)"/>`
	iwatchTwoInnerSVG                                  = `<mask id="ipSIwatchTwo0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M15.417 10.5C18.237 7.7 21.942 6 26 6c8.837 0 16 8.059 16 18s-7.163 18-16 18c-4.058 0-7.763-1.7-10.583-4.5"/><rect width="10" height="28" x="6" y="10" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><rect width="4" height="4" x="13" y="18" fill="#000" rx="2" transform="rotate(90 13 18)"/><rect width="4" height="4" x="13" y="25" fill="#000" rx="2" transform="rotate(90 13 25)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSIwatchTwo0)"/>`
	jewelryInnerSVG                                    = `<mask id="ipSJewelry0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path fill="#000" stroke="#000" d="M20 24c0-6.364 2.628-8.646 4-9c1.22.177 4 2.212 4 9s-2.78 9-4 9c-1.372-.177-4-2.636-4-9Z"/><path stroke="#000" d="M20 23c-1.554-1.538-6.382-1.16-8-1c-.485 1.762.352 5.492 2.293 7.414C16.72 31.817 18.661 33 24 33m4-10c1.436-1.533 5.504-1.16 7-1c.3 1.597.14 5.188-2.372 7.87C30.115 32.555 25.5 33 24 33"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSJewelry0)"/>`
	jinritoutiaoInnerSVG                               = `<mask id="svgIDa"><g fill="none"><path fill="#fff" d="M36.883 44h-25.77C7.192 44 4 40.808 4 36.883v-25.77C4 7.192 7.192 4 11.113 4h25.77c3.92 0 7.113 3.192 7.113 7.113v25.77C44 40.808 40.808 44 36.883 44ZM11.113 4.303a6.819 6.819 0 0 0-6.81 6.81v25.77a6.82 6.82 0 0 0 6.814 6.814h25.77a6.82 6.82 0 0 0 6.815-6.814v-25.77a6.82 6.82 0 0 0-6.815-6.815H11.113v.005Z"/><path fill="#fff" d="M44 34.795L4 36.887V13.205l40-2.092v23.682Z"/><path fill="#000" d="m19.17 15.92l-2.458.128c-.064 4.892-.132 7.645-1.014 9.618c-.895 2-2.805 3.657-6.61 6.955c-.158.137-.32.277-.49.422l3.873-.204c6.312-5.566 6.564-6.776 6.7-16.92Z"/><path fill="#000" d="M14.902 19.887v-2.42l-5.472-.495v2.417l5.472.498ZM9.43 21.064v2.42l5.472.499v-2.42l-5.472-.5Zm14.016 6.316l-15.444.805V26.02l15.444-.81v2.17Zm16.536-.866l-15.449.81v-2.17l15.449-.809v2.17Zm-.857-8.928l-11.242.588v-2.169l11.242-.588v2.17ZM21.06 28.59l-2.97.153l2.386 3.682l2.97-.153l-2.386-3.682Zm16.553-.866l-2.966.154l2.386 3.682l2.966-.154l-2.386-3.682Zm-7.715.401l-2.97.158l-2.387 3.929l2.97-.154l2.387-3.933Z"/><path fill="#000" d="m33.501 31.743l-2.519.132v-8.293l2.52-.128v8.29Zm3.357-16.207v1.522c-1.432 1.227-4.326 3.311-12.325 5.071v2.314c9.717-2.088 13.032-5.029 14.588-6.503v-2.523l-2.263.12Z"/><path fill="#000" d="M27.362 17.394c-.106-.072-.209-.144-.307-.208l-2.092 1.367s.933.678 1.035.746c1.71 1.177 4.833 3.324 13.983 4.339v-2.314c-8.31-.964-11.085-2.877-12.619-3.93Z"/><path fill="#000" d="m24.963 18.553l2.118 1.275l2.544-3.912l-2.327-.964l-2.335 3.601Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#svgIDa)"/>`
	journeyInnerSVG                                    = `<mask id="ipSJourney0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-width="4" clip-path="url(#ipSJourney1)"><path stroke-linejoin="round" d="M24 40c8.284 0 15-6.716 15-15c0-8.284-6.716-15-15-15c-8.284 0-15 6.716-15 15c0 8.284 6.716 15 15 15Z"/><path d="M20 11c1.805 1.008 3.5 2.5 3.358 4.445c-.114 1.555-1.443 1.902-1.721 3.026c-.278 1.124 1.33 2.35-1.39 4.165C18.431 23.846 12.97 26.145 9 24"/><path stroke-linejoin="round" d="M9.5 24.5C6.5 26.388 2.068 31.521 4 35c2.5 4.5 12 .69 23-8S42.23 5.606 42.23 5.606L37 7"/><path d="M26 40s.5-5 4-8s8-3 8-3"/></g><defs><clipPath id="ipSJourney1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSJourney0)"/>`
	joystickInnerSVG                                   = `<mask id="ipSJoystick0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 33H4v10h40V33Z"/><path stroke-linecap="round" d="M38 26H26v7h12v-7Z"/><path fill="#fff" d="M18 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" d="M16 14L9 33"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSJoystick0)"/>`
	juiceInnerSVG                                      = `<mask id="ipSJuice0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M15 24h18l-1.8 20H16.8L15 24Z"/><rect width="26" height="6" x="11" y="18" rx="3"/><path fill="#fff" d="M24 8c-5.523 0-10 4.477-10 10h20c0-5.523-4.477-10-10-10Z"/><path stroke-linecap="round" d="m28 4l-2 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSJuice0)"/>`
	jumpInnerSVG                                       = `<mask id="ipSJump0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="m8 10l12 10.254v9.714L10.857 44M40 10L28 20.254v9.714L37.143 44"/><circle cx="24" cy="8" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSJump0)"/>`
	kettleInnerSVG                                     = `<mask id="ipSKettle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6.778 37h36v7h-36z"/><path d="m38.778 36l-2-26h-32l6.566 7.55a3 3 0 0 1 .727 2.206L10.778 36m16-18h-5m5 6h-5m5 6h-5m15-20h8v16h-6m-19-17V4h9v5"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSKettle0)"/>`
	kettleOneInnerSVG                                  = `<mask id="ipSKettleOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M13 14h17s8 4.148 8 13.8c0 9.65-8 14.2-8 14.2H13s-7-6.022-7-14c0-7.979 7-14 7-14Z"/><path d="M38 28c-13-3-19 6-32 0m25-14h9s4 4 4 16"/><path fill="#fff" d="m9 6l23 2.667L31 14H13L9 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKettleOne0)"/>`
	keyInnerSVG                                        = `<mask id="ipSKey0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M22.868 24.298a9.865 9.865 0 0 1 2.63 9.588a9.926 9.926 0 0 1-7.066 7.028a9.988 9.988 0 0 1-9.638-2.615a9.863 9.863 0 0 1 .121-13.878c3.839-3.82 10.046-3.873 13.951-.121l.002-.002Z"/><path stroke-linecap="round" d="M23 24L40 7"/><path fill="#fff" d="m30.305 16.9l5.429 5.4l6.333-6.3l-5.428-5.4l-6.334 6.3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKey0)"/>`
	keyOneInnerSVG                                     = `<mask id="ipSKeyOne0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSKeyOne1)"><circle cx="15" cy="33" r="8" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m29 16l6.5 6M20 26L37 7m-2 4l7 6.5"/></g><defs><clipPath id="ipSKeyOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKeyOne0)"/>`
	keyTwoInnerSVG                                     = `<mask id="ipSKeyTwo0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSKeyTwo1)"><circle cx="15" cy="33" r="8" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m29 16l7 6m-16 4L36 8l7 6"/></g><defs><clipPath id="ipSKeyTwo1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKeyTwo0)"/>`
	keyboardInnerSVG                                   = `<mask id="ipSKeyboard0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" fill-rule="evenodd" d="M15 19a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm9-8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm9-8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm0 8a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 33h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKeyboard0)"/>`
	keyholeInnerSVG                                    = `<mask id="ipSKeyhole0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" d="M24 15a5 5 0 0 0-3 9l-1 8h8l-1-8a5 5 0 0 0-3-9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKeyhole0)"/>`
	keylineInnerSVG                                    = `<mask id="ipSKeyline0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 6h36v36H6V6Z"/><path fill="#fff" d="M36 24c0 6.627-5.373 12-12 12s-12-5.373-12-12s5.373-12 12-12s12 5.373 12 12Z"/><path d="m4 4l40 40m0-40L4 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKeyline0)"/>`
	kitchenKnifeInnerSVG                               = `<mask id="ipSKitchenKnife0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 30v10c0 6 8 6 8 0V30m0 7h-8"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M14 6a2 2 0 0 1 2-2h16.635c.319 0 .632.075.888.265C34.542 5.025 37.198 7.582 38 14c.773 6.182-1.369 12.364-2.382 14.855c-.288.71-.985 1.145-1.75 1.145H14V6Z"/><circle cx="22" cy="10" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKitchenKnife0)"/>`
	knifeForkInnerSVG                                  = `<mask id="ipSKnifeFork0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 4v40M8 5v10c0 5 6 5 6 5s6 0 6-5V5"/><path fill="#fff" d="M30 12c0-8 8-8 8-8v17h-8v-9Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 21h-8v-9c0-8 8-8 8-8v17Zm0 0v23"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKnifeFork0)"/>`
	koalaBearInnerSVG                                  = `<mask id="ipSKoalaBear0"><g fill="none"><circle cx="24" cy="26" r="15" fill="#fff" stroke="#fff" stroke-width="4"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M21 31.563c0-1.9 3-7.563 3-7.563s3 5.664 3 7.563C27 33.46 25.657 35 24 35s-3-1.539-3-3.438Z"/><circle cx="17.039" cy="23.493" r="2" fill="#000"/><circle cx="31.039" cy="23.493" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 11.927C15.621 9.524 8.495 6.093 5.35 9.306C4.014 10.418 2.986 15.45 5.727 23L10 19.98m21-8.053c1.379-2.403 8.505-5.834 11.65-2.621c1.336 1.112 2.364 6.144-.377 13.694L38 19.98"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKoalaBear0)"/>`
	kungfuInnerSVG                                     = `<mask id="ipSKungfu0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M11 17a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m20 18l8 6l-3 18m3-18l16-13"/><path stroke-linecap="round" stroke-linejoin="round" d="M28 16.8L27 8l-7 10l-4 9l-6 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSKungfu0)"/>`
	labelInnerSVG                                      = `<mask id="ipSLabel0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M9 4h30v40L24 33.429L9 44V4Z"/><path fill="#fff" d="M9 4h30v12H9z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLabel0)"/>`
	lampInnerSVG                                       = `<mask id="ipSLamp0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M14 9.5a3.5 3.5 0 1 1 7 0V21h-7V9.5Zm13 0a3.5 3.5 0 1 1 7 0V21h-7V9.5Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M18 34h12v8H18z"/><path d="M10 22a1 1 0 0 1 1-1h26a1 1 0 0 1 1 1v4a8 8 0 0 1-8 8H18a8 8 0 0 1-8-8v-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLamp0)"/>`
	landSurveyingInnerSVG                              = `<mask id="ipSLandSurveying0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 26v18m0-18l12 18M24 26L12 44m12-30v6m-5 0h10"/><path fill="#fff" d="M10 6h26v8H10z"/><path stroke-linecap="round" d="M40 8v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLandSurveying0)"/>`
	landingInnerSVG                                    = `<mask id="ipSLanding0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M5 43h38"/><path fill="#fff" d="M4 25V14.99c1.216 0 4.818 4.179 6 6.01l11 2V5l4 2l5.831 18.978L40 28c4 1 4 3.5 4 4c0 3-3.5 3-4 3c-4 0-36-10-36-10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLanding0)"/>`
	laptopInnerSVG                                     = `<mask id="ipSLaptop0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 8h32v20H8z"/><path d="M8 28L4 41h40l-4-13"/><path fill="#fff" d="M19.9 35h8.2l1.9 6H18l1.9-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLaptop0)"/>`
	laptopComputerInnerSVG                             = `<mask id="ipSLaptopComputer0"><g fill="none" stroke-width="4"><rect width="38" height="24" x="5" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 40h40"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 14h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLaptopComputer0)"/>`
	laptopOneInnerSVG                                  = `<mask id="ipSLaptopOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M8 11a3 3 0 0 1 3-3h26a3 3 0 0 1 3 3v21H8V11Z"/><path fill="#fff" d="M4 32h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLaptopOne0)"/>`
	larkOneInnerSVG                                    = `<mask id="ipSLarkOne0"><g fill="none"><g clip-path="url(#ipSLarkOne1)"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M3.494 17.72L41.678 6.321L30.364 44.59l-8.88-8.88l.041-9.234l-9.546-.27l-8.485-8.486Z"/><path fill="#fff" fill-rule="evenodd" d="M27.535 14.89a4 4 0 1 0 5.657 5.658a4 4 0 0 0-5.657-5.657Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M41.678 6.406L30.364 17.719"/></g><defs><clipPath id="ipSLarkOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLarkOne0)"/>`
	layersInnerSVG                                     = `<mask id="ipSLayers0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 11.914L24 19l20-7.086L24 5L4 11.914Z"/><path stroke-linecap="round" d="m4 20l20 7l20-7M4 28l20 7l20-7M4 36l20 7l20-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayers0)"/>`
	layoutFiveInnerSVG                                 = `<mask id="ipSLayoutFive0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 16h36"/><path stroke="#fff" stroke-linecap="round" d="M6 13v6m36-6v6"/><path stroke="#000" stroke-linecap="round" d="M17 30h25M17 16v26"/><path stroke="#fff" stroke-linecap="round" d="M14 42h6m22-15v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayoutFive0)"/>`
	layoutFourInnerSVG                                 = `<mask id="ipSLayoutFour0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 28h18m0-8h18"/><path stroke="#fff" stroke-linecap="round" d="M6 25v6m36-14v6"/><path stroke="#000" stroke-linecap="round" d="M24 42V6"/><path stroke="#fff" stroke-linecap="round" d="M21 6h6m-6 36h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayoutFour0)"/>`
	layoutOneInnerSVG                                  = `<mask id="ipSLayoutOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 16h36"/><path stroke="#fff" stroke-linecap="round" d="M6 13v6m36-5v6"/><path stroke="#000" stroke-linecap="round" d="M32 16v26"/><path stroke="#fff" stroke-linecap="round" d="M29 42h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayoutOne0)"/>`
	layoutThreeInnerSVG                                = `<mask id="ipSLayoutThree0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 22h36m-13 0V6"/><path stroke="#fff" stroke-linecap="round" d="M26 6h6M6 19v6m36-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayoutThree0)"/>`
	layoutTwoInnerSVG                                  = `<mask id="ipSLayoutTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 24h36"/><path stroke="#fff" stroke-linecap="round" d="M6 21v6m36-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLayoutTwo0)"/>`
	leavesOneInnerSVG                                  = `<mask id="ipSLeavesOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M37 23.879C37 30.573 31.18 36 24 36s-13-5.427-13-12.121C11 17.184 24 4 24 4s13 13.184 13 19.879Z"/><path stroke="#000" stroke-linecap="round" d="M24 4v32"/><path stroke="#fff" stroke-linecap="round" d="M24 36v8"/><path stroke="#fff" d="M37 23.879C37 30.573 31.18 36 24 36s-13-5.427-13-12.12m26-.001C37 17.184 24 4 24 4S11 17.184 11 23.879"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeavesOne0)"/>`
	leavesTwoInnerSVG                                  = `<mask id="ipSLeavesTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M21 17c8.385-2.12 17.665-8.76 21-12c0 15-3.801 23.472-6 26c-10 11.5-20.935 6.16-23 2c-4.855-9.777 2.07-14.5 8-16Z"/><path d="M6 43c.412-2 2.388-6.6 7-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeavesTwo0)"/>`
	ledDiodeInnerSVG                                   = `<mask id="ipSLedDiode0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 24a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2v6H6v-6Z"/><path stroke="#fff" d="M19 30v14m10-14v14"/><path fill="#fff" stroke="#fff" d="M24 4c-7.732 0-14 6.268-14 14v4h28v-4c0-7.732-6.268-14-14-14Z"/><circle cx="24" cy="13" r="3" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLedDiode0)"/>`
	leftBarInnerSVG                                    = `<mask id="ipSLeftBar0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M16 6v36"/><path stroke="#fff" stroke-linecap="round" d="M13 42h6M13 6h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftBar0)"/>`
	leftCInnerSVG                                      = `<mask id="ipSLeftC0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m27 33l-9-9l9-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftC0)"/>`
	leftExpandInnerSVG                                 = `<mask id="ipSLeftExpand0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="28" height="36" x="6" y="6" fill="#fff" rx="2"/><path d="M42 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftExpand0)"/>`
	leftOneInnerSVG                                    = `<mask id="ipSLeftOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M30 36L18 24l12-12v24Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftOne0)"/>`
	leftSquareInnerSVG                                 = `<mask id="ipSLeftSquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M29 34L19 24l10-10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftSquare0)"/>`
	leftTwoInnerSVG                                    = `<mask id="ipSLeftTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 5L6 24l18 19V31h18V17H24V5Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeftTwo0)"/>`
	lemonInnerSVG                                      = `<mask id="ipSLemon0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 26c0-6.408-4.383-12.811-9-14.473L24 8l-3 3.527c-4.617 1.662-9 8.065-9 14.473c0 6.408 4.383 12.811 9 14.473c.954.343 1.96 3.527 3 3.527s2.046-3.184 3-3.527c4.617-1.662 9-8.065 9-14.473Z"/><path d="M35.142 4.232c1.011.13 1.586 1.124 1.192 2.065c-.534 1.275-1.505 2.957-3.138 3.9c-1.632.942-3.575.942-4.946.767c-1.011-.13-1.586-1.124-1.192-2.065c.534-1.274 1.506-2.956 3.138-3.899c1.633-.943 3.575-.943 4.946-.768Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLemon0)"/>`
	lensAlignmentInnerSVG                              = `<mask id="ipSLensAlignment0"><g fill="none"><path fill="#fff" d="M14 10a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 10a4 4 0 0 1-4 4m4-4a4 4 0 1 0-4 4m4-4h6m-10 4v6"/><path fill="#fff" d="M14 38a4 4 0 1 0-8 0a4 4 0 0 0 8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 38a4 4 0 0 0-4-4m4 4a4 4 0 1 1-4-4m4 4h6m-10-4v-6"/><path fill="#fff" d="M34 38a4 4 0 1 1 8 0a4 4 0 0 1-8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M34 38a4 4 0 0 1 4-4m-4 4a4 4 0 1 0 4-4m-4 4h-6m10-4v-6"/><path fill="#fff" d="M34 10a4 4 0 1 0 8 0a4 4 0 0 0-8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M34 10a4 4 0 0 0 4 4m-4-4a4 4 0 1 1 4 4m-4-4h-6m10 4v6m-21 4h14m-7 7V17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLensAlignment0)"/>`
	leoInnerSVG                                        = `<mask id="ipSLeo0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="13" cy="27" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M13 21c0-5.5 2-16 11-16c4.5 0 12.72 2.332 9.536 15.561c-.28 1.166-1.382 3.414-1.382 3.414l-1.604 3.602c-1.659 3.341-3.802 11.877 2.986 15.034c2.058.957 6.481.339 7.464-4.01"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLeo0)"/>`
	levelInnerSVG                                      = `<mask id="ipSLevel0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 42L4 18.5L9.695 6h28.61L44 18.5L24 42Z"/><path stroke="#000" d="m32 18l-8 9l-8-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLevel0)"/>`
	lightHouseInnerSVG                                 = `<mask id="ipSLightHouse0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M6 44h36M17 20h14"/><path fill="#fff" stroke="#fff" d="M19 20h10l3 24H16l3-24Z"/><path stroke="#fff" stroke-linecap="round" d="m19 9l2 11h6l2-11"/><path stroke="#fff" stroke-linecap="round" d="m32 12l-3-3l-5-5l-5 5l-3 3m21-5l3-3M11 7L8 4m29 15l3 3m-29-3l-3 3m30-9h4m-32 0H6"/><path stroke="#000" stroke-linecap="round" d="M18 28h12m-13 8h14"/><path stroke="#fff" d="m29 20l3 24M19 20l-3 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLightHouse0)"/>`
	lightMemberInnerSVG                                = `<mask id="ipSLightMember0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M35.056 15L18.463 7.665a2 2 0 0 0-2.447.682L11.359 15"/><path fill="#fff" stroke="#fff" d="M43 15H5a1 1 0 0 0-1 1v24a1 1 0 0 0 1 1h38a1 1 0 0 0 1-1V16a1 1 0 0 0-1-1Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m19 23l5.103 10L29 23"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLightMember0)"/>`
	lightningInnerSVG                                  = `<mask id="ipSLightning0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19 4h18L26 18h15L17 44l5-19H8L19 4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLightning0)"/>`
	likeInnerSVG                                       = `<mask id="ipSLike0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15 8C8.925 8 4 12.925 4 19c0 11 13 21 20 23.326C31 40 44 30 44 19c0-6.075-4.925-11-11-11c-3.72 0-7.01 1.847-9 4.674A10.987 10.987 0 0 0 15 8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLike0)"/>`
	lincolnInnerSVG                                    = `<mask id="ipSLincoln0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M30.19 4H17.81a2 2 0 0 0-1.99 1.801l-1.8 18a2.005 2.005 0 0 0 0 .398l1.8 18A2 2 0 0 0 17.81 44h12.38a2 2 0 0 0 1.99-1.801l1.8-18a2.005 2.005 0 0 0 0-.398l-1.8-18A2 2 0 0 0 30.19 4Z"/><path stroke="#000" stroke-linecap="round" d="M14 24h20M24 4v40"/><path stroke="#fff" stroke-linecap="round" d="M20 4h8m-8 40h8M15 14l-.98 9.801a2.005 2.005 0 0 0 0 .398L15 34m18-20l.98 9.801c.013.132.013.266 0 .398L33 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLincoln0)"/>`
	lipGlossInnerSVG                                   = `<mask id="ipSLipGloss0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M24 12H8s0 4 1 14s3 18 3 18h8s2-8 3-18s1-14 1-14Zm18 22H28s0 2 1 5s2.5 5 2.5 5h7s1.5-2 2.5-5s1-5 1-5Z"/><path d="M35 34V13"/><path fill="#fff" stroke-linejoin="round" d="M31 7h8l-2 6h-4l-2-6ZM11 6h10v6H11z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLipGloss0)"/>`
	lipTattooInnerSVG                                  = `<mask id="ipSLipTattoo0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M25 19.89c-1.5-2.52-5.5-2.52-7 0c-1.115 1.874-5 4.61-6 5.053C13.667 27.295 19.5 32 25 32c6.5 0 11.167-4.704 13-7.057c-1-.443-3.164-2.123-5.5-5.053c-2-2.508-6-2.508-7.5 0Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M12 25c3.79.755 14.296 1.811 26 0"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M44 24c0 11.046-8.954 20-20 20S4 35.046 4 24S12.954 4 24 4"/><path stroke="#fff" d="m39 8.472l.343 1.056h1.11l-.898.652l.343 1.056l-.898-.652l-.898.652l.343-1.056l-.898-.652h1.11L39 8.472Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M35 22.656c1.294 1.248 2.374 2.01 3 2.287A20.974 20.974 0 0 1 33.763 29m-17.665-7c-1.543 1.374-3.442 2.652-4.098 2.943c.941 1.329 3.211 3.407 6 4.965"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLipTattoo0)"/>`
	lipstickInnerSVG                                   = `<mask id="ipSLipstick0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M29 24h12v20H29zM7 24h14v20H7z"/><path fill="#fff" d="M10 11.454V24h8V4c-6.5 0-8 5.636-8 7.454Z"/><path d="M7 32h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLipstick0)"/>`
	lipstickOneInnerSVG                                = `<mask id="ipSLipstickOne0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m39.435 5.323l1.414 1.414a4 4 0 0 1 0 5.657l-7.071 7.07l-4.243-4.242l9.9-9.9Zm-11.314 8.485l7.071 7.071l-11.314 11.314l-7.07-7.071z"/><path d="m15.394 23.707l9.9 9.9l-9.9 9.899l-9.9-9.9z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLipstickOne0)"/>`
	liqueurInnerSVG                                    = `<mask id="ipSLiqueur0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M23 31L7.41 13h31.177L22.999 31Z"/><path stroke="#fff" stroke-linejoin="round" d="M23 32v10"/><path stroke="#fff" d="M17 44h12"/><path stroke="#000" stroke-linejoin="round" d="M16 23h14"/><path stroke="#fff" stroke-linejoin="round" d="M35 18h3a6 6 0 1 0-5.917-5M11 17.144L19.534 27M35 17.143l-8.79 10.15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLiqueur0)"/>`
	listAlphabetInnerSVG                               = `<mask id="ipSListAlphabet0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 9h22M20 19h22M20 29h22M20 39h22M6 29h6L6 39h6"/><path fill="#fff" d="M11 9H7l-.7 7h5.4L11 9Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 19l.3-3m5.7 3l-.3-3m0 0L11 9H7l-.7 7m5.4 0H6.3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListAlphabet0)"/>`
	listBottomInnerSVG                                 = `<mask id="ipSListBottom0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 42a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M8 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke-linecap="round" d="M20 24h24M20 38h24M20 10h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListBottom0)"/>`
	listCheckboxInnerSVG                               = `<mask id="ipSListCheckbox0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M20 24h24h-24Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 24h24"/><path fill="#fff" fill-rule="evenodd" d="M20 38h24h-24Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 38h24"/><path fill="#fff" fill-rule="evenodd" d="M20 10h24h-24Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 10h24"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 34h8v8H4zm0-14h8v8H4zM4 6h8v8H4z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListCheckbox0)"/>`
	listFailInnerSVG                                   = `<mask id="ipSListFail0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M20 10h24M20 24h24M20 38h24M5 7l6 6m0-6l-6 6"/><circle cx="8" cy="24" r="4" fill="#fff"/><circle cx="8" cy="38" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListFail0)"/>`
	listMiddleInnerSVG                                 = `<mask id="ipSListMiddle0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M8 12a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 28a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke-linecap="round" d="M20 24h24M20 38h24M20 10h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListMiddle0)"/>`
	listOneInnerSVG                                    = `<mask id="ipSListOne0"><g fill="#fff" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M18 6h16v6H18V6Zm0 15h20v6H18v-6Zm0 15h26v6H18v-6Z"/><circle cx="8" cy="9" r="2"/><circle cx="8" cy="24" r="2"/><circle cx="8" cy="39" r="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListOne0)"/>`
	listSuccessInnerSVG                                = `<mask id="ipSListSuccess0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M20 10h24M20 24h24M20 38h24"/><circle cx="8" cy="24" r="4" fill="#fff"/><circle cx="8" cy="38" r="4" fill="#fff"/><path d="m4 10l3 3l6-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListSuccess0)"/>`
	listTopInnerSVG                                    = `<mask id="ipSListTop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 14a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M8 26a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke-linecap="round" d="M20 24h24M20 38h24M20 10h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSListTop0)"/>`
	listTwoInnerSVG                                    = `<mask id="svgIDa"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M9 42a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0-28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 14a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M21 24h22M21 38h22M21 10h22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#svgIDa)"/>`
	loadingThreeInnerSVG                               = `<mask id="ipSLoadingThree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" d="M24 12v3m8.485.515l-2.121 2.121M36 24h-3m-.515 8.485l-2.121-2.121M24 36v-3m-8.485-.515l2.121-2.121M12 24h3m.515-8.485l2.121 2.121"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLoadingThree0)"/>`
	localInnerSVG                                      = `<mask id="ipSLocal0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M9.858 32.757C6.238 33.843 4 35.343 4 37c0 3.314 8.954 6 20 6s20-2.686 20-6c0-1.657-2.239-3.157-5.858-4.243"/><path fill="#fff" stroke="#fff" d="M24 35s13-8.496 13-18.318C37 9.678 31.18 4 24 4S11 9.678 11 16.682C11 26.504 24 35 24 35Z"/><path fill="#000" stroke="#000" d="M24 22a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLocal0)"/>`
	localPinInnerSVG                                   = `<mask id="ipSLocalPin0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 20a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/><path stroke-linecap="round" d="M24 20v18m-8-6h-4L4 44h40l-8-12h-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLocalPin0)"/>`
	localTwoInnerSVG                                   = `<mask id="ipSLocalTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44s15-12 15-25c0-8.284-6.716-15-15-15c-8.284 0-15 6.716-15 15c0 13 15 25 15 25Z"/><path fill="#000" stroke="#000" d="M24 25a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLocalTwo0)"/>`
	lockInnerSVG                                       = `<mask id="ipSLock0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="22" x="6" y="22" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M14 22v-8c0-5.523 4.477-10 10-10s10 4.477 10 10v8"/><path stroke="#000" stroke-linecap="round" d="M24 30v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLock0)"/>`
	lockOneInnerSVG                                    = `<mask id="ipSLockOne0"><g fill="none" stroke-width="4"><circle cx="24" cy="30" r="14" fill="#fff" stroke="#fff"/><path stroke="#fff" stroke-linejoin="round" d="M31 18v-7a7 7 0 1 0-14 0v7"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 26v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLockOne0)"/>`
	lockingComputerInnerSVG                            = `<mask id="ipSLockingComputer0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 6H9a3 3 0 0 0-3 3v22a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3v-4m-18 7v8"/><rect width="12" height="8" x="30" y="12" fill="#fff" rx="3"/><path fill="#fff" d="M36 6a3 3 0 0 1 3 3v3h-6V9a3 3 0 0 1 3-3Z"/><path stroke-linecap="round" d="M14 42h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLockingComputer0)"/>`
	lockingLaptopInnerSVG                              = `<mask id="ipSLockingLaptop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 9H11a3 3 0 0 0-3 3v21h32v-5"/><path fill="#fff" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><rect width="12" height="8" x="30" y="13" fill="#fff" rx="3"/><path fill="#fff" d="M36 7a3 3 0 0 1 3 3v3h-6v-3a3 3 0 0 1 3-3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLockingLaptop0)"/>`
	lockingPictureInnerSVG                             = `<mask id="ipSLockingPicture0"><g fill="none"><path fill="#fff" d="M44 26a2 2 0 1 0-4 0h4ZM24 8a2 2 0 1 0 0-4v4Zm15 32H9v4h30v-4ZM8 39V9H4v30h4Zm32-13v13h4V26h-4ZM9 8h15V4H9v4Zm0 32a1 1 0 0 1-1-1H4a5 5 0 0 0 5 5v-4Zm30 4a5 5 0 0 0 5-5h-4a1 1 0 0 1-1 1v4ZM8 9a1 1 0 0 1 1-1V4a5 5 0 0 0-5 5h4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 35l10.693-9.802a2 2 0 0 1 2.653-.044L32 36m-4-5l4.773-4.773a2 2 0 0 1 2.615-.186L42 31"/><rect width="12" height="8" x="30" y="12" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path fill="#fff" d="M36 6a3 3 0 0 1 3 3v3h-6V9a3 3 0 0 1 3-3Z"/><path fill="#fff" d="M39 12v2a2 2 0 0 0 2-2h-2Zm-6 0h-2a2 2 0 0 0 2 2v-2Zm4-3v3h4V9h-4Zm2 1h-6v4h6v-4Zm-4 2V9h-4v3h4Zm0-3a1 1 0 0 1 1-1V4a5 5 0 0 0-5 5h4Zm6 0a5 5 0 0 0-5-5v4a1 1 0 0 1 1 1h4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLockingPicture0)"/>`
	lockingWebInnerSVG                                 = `<mask id="ipSLockingWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v12.059"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><rect width="12" height="8" x="32" y="33" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M38 27a3 3 0 0 1 3 3v3h-6v-3a3 3 0 0 1 3-3Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLockingWeb0)"/>`
	logInnerSVG                                        = `<mask id="ipSLog0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M13 10h28v34H13z"/><path stroke="#fff" stroke-linecap="round" d="M35 10V4H8a1 1 0 0 0-1 1v33h6"/><path stroke="#000" stroke-linecap="round" d="M21 22h12m-12 8h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLog0)"/>`
	lotionInnerSVG                                     = `<mask id="ipSLotion0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 37h14v7H17z"/><path d="M36 4H12s0 8 1 17s4 16 4 16h14s3-7 4-16s1-17 1-17Z"/><path d="M20.643 21.889c1.431-1.88 2.535-4.479 3.131-5.889c1.044 1.41 3.31 4.948 4.026 6.829c.894 2.35-1.342 5.171-4.026 5.171c-2.684 0-4.92-3.76-3.131-6.111ZM13 10h22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLotion0)"/>`
	lotusInnerSVG                                      = `<mask id="ipSLotus0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M19 16c.196-2.143 1.235-7.143 5-10c1.372 1.667 4.53 6 5 10"/><path fill="#fff" d="M23.752 42C15.282 40.545-.3 31.31 5.12 6c7.152 1.636 20.892 11.127 18.633 36Z"/><path fill="#fff" d="M24.248 42C32.718 40.545 48.3 31.31 42.88 6c-7.152 1.636-20.892 11.127-18.633 36Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLotus0)"/>`
	loudlyCryingFaceInnerSVG                           = `<mask id="ipSLoudlyCryingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 35s-2-4-7-4s-7 4-7 4m18-17l-7-1m5 1v9M20 17l-7 1m2 0v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLoudlyCryingFace0)"/>`
	loudlyCryingFaceWhitOpenMouthInnerSVG              = `<mask id="ipSLoudlyCryingFaceWhitOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm11-11l-7-1m5 1v9M20 17l-7 1m2 0v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLoudlyCryingFaceWhitOpenMouth0)"/>`
	loveAndHelpInnerSVG                                = `<mask id="ipSLoveAndHelp0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M15 7C8.925 7 4 11.925 4 18c0 11 13 21 20 23.326C31 39 44 29 44 18c0-6.075-4.925-11-11-11c-3.72 0-7.01 1.847-9 4.674A10.987 10.987 0 0 0 15 7Z"/><path stroke="#000" d="M18 24h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLoveAndHelp0)"/>`
	luggageInnerSVG                                    = `<mask id="ipSLuggage0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="32" height="26" x="8" y="14" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="2"/><path stroke="#000" d="M20 23v8"/><path stroke="#fff" stroke-linejoin="round" d="M15 40v4m18-4v4"/><path stroke="#000" d="M28 23v8"/><path stroke="#fff" stroke-linejoin="round" d="M19 4h10m-5 0v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSLuggage0)"/>`
	macFinderInnerSVG                                  = `<mask id="ipSMacFinder0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 38V10a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2Z"/><path stroke="#000" d="M25 8s-5 10-4 17h6l1 15"/><path stroke="#fff" d="M34 40H22m8-32H18"/><path stroke="#000" d="M34 16v2m-20-2v2m-1 11s4.19 3 11 3s11-3 11-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMacFinder0)"/>`
	macadamiaNutInnerSVG                               = `<mask id="ipSMacadamiaNut0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 43c10.493 0 19-8.059 19-18h-8l-3 3l-3-3H5c0 9.941 8.507 18 19 18Z"/><path d="M40.945 25c.124-.815 0-1.65 0-2.5c0-9.113-7.363-17.5-16.447-17.5c-3.822 0-8.337 1.309-11.13 3.504A4.99 4.99 0 0 1 14.033 11a4.986 4.986 0 0 1-6.004 4.895c-.63 1.75-.974 4.637-.974 6.605c0 .85-.124 1.685 0 2.5M6 31h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMacadamiaNut0)"/>`
	magnetInnerSVG                                     = `<mask id="ipSMagnet0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 10v16c0 9.941 8.059 18 18 18s18-8.059 18-18V10m-28 0v16c0 5.523 4.477 10 10 10s10-4.477 10-10V10"/><path fill="#fff" d="M14 4H6v6h8V4Zm20 0h8v6h-8V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMagnet0)"/>`
	mailInnerSVG                                       = `<mask id="ipSMail0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 39h40V9H4v30Z"/><path stroke="#000" stroke-linecap="round" d="m4 9l20 15L44 9"/><path stroke="#fff" stroke-linecap="round" d="M24 9H4v15m40 0V9H24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMail0)"/>`
	mailDownloadInnerSVG                               = `<mask id="ipSMailDownload0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 18H4v24h40V18h-6"/><path fill="#fff" d="M38 6H10v16.5L24 33l14-10.5V6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 22.5L24 33l14-10.5m-28 0V6h28v16.5m-28 0L4 18m34 4.5l6-4.5"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m19 19l5 5m0 0l5-5m-5 5V13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMailDownload0)"/>`
	mailEditInnerSVG                                   = `<mask id="ipSMailEdit0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 24V9H4v30h20"/><path fill="#fff" d="m35 39l8-7l-4-4l-8 7v4h4Z"/><path d="m4 9l20 15L44 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMailEdit0)"/>`
	mailOpenInnerSVG                                   = `<mask id="ipSMailOpen0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 18v21.818C44 41.023 43.105 42 42 42H6c-1.105 0-2-.977-2-2.182V18l20 13l20-13Z"/><path stroke-linecap="round" d="M4 17.784L24 4l20 13.784"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMailOpen0)"/>`
	mailReviewInnerSVG                                 = `<mask id="ipSMailReview0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M44 24v16.818C44 42.023 43.105 43 42 43H6c-1.105 0-2-.977-2-2.182V24l20 13l20-13Z"/><path stroke="#fff" stroke-linecap="round" d="m4 23.784l10-6.892m30 6.892l-10-6.892"/><path fill="#fff" stroke="#fff" d="M34 5H14v24.415a2 2 0 0 0 .91 1.677l8 5.2a2 2 0 0 0 2.18 0l8-5.2a2 2 0 0 0 .91-1.677V5Z"/><path stroke="#000" stroke-linecap="round" d="M20 13h4m-4 6h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMailReview0)"/>`
	mailUnpackingInnerSVG                              = `<mask id="ipSMailUnpacking0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M44 18v21.818C44 41.023 43.105 42 42 42H6c-1.105 0-2-.977-2-2.182V18l20 16l20-16Z"/><path stroke-linecap="round" d="M4 17.784L24 4l20 13.784"/><path fill="#fff" d="M34 18H14v8l10 8l10-8v-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMailUnpacking0)"/>`
	maillOneInnerSVG                                   = `<mask id="ipSMaillOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M36 16H12v16h24V16Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m36 16l-12 8l-12-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaillOne0)"/>`
	makeupsInnerSVG                                    = `<mask id="ipSMakeups0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M44 24c0 11.046-8.954 20-20 20S4 35.046 4 24S12.954 4 24 4"/><path d="m37.61 9.472l.255.786h.827l-.669.486l.255.786l-.668-.486l-.669.486l.255-.786l-.668-.486h.826l.256-.786Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M16 31s2 4 8 4s8-4 8-4"/><circle cx="17" cy="22" r="3" fill="#fff"/><circle cx="31" cy="22" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMakeups0)"/>`
	maleInnerSVG                                       = `<mask id="ipSMale0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M41.952 15.048v-9h-9"/><path fill="#fff" d="M10.414 38c5.467 5.468 14.331 5.468 19.799 0a13.956 13.956 0 0 0 4.1-9.899a13.96 13.96 0 0 0-4.1-9.9c-5.468-5.467-14.332-5.467-19.8 0c-5.467 5.468-5.467 14.332 0 19.8Z"/><path stroke-linecap="round" d="m30 18l9.952-9.952"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMale0)"/>`
	mallBagInnerSVG                                    = `<mask id="ipSMallBag0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 12.6V41a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V12.6H6Z"/><path stroke="#fff" stroke-linecap="round" d="M42 12.6L36.333 5H11.667L6 12.6v0"/><path stroke="#000" stroke-linecap="round" d="M31.555 19.2c0 4.198-3.382 7.6-7.555 7.6s-7.556-3.402-7.556-7.6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMallBag0)"/>`
	manualGearInnerSVG                                 = `<mask id="ipSManualGear0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 12v12H8m16-12v24M8 12v24"/><path fill="#fff" d="M44 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0ZM28 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0ZM12 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm16 32a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm-16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm28 4a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSManualGear0)"/>`
	manyToManyInnerSVG                                 = `<mask id="ipSManyToMany0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 7H6a2 2 0 0 0-2 2v30a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M30 30V18l8 12V18M10 30V18l8 12V18"/><path stroke="#000" stroke-linecap="round" d="M24 20v1m0 6v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSManyToMany0)"/>`
	mapDistanceInnerSVG                                = `<mask id="ipSMapDistance0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39.3 6H8.7A2.7 2.7 0 0 0 6 8.7v30.6A2.7 2.7 0 0 0 8.7 42h30.6a2.7 2.7 0 0 0 2.7-2.7V8.7A2.7 2.7 0 0 0 39.3 6Z"/><path stroke="#000" stroke-linecap="round" d="m36 27l-7 3m-8 3l-7 3"/><path fill="#000" stroke="#000" d="M16 29c2-2.895 3-4.895 3-6a3 3 0 1 0-6 0c0 1.105 1 3.105 3 6Zm16-7c2-2.895 3-4.895 3-6a3 3 0 1 0-6 0c0 1.105 1 3.105 3 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMapDistance0)"/>`
	mapDrawInnerSVG                                    = `<mask id="ipSMapDraw0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M17 12L4 6v30l13 6l14-6l13 6V12L31 6l-14 6Z"/><path stroke="#000" d="M31 6v30M17 12v30"/><path stroke="#fff" d="m10.5 9l6.5 3l14-6l6.5 3m-27 30l6.5 3l14-6l6.5 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMapDraw0)"/>`
	mapRoadInnerSVG                                    = `<mask id="ipSMapRoad0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" d="m33 12l4 24M16 12l-4 24m12-24v4m0 6v4m0 6v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMapRoad0)"/>`
	mapRoadTwoInnerSVG                                 = `<mask id="ipSMapRoadTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 4H6a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" d="m10 22l28-10"/><path stroke="#000" stroke-dasharray="2 6" d="m10 29l28-10"/><path stroke="#000" d="m10 36l28-10m-22-7l-3-8m24 25l-3-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMapRoadTwo0)"/>`
	mapTwoInnerSVG                                     = `<mask id="ipSMapTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 10H4v30h40V10Z"/><path stroke="#000" stroke-linecap="round" d="m10 16l28 18m0-18L24 35m0-19L10 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMapTwo0)"/>`
	marginInnerSVG                                     = `<mask id="ipSMargin0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M34 6v36M14 6v36"/><path stroke="#fff" stroke-linecap="round" d="M31 42h6m-26 0h6M11 6h6m13 0h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMargin0)"/>`
	marginOneInnerSVG                                  = `<mask id="ipSMarginOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 34h36M6 14h36"/><path stroke="#fff" stroke-linecap="round" d="M6 11v6m0 14v6m36-6v6m0-26v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMarginOne0)"/>`
	markInnerSVG                                       = `<mask id="ipSMark0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M11 6v36"/><path fill="#fff" d="M11 9h14l7 3h7a2 2 0 0 1 2 2v17a2 2 0 0 1-2 2h-7l-7-3H11V9Z"/><path stroke-linecap="round" d="M7 42h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMark0)"/>`
	marketAnalysisInnerSVG                             = `<mask id="ipSMarketAnalysis0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 11a3 3 0 0 0-3-3H7a3 3 0 0 0-3 3v9h40v-9Z"/><path stroke="#fff" d="m4.112 39.03l12.176-12.3l6.58 6.3L30.91 26l4.48 4.368"/><path stroke="#fff" d="M44 18v19a3 3 0 0 1-3 3H12"/><path stroke="#000" d="M19.112 14h18M11.11 14h2"/><path stroke="#fff" d="M4 18v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMarketAnalysis0)"/>`
	mascaraInnerSVG                                    = `<mask id="ipSMascara0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M28 16h12v28H28z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M8 28h12v16H8z"/><path stroke="#fff" stroke-linejoin="round" d="M14 4v24"/><path stroke="#000" d="M20 36H8"/><path stroke="#fff" stroke-linejoin="round" d="M20 32v8M8 32v8M18 9h-8m10 6H8m10 6h-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMascara0)"/>`
	maskInnerSVG                                       = `<mask id="ipSMask0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M14 14h20c5.523 0 10 4.477 10 10v3c0 7.18-5.82 13-13 13H17C9.82 40 4 34.18 4 27v-3c0-5.523 4.477-10 10-10Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M18 27h12m-6-6v12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 25.042V12.014A4.168 4.168 0 0 1 11.047 9c1.6 1.527 2.74 3.194 3.424 5M44 25.042V12.766A4.478 4.478 0 0 0 36 10a111.149 111.149 0 0 0-3 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMask0)"/>`
	maskOneInnerSVG                                    = `<mask id="ipSMaskOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M7.366 16.344A21.877 21.877 0 0 0 6 24c0 2.712.486 5.297 1.366 7.655m3.906 6.487c1.658 1.842 3.638 3.327 5.838 4.34a16.403 16.403 0 0 0 13.78 0c2.2-1.013 4.18-2.498 5.838-4.34m3.906-6.487A21.877 21.877 0 0 0 42 24a21.88 21.88 0 0 0-1.366-7.656m-3.906-6.486C35.07 8.015 33.09 6.53 30.89 5.518A16.403 16.403 0 0 0 24 4c-4.97 0-9.47 2.238-12.728 5.858"/><path fill="#fff" d="M18 23a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm12 0a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm-6 12c2.761 0 5-1.343 5-3s-2.239-3-5-3s-5 1.343-5 3s2.239 3 5 3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaskOne0)"/>`
	maslowPyramidsInnerSVG                             = `<mask id="ipSMaslowPyramids0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSMaslowPyramids1)"><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" d="m24 4l-9 15.98h18L24 4Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M24 19.98L24.008 44"/><path stroke-linecap="round" stroke-linejoin="round" d="M11.347 25.975L2 42h15.005"/><path stroke-linecap="round" d="M9.1 30.995h7.904"/><path stroke-linecap="round" stroke-linejoin="round" d="M36.748 25.975L46.094 42H31"/><path stroke-linecap="round" d="M39.094 30.995H31.1"/></g><defs><clipPath id="ipSMaslowPyramids1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaslowPyramids0)"/>`
	massageChairInnerSVG                               = `<mask id="ipSMassageChair0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="38" x="5" y="5" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M18 24v-8.348C18 14.435 19.2 12 24 12s6 2.435 6 3.652V24m-14 0v6h16v-6"/><path stroke="#000" d="M12 20v4h24v-4M18 36h12m-6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMassageChair0)"/>`
	massageChairOneInnerSVG                            = `<mask id="ipSMassageChairOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M15 28V15.652C15 13 18 10 24 10s9 3 9 5.652V28"/><path fill="#fff" d="M12 34v-6h24v6H12Z"/><path d="M20 4h8M8 16v12h32V16M17 43h14m-7-9v9m0-39v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMassageChairOne0)"/>`
	massageTableInnerSVG                               = `<mask id="ipSMassageTable0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 17a2 2 0 0 1 2-2h26a2 2 0 0 1 2 2v6H14v-6Z"/><path stroke-linecap="round" d="M26 23L14 37m18-14l12 14M14 23H6m33 8H19M6 13v10m8 0v17m30-17v17M9 14l-6-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMassageTable0)"/>`
	masterInnerSVG                                     = `<mask id="ipSMaster0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 38V6a2 2 0 0 0-2-2H12a2 2 0 0 0-2 2v32"/><rect width="28" height="12" x="10" y="32" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="6"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m20 16l4-4l4 4l4-4l-3 11H19l-3-11l4 4Z"/><circle cx="32" cy="38" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaster0)"/>`
	materialInnerSVG                                   = `<mask id="ipSMaterial0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 36c6.627 0 12-5.373 12-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaterial0)"/>`
	materialTwoInnerSVG                                = `<mask id="ipSMaterialTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 36c6.627 0 12-5.373 12-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMaterialTwo0)"/>`
	meInnerSVG                                         = `<mask id="ipSMe0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z" clip-rule="evenodd"/><path fill="#fff" d="M24 23a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" d="M10.022 38.332C10.366 33.121 14.702 29 20 29h8c5.291 0 9.623 4.11 9.977 9.311"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMe0)"/>`
	measuringCupInnerSVG                               = `<mask id="ipSMeasuringCup0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M36 6h8l-1.936 14H36"/><path fill="#fff" stroke="#fff" d="M9 6h27v34a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2l-.001-23.5c0-.944-.444-1.828-1.16-2.443C5.148 11.75-.591 6 8.999 6Z"/><path stroke="#000" d="M26 15h4m-4 8h4m-4 8h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMeasuringCup0)"/>`
	medalOneInnerSVG                                   = `<mask id="ipSMedalOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m6 6l10 12M42 6L32 18M31 4l-5 12M17 4l5 12"/><circle cx="24" cy="30" r="14" fill="#fff" stroke="#fff"/><circle cx="24" cy="30" r="7" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedalOne0)"/>`
	medicalBoxInnerSVG                                 = `<mask id="ipSMedicalBox0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 17H7a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h34a2 2 0 0 0 2-2V19a2 2 0 0 0-2-2ZM34 7H14v10h20V7Z"/><path stroke="#000" stroke-linecap="round" d="M19 29h10m-5-5v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicalBox0)"/>`
	medicalFilesInnerSVG                               = `<mask id="ipSMedicalFiles0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M23 42H9a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v11.5"/><path fill="#fff" stroke-linejoin="round" d="M36.636 27C39.046 27 41 28.88 41 31.2c0 3.02-2.91 5.6-4.364 7c-.97.933-2.181 1.867-3.636 2.8c-1.454-.933-2.667-1.867-3.636-2.8c-1.455-1.4-4.364-3.98-4.364-7c0-2.32 1.954-4.2 4.364-4.2c1.517 0 2.854.746 3.636 1.878A4.406 4.406 0 0 1 36.636 27Z"/><path stroke-linecap="round" d="M15 14h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicalFiles0)"/>`
	medicalMarkInnerSVG                                = `<mask id="ipSMedicalMark0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M16 15a3 3 0 0 1 3-3h18a3 3 0 0 1 3 3v18a3 3 0 0 1-3 3H19a3 3 0 0 1-3-3V15Z"/><path stroke="#fff" stroke-linecap="round" d="M8 4v40m0-25h8M8 29h8"/><path stroke="#000" stroke-linecap="round" d="M22 24h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicalMark0)"/>`
	medicationTimeInnerSVG                             = `<mask id="ipSMedicationTime0"><g fill="none" stroke-width="4"><rect width="24" height="10" x="9" y="5" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M21 5v8m-6-8v8m12-8v8"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M27 40H8a2 2 0 0 1-2-2V17a2 2 0 0 1 2-2h26a2 2 0 0 1 2 2v9m-2 6v4h4"/><circle cx="35" cy="35" r="9" stroke="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M13 5h16M13 15h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicationTime0)"/>`
	medicineBottleInnerSVG                             = `<mask id="ipSMedicineBottle0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M34 10H14a2 2 0 0 0-2 2v30a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" d="M12 18h24"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M12 15v6m24-6v6"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M32 4H16v6h16V4Z"/><path stroke="#000" stroke-linecap="round" d="M20 31h8m-4-4v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicineBottle0)"/>`
	medicineBottleOneInnerSVG                          = `<mask id="ipSMedicineBottleOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M13 7a3 3 0 0 1 3-3h16a3 3 0 1 1 0 6H16a3 3 0 0 1-3-3Zm.1 10.12A3 3 0 0 1 15.437 16h17.124a3 3 0 0 1 2.339 1.12l4.438 5.523a3 3 0 0 1 .661 1.88V41a3 3 0 0 1-3 3H11a3 3 0 0 1-3-3V24.523a3 3 0 0 1 .661-1.88l4.438-5.522Z"/><path stroke="#000" stroke-linecap="round" d="M18 30h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicineBottleOne0)"/>`
	medicineChestInnerSVG                              = `<mask id="ipSMedicineChest0"><g fill="none"><rect width="38" height="26" x="5" y="16" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path fill="#fff" d="M19 8h10V4H19v4Zm11 1v7h4V9h-4Zm-12 7V9h-4v7h4Zm11-8a1 1 0 0 1 1 1h4a5 5 0 0 0-5-5v4ZM19 4a5 5 0 0 0-5 5h4a1 1 0 0 1 1-1V4Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 29h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMedicineChest0)"/>`
	memoryCardInnerSVG                                 = `<mask id="ipSMemoryCard0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40 40H8a2 2 0 0 1-2-2V19.106a2 2 0 0 1 .336-1.11l6.07-9.105A2 2 0 0 1 14.07 8H40a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2ZM18 16V8m6 8V8m6 8V8m6 8V8"/><path fill="#fff" d="M15 28h18v12H15V28Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMemoryCard0)"/>`
	memoryCardOneInnerSVG                              = `<mask id="ipSMemoryCardOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M6 9a3 3 0 0 1 3-3h21.336a3 3 0 0 1 2.122.879l3.858 3.858l4.805 4.805A3 3 0 0 1 42 17.664V39a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9Z"/><path fill="#fff" d="M31 26H17a3 3 0 0 0-3 3v13h20V29a3 3 0 0 0-3-3Z"/><path stroke-linecap="round" d="M29 16H17a3 3 0 0 1-3-3V6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMemoryCardOne0)"/>`
	memoryOneInnerSVG                                  = `<mask id="ipSMemoryOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 28h38v14H5zM5 6h38v14H5z"/><rect width="4" height="4" x="11" y="11" fill="#000" rx="2"/><rect width="4" height="4" x="11" y="33" fill="#000" rx="2"/><rect width="4" height="4" x="19" y="11" fill="#000" rx="2"/><rect width="4" height="4" x="19" y="33" fill="#000" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M31 13h4m-4 22h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMemoryOne0)"/>`
	menuFoldOneInnerSVG                                = `<mask id="ipSMenuFoldOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 10.5h32m-16 9h16m-16 9h16m-32 9h32"/><path fill="#fff" d="m8 19l8 5l-8 5V19Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMenuFoldOne0)"/>`
	menuUnfoldOneInnerSVG                              = `<mask id="ipSMenuUnfoldOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 10.5h32m-16 9h16m-16 9h16m-32 9h32"/><path fill="#fff" d="m16 19l-8 5l8 5V19Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMenuUnfoldOne0)"/>`
	messageInnerSVG                                    = `<mask id="ipSMessage0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 24c0 11.046-8.954 20-20 20H4V24C4 12.954 12.954 4 24 4s20 8.954 20 20Z"/><path stroke="#000" d="M14 18h18m-18 8h18m-18 8h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessage0)"/>`
	messageEmojiInnerSVG                               = `<mask id="ipSMessageEmoji0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 7H4v30h7v5l10-5h23V7Z"/><path stroke="#000" d="M31 16v1m-14-1v1m14 8s-2 4-7 4s-7-4-7-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessageEmoji0)"/>`
	messageOneInnerSVG                                 = `<mask id="ipSMessageOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 6h40v30H29l-5 5l-5-5H4V6Z"/><path stroke="#000" d="M23 21h2.003m7.998 0H35m-21.999 0H15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessageOne0)"/>`
	messagePrivacyInnerSVG                             = `<mask id="ipSMessagePrivacy0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M25.5 37H21l-10 5v-5H4V7h40v11"/><path fill="#fff" d="M30 27h14v8H30z"/><path d="M40 27v-3a3 3 0 1 0-6 0v3M12 15h6m-6 6h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessagePrivacy0)"/>`
	messageSearchInnerSVG                              = `<mask id="ipSMessageSearch0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M25.5 37H21l-10 5v-5H4V7h40v11"/><circle cx="34" cy="28" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m39 32l5 4M12 15h6m-6 6h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessageSearch0)"/>`
	messageSecurityInnerSVG                            = `<mask id="ipSMessageSecurity0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M25.5 37H21l-10 5v-5H4V7h40v11"/><path fill="#fff" d="M29 25.2c0-1.067 7-3.2 7-3.2s7 2.133 7 3.2c0 8.533-7 12.8-7 12.8s-7-4.267-7-12.8Z"/><path d="M12 15h6m-6 6h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessageSecurity0)"/>`
	messageSentInnerSVG                                = `<mask id="ipSMessageSent0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 24c0 11.046-8.954 20-20 20H4V24C4 12.954 12.954 4 24 4s20 8.954 20 20Z"/><path stroke="#000" d="m14 26l6 6l13-13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessageSent0)"/>`
	messagesInnerSVG                                   = `<mask id="ipSMessages0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M35 23c0 5.523-4.477 10-10 10H15V23c0-5.523 4.477-10 10-10s10 4.477 10 10Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 21h6m-6 6h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessages0)"/>`
	messagesOneInnerSVG                                = `<mask id="ipSMessagesOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M34 23c0 3.862-2.703 7.157-6.5 8.433c-1.09.367-2.269.567-3.5.567c-4 0-9 2-9 2l1.132-2.446c.563-1.216.204-2.63-.57-3.723C14.572 26.436 14 24.778 14 23c0-4.97 4.477-9 10-9s10 4.03 10 9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMessagesOne0)"/>`
	microSdInnerSVG                                    = `<mask id="ipSMicroSd0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M13 7a2 2 0 0 1 2-2h22a2 2 0 0 1 2 2v34a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-5l5-4v-4H8v-3l5-6V7Z"/><path stroke="#000" d="M32 11v4m-12-4v4m6-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicroSd0)"/>`
	microSlrCameraInnerSVG                             = `<mask id="ipSMicroSlrCamera0"><g fill="none"><path fill="#fff" d="M44 26c0 2.64-.73 5.108-2 7.215A14.073 14.073 0 0 1 37.215 38c-2.107 1.27-4.576 2-7.215 2c-2.64 0-5.108-.73-7.215-2C18.719 35.55 16 31.093 16 26s2.72-9.55 6.785-12c2.107-1.27 4.576-2 7.215-2c2.64 0 5.108.73 7.215 2A14.073 14.073 0 0 1 42 18.785c1.27 2.107 2 4.576 2 7.215Z"/><path fill="#fff" d="M4 14v24h18.785C18.719 35.55 16 31.093 16 26s2.72-9.55 6.785-12H4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37.215 14c-2.107-1.27-4.576-2-7.215-2c-2.64 0-5.108.73-7.215 2m14.43 0H42v4.785M37.215 14A14.073 14.073 0 0 1 42 18.785M22.785 14H4v24h18.785m0-24C18.719 16.45 16 20.907 16 26s2.72 9.55 6.785 12m14.43 0c-2.107 1.27-4.576 2-7.215 2c-2.64 0-5.108-.73-7.215-2m14.43 0H42v-4.785M37.215 38A14.073 14.073 0 0 0 42 33.215m0-14.43c1.27 2.107 2 4.576 2 7.215c0 2.64-.73 5.108-2 7.215"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 9h9v5H8z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 22v8m26-4a6 6 0 0 1-6 6m-6-6a6 6 0 0 1 6-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicroSlrCamera0)"/>`
	microphoneOneInnerSVG                              = `<mask id="ipSMicrophoneOne0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M15 26.314s4.596-.354 7.778-3.536C25.96 19.596 26.314 15 26.314 15l7.752 12.182a4.986 4.986 0 0 1-6.884 6.884L15 26.314Z"/><circle cx="15" cy="15" r="11"/><path stroke-linecap="round" stroke-linejoin="round" d="M5.657 25.456L25.456 5.657M34 33l8 8h-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicrophoneOne0)"/>`
	microscopeInnerSVG                                 = `<mask id="ipSMicroscope0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M26 44c4.346-3.008 6.663-6.049 6.95-9.122c.286-3.073-.642-5.366-2.784-6.878"/><path fill="#fff" fill-rule="evenodd" d="M27.655 28.223a4.5 4.5 0 1 0 0-9a4.5 4.5 0 0 0 0 9Z" clip-rule="evenodd"/><path stroke-linecap="round" stroke-linejoin="round" d="m24.288 27l-5.51 5.577l-9.192-9.192L27.97 5l9.192 9.192l-6.187 6.187"/><path stroke-linecap="round" d="m6.558 28.136l7.861 7.678M6 44h36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicroscope0)"/>`
	microscopeOneInnerSVG                              = `<mask id="ipSMicroscopeOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="m29.003 18.373l1.105-1.105l.53-.53a5.5 5.5 0 0 0 0-7.778v0a5.5 5.5 0 0 0-7.778 0L9.172 22.648a.143.143 0 0 0 0 .202l6.97 6.97a1 1 0 0 0 1.414 0l3.713-3.713l1.105-1.105"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="m28.163 6.485l1.768-1.767a3.5 3.5 0 0 1 4.95 4.95l-1.768 1.767l-4.95-4.95Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m10.485 24.163l-4.242 4.243l4.95 4.95l4.242-4.243l-4.95-4.95Z"/><circle cx="26.041" cy="22.042" r="4.5" fill="#fff" transform="rotate(45 26.041 22.042)"/><path stroke-linecap="round" stroke-linejoin="round" d="m6 20l12.728 12.728M10 44h32M31 22c4 0 8 4 8 10c0 6.4-5.167 9.833-8 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicroscopeOne0)"/>`
	microwaveOvenInnerSVG                              = `<mask id="ipSMicrowaveOven0"><g fill="none"><rect width="40" height="30" x="4" y="6" stroke="#fff" stroke-width="4" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 15h-4m4 6h-4"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 15h17v12H10z"/><circle cx="36" cy="27" r="2" fill="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 36v6m24-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMicrowaveOven0)"/>`
	milkInnerSVG                                       = `<mask id="ipSMilk0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M12 19.574a2 2 0 0 1 .304-1.06L17 11h14l4.696 7.514a2 2 0 0 1 .304 1.06V42a2 2 0 0 1-2 2H14a2 2 0 0 1-2-2V19.574Z"/><path stroke="#000" d="M19 33v-9l5 6l5-6v9"/><path stroke="#fff" d="M17 4h14v7H17V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMilk0)"/>`
	milkOneInnerSVG                                    = `<mask id="ipSMilkOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 22h26v22H6z"/><path stroke="#000" d="M14 38V28l5 6l5-6v10"/><path stroke="#fff" d="M42 20L30 10M20 6v6l10-2V4L20 6Z"/><path fill="#fff" stroke="#fff" d="m32 22l10-2v21l-10 3V22Z"/><path stroke="#fff" d="M19.482 12L6 22h26L19.482 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMilkOne0)"/>`
	mindMappingInnerSVG                                = `<mask id="ipSMindMapping0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M8 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M42 8a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 18a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke-linecap="round" d="M32 6H20v36h12M12 24h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMindMapping0)"/>`
	miniSdCardInnerSVG                                 = `<mask id="ipSMiniSdCard0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M13.998 18.739L8 21.923V44h32V4H13.998v14.739Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M21 12v6m12-6v6m-6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMiniSdCard0)"/>`
	minusTheBottomInnerSVG                             = `<mask id="ipSMinusTheBottom0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M5 41V21a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2Z"/><path d="M19 27V7a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H21a2 2 0 0 1-2-2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMinusTheBottom0)"/>`
	minusTheTopInnerSVG                                = `<mask id="ipSMinusTheTop0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M5 41V21a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2Z"/><path d="M43 7v20a2 2 0 0 1-2 2H31a2 2 0 0 1-2-2v-6a2 2 0 0 0-2-2h-6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMinusTheTop0)"/>`
	mirrorInnerSVG                                     = `<mask id="ipSMirror0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M34 44H14c-5 0-7-1-7-4v-6h11l1 4h11l1-4h10v6c0 3-2 4-7 4Z"/><path d="M12 34c-2.045-3.118-5-7-5-12.146C7 11.422 14.611 4 24 4s17 7.422 17 17.854C41 27 38.044 30.882 36 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMirror0)"/>`
	mirrorOneInnerSVG                                  = `<mask id="ipSMirrorOne0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="20" r="16" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M24 36v8m-10 0h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMirrorOne0)"/>`
	mirrorTwoInnerSVG                                  = `<mask id="ipSMirrorTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="17" r="13" fill="#fff"/><path d="M42 17c0 9.941-8.059 18-18 18S6 26.941 6 17m36 0h-4m-28 0H6m24 27H18m6 0v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMirrorTwo0)"/>`
	mitsubishiInnerSVG                                 = `<mask id="ipSMitsubishi0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m17 19l7 11l7-11l-7-11l-7 11Zm13.667 21L24 30h13.333L44 40H30.667Zm-13.334 0L24 30H10.667L4 40h13.333Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMitsubishi0)"/>`
	modifyInnerSVG                                     = `<mask id="ipSModify0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m20.07 9.586l-4.242-4.243a2 2 0 0 0-2.828 0L7.343 11a2 2 0 0 0 0 2.829l4.243 4.242m17.343 19.343l4.242 4.243a2 2 0 0 0 2.829 0L41.657 36a2 2 0 0 0 0-2.828l-4.243-4.243"/><rect width="12" height="42" x="34.606" y="4.908" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2" transform="rotate(45 34.606 4.908)"/><circle cx="24" cy="24" r="2" fill="#000"/><circle cx="20" cy="28" r="2" fill="#000"/><circle cx="28" cy="20" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSModify0)"/>`
	modifyTwoInnerSVG                                  = `<mask id="ipSModifyTwo0"><g fill="none" stroke-width="4"><rect width="40" height="30" x="4" y="9" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M16 9v30"/><path stroke="#fff" stroke-linecap="round" d="M20 9h-8m8 30h-8"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m23 31l14-14m-12 2l-2-2m14 14l-2-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSModifyTwo0)"/>`
	monitorInnerSVG                                    = `<mask id="ipSMonitor0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 10h32v28H4z"/><path stroke="#fff" stroke-linecap="round" d="m44 14l-8 6.75v6.5L44 34V14Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="m17 19l6 5l-6 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonitor0)"/>`
	monitorCameraInnerSVG                              = `<mask id="ipSMonitorCamera0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 34c8.284 0 15-6.716 15-15c0-8.284-6.716-15-15-15c-8.284 0-15 6.716-15 15c0 8.284 6.716 15 15 15Z"/><path fill="#000" stroke="#000" d="M24 25a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke="#fff" stroke-linecap="round" d="M19.369 34L16 44h16l-3.396-10h-9.235Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M12 44h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonitorCamera0)"/>`
	monitorOneInnerSVG                                 = `<mask id="ipSMonitorOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 8a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 26a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m22 12l-4 5m10-3l-3 4"/><circle cx="24" cy="29" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17 34l-3 8h20l-3-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonitorOne0)"/>`
	monkeyInnerSVG                                     = `<mask id="ipSMonkey0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M13.2 21a10.442 10.442 0 0 1-1.2-4.861C12 9.987 17.373 5 24 5s12 4.987 12 11.139c0 1.743-.431 3.392-1.2 4.861"/><ellipse cx="24" cy="31" fill="#fff" stroke="#fff" stroke-width="4" rx="15" ry="12"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M30.518 33.874c-3.67 3.67-9.721 3.566-13.518-.23"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M12 23c-3.314 0-6-2.239-6-5s2.686-5 6-5m24 10c3.314 0 6-2.239 6-5s-2.686-5-6-5"/><circle cx="20" cy="14" r="2" fill="#fff"/><circle cx="28" cy="14" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonkey0)"/>`
	monumentOneInnerSVG                                = `<mask id="ipSMonumentOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M14 38h20v6H14z"/><path fill="#fff" d="m18 38l2-29l4-5l4 5l2 29H18Z"/><path stroke-linecap="round" d="M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonumentOne0)"/>`
	monumentTwoInnerSVG                                = `<mask id="ipSMonumentTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 44h40"/><path fill="#fff" d="m18 44l2-36.842L28 4l2 40H18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMonumentTwo0)"/>`
	moonInnerSVG                                       = `<mask id="ipSMoon0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M28.053 4.41c-5.47 1.427-9.508 6.4-9.508 12.317c0 7.03 5.699 12.727 12.728 12.727c5.916 0 10.89-4.037 12.316-9.507A20.05 20.05 0 0 1 44 24c0 11.046-8.954 20-20 20S4 35.046 4 24S12.954 4 24 4c1.389 0 2.744.141 4.053.41Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoon0)"/>`
	moreAppInnerSVG                                    = `<mask id="ipSMoreApp0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M18 4H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 24H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2ZM42 4H30a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke-linecap="round" d="M28 28h16m-8 8h8m-16 8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoreApp0)"/>`
	moreFourInnerSVG                                   = `<mask id="ipSMoreFour0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m17 11l7.071-7.071L31.142 11l-7.07 7.071zm13 13l7.071-7.071L44.142 24l-7.07 7.071zM4 24l7.071-7.071L18.142 24l-7.07 7.071zm13 13l7.071-7.071L31.142 37l-7.07 7.071z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoreFour0)"/>`
	moreThreeInnerSVG                                  = `<mask id="ipSMoreThree0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" fill-rule="evenodd" d="M21.5 14a2.5 2.5 0 1 0 5 0a2.5 2.5 0 0 0-5 0Zm0 10a2.5 2.5 0 1 0 5 0a2.5 2.5 0 0 0-5 0ZM24 36.5a2.5 2.5 0 1 1 0-5a2.5 2.5 0 0 1 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoreThree0)"/>`
	moreTwoInnerSVG                                    = `<mask id="ipSMoreTwo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><circle cx="14" cy="24" r="3" fill="#000"/><circle cx="24" cy="24" r="3" fill="#000"/><circle cx="34" cy="24" r="3" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoreTwo0)"/>`
	mountainInnerSVG                                   = `<mask id="ipSMountain0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m18 10l14 28H4l14-28Z"/><path stroke="#fff" stroke-linecap="round" d="m28 29l5.647-7L44 38H32"/><path stroke="#000" stroke-linecap="round" d="M12 22h12"/><path stroke="#fff" stroke-linecap="round" d="m14 18l-4 8m12-8l4 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMountain0)"/>`
	mountedInnerSVG                                    = `<mask id="ipSMounted0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M9 7h12m6 0h12"/><path stroke-linejoin="round" d="M19 36h-3a3 3 0 0 1-3-3v-9a8 8 0 0 1 8-8h6a8 8 0 0 1 8 8v9a3 3 0 0 1-3 3h-3"/><circle cx="24" cy="7" r="3" fill="#fff"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M29 35v1.4a1.6 1.6 0 0 1-1.6 1.6h-6.8a1.6 1.6 0 0 1-1.6-1.6V35a5 5 0 0 1 10 0Z"/><path stroke-linejoin="round" d="M21 38v3a3 3 0 1 0 6 0v-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMounted0)"/>`
	mouseInnerSVG                                      = `<mask id="ipSMouse0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M24 16H12v16c0 6.627 5.373 12 12 12s12-5.373 12-12V16H24Z" clip-rule="evenodd"/><path d="M36 16c0-6.627-5.373-12-12-12v12h12ZM24 4c-6.627 0-12 5.373-12 12h12V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMouse0)"/>`
	mouseOneInnerSVG                                   = `<mask id="ipSMouseOne0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="24" height="32" x="12" y="12" rx="12"/><path fill="#fff" d="M12 24c0-6.627 5.373-12 12-12s12 5.373 12 12v1H12v-1Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M24 25V12c0-4 1.5-8 7-8c6 0 8 5 8 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMouseOne0)"/>`
	moveInnerSVG                                       = `<mask id="ipSMove0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M22 43c-4.726-1.767-8.668-7.815-10.64-11.357c-.852-1.53-.403-3.408.964-4.502a3.83 3.83 0 0 1 5.1.283L19 29V17.5a2.5 2.5 0 0 1 5 0v6a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v7.868c0 1.07-.265 2.128-.882 3.003C37.095 39.82 35.255 42.034 33 43c-3.5 1.5-6.63 1.634-11 0Z"/><path d="M10 8h22m-18 4l-4-4l4-4m14 0l4 4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMove0)"/>`
	moveInOneInnerSVG                                  = `<mask id="ipSMoveInOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="m28 28l14 2.8l-4.2 2.8l4.2 4.2l-4.2 4.2l-4.2-4.2l-2.8 4.2L28 28Z" clip-rule="evenodd"/><path d="M42 22V8a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoveInOne0)"/>`
	moveOneInnerSVG                                    = `<mask id="ipSMoveOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m8 6l35 19l-19 2l-10.005 17L8 6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMoveOne0)"/>`
	movieInnerSVG                                      = `<mask id="ipSMovie0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M24 18a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm0 18a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm-9-9a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm18 0a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" stroke-linecap="round" d="M24 44h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMovie0)"/>`
	movieBoardInnerSVG                                 = `<mask id="ipSMovieBoard0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 16H4v26h40V16Z"/><path stroke="#fff" d="M44 16V6H4v10h40ZM26 6l4 10M18 6l4 10M10 6l4 10M34 6l4 10"/><path stroke="#000" d="M12 24h24m-24 8h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMovieBoard0)"/>`
	multiCircularInnerSVG                              = `<mask id="ipSMultiCircular0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path d="M24 44c7.732 0 14-6.268 14-14s-6.268-14-14-14s-14 6.268-14 14s6.268 14 14 14Z"/><path fill="#fff" d="M24 44a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMultiCircular0)"/>`
	multiFunctionKnifeInnerSVG                         = `<mask id="ipSMultiFunctionKnife0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M30 10a6 6 0 0 0-12 0v28a6 6 0 0 0 12 0V10Zm0 10.314l7.243 7.242A4 4 0 0 0 42.9 21.9L30 9v11.314Z"/><path fill="#fff" stroke="#fff" d="m18.071 27.414l-7.243-7.242a4 4 0 1 0-5.656 5.656l12.9 12.9V27.414Z"/><path stroke="#000" stroke-linecap="round" d="M24 10v1m0 26v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMultiFunctionKnife0)"/>`
	multiPictureCarouselInnerSVG                       = `<mask id="ipSMultiPictureCarousel0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="40" height="30" x="4" y="6" fill="#fff" rx="2"/><path d="M20 42h8m6 0h2M4 42h2m36 0h2m-32 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMultiPictureCarousel0)"/>`
	multiRectangleInnerSVG                             = `<mask id="ipSMultiRectangle0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M12 39h32V7H12v8"/><path d="M8 39h24V15H8v8"/><path fill="#fff" d="M20 23H4v16h16V23Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMultiRectangle0)"/>`
	multiTriangularTwoInnerSVG                         = `<mask id="ipSMultiTriangularTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 41h40L24 6L4 41Z"/><path fill="#fff" d="M34 23.5L24 41L14 23.5h20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMultiTriangularTwo0)"/>`
	multicastInnerSVG                                  = `<mask id="ipSMulticast0"><g fill="none" stroke="#fff"><path fill="#fff" stroke-width="4" d="M24 15a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-width="4" d="M24 15v8"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 33V23l23 .013V33"/><path stroke-linecap="round" stroke-width="5" d="M41 41v1M7 41v1m11-1v1m12-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMulticast0)"/>`
	muscleInnerSVG                                     = `<mask id="ipSMuscle0"><g fill="none"><path fill="#fff" d="M21.37 36c1.45-5.25 6.52-9 12.36-8.38c5.56.59 9.98 5.28 10.26 10.86c.07 1.47-.13 2.88-.56 4.19c-.26.8-1.04 1.33-1.89 1.33H11.758c-5.048 0-8.834-4.619-7.844-9.569L10 4h12l4 7l-8.57 6.13L15 14"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M21.37 36c1.45-5.25 6.52-9 12.36-8.38c5.56.59 9.98 5.28 10.26 10.86c.07 1.47-.13 2.88-.56 4.19c-.26.8-1.04 1.33-1.89 1.33H11.758c-5.048 0-8.834-4.619-7.844-9.569L10 4h12l4 7l-8.57 6.13L15 14m2.44 3.13L22 34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMuscle0)"/>`
	museumOneInnerSVG                                  = `<mask id="ipSMuseumOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M4 44h40"/><path fill="#fff" stroke-linejoin="round" d="M8 8.364L24 4l16 4.364V14H8V8.364Z"/><path stroke-linecap="round" d="M10 14v24m7-24v24m7-24v24m7-24v24m7-24v24"/><path stroke-linejoin="round" d="M7 38h34v6H7z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMuseumOne0)"/>`
	museumTwoInnerSVG                                  = `<mask id="ipSMuseumTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 44h40"/><path fill="#fff" d="M8 7.273S15 4 24 4s16 3.273 16 3.273V13H8V7.273Z"/><path stroke-linecap="round" d="M10 13v25m7-25v25m7-25v25m7-25v25m7-25v25"/><path d="M7 38h34v6H7z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMuseumTwo0)"/>`
	musicInnerSVG                                      = `<mask id="ipSMusic0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M30 34.5a3.5 3.5 0 0 1 3.5-3.5H41v3.4a3.6 3.6 0 0 1-3.6 3.6h-3.9a3.5 3.5 0 0 1-3.5-3.5Zm-24 4A3.5 3.5 0 0 1 9.5 35H16v3.4a3.6 3.6 0 0 1-3.6 3.6H9.5A3.5 3.5 0 0 1 6 38.5Z"/><path stroke-linecap="round" d="M16 18.044v0l25-5.919M16 38V10l25-6v29.692"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMusic0)"/>`
	musicCdInnerSVG                                    = `<mask id="ipSMusicCd0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M26 14v14"/><path fill="#fff" stroke-linejoin="round" d="M14 28.666C14 26.64 15.934 25 18.32 25H26v4.334C26 31.36 24.066 33 21.68 33h-3.36C15.934 33 14 31.359 14 29.334v-.668Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m32 15l-6-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMusicCd0)"/>`
	musicListInnerSVG                                  = `<mask id="ipSMusicList0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 19h16m-16-9h16M8 38h32M8 28h32"/><path fill="#fff" d="m8 10l8 5l-8 5V10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMusicList0)"/>`
	musicOneInnerSVG                                   = `<mask id="ipSMusicOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 6v29"/><path fill="#fff" d="M10 36.04A5.04 5.04 0 0 1 15.04 31H24v5.96A5.04 5.04 0 0 1 18.96 42h-3.92A5.04 5.04 0 0 1 10 36.96v-.92Z"/><path stroke-linecap="round" d="m24 14.066l12.883 3.056V9.013L24 6v8.066Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMusicOne0)"/>`
	muteInnerSVG                                       = `<mask id="ipSMute0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M29 14v20c-3.85 0-6.71-5.09-6.71-5.09H18.1c-.608 0-1.1-.497-1.1-1.11v-7.683c0-.614.492-1.111 1.1-1.111h4.19S25.15 14 29 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSMute0)"/>`
	nailPolishInnerSVG                                 = `<mask id="ipSNailPolish0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M18.895 5.89A2 2 0 0 1 20.892 4h6.216a2 2 0 0 1 1.997 1.89l.778 14A2 2 0 0 1 27.886 22h-7.772a2 2 0 0 1-1.997-2.11l.778-14Z"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M11 28a6 6 0 0 1 6-6h14a6 6 0 0 1 6 6v13a3 3 0 0 1-3 3H14a3 3 0 0 1-3-3V28Z"/><circle cx="24" cy="33" r="3" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNailPolish0)"/>`
	nailPolishOneInnerSVG                              = `<mask id="ipSNailPolishOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="32" height="24" x="8" y="20" fill="#fff" stroke="#fff" rx="2"/><path fill="#fff" stroke="#fff" d="M17 4h14v16H17z"/><path fill="#000" stroke="#000" d="M22 32h4l1 5h-6l1-5Z"/><path stroke="#000" d="M24 20v12"/><path stroke="#fff" d="M31 20H17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNailPolishOne0)"/>`
	naturalModeInnerSVG                                = `<mask id="ipSNaturalMode0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="4"><path d="M24 27c-5.657 0-9.935-4.343-9.935-10L14 7l5 4l5-6l5 6l5-4v10c0 5.657-4.342 10-10 10Zm-.514 16.314c1.562-1.562-.337-5.995-4.242-9.9c-3.906-3.905-8.338-5.805-9.9-4.242c-1.562 1.562.337 5.994 4.243 9.9c3.905 3.904 8.337 5.804 9.9 4.242Z"/><path d="M24.829 42.97c1.562 1.563 5.994-.337 9.9-4.242c3.905-3.905 5.804-8.338 4.242-9.9c-1.562-1.562-5.994.338-9.9 4.243c-3.905 3.905-5.804 8.337-4.242 9.9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNaturalMode0)"/>`
	navigationInnerSVG                                 = `<mask id="ipSNavigation0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24.5 4L9 44l15.5-9.09L40 44L24.5 4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNavigation0)"/>`
	necktieInnerSVG                                    = `<mask id="ipSNecktie0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m15 36l6-23h6l6 23l-9 8l-9-8Zm6-32h6l3 2l-3 7h-6l-3-7l3-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNecktie0)"/>`
	needleInnerSVG                                     = `<mask id="ipSNeedle0"><g fill="none"><g stroke="#fff" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSNeedle1)"><path stroke-linecap="round" d="M39 23L25 9m19 8L31 4m3.999 14.999l5-5m-11-1l5-5M11 37l-5 5"/><path fill="#fff" d="M28 12L12 28l-1 9l9-1l16-16l-8-8Z"/></g><defs><clipPath id="ipSNeedle1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNeedle0)"/>`
	nestedArrowsInnerSVG                               = `<mask id="ipSNestedArrows0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M30 17V4H4v26h13"/><path fill="#fff" d="M43 43V17H17v26h26Z"/><path d="M33 30H17m16 0l-5-5l5 5Zm0 0l-5 5l5-5ZM17 17v26"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNestedArrows0)"/>`
	nestsInnerSVG                                      = `<mask id="ipSNests0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4.999 32.314L20.034 5.943C20.958 3.98 22.627 3 25.04 3c3.62 0 5.977 4.987 5.977 4.987L35 8.58c-4.01.065-6.33.872-6.957 2.42c-.94 2.322 2.456 4.731 2.975 8.004c.52 3.273-1.55 8.801-6.529 11.563c-3.319 1.841-7.462 2.32-12.43 1.433l-6.1 11"/><path fill="#fff" fill-rule="evenodd" d="M14.942 26.978c2.58-4.65 4.275-7.635 5.087-8.956c1.219-1.982 6.245-1.385 4.44 3.563c-1.204 3.298-4.38 5.096-9.527 5.393Zm18.026 6.006c1.142-2.737 2.81-4.395 5.003-4.975c2.193-.58 4.193-.227 6 1.06c-1.125 2.595-2.794 4.26-5.005 4.992c-2.211.733-4.21.373-5.998-1.077Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M26.985 35.114c.757 2.722 2.762 4.543 6.014 5.461c3.253.92 5.93.394 8.033-1.575c-2.6-3.03-4.944-4.694-7.03-4.99c-2.087-.296-4.426.072-7.017 1.104Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNests0)"/>`
	networkDriveInnerSVG                               = `<mask id="ipSNetworkDrive0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M40.518 36.316A9.21 9.21 0 0 0 44 26c-1.213-3.83-4.93-5.929-8.947-5.925h-2.321a14.737 14.737 0 1 0-25.31 13.429"/><path fill="#fff" d="M14 35h20v6H14z"/><path d="M34 28H22m-6 0h-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNetworkDrive0)"/>`
	networkTreeInnerSVG                                = `<mask id="ipSNetworkTree0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 34h8v8H4zM8 6h32v12H8z"/><path stroke="#fff" d="M24 34V18M8 34v-8h32v8"/><path fill="#fff" stroke="#fff" d="M36 34h8v8h-8zm-16 0h8v8h-8z"/><path stroke="#000" d="M14 12h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNetworkTree0)"/>`
	neuralInnerSVG                                     = `<mask id="ipSNeural0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M20.5 33c1.966 0 2.79-3.538 4.5-4.247c1.772-.735 4.417 1.336 5.753 0c1.336-1.335-.306-4.302.43-6.074C31.89 20.97 35 20.466 35 18.5c0-1.966-3.538-2.44-4.247-4.15c-.735-1.772 1.336-4.767 0-6.103c-1.336-1.335-4.487.735-6.26 0C22.783 7.538 22.466 4 20.5 4c-1.966 0-2.496 3.965-4.206 4.674c-1.772.735-4.711-1.762-6.047-.427c-1.336 1.336.735 3.981 0 5.753C9.538 15.71 6 16.534 6 18.5c0 1.966 3.538 2.47 4.247 4.18c.735 1.771-1.336 4.738 0 6.073c1.336 1.336 4.275-.735 6.047 0c1.71.71 2.24 4.247 4.206 4.247Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M20 22a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke="#fff" stroke-linecap="round" d="M16.57 30c-1.209 6.8-.494 11.054 2.144 12.766c3.958 2.568 6.734.561 8.183-.91c1.448-1.472 6.153-7.912 10.18-7.912c4.026 0 5.238 3.88 4.856 6c-.254 1.413-.911 2.459-1.97 3.136"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNeural0)"/>`
	neutralFaceInnerSVG                                = `<mask id="ipSNeutralFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m0 12h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNeutralFace0)"/>`
	newComputerInnerSVG                                = `<mask id="ipSNewComputer0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="36" height="28" x="6" y="6" fill="#fff" rx="3"/><path stroke-linecap="round" d="M14 42h20m-10-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNewComputer0)"/>`
	newDianziqianInnerSVG                              = `<mask id="ipSNewDianziqian0"><g fill="#fff"><path d="M31 20v7L10 39l-6-4V13l6-4l14 8l-6.5 3.5L10 16v16l21-12Z"/><path d="m31 27l.992 1.736A2 2 0 0 0 33 27h-2Zm0-7h2v-3.446l-2.992 1.71L31 20ZM10 32H8a2 2 0 0 0 2.992 1.736L10 32Zm0-16l1.029-1.715A2 2 0 0 0 8 16h2Zm7.5 4.5l-1.029 1.715a2 2 0 0 0 1.977.046L17.5 20.5ZM24 17l.948 1.76a2 2 0 0 0 .044-3.497L24 17ZM10 9l.992-1.736a2 2 0 0 0-2.101.072L10 9Zm-6 4l-1.11-1.664A2 2 0 0 0 2 13h2Zm0 22H2a2 2 0 0 0 .89 1.664L4 35Zm6 4l-1.11 1.664a2 2 0 0 0 2.102.072L10 39Zm23-12v-7h-4v7h4Zm-2.992-8.736l-21 12l1.984 3.473l21-12l-1.984-3.473ZM12 32V16H8v16h4ZM8.971 17.715l7.5 4.5l2.058-3.43l-7.5-4.5l-2.058 3.43Zm9.477 4.546l6.5-3.5l-1.896-3.522l-6.5 3.5l1.896 3.522Zm6.544-6.997l-14-8l-1.984 3.472l14 8l1.984-3.473ZM8.891 7.336l-6 4l2.218 3.328l6-4l-2.218-3.328ZM2 13v22h4V13H2Zm.89 23.664l6 4l2.22-3.328l-6-4l-2.22 3.328Zm8.102 4.072l21-12l-1.984-3.473l-21 12l1.984 3.474Z"/><path d="M17 28v-7L38 9l6 4v22l-6 4l-14-8l6.5-3.5L38 32V16L17 28Z"/><path d="m17 21l-.992-1.736A2 2 0 0 0 15 21h2Zm0 7h-2v3.446l2.992-1.71L17 28Zm21-12h2a2 2 0 0 0-2.992-1.736L38 16Zm0 16l-1.029 1.715A2 2 0 0 0 40 32h-2Zm-7.5-4.5l1.029-1.715a2 2 0 0 0-1.977-.046L30.5 27.5ZM24 31l-.948-1.76a2 2 0 0 0-.044 3.497L24 31Zm14 8l-.992 1.736a2 2 0 0 0 2.101-.072L38 39Zm6-4l1.11 1.664A2 2 0 0 0 46 35h-2Zm0-22h2a2 2 0 0 0-.89-1.664L44 13Zm-6-4l1.11-1.664a2 2 0 0 0-2.102-.072L38 9ZM15 21v7h4v-7h-4Zm2.992 8.736l21-12l-1.984-3.473l-21 12l1.984 3.473ZM36 16v16h4V16h-4Zm3.029 14.285l-7.5-4.5l-2.058 3.43l7.5 4.5l2.058-3.43Zm-9.477-4.546l-6.5 3.5l1.896 3.522l6.5-3.5l-1.896-3.522Zm-6.544 6.997l14 8l1.984-3.472l-14-8l-1.984 3.473Zm16.101 7.928l6-4l-2.218-3.328l-6 4l2.218 3.328ZM46 35V13h-4v22h4Zm-.89-23.664l-6-4l-2.22 3.328l6 4l2.22-3.328Zm-8.102-4.072l-21 12l1.984 3.473l21-12l-1.984-3.473Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNewDianziqian0)"/>`
	newPictureInnerSVG                                 = `<mask id="ipSNewPicture0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="m6 28l10.693-9.802a2 2 0 0 1 2.653-.044L32 29m-4-5l4.773-4.773a2 2 0 0 1 2.615-.186L42 24"/><path stroke="#fff" stroke-linecap="round" d="M6 20v10m36-10v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNewPicture0)"/>`
	newlybuildInnerSVG                                 = `<mask id="ipSNewlybuild0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M19 10V7a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v22a2 2 0 0 1-2 2h-4"/><rect width="24" height="24" x="5" y="18" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M17 25v10m-5-5h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNewlybuild0)"/>`
	newspaperFoldingInnerSVG                           = `<mask id="ipSNewspaperFolding0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="m22 44l-1-8"/><path fill="#fff" stroke="#fff" d="M42 44V12H26l1 8l1 8l1 8l-7 8h20Z"/><path stroke="#000" d="M28 28h5m-6-8h6"/><path fill="#fff" stroke="#fff" d="M6 4h19l1 8l1 8l1 8l1 8H6V4Z"/><path stroke="#000" d="M12 12h7m-7 8h8m-8 8h9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNewspaperFolding0)"/>`
	nextInnerSVG                                       = `<mask id="ipSNext0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 40.836c4.893-5.973 9.238-9.362 13.036-10.168c3.797-.805 7.412-.927 10.846-.365V41L44 23.545L27.882 7v10.167c-6.349.05-11.746 2.328-16.192 6.833C7.245 28.505 4.681 34.117 4 40.836Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNext0)"/>`
	nineKeyInnerSVG                                    = `<mask id="ipSNineKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24.5 14a5.5 5.5 0 1 0 0 11a5.5 5.5 0 0 0 0-11Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M19 29c.818 2.193 2.548 4 5.5 4c3.038 0 5.5-2.686 5.5-6v-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNineKey0)"/>`
	ninePointsConnectedInnerSVG                        = `<mask id="ipSNinePointsConnected0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m26.829 37.172l10.343-10.343m-16 0L10.829 37.172m16-16l10.343-10.343M10.829 21.172l10.343-10.343"/><path fill="#fff" d="M12 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm0 16a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm0 16a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm-16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm-16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm0-16a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm16 0a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNinePointsConnected0)"/>`
	nintendoSwitchInnerSVG                             = `<mask id="ipSNintendoSwitch0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 18c0-5.657 0-8.485 1.757-10.243C9.515 6 12.343 6 18 6h2v36h-2c-5.657 0-8.485 0-10.243-1.757C6 38.485 6 35.657 6 30V18Zm36 0c0-5.657 0-8.485-1.757-10.243C38.485 6 35.657 6 30 6h-2v36h2c5.657 0 8.485 0 10.243-1.757C42 38.485 42 35.657 42 30V18Z"/><path stroke="#000" d="M35 13v2M13 33v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNintendoSwitch0)"/>`
	nmrInnerSVG                                        = `<mask id="ipSNmr0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke-linecap="round" d="M32.485 15.515A11.962 11.962 0 0 0 24 12a11.962 11.962 0 0 0-8.485 3.515"/><path fill="#fff" stroke-linejoin="round" d="M34 24H14v8h20v-8Z"/><path stroke-linecap="round" d="M17.045 32L17 42.715M31.046 32L31 42.715"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNmr0)"/>`
	noShootingInnerSVG                                 = `<mask id="ipSNoShooting0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="m15 12l3-6h12l3 6H15Z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 12H7c-1.657 0-3 1.254-3 2.8v24.4C4 40.746 5.343 42 7 42h34c1.657 0 3-1.254 3-2.8V14.8c0-1.546-1.343-2.8-3-2.8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m28 20l-8 14"/><circle cx="24" cy="27" r="8" stroke="#000" stroke-linecap="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNoShooting0)"/>`
	noodlesInnerSVG                                    = `<mask id="ipSNoodles0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M4 24c0 11.046 6.667 20 20 20s20-8.954 20-20H4Z" clip-rule="evenodd"/><path d="M16 24V8m8 16V6m8 18V4M8 24V10m-4 3l40-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNoodles0)"/>`
	notebookInnerSVG                                   = `<mask id="ipSNotebook0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v36a2 2 0 0 1-2 2H12a2 2 0 0 1-2-2V6Z"/><path stroke="#000" stroke-linecap="round" d="M34 6v36"/><path stroke="#fff" stroke-linecap="round" d="M6 14h8M6 24h8M6 34h8M27 4h12M27 44h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNotebook0)"/>`
	notebookAndPenInnerSVG                             = `<mask id="ipSNotebookAndPen0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 6v36h26V6H4Z"/><path stroke="#000" d="M12 42V6"/><path fill="#fff" stroke="#fff" d="M44 6h-8v32l4 4l4-4V6Z"/><path stroke="#000" d="M36 12h8"/><path stroke="#fff" d="M30 6H4m26 36H4M36 6v16m8-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNotebookAndPen0)"/>`
	notebookOneInnerSVG                                = `<mask id="ipSNotebookOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v36a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6Z"/><path stroke="#000" stroke-linecap="round" d="M16 4v40m8-32h8m-8 8h8"/><path stroke="#fff" stroke-linecap="round" d="M10 4h12M10 44h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNotebookOne0)"/>`
	notepadInnerSVG                                    = `<mask id="ipSNotepad0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M18 8h-7a1 1 0 0 0-1 1v34a1 1 0 0 0 1 1h28a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1h-7"/><path fill="#fff" d="M18 13V8h3.95a.05.05 0 0 0 .05-.05V6a3 3 0 1 1 6 0v1.95c0 .028.022.05.05.05H32v5a1 1 0 0 1-1 1H19a1 1 0 0 1-1-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNotepad0)"/>`
	notesInnerSVG                                      = `<mask id="ipSNotes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 6a2 2 0 0 1 2-2h20l10 10v28a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V6Z"/><path stroke="#000" stroke-linecap="round" d="M16 20h16m-16 8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNotes0)"/>`
	nuclearPlantInnerSVG                               = `<mask id="ipSNuclearPlant0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 44h40M12 14h24"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M14 14h20l.877 7.017c.082.654.228 1.298.436 1.922l3.334 10.003a10 10 0 0 1 .464 2.167L40 44H8l.889-8.89a10 10 0 0 1 .464-2.168l3.334-10.003c.208-.624.354-1.268.436-1.922L14 14Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 8l.828-.828A4 4 0 0 1 27.657 6h.686a4 4 0 0 0 2.829-1.172L32 4"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M17 31a7.012 7.012 0 0 0 4.272 6.448M31 31a7.013 7.013 0 0 1-4.272 6.448M18.934 26.17A6.98 6.98 0 0 1 24 24a6.98 6.98 0 0 1 5.067 2.17"/><circle cx="24" cy="31" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNuclearPlant0)"/>`
	nurseCapInnerSVG                                   = `<mask id="ipSNurseCap0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 10c-11.257 0-18.015 6.748-19.625 8.558a.924.924 0 0 0-.148.982l7.326 17.397c.236.561.917.794 1.467.532C14.824 36.608 18.876 35 24 35c5.124 0 9.176 1.608 10.98 2.47c.55.261 1.231.028 1.467-.533l7.326-17.397a.924.924 0 0 0-.148-.982C42.015 16.748 35.257 10 24 10Z"/><path stroke="#000" d="M20 24.001h8M24 20v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNurseCap0)"/>`
	nutInnerSVG                                        = `<mask id="ipSNut0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37.699 6c-.527.534-2.46 2.672-3.69 3.741c-.175.535 2.109 2.672 2.636 3.207c.527.534 6.85-3.207 6.324-3.741c-.422-.428-3.69-2.316-5.27-3.207Z"/><path fill="#fff" d="M11.372 16.722a5.74 5.74 0 0 1-.03-.264a19.59 19.59 0 0 0-4.3 6.142a3.515 3.515 0 1 1-1.506 6.866c-.02 3.546 1.15 6.955 3.58 9.601c3.505 3.815 8.81 5.151 14.03 4.064c3.214-.668 6.395-2.254 9.106-4.745a19.996 19.996 0 0 0 3.39-4.051c-2.225.67-4.675-.412-5.601-2.598a3.683 3.683 0 0 0-2.577-2.155l-1.682-.381a5.972 5.972 0 0 1-4.24-3.65l-.091-.231a5.583 5.583 0 0 0-4.857-3.539a5.583 5.583 0 0 1-5.19-4.826l-.032-.233Z"/><path d="m13.154 11.658l-.251.27a5.87 5.87 0 0 0-1.53 4.794l.03.233a5.583 5.583 0 0 0 5.191 4.826a5.583 5.583 0 0 1 4.857 3.54l.09.23a5.973 5.973 0 0 0 4.241 3.65l1.683.381a3.684 3.684 0 0 1 2.576 2.155c.996 2.35 3.755 3.425 6.1 2.416c2.368-1.019 4.084-3.199 4.483-5.746l.207-1.33a9.933 9.933 0 0 0 .1-2.166l-.108-1.69a17.275 17.275 0 0 0-3.504-9.38l-.252-.331a15.79 15.79 0 0 0-14.1-6.138l-1.406.138a13.293 13.293 0 0 0-8.407 4.148Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNut0)"/>`
	nutritionInnerSVG                                  = `<mask id="ipSNutrition0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M24 42h5.955c.083-2.737.484-4.242 1.204-4.515C38.669 34.635 44 27.434 44 19H4c0 8.251 5.103 15.323 12.357 18.294c.758.31 1.325 1.88 1.699 4.706H24Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M14.443 26.023c.36 1.187.836 2.168 1.427 2.942a11.253 11.253 0 0 0 2.14 2.104"/><path stroke="#fff" stroke-linecap="round" d="M32.2 8.018a16.767 16.767 0 0 0-4.047-1.613M22.05 6c-7.123.823-12.906 6.098-14.55 13m33-.003a17.144 17.144 0 0 0-3.883-7.434"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSNutrition0)"/>`
	octagonInnerSVG                                    = `<mask id="ipSOctagon0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M15.41 42.389L5.56 32.18A2 2 0 0 1 5 30.792V17.208a2 2 0 0 1 .56-1.39l9.85-10.207A2 2 0 0 1 16.85 5h14.3a2 2 0 0 1 1.44.611l9.85 10.208a2 2 0 0 1 .56 1.389v13.584a2 2 0 0 1-.56 1.39l-9.85 10.207a2 2 0 0 1-1.44.611h-14.3a2 2 0 0 1-1.44-.611Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOctagon0)"/>`
	oilIndustryInnerSVG                                = `<mask id="ipSOilIndustry0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 6h28v36H10z"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M20.643 23.889c1.431-1.88 2.535-4.479 3.131-5.889c1.044 1.41 3.31 4.948 4.026 6.829c.894 2.35-1.342 5.171-4.026 5.171c-2.684 0-4.92-3.76-3.131-6.111Z"/><path stroke="#fff" stroke-linecap="round" d="M6 6h36M6 42h36M6 24h4m28 0h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOilIndustry0)"/>`
	oneInnerSVG                                        = `<mask id="ipSOne0"><path fill="#fff" stroke="#fff" stroke-width="4" d="m11 40l-4.06-8.798a5 5 0 0 1 2.1-6.46l11.257-6.29a3 3 0 0 1 3.264.218l1.026.77a1 1 0 0 0 1.595-.697L27.37 7.25a3 3 0 0 1 1.11-2.034l.215-.172a1.865 1.865 0 0 1 2.484.138c.525.524.82 1.236.82 1.978v22.26a1 1 0 0 0 1.624.782L37 27.5c1.653-1.322 3.875-.459 5.255.445c.439.287.504.881.192 1.303L34.5 40S31 44 23 44s-11.333-2.667-12-4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOne0)"/>`
	oneKeyInnerSVG                                     = `<mask id="ipSOneKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M21.226 18L26 13.017V34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOneKey0)"/>`
	oneOneInnerSVG                                     = `<mask id="ipSOneOne0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25.745 44h-.896c-5.21 0-10.07-2.626-12.925-6.984l-2.195-3.35a5.629 5.629 0 0 1 1.072-7.382l2.288-1.936c.26-.22.411-.545.411-.887V7.25a3.25 3.25 0 0 1 6.5 0v9a3.25 3.25 0 0 1 6.5 0v1.5a3.25 3.25 0 0 1 6.5 0v4a3.25 3.25 0 0 1 6.5 0v10.219c0 1.649-.498 3.26-1.43 4.62l-.973 1.423A13.755 13.755 0 0 1 25.745 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOneOne0)"/>`
	oneThirdRotationInnerSVG                           = `<mask id="ipSOneThirdRotation0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M36 40.015A19.989 19.989 0 0 1 24 44c-7.403 0-13.866-4.022-17.324-10H15M32 5.664C39.064 8.75 44 15.8 44 24c0 3.643-.974 7.058-2.676 10l-4.042-7M4.099 26A20.239 20.239 0 0 1 4 24C4 12.954 12.954 4 24 4l-4.042 7"/><path fill="#fff" d="M24 30a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOneThirdRotation0)"/>`
	oneToManyInnerSVG                                  = `<mask id="ipSOneToMany0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 7H6a2 2 0 0 0-2 2v30a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M11 20.58L15 18v12m14 0V18l8 12V18"/><path stroke="#000" stroke-linecap="round" d="M22 20v1m0 6v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOneToMany0)"/>`
	oneToOneInnerSVG                                   = `<mask id="ipSOneToOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 7H6a2 2 0 0 0-2 2v30a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M12 20.58L16 18v12m15-9.42L35 18v12"/><path stroke="#000" stroke-linecap="round" d="M24 20v1m0 6v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOneToOne0)"/>`
	onesiesInnerSVG                                    = `<mask id="ipSOnesies0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 21L4 11c1.833-1.333 9-6 20-6s18 4.667 20 6l-3 10h-7v16c0 4-3 7-7 7h-6c-4 0-7-3-7-7V21H7Z"/><path stroke="#000" d="M34 34s-9 0-9 10M14 34s9 0 9 10m6.811-38.5a6 6 0 1 1-11.622 0"/><path stroke="#fff" d="M36 6.99C32.81 5.883 28.784 5 24 5s-8.843.883-12.054 1.99M14 31v6m20-6v6m-13 7h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOnesies0)"/>`
	onlineMeetingInnerSVG                              = `<mask id="ipSOnlineMeeting0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M44 8H4v30h15l5 5l5-5h15V8Z"/><path stroke="#000" d="M12 19v8m8-11v14m8-9v4m8-6v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOnlineMeeting0)"/>`
	openAnAccountInnerSVG                              = `<mask id="ipSOpenAnAccount0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M42 24V9a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h15m15.05-9v10M44 37.95H34"/><circle cx="24" cy="18" r="5" fill="#fff"/><path d="M33 31c0-4.418-4.03-8-9-8s-9 3.582-9 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOpenAnAccount0)"/>`
	openDoorInnerSVG                                   = `<mask id="ipSOpenDoor0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M20 4v40l22-6V10L20 4Z"/><path stroke="#fff" stroke-linecap="round" d="M6 10h14v28H6V10Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M28 22v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOpenDoor0)"/>`
	openOneInnerSVG                                    = `<mask id="ipSOpenOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M6 18V9a3 3 0 0 1 3-3h30a3 3 0 0 1 3 3v9m-21 8l12-13m-7 8l4 4m1-9l4 4M6 30v9a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3v-9"/><circle cx="18" cy="30" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOpenOne0)"/>`
	optimizeInnerSVG                                   = `<mask id="ipSOptimize0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="m19 8l9 8l10.032-5.89L33 21l9 8l-12-1l-4.5 10L23 27l-12-1l10.508-6.35L19 8Z"/><path d="M8 42.02L23 27"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOptimize0)"/>`
	optionalInnerSVG                                   = `<mask id="ipSOptional0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" d="m14 28l8-8l4 7l8-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOptional0)"/>`
	orangeInnerSVG                                     = `<mask id="ipSOrange0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M41 26c0 9.941-6 18-17 18S7 35.94 7 26c0-3.68 1.104-7.102 3-9.953C13.225 11.197 17.74 13 24 13s10.775-1.803 14 3.047c1.895 2.85 3 6.273 3 9.953Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m26 13l3-4h-3l-2-2l-2 2h-3l3 4"/><circle cx="18" cy="20" r="2" fill="#000"/><circle cx="15" cy="27" r="2" fill="#000"/><circle cx="21" cy="25" r="2" fill="#000"/><circle cx="18" cy="32" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOrange0)"/>`
	orangeOneInnerSVG                                  = `<mask id="ipSOrangeOne0"><g fill="none"><g stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSOrangeOne1)"><path fill="#fff" stroke="#fff" d="M34.15 34.85c8.202-8.202 8.202-21.498 0-29.7L4.453 34.85c8.201 8.2 21.498 8.2 29.699 0Z"/><path stroke="#000" d="m19.301 20l14.85 14.85M19.302 20v21.213m0-21.213l20.506.707"/><path stroke="#fff" d="M39.755 14.997c1.664 6.88-.189 14.437-5.56 19.808c-5.372 5.372-12.93 7.225-19.809 5.56m-.034-15.415l8.485-8.486"/></g><defs><clipPath id="ipSOrangeOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOrangeOne0)"/>`
	orderInnerSVG                                      = `<mask id="ipSOrder0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33.05 7H38a2 2 0 0 1 2 2v33a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h7v3h14V7h2.05Z"/><path stroke="#fff" stroke-linecap="round" d="M17 4h14v6H17z"/><path stroke="#000" stroke-linecap="round" d="m27 19l-8 8.001h10.004l-8.004 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOrder0)"/>`
	orthopedicInnerSVG                                 = `<mask id="ipSOrthopedic0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="m23.028 36l10.975 6.999V24c7.674-5.21 10.493-10.022 8.457-14.434c-3.055-6.619-8-6.182-11.453-4.564C28.704 6.08 27.035 9.093 26 14.04c-3.038-6.466-7.305-9.7-12.8-9.7c-8.242 0-8.906 9.724-7.725 12.105c1.181 2.381 2.298 3.666 7.526 7.554c-.075 11.563.405 17.782 1.442 18.656c1.9 1.472 4.762-.746 8.585-6.656Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M27 25v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOrthopedic0)"/>`
	oscillatorInnerSVG                                 = `<mask id="ipSOscillator0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 9v15a6 6 0 0 0 6 6h22a6 6 0 0 0 6-6V9"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M7 10a6 6 0 0 1 6-6h22a6 6 0 0 1 0 12H13a6 6 0 0 1-6-6Z"/><circle cx="15" cy="10" r="2" fill="#000"/><circle cx="21" cy="10" r="2" fill="#000"/><circle cx="27" cy="10" r="2" fill="#000"/><circle cx="33" cy="10" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 30v14m10-14v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOscillator0)"/>`
	otherInnerSVG                                      = `<mask id="ipSOther0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M22.799 4.201L4.414 22.586a2 2 0 0 0 0 2.828L22.8 43.8a2 2 0 0 0 2.828 0l18.385-18.385a2 2 0 0 0 0-2.828L25.627 4.2a2 2 0 0 0-2.828 0Z"/><path stroke="#000" stroke-linecap="round" d="M18 24h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOther0)"/>`
	outboundInnerSVG                                   = `<mask id="ipSOutbound0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M40 24H24m10-6l6 6l-6 6"/><circle cx="20" cy="24" r="4" fill="#fff"/><path stroke-linecap="round" d="M40.706 13A20.102 20.102 0 0 0 38 9.717A19.935 19.935 0 0 0 24 4C12.954 4 4 12.954 4 24s8.954 20 20 20c5.45 0 10.392-2.18 14-5.717A20.104 20.104 0 0 0 40.706 35"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOutbound0)"/>`
	outdoorInnerSVG                                    = `<mask id="ipSOutdoor0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m4 42l14-32l10 24l4-12l12 20H4Zm33-28a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOutdoor0)"/>`
	outgoingInnerSVG                                   = `<mask id="ipSOutgoing0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M18 35a4 4 0 1 0-8 0a4 4 0 0 0 8 0Zm19 0a4 4 0 1 0-8 0a4 4 0 0 0 8 0Z"/><path stroke-linecap="round" d="M4 35h6m8 0h11m8 0h7"/><path stroke-linecap="round" stroke-linejoin="round" d="m38 19l6-6l-6-6M4 13h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOutgoing0)"/>`
	ovalOneInnerSVG                                    = `<mask id="ipSOvalOne0"><ellipse cx="24" cy="24" fill="#fff" stroke="#fff" stroke-width="4" rx="14" ry="20"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOvalOne0)"/>`
	ovenInnerSVG                                       = `<mask id="ipSOven0"><g fill="none"><rect width="40" height="28" x="4" y="8" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><rect width="16" height="12" x="12" y="16" fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="1"/><circle cx="37" cy="15" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 22h2m-2 7h2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 36v6m24-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOven0)"/>`
	overallReductionInnerSVG                           = `<mask id="ipSOverallReduction0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M15 15h18v18H15V15Z"/><path d="M11 43v-6H5m32 6v-6h6M11 5v6H5m32-6v6h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOverallReduction0)"/>`
	owlInnerSVG                                        = `<mask id="ipSOwl0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M6.358 7.31c2.662 3.848 6.186 5.092 7.86 5.215c2.855-1.398 6.203-2.202 9.782-2.202c3.58 0 6.927.804 9.782 2.201c1.674-.122 5.198-1.366 7.86-5.214c.757-.821 3.03-.439 2.164 6.573c-.289 1.756-1.087 5.585-1.616 7.49c.488 1.361.75 2.8.75 4.289C42.94 34.132 34.46 41 24 41S5.06 34.133 5.06 25.662c0-1.489.262-2.928.75-4.289c-.529-1.905-1.327-5.735-1.616-7.49C3.328 6.871 5.6 6.49 6.358 7.31Z"/><path stroke="#000" stroke-linejoin="round" d="M25 31.25c0 .69-1 3.75-1 3.75s-1-3.06-1-3.75s.448-1.25 1-1.25s1 .56 1 1.25Z"/><circle cx="17" cy="22" r="4" fill="#000" stroke="#000"/><circle cx="31" cy="22" r="4" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSOwl0)"/>`
	pacifierInnerSVG                                   = `<mask id="ipSPacifier0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSPacifier1)"><path d="m30.656 21.585l4.103-4.103a6 6 0 1 0-4.243-4.243l-4.102 4.104"/><path fill="#fff" d="M41.263 32.192L15.807 6.736l-3.889 3.89l7.778 11.313l-2.828 4.243l4.596 4.596l4.243-2.828l11.667 8.131l3.889-3.889Z"/><path d="M19.32 21.885a9.998 9.998 0 0 0-9.877 2.529c-3.905 3.905-3.905 10.237 0 14.142c3.905 3.905 10.237 3.905 14.142 0a9.998 9.998 0 0 0 2.53-9.877"/></g><defs><clipPath id="ipSPacifier1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPacifier0)"/>`
	padInnerSVG                                        = `<mask id="ipSPad0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M42 4H6v27h36V4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 31v13H6V31"/><path fill="#000" d="M16 9h-3a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1Zm0 7h-3a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1Zm9.5-7h-3a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1Zm0 7h-3a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1Z"/><path fill="#fff" d="M26.5 37.5a2.5 2.5 0 1 0-5 0a2.5 2.5 0 0 0 5 0Z"/><path fill="#000" d="M35 9h-3a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPad0)"/>`
	pageTemplateInnerSVG                               = `<mask id="ipSPageTemplate0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M23 4H4v22h19V4Zm21 30H4v9h40v-9Zm0-30H31v8h13V4Zm0 14H31v8h13v-8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPageTemplate0)"/>`
	pagodaInnerSVG                                     = `<mask id="ipSPagoda0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M18 16h12s2.424 2.672 4.5 3.429c1.301.474 3.5.571 3.5.571s-1.242.775-2.1 1.143C34.815 21.608 33 22 33 22H15s-1.815-.392-2.9-.857C11.242 20.775 10 20 10 20s2.199-.098 3.5-.571C15.576 18.673 18 16 18 16Zm-1 12h14s2.627 2.672 5 3.429c1.487.474 4 .571 4 .571s-1.42.775-2.4 1.143C36.36 33.608 34 34 34 34H14s-2.36-.392-3.6-.857C9.42 32.775 8 32 8 32s2.513-.098 4-.571C14.373 30.673 17 28 17 28Zm1-20.571C20.45 6.299 24 4 24 4s3.55 2.298 6 3.429c.772.356 2 .857 2 .857s-.726.556-1.2.857C30.183 9.535 29 10 29 10H19s-1.183-.465-1.8-.857c-.474-.301-1.2-.857-1.2-.857s1.228-.501 2-.857Z"/><path stroke-linecap="round" d="M21 10v6m6-6v6m-8 6v6m10-6v6m-13 6v10h16V34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPagoda0)"/>`
	paintInnerSVG                                      = `<mask id="ipSPaint0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m15.536 22.898l9.899 9.9m-9.899-9.9L7.05 31.383a7 7 0 1 0 9.9 9.9l8.485-8.486m-9.899 0l-4.243 4.243"/><path fill="#fff" d="m25.435 32.797l14.907-6.432c2.688-1.16 3.809-4.379 2.086-6.745C38.264 13.903 32.65 8.89 28.51 5.823c-2.29-1.696-5.33-.64-6.46 1.975l-6.514 15.1l9.899 9.9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPaint0)"/>`
	paintedEggshellInnerSVG                            = `<mask id="ipSPaintedEggshell0"><g fill="none"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-width="4" d="M24 44c10.252 0 16-6.954 16-18S31.132 4 24 4S8 14.954 8 26s5.748 18 16 18Z" clip-rule="evenodd"/><path fill="#000" d="M21 38a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path fill="#000" fill-rule="evenodd" d="M16 29.668a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPaintedEggshell0)"/>`
	paintedScreenInnerSVG                              = `<mask id="ipSPaintedScreen0"><g fill="none"><rect width="38" height="28" x="5" y="10" fill="#fff" stroke="#fff" stroke-width="4" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 24v-7"/><rect width="4" height="4" x="15" y="29" fill="#000" rx="2" transform="rotate(90 15 29)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPaintedScreen0)"/>`
	palaceInnerSVG                                     = `<mask id="ipSPalace0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 18h40L24 6L4 18Z"/><path d="M44 42H4m5-24v24m10-24v24m10-24v24m10-24v24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPalace0)"/>`
	palmInnerSVG                                       = `<mask id="ipSPalm0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M18.333 35.813L8.62 24.933a3.8 3.8 0 1 1 5.803-4.905L16 22V8.994a3 3 0 1 1 6 0V7a3 3 0 1 1 6 0v1.83a3 3 0 1 1 6 0v3.316a3 3 0 0 1 6 0v13.682c0 2.14-.678 4.227-1.937 5.958l-2.833 3.898a.768.768 0 0 1-.621.316H18.75a.56.56 0 0 1-.417-.187Z"/><rect width="16" height="8" x="19" y="36" rx="1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPalm0)"/>`
	pandaInnerSVG                                      = `<mask id="ipSPanda0"><g fill="none" stroke-width="4"><ellipse cx="24" cy="27" fill="#fff" stroke="#fff" rx="18" ry="17"/><ellipse cx="16.933" cy="24.64" fill="#000" stroke="#000" rx="3" ry="4" transform="rotate(15 16.933 24.64)"/><ellipse fill="#000" stroke="#000" rx="3" ry="4" transform="scale(-1 1) rotate(15 -109.047 -105.16)"/><path stroke="#fff" stroke-linecap="round" d="M41 20.999c3.124-3.124 3.438-8.219.313-11.343C38.19 6.532 32.124 6.876 29 10M7 21c-3.124-3.125-3.468-8.22-.344-11.343C9.781 6.532 15.876 6.875 19 10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20 35c.5 1.294 2.2 3.277 5 .862c2.8 2.415 4.5.431 5-.862"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPanda0)"/>`
	panoramaHorizontalInnerSVG                         = `<mask id="ipSPanoramaHorizontal0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 11s9 4 20 4s20-4 20-4v26s-9-4-20-4s-20 4-20 4V11Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPanoramaHorizontal0)"/>`
	paperMoneyInnerSVG                                 = `<mask id="ipSPaperMoney0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 7H9a5 5 0 0 0-5 5v24a5 5 0 0 0 5 5h30a5 5 0 0 0 5-5V12a5 5 0 0 0-5-5Z"/><path stroke="#000" stroke-linecap="round" d="m18 15l6 6l6-6m-13 8h14m-14 6h14m-7-6v11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPaperMoney0)"/>`
	paperShipInnerSVG                                  = `<mask id="ipSPaperShip0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke-linecap="round" d="m4 24l8.571 18L24 29L4 24Zm40 0l-8.571 18L24 29l20-5ZM13 42h22L24 29L13 42Z"/><path d="M12 26L24 4l12 22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPaperShip0)"/>`
	parachuteInnerSVG                                  = `<mask id="ipSParachute0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M16.727 24c2.424-2.424 4.849-3.636 7.273-3.636c2.424 0 4.849 1.212 7.273 3.636c2.828-2.424 4.95-3.636 6.363-3.636c1.414 0 3.536 1.212 6.364 3.636c0-11.046-8.954-20-20-20S4 12.954 4 24c2.828-2.424 4.95-3.636 6.364-3.636c1.414 0 3.535 1.212 6.363 3.636Z"/><path stroke-linecap="round" d="m4 24l20 20l-7.273-20m14.546 0L24 44l20-20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParachute0)"/>`
	paragraphAlphabetInnerSVG                          = `<mask id="ipSParagraphAlphabet0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 9h18M24 19h18M6 29h36M6 39h36"/><path fill="#fff" d="m11 9l-4 8h8l-4-8Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 19l1-2m9 2l-1-2m-8 0l4-8l4 8m-8 0h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParagraphAlphabet0)"/>`
	paragraphRectangleInnerSVG                         = `<mask id="ipSParagraphRectangle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 9h18M24 19h18M6 29h36M6 39h36"/><path fill="#fff" d="M6 9h10v10H6z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParagraphRectangle0)"/>`
	paragraphRoundInnerSVG                             = `<mask id="ipSParagraphRound0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 9h18M24 19h18M6 29h36M6 39h36"/><circle cx="12" cy="14" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParagraphRound0)"/>`
	paragraphTriangleInnerSVG                          = `<mask id="ipSParagraphTriangle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 9h18M24 19h18M6 29h36M6 39h36"/><path fill="#fff" d="M6 9.766a1 1 0 0 1 1.514-.857l7.057 4.233a1 1 0 0 1 0 1.716L7.515 19.09A1 1 0 0 1 6 18.234V9.766Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParagraphTriangle0)"/>`
	parallelGatewayInnerSVG                            = `<mask id="ipSParallelGateway0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M22.8 4.201L4.413 22.586a2 2 0 0 0 0 2.828L22.8 43.8a2 2 0 0 0 2.829 0l18.384-18.385a2 2 0 0 0 0-2.828L25.628 4.2a2 2 0 0 0-2.829 0Z"/><path stroke="#000" stroke-linecap="round" d="M24.043 15.534v16.944m-8.472-8.472h16.944"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParallelGateway0)"/>`
	parallelogramInnerSVG                              = `<mask id="ipSParallelogram0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M41.28 8H15.47a2 2 0 0 0-1.909 1.403l-8.75 28A2 2 0 0 0 6.721 40H32.53a2 2 0 0 0 1.909-1.404l8.75-28A2 2 0 0 0 41.279 8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParallelogram0)"/>`
	parentingBookInnerSVG                              = `<mask id="ipSParentingBook0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 31v13H13.625C9.875 44 8 42 8 37V4h12"/><circle cx="33" cy="17" r="9" fill="#fff" stroke="#fff" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 18v-2m22 2v-2M33 8c-.167-1-1.2-3.2-4-4m4 4c.083-1 .6-3.2 2-4"/><circle cx="36" cy="16" r="2" fill="#000"/><circle cx="30" cy="16" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 36h30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParentingBook0)"/>`
	parkingInnerSVG                                    = `<mask id="ipSParking0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44s16-12 16-25c0-8.284-7.163-15-16-15S8 10.716 8 19c0 13 16 25 16 25Z"/><path stroke="#000" stroke-linecap="round" d="M21 14v16"/><path fill="#000" stroke="#000" d="M21 14h6a4 4 0 0 1 0 8h-6v-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSParking0)"/>`
	partyBalloonInnerSVG                               = `<mask id="ipSPartyBalloon0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M34 16c1-8-2.873-12-9.873-12C17.127 4 13 9 14 16s7.255 12 10.127 12C27 28 33 24 34 16Z"/><path d="M25 28c-2 .97-5 3.889-5 7s10 1.444 10 4.556C30 42.666 19 44 19 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPartyBalloon0)"/>`
	passportInnerSVG                                   = `<mask id="ipSPassport0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 10h28v34H10V10Z"/><path stroke="#fff" d="m10 10l22-6v6"/><circle cx="24" cy="24" r="4" fill="#fff" stroke="#000"/><path stroke="#000" d="M20 34h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPassport0)"/>`
	passportOneInnerSVG                                = `<mask id="ipSPassportOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M13 40H9a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v4"/><rect width="34" height="28" x="13" y="44" fill="#fff" stroke="#fff" rx="2" transform="rotate(-90 13 44)"/><circle cx="27" cy="27" r="8" stroke="#000"/><path stroke="#000" stroke-linecap="round" d="M35 28s-3-.5-5 1c-2.001 1.5-2.599 5.102-2 6m-4-8c0 2-2 4-4 4m11-11s0 4-3 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPassportOne0)"/>`
	pauseOneInnerSVG                                   = `<mask id="ipSPauseOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M19 18v12m10-12v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPauseOne0)"/>`
	payCodeInnerSVG                                    = `<mask id="ipSPayCode0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 4H4v40h40V4Z"/><path stroke="#000" stroke-linecap="round" d="M12 16v16m8-16v16m8-16v16m8-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPayCode0)"/>`
	payCodeOneInnerSVG                                 = `<mask id="ipSPayCodeOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M32 6h10v10H32zm0 26h10v10H32zM6 32h10v10H6zM6 6h10v10H6z"/><path d="M8 24h22m8 0h2M24 37v2m0-22v14m0-23v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPayCodeOne0)"/>`
	peachInnerSVG                                      = `<mask id="ipSPeach0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M10.077 13.431c4.97-5.56 13.61-3.116 16.923-1.43c1.657-.633 6.197-1.358 9.18.664c3.727 2.528 8.423 9.24 4.074 18.719C36.775 38.968 27.69 42.157 24.376 43c-2.485-1.053-7.946-3.168-13.77-8.448c-5.28-4.788-6.741-14.169-.529-21.12Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M27 12c-1.924.75-5.772 2.25-7.87 6.75c-2.256 4.836-.525 9 0 11.25"/><path stroke-linecap="round" d="M21 4c.333.167 2.5.5 3 2.5c.437 1.749-.333 2.833-.5 4"/><path d="M28.479 11.329a1.477 1.477 0 0 1-1.416-1.808c.27-1.287.882-3.044 2.267-4.129c1.384-1.084 3.236-1.259 4.55-1.213a1.477 1.477 0 0 1 1.417 1.807c-.27 1.288-.883 3.045-2.267 4.13c-1.384 1.084-3.236 1.258-4.551 1.213Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeach0)"/>`
	pearInnerSVG                                       = `<mask id="ipSPear0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M16.64 12.746a8.081 8.081 0 0 1 14.72 0l3.061 6.754l3.686 6.322a9.88 9.88 0 0 1-1.652 12.063l-1.19 1.156a8.013 8.013 0 0 1-10.634.472a1.002 1.002 0 0 0-1.262 0a8.013 8.013 0 0 1-10.634-.472l-1.19-1.156a9.88 9.88 0 0 1-1.652-12.063L13.58 19.5l3.06-6.754Z"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M21.5 4c.667.5 2.1 1.9 2.5 3.5c.4 1.6.167 3.333 0 4"/><circle cx="16" cy="28" r="2" fill="#000"/><circle cx="18" cy="34" r="2" fill="#000"/><circle cx="23" cy="30" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPear0)"/>`
	pearlOfTheOrientInnerSVG                           = `<mask id="ipSPearlOfTheOrient0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="33" r="6" fill="#fff"/><circle cx="24" cy="13" r="3" fill="#fff"/><path stroke-linecap="round" d="M24 40v4m-2-28l-2 12m6-12l2 12m-9 9l-3 7m13-7l3 7M24 4v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPearlOfTheOrient0)"/>`
	peasInnerSVG                                       = `<mask id="ipSPeas0"><g fill="none"><g clip-path="url(#ipSPeas1)"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M27 12s7 7 7 16s-4.445 16.223-8 16c-3.556-.223-7-7-6-16s7-16 7-16Zm0 0s1-4.124 4-6.062C34 4 39.89 9 39 12c-.89 3-4 3-5 0s4-6.5 7-6.062c3 .438 3.257 5.242 3 8.062c-.501 5.5-2 10-2 10"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M27 12s0 8-7 16s-13.675 9.7-16 7c-2.325-2.7 0-10 7-17s16-6 16-6Z"/><circle cx="27.243" cy="27.408" r="2.5" fill="#fff"/><circle cx="26.243" cy="34.408" r="2.5" fill="#fff"/></g><defs><clipPath id="ipSPeas1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeas0)"/>`
	pencilInnerSVG                                     = `<mask id="ipSPencil0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSPencil1)"><path d="m31 8.999l8 8m-31 15L36 4l8 7.999l-28 28l-10 2l2-10Zm23-23l8 8m-30 15l7 7m-3-4l22-22"/></g><defs><clipPath id="ipSPencil1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPencil0)"/>`
	pennantInnerSVG                                    = `<mask id="ipSPennant0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M12 44h4M12 6V4v2Zm0 16v22v-22Zm0 22H8h4Zm-4 0h8"/><path fill="#fff" d="M12 6v16l28-8l-28-8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPennant0)"/>`
	pentagonOneInnerSVG                                = `<mask id="ipSPentagonOne0"><path fill="#fff" stroke="#fff" stroke-width="4" d="m25.23 4.958l17.63 13.743a2 2 0 0 1 .654 2.25l-7.04 19.721A2 2 0 0 1 34.59 42H13.41a2 2 0 0 1-1.884-1.328l-7.04-19.721a2 2 0 0 1 .654-2.25L22.77 4.958a2 2 0 0 1 2.46 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPentagonOne0)"/>`
	peopleInnerSVG                                     = `<mask id="ipSPeople0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14ZM6 40.8V42h36v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C35.92 28 33.68 28 29.2 28H18.8c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeople0)"/>`
	peopleBottomInnerSVG                               = `<mask id="ipSPeopleBottom0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="m32 16l6 6l6-6"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleBottom0)"/>`
	peopleBottomCardInnerSVG                           = `<mask id="ipSPeopleBottomCard0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 39H4V9h15l5-5l5 5h15v30Z"/><circle cx="24" cy="20" r="5" fill="#fff"/><path d="M33 33c0-4.418-4.03-8-9-8s-9 3.582-9 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleBottomCard0)"/>`
	peopleDeleteInnerSVG                               = `<mask id="ipSPeopleDelete0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="m33 31l8 8m-8 0l8-8m-14-3h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleDelete0)"/>`
	peopleDeleteOneInnerSVG                            = `<mask id="ipSPeopleDeleteOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="m42 15l-8 8m0-8l8 8"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleDeleteOne0)"/>`
	peopleDownloadInnerSVG                             = `<mask id="ipSPeopleDownload0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M37 40V30m-4 6l4 4l4-4m-14-8h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleDownload0)"/>`
	peopleLeftInnerSVG                                 = `<mask id="ipSPeopleLeft0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="m44 11l-6 6l6 6"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleLeft0)"/>`
	peopleMinusInnerSVG                                = `<mask id="ipSPeopleMinus0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path fill="#fff" fill-rule="evenodd" d="M30 35h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 35h12m-15-7h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleMinus0)"/>`
	peopleMinusOneInnerSVG                             = `<mask id="ipSPeopleMinusOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14ZM4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/><path fill="#fff" fill-rule="evenodd" d="M32 19h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 19h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleMinusOne0)"/>`
	peoplePlusInnerSVG                                 = `<mask id="ipSPeoplePlus0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path fill="#fff" fill-rule="evenodd" d="M36 29v12v-12Zm-6 6h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 29v12m-6-6h12m-15-7h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeoplePlus0)"/>`
	peoplePlusOneInnerSVG                              = `<mask id="ipSPeoplePlusOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14ZM4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/><path fill="#fff" fill-rule="evenodd" d="M38 13v12v-12Zm-6 6h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 13v12m-6-6h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeoplePlusOne0)"/>`
	peopleRightInnerSVG                                = `<mask id="ipSPeopleRight0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="m38 11l6 6l-6 6"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleRight0)"/>`
	peopleSafeInnerSVG                                 = `<mask id="ipSPeopleSafe0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M6 9.256L24.009 4L42 9.256v10.778C42 31.362 34.75 40.419 24.003 44C13.253 40.42 6 31.36 6 20.029V9.256Z"/><circle cx="24" cy="18" r="5" fill="#fff" stroke-linecap="round"/><path stroke-linecap="round" d="M32 31a8 8 0 1 0-16 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleSafe0)"/>`
	peopleSafeOneInnerSVG                              = `<mask id="ipSPeopleSafeOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff"/><path d="M4 41c0-8.837 8.059-16 18-16"/><path fill="#fff" d="M28 29.2c0-1.067 7-3.2 7-3.2s7 2.133 7 3.2c0 8.533-7 12.8-7 12.8s-7-4.267-7-12.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleSafeOne0)"/>`
	peopleSearchInnerSVG                               = `<mask id="ipSPeopleSearch0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M27 28h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21m13-1l-3.172-3.171"/><path fill="#fff" stroke-linecap="round" d="M38 35a3.987 3.987 0 0 1-1.172 2.828A4 4 0 1 1 38 35Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleSearch0)"/>`
	peopleSearchOneInnerSVG                            = `<mask id="ipSPeopleSearchOne0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 41c0-8.837 8.059-16 18-16"/><circle cx="35" cy="34" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m40 38l4 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleSearchOne0)"/>`
	peopleSpeakInnerSVG                                = `<mask id="ipSPeopleSpeak0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="M33 8s2.25 4.5 0 10m7-14s4.5 8.1 0 18"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleSpeak0)"/>`
	peopleTopInnerSVG                                  = `<mask id="ipSPeopleTop0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="m32 20l6-6l6 6"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleTop0)"/>`
	peopleTopCardInnerSVG                              = `<mask id="ipSPeopleTopCard0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M44 8H4v30h15l5 5l5-5h15V8Z"/><circle cx="24" cy="19" r="5" fill="#fff"/><path d="M33 32c0-4.418-4.03-8-9-8s-9 3.582-9 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleTopCard0)"/>`
	peopleUnknownInnerSVG                              = `<mask id="ipSPeopleUnknown0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path fill="#fff" fill-rule="evenodd" d="M32 22h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 22h12"/><path fill="#fff" fill-rule="evenodd" d="M32 16h12h-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 16h12"/><path fill="#fff" fill-rule="evenodd" d="M35 13v12v-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M35 13v12"/><path fill="#fff" fill-rule="evenodd" d="M41 13v12v-12Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M41 13v12"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleUnknown0)"/>`
	peopleUploadInnerSVG                               = `<mask id="ipSPeopleUpload0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M37 30v10m4-6l-4-4l-4 4m-6-6h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeopleUpload0)"/>`
	peoplesInnerSVG                                    = `<mask id="ipSPeoples0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="M32.608 7A6.996 6.996 0 0 1 36 13a6.996 6.996 0 0 1-3.392 6"/><path fill="#fff" d="M4 40.8V42h30v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496C27.92 28 25.68 28 21.2 28h-4.4c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C4 34.08 4 36.32 4 40.8Z"/><path d="M44 42v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeoples0)"/>`
	peoplesTwoInnerSVG                                 = `<mask id="ipSPeoplesTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path d="M12 7.255A6.992 6.992 0 0 0 9 13a6.996 6.996 0 0 0 3.392 6M36 7.255A6.992 6.992 0 0 1 39 13a6.992 6.992 0 0 1-3 5.745"/><path fill="#fff" d="M12 40v2h24v-2c0-3.727 0-5.591-.609-7.062a8 8 0 0 0-4.33-4.329C29.591 28 27.727 28 24 28s-5.591 0-7.061.609a8 8 0 0 0-4.33 4.33C12 34.408 12 36.273 12 40Z"/><path d="M44 42v-1.2c0-4.48 0-6.72-.872-8.432a8 8 0 0 0-3.496-3.496M4 42v-1.2c0-4.48 0-6.72.872-8.432a8 8 0 0 1 3.496-3.496"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPeoplesTwo0)"/>`
	percentageInnerSVG                                 = `<mask id="ipSPercentage0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="11" cy="11" r="5" fill="#fff"/><circle cx="37" cy="37" r="5" fill="#fff"/><path d="M42 6L6 42"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPercentage0)"/>`
	performanceInnerSVG                                = `<mask id="ipSPerformance0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 4C12.954 4 4 12.954 4 24s8.954 20 20 20s20-8.954 20-20a19.94 19.94 0 0 0-2.358-9.43"/><path fill="#fff" d="M35 10c2.21 0 4-1.343 4-3s-1.79-3-4-3s-4 1.343-4 3s1.79 3 4 3ZM24 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M31 6.5V24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPerformance0)"/>`
	perfumeInnerSVG                                    = `<mask id="ipSPerfume0"><g fill="none"><rect width="16" height="10" x="16" y="4" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="3"/><rect width="36" height="24" x="6" y="20" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 33c3.042-3.867 12-3 18-1s14 5 18 0"/><path fill="#000" d="M25 9a1 1 0 1 1-2 0a1 1 0 0 1 2 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPerfume0)"/>`
	perfumerBottleInnerSVG                             = `<mask id="ipSPerfumerBottle0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="24" x="5" y="17" fill="#fff" stroke="#fff" rx="2"/><path fill="#fff" stroke="#fff" d="M14 7h20v10H14z"/><path fill="#000" stroke="#000" d="M18 25h12v8H18z"/><path stroke="#000" d="M30 29h13M5 29h13"/><path stroke="#fff" d="M5 24v10m38-10v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPerfumerBottle0)"/>`
	permissionsInnerSVG                                = `<mask id="ipSPermissions0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M20 10H6a2 2 0 0 0-2 2v26a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2v-2.5"/><path d="M10 23h8m-8 8h24"/><circle cx="34" cy="16" r="6" fill="#fff" stroke-linejoin="round"/><path stroke-linejoin="round" d="M44 28.419C42.047 24.602 38 22 34 22s-5.993 1.133-8.05 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPermissions0)"/>`
	personalCollectionInnerSVG                         = `<mask id="ipSPersonalCollection0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff"/><path d="M4 41c0-8.837 8.059-16 18-16"/><path fill="#fff" d="M31.85 28C29.724 28 28 30.009 28 32.486c0 4.487 4.55 8.565 7 9.514c2.45-.949 7-5.027 7-9.514C42 30.01 40.276 28 38.15 28c-1.302 0-2.453.753-3.15 1.906C34.303 28.753 33.152 28 31.85 28Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPersonalCollection0)"/>`
	personalPrivacyInnerSVG                            = `<mask id="ipSPersonalPrivacy0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="11" r="7" fill="#fff"/><path d="M4 41c0-8.837 8.059-16 18-16"/><path fill="#fff" d="M27 31h14v10H27z"/><path d="M37 31v-3a3 3 0 1 0-6 0v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPersonalPrivacy0)"/>`
	pesticideInnerSVG                                  = `<mask id="ipSPesticide0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M15 11.368V4h18v7.368l6 6.119V42a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2V17.486l6-6.118Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M9 23h8v12H9"/><path stroke="#fff" stroke-linecap="round" d="M15 11.5h18"/><path stroke="#000" stroke-linecap="round" d="M31 23v6m0 5v1"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M9 38V20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPesticide0)"/>`
	petrolInnerSVG                                     = `<mask id="ipSPetrol0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 42V6h-3l-9 10H12l-6 6v20h36Z"/><path stroke="#fff" stroke-linecap="round" d="M12 16L22 6h18"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M20.643 28.889c1.431-1.88 2.535-4.479 3.131-5.889c1.044 1.41 3.31 4.948 4.026 6.829c.894 2.35-1.342 5.171-4.026 5.171c-2.684 0-4.92-3.76-3.131-6.111Z"/><path stroke="#fff" stroke-linecap="round" d="m11 8l-7 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPetrol0)"/>`
	phoneInnerSVG                                      = `<mask id="ipSPhone0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M8 30h32v12a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V30Z"/><path stroke="#fff" stroke-linejoin="round" d="M40 30V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v24"/><path stroke="#000" stroke-linecap="round" d="M22 37h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhone0)"/>`
	phoneBoothInnerSVG                                 = `<mask id="ipSPhoneBooth0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 34h20v9H14zm0-30h20v6H14z"/><path d="M14 10v24m6-24v24m2-18v4m10 6H14m20-16v24M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneBooth0)"/>`
	phoneCallInnerSVG                                  = `<mask id="ipSPhoneCall0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M41.78 20.607a13.06 13.06 0 0 0-.25-5.102a12.939 12.939 0 0 0-3.415-6.018a12.94 12.94 0 0 0-6.018-3.416a13.068 13.068 0 0 0-5.102-.249m7.195 13.981a5.991 5.991 0 0 0-1.692-5.132a5.991 5.991 0 0 0-5.132-1.691"/><path fill="#fff" d="M14.376 8.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.866l-2.357 4.713s.683 3.512 3.541 6.37c2.859 2.858 6.359 3.53 6.359 3.53l4.712-2.357a2 2 0 0 1 1.867.041l4.42 2.457a2 2 0 0 1 1.027 1.748v5.074c0 2.583-2.4 4.45-4.848 3.623c-5.028-1.696-12.832-4.927-17.78-9.873c-4.946-4.947-8.176-12.752-9.873-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneCall0)"/>`
	phoneIncomingInnerSVG                              = `<mask id="ipSPhoneIncoming0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M15.376 9.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.866l-2.357 4.713s.683 3.512 3.542 6.37c2.858 2.858 6.358 3.53 6.358 3.53l4.713-2.357a2 2 0 0 1 1.866.041l4.42 2.457a2 2 0 0 1 1.027 1.748v5.074c0 2.583-2.4 4.45-4.847 3.623c-5.028-1.696-12.833-4.927-17.78-9.873c-4.947-4.947-8.177-12.752-9.874-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/><path stroke-linecap="round" d="M29 20L42 7.5M42 20H29V7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneIncoming0)"/>`
	phoneIncomingOneInnerSVG                           = `<mask id="ipSPhoneIncomingOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M13.376 9.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.866l-2.357 4.713s.683 3.512 3.542 6.37c2.858 2.858 6.358 3.53 6.358 3.53l4.712-2.357a2 2 0 0 1 1.867.041l4.42 2.457a2 2 0 0 1 1.027 1.748v5.074c0 2.583-2.4 4.45-4.848 3.623c-5.028-1.696-12.832-4.927-17.78-9.873c-4.946-4.947-8.176-12.752-9.873-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/><path stroke-linecap="round" d="m34.24 6l-8 8l8 8m8-7.992h-16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneIncomingOne0)"/>`
	phoneMissedInnerSVG                                = `<mask id="ipSPhoneMissed0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M15.996 8.686a2 2 0 0 1 1.749 1.03l2.446 4.406a2 2 0 0 1 .04 1.865l-2.356 4.714s.683 3.511 3.541 6.37c2.859 2.858 6.358 3.53 6.358 3.53l4.713-2.357a2 2 0 0 1 1.866.04l4.42 2.458A2 2 0 0 1 39.8 32.49v5.073c0 2.584-2.4 4.45-4.848 3.624c-5.028-1.697-12.833-4.927-17.78-9.874c-4.946-4.947-8.177-12.751-9.873-17.78c-.826-2.447 1.04-4.847 3.624-4.847h5.072Z"/><path stroke-linecap="round" d="M38.735 9.286L30.25 17.77m0-8.484l8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneMissed0)"/>`
	phoneOneInnerSVG                                   = `<mask id="ipSPhoneOne0"><g fill="none"><rect width="38" height="38" x="5" y="5" stroke="#fff" stroke-width="4" rx="3"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11 12h8v24h-8zm14 0h12v6H25z"/><circle cx="25" cy="24" r="2" fill="#fff"/><circle cx="25" cy="30" r="2" fill="#fff"/><circle cx="25" cy="36" r="2" fill="#fff"/><circle cx="31" cy="24" r="2" fill="#fff"/><circle cx="31" cy="30" r="2" fill="#fff"/><circle cx="31" cy="36" r="2" fill="#fff"/><circle cx="37" cy="24" r="2" fill="#fff"/><circle cx="37" cy="30" r="2" fill="#fff"/><circle cx="37" cy="36" r="2" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneOne0)"/>`
	phoneOutgoingInnerSVG                              = `<mask id="ipSPhoneOutgoing0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M28 20L41 7.5M28 7h13v13"/><path fill="#fff" d="M14.376 9.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.866l-2.357 4.713s.683 3.512 3.542 6.37c2.858 2.858 6.358 3.53 6.358 3.53l4.713-2.357a2 2 0 0 1 1.866.041l4.42 2.457a2 2 0 0 1 1.027 1.748v5.074c0 2.583-2.4 4.45-4.847 3.623c-5.028-1.696-12.833-4.927-17.78-9.873c-4.947-4.947-8.177-12.752-9.874-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneOutgoing0)"/>`
	phoneOutgoingOneInnerSVG                           = `<mask id="ipSPhoneOutgoingOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14.376 9.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.866l-2.357 4.713s.683 3.512 3.541 6.37c2.859 2.858 6.359 3.53 6.359 3.53l4.712-2.357a2 2 0 0 1 1.867.041l4.42 2.457a2 2 0 0 1 1.027 1.748v5.074c0 2.583-2.4 4.45-4.848 3.623c-5.028-1.696-12.832-4.927-17.78-9.873c-4.946-4.947-8.176-12.752-9.873-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/><path stroke-linecap="round" d="m35 6l8 8l-8 8m-8-7.992h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneOutgoingOne0)"/>`
	phoneTelephoneInnerSVG                             = `<mask id="ipSPhoneTelephone0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M16.996 7.686a2 2 0 0 1 1.749 1.03l2.446 4.406a2 2 0 0 1 .04 1.865l-2.356 4.714s.683 3.511 3.541 6.37c2.859 2.858 6.358 3.53 6.358 3.53l4.713-2.357a2 2 0 0 1 1.866.04l4.42 2.458A2 2 0 0 1 40.8 31.49v5.073c0 2.584-2.4 4.45-4.848 3.624c-5.028-1.697-12.833-4.927-17.78-9.874c-4.946-4.947-8.177-12.751-9.873-17.78c-.826-2.447 1.04-4.847 3.624-4.847h5.072Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneTelephone0)"/>`
	phoneTwoInnerSVG                                   = `<mask id="ipSPhoneTwo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="3.918" d="M19.44 14c.444 0 .854.241 1.07.63l1.496 2.695c.196.353.205.78.024 1.14L21 21s.252 2.252 2 4c1.748 1.748 4 2 4 2l2.527-1.038c.36-.18.788-.17 1.141.025l2.703 1.503c.388.216.629.625.629 1.07v3.103c0 1.58-1.468 2.721-2.965 2.216c-3.076-1.038-7.85-3.013-10.875-6.04c-3.026-3.025-5.001-7.798-6.039-10.874c-.505-1.497.636-2.965 2.216-2.965h3.103Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneTwo0)"/>`
	phoneVideoCallInnerSVG                             = `<mask id="ipSPhoneVideoCall0"><g fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M14.376 9.794a2 2 0 0 1 1.748 1.03l2.447 4.406a2 2 0 0 1 .04 1.865l-2.357 4.714s.683 3.511 3.541 6.37c2.859 2.858 6.358 3.53 6.358 3.53l4.713-2.357a2 2 0 0 1 1.867.04l4.42 2.458a2 2 0 0 1 1.027 1.748v5.073c0 2.584-2.4 4.45-4.848 3.624c-5.028-1.696-12.832-4.927-17.78-9.873c-4.946-4.947-8.176-12.752-9.873-17.78c-.826-2.448 1.04-4.848 3.624-4.848h5.073Z"/><path stroke-linecap="round" d="M39 15H27V5h12v3l5-2v8l-5-2v3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhoneVideoCall0)"/>`
	phonographInnerSVG                                 = `<mask id="ipSPhonograph0"><g fill="none"><rect width="36" height="36" x="6" y="6" stroke="#fff" stroke-width="4" rx="3"/><circle cx="24" cy="25" r="11" fill="#fff" stroke="#fff" stroke-width="4"/><rect width="4" height="4" x="22" y="23" fill="#000" rx="2"/><rect width="4" height="4" x="34" y="34" fill="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m28 20l8-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhonograph0)"/>`
	photographInnerSVG                                 = `<mask id="ipSPhotograph0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-width="4" clip-path="url(#ipSPhotograph1)"><path stroke-linejoin="bevel" d="M34 13V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h15"/><path stroke-linejoin="round" d="M28 42c-7-4-3.668-9.774-5.023-11c-1.652-1.495-2.59-2.888-2.977-5c-.388-2.112 1.07-4.526 2.977-3C24.885 24.526 28 31 28 31l2-2l1-11s-1-4-1-6s4 1 6 4c0 10.442 1.5 20 6 28"/><path stroke-linejoin="round" d="M25 17.4L21 11l-8 16h7M6 22l6-11l5 7"/></g><defs><clipPath id="ipSPhotograph1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPhotograph0)"/>`
	pianoInnerSVG                                      = `<mask id="ipSPiano0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 8h40v16H4z"/><path d="M4 24h40v16H4zm6 0v8m6-8v8m10-8v8m6-8v8m6-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPiano0)"/>`
	picInnerSVG                                        = `<mask id="ipSPic0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M5 10a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V10Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M14.5 18a1.5 1.5 0 1 0 0-3a1.5 1.5 0 0 0 0 3Z" clip-rule="evenodd"/><path fill="#fff" d="m15 24l5 4l6-7l17 13v4a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-4l10-10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPic0)"/>`
	picOneInnerSVG                                     = `<mask id="ipSPicOne0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="24" r="20" stroke-linecap="round" stroke-linejoin="round"/><path stroke-linecap="round" stroke-linejoin="round" d="m9 37l8-9l16 13"/><circle cx="18" cy="17" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m24 33l8-10l10 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPicOne0)"/>`
	pictureInnerSVG                                    = `<mask id="ipSPicture0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#fff" d="M18 23a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path d="M27.79 26.22a2 2 0 0 1 3.243.053l8.775 12.583c.924 1.326-.025 3.144-1.64 3.144H16l11.79-15.78Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPicture0)"/>`
	pictureAlbumInnerSVG                               = `<mask id="ipSPictureAlbum0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="30" height="30" x="6" y="6" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M42 12v27a3 3 0 0 1-3 3H12"/><path stroke="#000" stroke-linecap="round" d="m6 25l7.656-6.806a2 2 0 0 1 2.674.015L26 27m-4-4l4.785-3.988a2 2 0 0 1 2.48-.063L36 24"/><path stroke="#fff" stroke-linecap="round" d="M6 19v8m30-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPictureAlbum0)"/>`
	pictureOneInnerSVG                                 = `<mask id="ipSPictureOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#fff" d="M18 23a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path d="M42 36L31 26l-10 9l-7-6l-8 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPictureOne0)"/>`
	pieInnerSVG                                        = `<mask id="ipSPie0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 0 1 7.363 1.404L24 24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPie0)"/>`
	pieFiveInnerSVG                                    = `<mask id="ipSPieFive0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 1 1-13.69 34.58L24 24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieFive0)"/>`
	pieFourInnerSVG                                    = `<mask id="ipSPieFour0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 0 1 0 40V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieFour0)"/>`
	pieOneInnerSVG                                     = `<mask id="ipSPieOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 0 1 14.58 6.31L24 24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieOne0)"/>`
	pieSevenInnerSVG                                   = `<mask id="ipSPieSeven0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 1 1-14.58 6.31L24 24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieSeven0)"/>`
	pieSixInnerSVG                                     = `<mask id="ipSPieSix0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4A20 20 0 1 1 4 24h20V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieSix0)"/>`
	pieThreeInnerSVG                                   = `<mask id="ipSPieThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 0 1 14.58 33.69L24 24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieThree0)"/>`
	pieTwoInnerSVG                                     = `<mask id="ipSPieTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20"/><path fill="#fff" d="M24 4a20 20 0 0 1 20 20H24V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPieTwo0)"/>`
	pigInnerSVG                                        = `<mask id="ipSPig0"><g fill="none"><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M14.054 9.644a9.115 9.115 0 0 1 1.414 1.845a15.95 15.95 0 0 1 8.483-2.426c3.146 0 6.08.906 8.555 2.471c.4-.691.886-1.337 1.44-1.89c2.521-2.516 6.946-3.624 8.991-1.583c2.045 2.04.934 6.456-1.587 8.972a9.358 9.358 0 0 1-2.638 1.824a15.89 15.89 0 0 1 1.24 6.175c0 8.819-7.164 15.968-16 15.968C15.113 41 7.95 33.85 7.95 25.032c0-2.204.447-4.304 1.256-6.214a9.34 9.34 0 0 1-2.556-1.785c-2.522-2.516-3.632-6.932-1.587-8.972c2.045-2.04 6.47-.933 8.99 1.583Z"/><ellipse cx="24" cy="29" fill="#fff" stroke="#fff" stroke-width="4" rx="8" ry="7"/><circle cx="17" cy="18" r="2" fill="#fff"/><circle cx="21" cy="29" r="2" fill="#000"/><circle cx="31" cy="18" r="2" fill="#fff"/><circle cx="27" cy="29" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPig0)"/>`
	pigeonInnerSVG                                     = `<mask id="ipSPigeon0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 26c-1.04-1.793-2.15-5.551 2.008-10.244c1.213-1.141 2.806-2.64 5.716-3.423C24.842 10.867 26.401 8.52 24.323 5C25.882 5.978 29 9.693 29 16.733"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16.253 27.93C8 23.57 4.51 30.195 4 33.755c4 0 8.679 2.911 10.721 5.823c3.676 4.66 9.36 3.56 11.742 2.427c7.352-3.883 9.87-3.56 10.21-2.912c.41 3.106 1.532 3.883 2.043 3.883c3.676.388 4.935-4.045 5.105-6.31c.817-9.319-1.361-9.707-2.552-8.736c-4.902 5.824-7.829 6.957-8.68 6.795c-3.675-.777-3.233-2.265-2.552-2.913C36.572 26.377 36.504 14.34 35.653 9c-2.45 5.825-6.467 8.251-8.169 8.737c-10.21 2.718-11.742 7.928-11.231 10.193Z"/><circle cx="12" cy="31.412" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPigeon0)"/>`
	pillInnerSVG                                       = `<mask id="ipSPill0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5.615 22.585a3 3 0 0 1 0-4.242L18.343 5.615a3 3 0 0 1 4.242 0l19.8 19.799a3 3 0 0 1 0 4.242L29.657 42.384a3 3 0 0 1-4.243 0L5.615 22.585Z"/><circle cx="14.808" cy="20.465" r="2" fill="#000" transform="rotate(-45 14.808 20.465)"/><circle cx="23.293" cy="28.949" r="2" fill="#000" transform="rotate(-45 23.293 28.95)"/><circle cx="19.05" cy="24.707" r="2" fill="#000" transform="rotate(-45 19.05 24.707)"/><circle cx="27.536" cy="33.193" r="2" fill="#000" transform="rotate(-45 27.536 33.193)"/><circle cx="20.464" cy="14.807" r="2" fill="#000" transform="rotate(-45 20.464 14.807)"/><circle cx="28.95" cy="23.293" r="2" fill="#000" transform="rotate(-45 28.95 23.293)"/><circle cx="24.707" cy="19.051" r="2" fill="#000" transform="rotate(-45 24.707 19.05)"/><circle cx="33.193" cy="27.535" r="2" fill="#000" transform="rotate(-45 33.193 27.535)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPill0)"/>`
	pillsInnerSVG                                      = `<mask id="ipSPills0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="m9.973 22.062l7.278-6.106l7.277-6.107c4.442-3.727 11.065-3.148 14.793 1.294c3.727 4.443 3.148 11.066-1.294 14.793l-7.278 6.107l-7.277 6.106c-4.443 3.728-11.066 3.148-14.793-1.294c-3.728-4.442-3.148-11.065 1.294-14.793Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m19.689 21.861l5.737 6.838"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPills0)"/>`
	pinInnerSVG                                        = `<mask id="ipSPin0"><g fill="none"><g clip-path="url(#ipSPin1)"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M10.696 17.504c2.639-2.638 5.774-2.565 9.182-.696L32.62 9.745l-.721-4.958L43.213 16.1l-4.947-.71l-7.074 12.73c1.783 3.638 1.942 6.544-.697 9.182l-7.778-7.778L6.443 41.556l11.995-16.31l-7.742-7.742Z"/></g><defs><clipPath id="ipSPin1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPin0)"/>`
	pinwheelInnerSVG                                   = `<mask id="ipSPinwheel0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M21 4v17H11L21 4Zm6 40V27h10L27 44Zm0-33l17 10H27V11Zm-6 26L4 27h17v10Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPinwheel0)"/>`
	pivotTableInnerSVG                                 = `<mask id="ipSPivotTable0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 4H6a2 2 0 0 0-2 2l.001 36a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20.009 34.008H33.5v-14"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24.5 38.5L23 37l-3-3l3-3l1.5-1.5m4.5-5l1.5-1.5l3-3l3 3l1.5 1.5"/><path stroke="#000" stroke-linecap="round" d="M14 4v40M4 14.038L44 14"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M8 4h20M8 44h20"/><path stroke="#fff" stroke-linecap="round" d="M44 8v10M4 8v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPivotTable0)"/>`
	planInnerSVG                                       = `<mask id="ipSPlan0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 19h38v22a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V19Z"/><path stroke="#fff" stroke-linejoin="round" d="M5 10a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v9H5v-9Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m16 31l6 6l12-12"/><path stroke="#fff" stroke-linecap="round" d="M16 5v8m16-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlan0)"/>`
	planetInnerSVG                                     = `<mask id="ipSPlanet0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 40c8.837 0 16-7.163 16-16S32.837 8 24 8S8 15.163 8 24s7.163 16 16 16Z"/><path stroke-linecap="round" d="M37.564 15.51c4.22.368 7.115 1.662 7.686 3.796c1.144 4.268-7.443 10.277-19.18 13.421c-11.736 3.145-22.177 2.235-23.32-2.033c-.6-2.236 1.472-4.95 5.269-7.48"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlanet0)"/>`
	platteInnerSVG                                     = `<mask id="ipSPlatte0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c5.96 0 2.336-8.864 6-13c3.126-3.53 14-1.914 14-7c0-11.046-8.954-20-20-20S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M28 17a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm-12 4a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm1 13a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlatte0)"/>`
	playInnerSVG                                       = `<mask id="ipSPlay0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" stroke="#000" d="M20 24v-6.928l6 3.464L32 24l-6 3.464l-6 3.464V24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlay0)"/>`
	playBasketballInnerSVG                             = `<mask id="ipSPlayBasketball0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-miterlimit="2" stroke-width="4" d="M32 16a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m23 40l8.11-2.06c.78-.19 1.02-1.19.42-1.72L23 29l4-8l-10.41-3.74c-.5-.18-.9-.54-1.13-1.02L11 8"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m23 29l-6.97 8.79c-.21.25-.47.45-.77.57L5 42m22-21l9.9 2.79c.47.14.88.44 1.14.85L42 31"/><path fill="#fff" d="M18 8a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlayBasketball0)"/>`
	playOneInnerSVG                                    = `<mask id="ipSPlayOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M15 24V11.876l10.5 6.062L36 24l-10.5 6.062L15 36.124V24Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlayOne0)"/>`
	playTwoInnerSVG                                    = `<mask id="ipSPlayTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" rx="3"/><path fill="#000" stroke="#000" d="M18.5 24v-7.794l6.75 3.897L32 24l-6.75 3.897l-6.75 3.897V24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlayTwo0)"/>`
	playVolleyballInnerSVG                             = `<mask id="ipSPlayVolleyball0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-miterlimit="2" stroke-width="4" d="M29 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path fill="#fff" d="M41 24a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m16 24l-2.27 11.26a2 2 0 0 1-2.81 1.5L4 34m34-4L23.76 19.07c-.77-.57-1.83-.51-2.54.13l-4.84 4.43a.996.996 0 0 0 .09 1.55L26 32.15c.72.53 1.01 1.48.69 2.32L23.12 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlayVolleyball0)"/>`
	playWrongInnerSVG                                  = `<mask id="ipSPlayWrong0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 44C12.954 44 4 35.046 4 24S12.954 4 24 4s20 8.954 20 20m-11 9l8 8m0-8l-8 8"/><path fill="#fff" d="M20 24v-6.928l6 3.464L32 24l-6 3.464l-6 3.464V24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlayWrong0)"/>`
	playbackProgressInnerSVG                           = `<mask id="ipSPlaybackProgress0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 5h40v26H4z"/><path fill="#000" stroke="#000" d="m22 14l6 4l-6 4v-8Z"/><path stroke="#fff" d="M11 40H6m11 0h25m-25 0a3 3 0 1 1-6 0a3 3 0 0 1 6 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlaybackProgress0)"/>`
	plugInnerSVG                                       = `<mask id="ipSPlug0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 14h36v10c-4 8-10 12-18 12S10 32 6 24V14Z"/><path stroke="#fff" stroke-linecap="round" d="m33 34l-1 10H16l-1-10"/><path stroke="#000" stroke-linecap="round" d="M22 24h4"/><path stroke="#fff" stroke-linecap="round" d="M16 4v8m16-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlug0)"/>`
	plugOneInnerSVG                                    = `<mask id="ipSPlugOne0"><g fill="none" stroke-width="4"><rect width="24" height="24" x="12" y="12" fill="#fff" stroke="#fff" rx="3"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M24 36v5a3 3 0 0 1-3 3H8m12-32V4m8 8V4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M22 24h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlugOne0)"/>`
	plusCrossInnerSVG                                  = `<mask id="ipSPlusCross0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M30 4H18v14H4v12h14v14h12V30h14V18H30V4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPlusCross0)"/>`
	pointInnerSVG                                      = `<mask id="ipSPoint0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 41C13.5 38.25 8.001 30 5 25c-3-5 3.313-9.688 7-6l4 4V7.5a3.5 3.5 0 1 1 7 0V16a3.5 3.5 0 1 1 7 0v1.5a3.5 3.5 0 0 1 7-.002V22.5a3.5 3.5 0 0 1 7 0v8.744c0 1.155-.262 2.3-.913 3.254C41.917 36.212 39.602 39.035 36 41c-5.5 3-11.5 2.75-17 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPoint0)"/>`
	pointOutInnerSVG                                   = `<mask id="ipSPointOut0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 44H17.476a.257.257 0 0 1-.218-.121L7.86 28.727a4.095 4.095 0 1 1 7.011-4.23l2.462 4.194V7.942a3.942 3.942 0 0 1 7.884 0v9.329c0 .585.465 1.066 1.05 1.085l11.621.388A2.185 2.185 0 0 1 40 20.928V41a3 3 0 0 1-3 3Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPointOut0)"/>`
	pokeballOneInnerSVG                                = `<mask id="ipSPokeballOne0"><g fill="none"><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><circle cx="24" cy="24" r="6" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 24h14M4 24h14"/><circle cx="24" cy="24" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPokeballOne0)"/>`
	pokerInnerSVG                                      = `<mask id="ipSPoker0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 4H12v40h30V4Z"/><path stroke="#fff" stroke-linecap="round" d="M4 11.79L12 10v34L4 11.79Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" d="m27 18l-5 6l5 6l5-6l-5-6Z"/><path stroke="#000" stroke-linecap="round" d="M18 10v4m18 20v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPoker0)"/>`
	popcornInnerSVG                                    = `<mask id="ipSPopcorn0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33.696 40.868L39 17H7l5.304 23.868c.334 1.501.5 2.252 1.049 2.692c.548.44 1.317.44 2.856.44H29.79c1.539 0 2.308 0 2.856-.44c.549-.44.715-1.19 1.05-2.692Z"/><path stroke="#000" d="m27 44l1-27m-9 27l-1-27"/><path stroke="#fff" d="M31 44H15m16-27H15m-4 0s-1-3 .5-4.5s4.5-1 4.5-1s0-3 2-4s5 .5 5 .5s2-3.357 5-2.5c3 .857 3 4.5 3 4.5s2.5 0 4 2s0 5 0 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPopcorn0)"/>`
	popcornOneInnerSVG                                 = `<mask id="ipSPopcornOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 16h34l-7 28H14L7 16Z"/><path stroke="#000" d="M20 16v28m8-28v28"/><path fill="#fff" stroke="#fff" d="M33 9a4 4 0 0 0-2.646 7h5.292A4 4 0 0 0 33 9Zm-9 0a4 4 0 0 0-2.646 7h5.292A4 4 0 0 0 24 9Zm-9 0a4 4 0 0 0-2.646 7h5.292A4 4 0 0 0 15 9Z"/><path stroke="#fff" d="M22.874 9a4 4 0 1 0-7.748 0m17.748 0a4 4 0 1 0-7.748 0M16 16h16M16 44h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPopcornOne0)"/>`
	potInnerSVG                                        = `<mask id="ipSPot0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m34 28l10-4"/><path fill="#fff" d="M4 28h30l-.439 3.802A7 7 0 0 1 26.607 38H11.393a7 7 0 0 1-6.954-6.198L4 28Z"/><path d="M19 10v10m-8-8v6m16-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPot0)"/>`
	potentiometerInnerSVG                              = `<mask id="ipSPotentiometer0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><ellipse cx="24" cy="20" fill="#fff" rx="20" ry="8"/><path d="M24 4v15m-8 15v8m8-8v10m8-10v8M4 20v12.364s1.11 2.397 4.5 4.665M44 20v12.364s-1.11 2.397-4.5 4.665"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPotentiometer0)"/>`
	poutingFaceInnerSVG                                = `<mask id="ipSPoutingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm9-11l-4 2m-14-2l4 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPoutingFace0)"/>`
	powderInnerSVG                                     = `<mask id="ipSPowder0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 40V20a3 3 0 0 0-3-3h-5.285c-1.541 0-2.892 1.243-3.924 2.388C30.633 20.674 28.377 22 24 22c-4.377 0-6.633-1.326-7.791-2.612C15.177 18.243 13.826 17 12.285 17H7a3 3 0 0 0-3 3v20a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 17c0 2.761-4.03 5-9 5s-9-2.239-9-5"/><ellipse cx="24" cy="10" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="9" ry="5"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M33 17v-7m-18 7v-7"/><ellipse cx="27" cy="10" fill="#fff" rx="2" ry="1"/><ellipse cx="21" cy="10" fill="#fff" rx="2" ry="1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPowder0)"/>`
	powerSupplyInnerSVG                                = `<mask id="ipSPowerSupply0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M32.297 6H15.704a1 1 0 0 0-.942.662l-6.67 18.581a1 1 0 0 0-.04.525l1.793 9.42a1 1 0 0 0 .982.812h26.346a1 1 0 0 0 .982-.813l1.794-9.419a1 1 0 0 0-.041-.525l-6.67-18.58A1 1 0 0 0 32.297 6Z"/><path stroke="#fff" d="M24 36v8"/><path stroke="#000" d="M24 12v6m-7.5 5.402l3 5.196m12-5.196l-3 5.196"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPowerSupply0)"/>`
	powerSupplyOneInnerSVG                             = `<mask id="ipSPowerSupplyOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33 34H15L8 17.75L10 9h28l2 8.75L33 34Z"/><path stroke="#fff" d="M18 4v5m12-5v5m-6 25v10h16v-7.368"/><path stroke="#000" d="M18 21h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPowerSupplyOne0)"/>`
	powerpointInnerSVG                                 = `<mask id="ipSPowerpoint0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M19 15h10v10H19z"/><path stroke="#000" stroke-linecap="round" d="M19 33V15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPowerpoint0)"/>`
	pptInnerSVG                                        = `<mask id="ipSPpt0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M4 8h40"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M8 8h32v26H8V8Z" clip-rule="evenodd"/><path stroke="#000" d="m22 16l5 5l-5 5"/><path stroke="#fff" d="m16 42l8-8l8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPpt0)"/>`
	preschoolInnerSVG                                  = `<mask id="ipSPreschool0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 35h34a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2Z"/><path stroke="#000" d="M14 14v14m20-14v14M24 17v8m-4-4h8"/><path stroke="#fff" stroke-linejoin="round" d="M4 41h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPreschool0)"/>`
	prescriptionInnerSVG                               = `<mask id="ipSPrescription0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M8 8a2 2 0 0 1 2-2h17v12h13v22a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V8Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m27 6l13 12M27.024 6v12.082H40"/><path stroke="#000" stroke-linecap="round" d="M14 30h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPrescription0)"/>`
	pressInnerSVG                                      = `<mask id="ipSPress0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M22 43c-4.726-1.767-8.668-7.815-10.64-11.357c-.852-1.53-.403-3.408.964-4.502a3.83 3.83 0 0 1 5.1.283L19 29V17.5a2.5 2.5 0 0 1 5 0v6a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v7.868c0 1.07-.265 2.128-.882 3.003C37.095 39.82 35.255 42.034 33 43c-3.5 1.5-6.63 1.634-11 0Z"/><path d="M29 12a8 8 0 1 0-15.748 2m0 0c.088.343.199.677.33 1l-.33-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPress0)"/>`
	previewOpenInnerSVG                                = `<mask id="ipSPreviewOpen0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 36c11.046 0 20-12 20-12s-8.954-12-20-12S4 24 4 24s8.954 12 20 12Z"/><path fill="#000" stroke="#000" d="M24 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPreviewOpen0)"/>`
	printerInnerSVG                                    = `<mask id="ipSPrinter0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M37 32H11v12h26V32Z"/><path stroke-linecap="round" d="M4 20h40v18h-6.983v-6H10.98v6H4V20Z" clip-rule="evenodd"/><path fill="#fff" d="M38 4H10v16h28V4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPrinter0)"/>`
	printerTwoInnerSVG                                 = `<mask id="ipSPrinterTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M38 20V8a2 2 0 0 0-2-2H12a2 2 0 0 0-2 2v12"/><rect width="36" height="22" x="6" y="20" rx="2"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M20 34h15v8H20v-8Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 26h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPrinterTwo0)"/>`
	prisonInnerSVG                                     = `<mask id="ipSPrison0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M6 4v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4M6 7h14m8 15H6v22h22m-12 0V13m-6 9v-9m3-9v3m14 6v3m8-3v3m8-3v3"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M43 44V16H27v28h16Z"/><path stroke="#000" d="M35 34v10"/><path stroke="#fff" d="M31 44h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPrison0)"/>`
	projectorInnerSVG                                  = `<mask id="ipSProjector0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 16h6v16H4V16h20"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 38v-6h6v6H6Zm36 0v-6h-6v6h6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 24h8"/><circle cx="31" cy="16" r="7" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="31" cy="16" r="3" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProjector0)"/>`
	projectorOneInnerSVG                               = `<mask id="ipSProjectorOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21 21V10H10v11"/><rect width="40" height="16" x="4" y="21" fill="#fff" stroke="#fff" stroke-width="4" rx="2"/><rect width="4" height="4" x="14" y="27" fill="#000" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M28 29h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProjectorOne0)"/>`
	projectorThreeInnerSVG                             = `<mask id="ipSProjectorThree0"><g fill="none"><path fill="#fff" d="M6 38v-6h36v6h-6v-6H12v6H6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42 38v-6h-6v6h6ZM6 38v-6h6v6H6Zm18-22H4v16h40V16h-6m-28 8h8"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M31 23a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path fill="#000" d="M31 19a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProjectorThree0)"/>`
	projectorTwoInnerSVG                               = `<mask id="ipSProjectorTwo0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 12a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V12Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M12 19h6m-6 6h4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M14 40v-6m20 6v-6"/><circle cx="31" cy="22" r="5" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProjectorTwo0)"/>`
	proportionalScalingInnerSVG                        = `<mask id="ipSProportionalScaling0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSProportionalScaling1)"><path d="M22.268 7c.77-1.333 2.694-1.333 3.464 0l17.32 30c.77 1.333-.192 3-1.731 3H6.678c-1.54 0-2.501-1.667-1.732-3l17.32-30Z"/><path stroke-linecap="round" d="m19 40l13-22m0 22l6-11"/></g><defs><clipPath id="ipSProportionalScaling1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProportionalScaling0)"/>`
	protectInnerSVG                                    = `<mask id="ipSProtect0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 9.256L24.009 4L42 9.256v10.778A26.316 26.316 0 0 1 24.003 45A26.32 26.32 0 0 1 6 20.029V9.256Z"/><path stroke="#000" stroke-linecap="round" d="m15 23l7 7l12-12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProtect0)"/>`
	protectionInnerSVG                                 = `<mask id="ipSProtection0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M42 24c0-9.389-8.059-17-18-17S6 14.611 6 24h36Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M24 24.008v14.537C24 41.558 21.514 44 18.5 44S13 41.558 13 38.545"/><path stroke-linecap="round" d="M24 4v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSProtection0)"/>`
	publicToiletInnerSVG                               = `<mask id="ipSPublicToilet0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="15" cy="10" r="4"/><circle cx="33" cy="10" r="4"/><path d="M10 20h10l-2 22h-6l-2-22Zm18 0h10l2 11h-3l-1 11h-6l-1-11h-3l2-11Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPublicToilet0)"/>`
	pullDoorInnerSVG                                   = `<mask id="ipSPullDoor0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 8v32l18.2 4V4L6 8Z"/><path stroke="#fff" d="M24.2 8H42v32H24.2"/><path stroke="#000" d="M18 22v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPullDoor0)"/>`
	pullRequestsInnerSVG                               = `<mask id="ipSPullRequests0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M37 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM11 12a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="M11 12v24m13-26h9a4 4 0 0 1 4 4v22"/><path stroke-linecap="round" d="m30 16l-6-6l6-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPullRequests0)"/>`
	pumpkinInnerSVG                                    = `<mask id="ipSPumpkin0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="40" height="26" x="4" y="14" fill="#fff" rx="13"/><ellipse cx="24" cy="27" rx="8" ry="13"/><path stroke-linecap="round" stroke-linejoin="round" d="M30 6h-3a3 3 0 0 0-3 3v5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPumpkin0)"/>`
	pureNaturalInnerSVG                                = `<mask id="ipSPureNatural0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M11 41c4.167-1.79 8.092-2.757 11.775-2.898c3.682-.142 8.424.49 14.225 1.898"/><path stroke-linecap="round" d="M23.045 44c-.767-9.44-.449-16.773.955-22"/><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" d="M24 23.176c1.59-6.018 4.39-9.607 8.4-10.766c4.009-1.16 7.876-.629 11.6 1.594c.019 4.892-2.105 8.476-6.37 10.751c-4.266 2.276-8.81 1.75-13.63-1.579Zm-.208-1.062c.833-7.187-.837-12.248-5.01-15.185C14.61 3.992 9.776 3.336 4.284 4.96c-.959 6.63.508 11.643 4.399 15.039c3.892 3.396 8.928 4.101 15.109 2.114Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPureNatural0)"/>`
	pushDoorInnerSVG                                   = `<mask id="ipSPushDoor0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M6 6h36v36H6"/><path fill="#fff" stroke="#fff" d="M6 6v36l18-6V12L6 6Z"/><path stroke="#000" d="M18 22v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPushDoor0)"/>`
	pushpinInnerSVG                                    = `<mask id="ipSPushpin0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 4H16l4 3l-4 13s-6 4-6 8h10l4 16l4-16h10c0-4-4-6.833-6-8L28 7l4-3Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPushpin0)"/>`
	puzzleInnerSVG                                     = `<mask id="ipSPuzzle0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 24V12h9v-2a6 6 0 0 1 12 0v2h9v12h4a6 6 0 0 1 0 12h-4v8H4v-8h4a6 6 0 0 0 0-12H4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPuzzle0)"/>`
	pyramidOneInnerSVG                                 = `<mask id="ipSPyramidOne0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="m19 14l14 28H5l14-28Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m24 25l-9 17"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M33 42h10.5L35 28l-4.5 8"/><path stroke="#fff" stroke-linecap="round" d="M25.984 26.396c6.228-1.582 9.994-7.914 8.412-14.142c-1.582-6.228-7.914-9.995-14.142-8.412c-6.229 1.582-9.995 7.913-8.413 14.142a11.604 11.604 0 0 0 1.937 4.078"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M20 42H10m12.5-21l5 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSPyramidOne0)"/>`
	qingniaoClueInnerSVG                               = `<mask id="ipSQingniaoClue0"><g fill="none"><path fill="#fff" d="M1.387 27.28c1.962 9.4 11.124 15.472 20.559 13.7l-.006.004c10.992-1.795 16.14-8.437 20.323-11.761c2.225-1.767 3.39-2.8 4.53-3.396c-.746.126-1.226-.101-1.87-.328c-.712-.25-1.624-.502-3.315-.278c-3.223.428-6.043 3.65-6.043 3.65l-1.72 1.528a17.616 17.616 0 0 1-7.234 3.323a17.657 17.657 0 0 1-12.378-1.963c-4.227-2.415-7.437-6.549-8.507-11.673a17.44 17.44 0 0 1 .416-8.77C2.114 15.365.134 21.283 1.387 27.28Z"/><path fill="#fff" fill-rule="evenodd" d="m21.946 40.98l-.006.004c10.992-1.795 16.14-8.437 20.323-11.761c2.225-1.767 3.39-2.8 4.53-3.396c-.746.126-1.226-.101-1.87-.328c-.712-.25-1.624-.502-3.315-.278c-3.223.428-6.043 3.65-6.043 3.65l-1.72 1.528a17.616 17.616 0 0 1-7.234 3.323a17.657 17.657 0 0 1-12.378-1.963c-4.227-2.415-7.437-6.549-8.507-11.673a17.44 17.44 0 0 1 .416-8.77C2.114 15.365.134 21.283 1.387 27.28c1.962 9.4 11.124 15.472 20.559 13.7Z" clip-rule="evenodd"/><path fill="#fff" fill-rule="evenodd" d="M35.75 28.586c-2.675 9.346-12.453 14.764-21.841 12.102C5.724 38.367.538 30.668 1.116 22.538A16.375 16.375 0 0 0 12.954 36.56c8.723 2.475 17.808-2.56 20.294-11.244c.718-2.511.806-5.052.357-7.455a16.394 16.394 0 0 0-3.887-7.9a17.656 17.656 0 0 1 5.623 7.731a17.445 17.445 0 0 1 .408 10.895Z" clip-rule="evenodd"/><path fill="#000" d="m27.459 32.468l.527.919l.857-.353l.79-.352c1.593-.795 1.518-.674 3.434-1.943c1.916-1.27 2.928-2.04 4.4-3.815l-.818-.649c-.969 1.222-2.038 2.138-3.87 3.351c-1.154.765-2.93 1.714-5.32 2.842Z"/><path fill="#fff" fill-rule="evenodd" d="M18.696 6.118c2.35 0 4.63.47 6.727 1.335c-8.67 2.447-14.15 11.076-12.552 19.99a17.907 17.907 0 0 0 .08.416l.006.027l.01.056c.025.115.05.229.077.342l.015.066a17.299 17.299 0 0 0 .7 2.27c-2.95-2.1-4.877-4.666-6.119-7.339c-1.65-3.553-1.89-7.647-.607-12.8a17.596 17.596 0 0 1 8.781-4.127c.967-.16 1.93-.236 2.882-.236ZM5.386 17.417l.014.35a17.39 17.39 0 0 1 .063-3.218a24.42 24.42 0 0 0-.077 2.868Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSQingniaoClue0)"/>`
	quadrilateralInnerSVG                              = `<mask id="ipSQuadrilateral0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M28.038 8H7a3 3 0 0 0-3 3v26a3 3 0 0 0 3 3h32.413c2.163 0 3.616-2.22 2.748-4.203l-11.375-26A3 3 0 0 0 28.038 8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSQuadrilateral0)"/>`
	rabbitInnerSVG                                     = `<mask id="ipSRabbit0"><g fill="none"><ellipse cx="24" cy="32" fill="#fff" stroke="#fff" stroke-width="4" rx="17" ry="12"/><circle cx="18" cy="29.412" r="2" fill="#000"/><circle cx="24" cy="35.412" r="2" fill="#000"/><circle cx="30" cy="29.412" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12.667 22c-1.315-3.167-3.607-10.887-2.254-16.087c.376-1 1.803-2.7 4.509-1.5c.375.166 1.24.8 1.69 2C17.74 8.413 16.05 21 16.05 21m19.337 1c1.316-3.167 3.545-10.887 2.192-16.087c-.376-1-1.804-2.7-4.51-1.5c-.376.166-1.24.8-1.691 2c-1.128 2 .626 13.587.626 13.587"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRabbit0)"/>`
	radarChartInnerSVG                                 = `<mask id="ipSRadarChart0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24 3l21.874 15.893L38 45H10L2.125 18.893L24 3Z"/><path stroke="#000" stroke-linecap="round" d="m38 45l-7-8m-21 8l7-8M2 19l10 3m34-3l-10 3M24 3v10"/><path fill="#000" stroke="#000" d="m24 13l6.007 4.57L36 22l-5 15H17l-5-15l5.993-4.43L24 13Z"/><path stroke="#fff" d="m7.594 14.92l-5.469 3.973l1.97 6.526m3.936 13.054L10 45h7m14 0h7l1.968-6.527m.437-23.553l5.469 3.973l-1.969 6.526M29.468 6.973L24 3l-5.47 3.973"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadarChart0)"/>`
	radarTwoInnerSVG                                   = `<mask id="ipSRadarTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 20V4C12.954 4 4 12.954 4 24s8.954 20 20 20s20-8.954 20-20"/><path fill="#fff" fill-rule="evenodd" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadarTwo0)"/>`
	radiationInnerSVG                                  = `<mask id="ipSRadiation0"><g fill="#fff"><path d="M24.004 27a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19.04 31.476A8.94 8.94 0 0 0 24 32.969a8.94 8.94 0 0 0 4.96-1.493l6.061 9.207A19.867 19.867 0 0 1 24 44c-4.073 0-7.861-1.22-11.021-3.317l6.062-9.207Zm-4.024-6.992l-10.98.661A20.062 20.062 0 0 1 15.053 6l4.92 9.869a9.028 9.028 0 0 0-4.958 8.615Zm13.01-8.615L32.946 6a20.062 20.062 0 0 1 11.019 19.145l-10.98-.661a9.028 9.028 0 0 0-4.958-8.615Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadiation0)"/>`
	radioInnerSVG                                      = `<mask id="ipSRadio0"><g fill="none" stroke-width="4"><rect width="38" height="28" x="5" y="13" fill="#fff" stroke="#fff" rx="2"/><circle cx="18" cy="28" r="6" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M30 24h6m-6 8h6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m7 13l18-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadio0)"/>`
	radioNannyInnerSVG                                 = `<mask id="ipSRadioNanny0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M36 42.001V21.688C36 15.313 31.09 10 24 10s-12 5.313-12 11.688V42c0 1.105.895 1.999 2 1.999h20c1.105 0 2-.894 2-1.999Z"/><circle cx="24" cy="23" r="4" fill="#000" stroke="#000"/><path stroke="#000" d="M18 34h2m6 4h4"/><path stroke="#fff" d="M12 20V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadioNanny0)"/>`
	radioOneInnerSVG                                   = `<mask id="ipSRadioOne0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="38" height="28" x="5" y="14" stroke-linecap="round" stroke-linejoin="round" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="M32 22h4m-4 6h4m-4 6h4"/><circle cx="18" cy="28" r="7" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M10 14V6h28v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadioOne0)"/>`
	radioTwoInnerSVG                                   = `<mask id="ipSRadioTwo0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><circle cx="24" cy="24" r="8" fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadioTwo0)"/>`
	radishInnerSVG                                     = `<mask id="ipSRadish0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M37 23.2C37 32 24 44 24 44S11 32 11 23.2C11 15.91 16.82 10 24 10s13 5.91 13 13.2Z"/><path stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" d="M24 4v6m-6-5l4 5m8-5l-4 5"/><path stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" d="M12 20h8m9 7h7m-20 7h6"/><path stroke="#fff" stroke-linejoin="round" d="M13.812 15A13.272 13.272 0 0 0 11 23.2c0 5.555 5.18 12.384 9 16.666"/><path stroke="#fff" d="M37 23.2c0 2.774-1.291 5.866-3.06 8.8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadish0)"/>`
	radishOneInnerSVG                                  = `<mask id="ipSRadishOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M39 15c2.183.555 4 1.5 4 4s-3 3-5 3M26 10c0-3 1.749-5 4-5c2 0 3.048.62 4 3m-3 4s.951-2.132 2.123-2.91c1.87-1.243 4.377-1.372 5.748 0a4.057 4.057 0 0 1 0 5.748C37.28 16.43 35.997 17 35.997 17"/><path fill="#fff" stroke="#fff" d="M10 14c-5.084 5.085-6.417 12.913-3.41 19.103C6.59 33.103 5 41 6 42s8.862-.592 8.862-.592A15.96 15.96 0 0 0 21.802 43c4.334 0 8.97-1.853 12.199-5c3.184-3.184 4.607-7.298 4.607-11.764c0-4.507-1.607-8.236-4.953-11.711c-3.346-3.476-7.254-5.213-11.766-5.213c-4.507 0-8.704 1.504-11.888 4.688Z"/><path stroke="#000" d="M5 28s5-1 7 3m6 11s1-4-1-6"/><path stroke="#fff" d="M21.803 43a15.95 15.95 0 0 1-6.94-1.592M6.59 33.103C3.582 26.913 4.915 19.085 10 14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRadishOne0)"/>`
	railwayInnerSVG                                    = `<mask id="ipSRailway0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M12 6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H14a2 2 0 0 1-2-2V6Z"/><circle cx="18" cy="26" r="2" fill="#000"/><circle cx="30" cy="26" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 20h24"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21 38h6m-9 6h12"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m17 32l-6 12m20-12l6 12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 15v10M12 15v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRailway0)"/>`
	rankingListInnerSVG                                = `<mask id="ipSRankingList0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 8H6a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" d="M24 17v14m8-7v7m-16-9v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRankingList0)"/>`
	rattleInnerSVG                                     = `<mask id="ipSRattle0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSRattle1)"><circle cx="30.075" cy="15.562" r="11" fill="#fff" transform="rotate(40 30.075 15.562)"/><path d="M21.648 8.491c-4.61.049-6.326-3.35-8.576-.67c-2.032 2.423.493 5.636-1.435 7.934m13.665 10.162l-5.785 6.894c-1.607 1.915-1.682 5.116-3.61 7.414s-4.746 2.545-7.044.616c-2.298-1.928-2.545-4.746-.617-7.044c1.929-2.298 5.068-2.928 6.675-4.843c1.607-1.915 5.163-5.893 5.785-6.894"/><circle cx="11.24" cy="19.339" r="3" fill="#fff" transform="rotate(40 11.24 19.34)"/><circle cx="28.462" cy="37.707" r="3" fill="#fff" transform="rotate(40 28.462 37.707)"/><path d="M37.216 24.165c.63 3.139 2.853 8.268.863 9.862c-1.99 1.593-6.525-1.559-7.687 1.382"/></g><defs><clipPath id="ipSRattle1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRattle0)"/>`
	rattleOneInnerSVG                                  = `<mask id="ipSRattleOne0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSRattleOne1)"><circle cx="29.463" cy="16.989" r="11" fill="#fff" transform="rotate(40 29.463 16.989)"/><path d="M38.533 23.293s-5.636.493-10.998-4.006c-5.362-4.5-5.855-10.135-5.855-10.135m5.186 18.711c-3.46 1.012-5.068 2.928-6.675 4.843c-1.607 1.915-1.682 5.115-3.61 7.414c-1.928 2.298-4.746 2.544-7.044.616c-2.298-1.928-2.545-4.746-.617-7.044c1.929-2.298 5.068-2.928 6.675-4.843c1.607-1.915 3.214-3.83 3.61-7.414M38.832 10.49a3 3 0 0 0-4.596-3.856"/></g><defs><clipPath id="ipSRattleOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRattleOne0)"/>`
	razorInnerSVG                                      = `<mask id="ipSRazor0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="20" x="5" y="5" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M14 5v20M34 5v20"/><path stroke="#fff" d="M30 5h8"/><path stroke="#000" d="M5 11h38M5 19h38"/><path stroke="#fff" d="M5 21V9m38 12V9M10 5h8m12 20h8m-28 0h8m14 0a8 8 0 1 1-16 0"/><path stroke="#fff" d="m28 32l-1 5v7m-7-12l1 5v7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRazor0)"/>`
	readBookInnerSVG                                   = `<mask id="ipSReadBook0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M24 21v23c-3.291-4-13.371-4-18-4V18c9.874 0 16.114 2 18 3Zm0 0v23c3.291-4 13.371-4 18-4V18c-9.874 0-16.114 2-18 3Z"/><circle cx="24" cy="12" r="8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReadBook0)"/>`
	receiveInnerSVG                                    = `<mask id="ipSReceive0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4.592 19.467A2 2 0 0 1 6.537 17h34.926a2 2 0 0 1 1.945 2.467l-5.04 21A2 2 0 0 1 36.423 42H11.577a2 2 0 0 1-1.945-1.533l-5.04-21Z"/><path stroke="#fff" stroke-linejoin="round" d="M11 7h8v10h-8zm8 10l6.5-9L38 17"/><path stroke="#000" d="M15 25h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReceive0)"/>`
	receiverInnerSVG                                   = `<mask id="ipSReceiver0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M9.858 38.142c7.81 7.81 20.474 7.81 28.284 0L9.858 9.858c-7.81 7.81-7.81 20.474 0 28.284Z"/><path d="m33.9 33.9l5.27-21.986M24 24l13.172-13.172M14.1 14.1l21.986-5.27"/><path fill="#fff" d="M44 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReceiver0)"/>`
	recentViewsSortInnerSVG                            = `<mask id="ipSRecentViewsSort0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 5v25h36V5M30 37l-6 6l-6-6m6-7v13"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 21c4.05 0 7.717-2 11-6c-3.283-4-6.95-6-11-6s-7.717 2-11 6c3.283 4 6.95 6 11 6Z"/><path fill="#000" d="M24 18a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRecentViewsSort0)"/>`
	recordInnerSVG                                     = `<mask id="ipSRecord0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="38" height="24" x="5" y="18" fill="#fff" stroke="#fff" stroke-linecap="round" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M8 12h32M15 6h18"/><path stroke="#000" stroke-linecap="round" d="M26 24v6"/><path stroke="#000" d="M18 32.75c0-1.52 1.29-2.75 2.88-2.75H26v3.25c0 1.52-1.29 2.75-2.88 2.75h-2.24C19.29 36 18 34.77 18 33.25v-.5Z"/><path stroke="#000" stroke-linecap="round" d="m31 25l-5-1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRecord0)"/>`
	recordDiscInnerSVG                                 = `<mask id="ipSRecordDisc0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 12c-6.627 0-12 5.373-12 12m12 12c6.627 0 12-5.373 12-12"/><path fill="#000" stroke="#000" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRecordDisc0)"/>`
	recordPlayerInnerSVG                               = `<mask id="ipSRecordPlayer0"><g fill="none"><rect width="38" height="32" x="5" y="8" stroke="#fff" stroke-width="4" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 8v32"/><circle cx="28" cy="24" r="9" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="28" cy="24" r="3" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 16h8m-8 8h8m-8 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRecordPlayer0)"/>`
	rectangleInnerSVG                                  = `<mask id="ipSRectangle0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M38 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangle0)"/>`
	rectangleOneInnerSVG                               = `<mask id="ipSRectangleOne0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M42 8H6a2 2 0 0 0-2 2v28a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangleOne0)"/>`
	rectangleSmallInnerSVG                             = `<mask id="ipSRectangleSmall0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M36 14H12a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangleSmall0)"/>`
	rectangleTearInnerSVG                              = `<mask id="ipSRectangleTear0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 8v32a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2Z"/><path stroke="#000" d="m27 6l-6 6l6 6l-6 6l6 6l-6 6l6 6"/><path stroke="#fff" d="M18 6h16M18 42h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangleTear0)"/>`
	rectangleXInnerSVG                                 = `<mask id="ipSRectangleX0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 4L4 24l20 20l20-20L24 4Z"/><path stroke-linecap="round" d="M44 4L4 44M4 4l40 40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangleX0)"/>`
	rectangularCircularConnectionInnerSVG              = `<mask id="ipSRectangularCircularConnection0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 19a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm5 12H7v10h10V31Z"/><path stroke-linecap="round" d="M25.68 13H42v23H25"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangularCircularConnection0)"/>`
	rectangularCircularSeparationInnerSVG              = `<mask id="ipSRectangularCircularSeparation0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 19a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm30 12H32v10h10V31Z"/><path stroke-linecap="round" d="M4 25h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRectangularCircularSeparation0)"/>`
	redCrossInnerSVG                                   = `<mask id="ipSRedCross0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path fill="#000" stroke="#000" d="M27 12h-6v9h-9v6h9v9h6v-9h9v-6h-9v-9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRedCross0)"/>`
	redEnvelopeInnerSVG                                = `<mask id="ipSRedEnvelope0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M39 4H9v6l15 4l15-4V4Z"/><path d="M39 17v27H9V17"/><path d="m19 19l5 6l5-6M18 31h12m-12-6h12m-6 0v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRedEnvelope0)"/>`
	redEnvelopesInnerSVG                               = `<mask id="ipSRedEnvelopes0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M40 4H8v40h32V4Z"/><path stroke-linecap="round" d="M40 10c-4 5.762-7.68 9.32-11.68 10.892m-8.583-.114C15.737 19.206 12 15.762 8 10l11.737 10.777Z"/><path fill="#fff" d="M24 27a4.5 4.5 0 1 0 0-9a4.5 4.5 0 0 0 0 9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRedEnvelopes0)"/>`
	reduceInnerSVG                                     = `<mask id="ipSReduce0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M16 24h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReduce0)"/>`
	reduceOneInnerSVG                                  = `<mask id="ipSReduceOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M16 24h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReduceOne0)"/>`
	reduceTwoInnerSVG                                  = `<mask id="ipSReduceTwo0"><g fill="none"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-width="4" rx="3"/><path fill="#000" d="M17 30h-4.586c-.89 0-1.337 1.077-.707 1.707l4.586 4.586c.63.63 1.707.184 1.707-.707V31a1 1 0 0 0-1-1Zm13 1v4.586c0 .89 1.077 1.337 1.707.707l4.586-4.586c.63-.63.184-1.707-.707-1.707H31a1 1 0 0 0-1 1Zm1-13h4.586c.89 0 1.337-1.077.707-1.707l-4.586-4.586c-.63-.63-1.707-.184-1.707.707V17a1 1 0 0 0 1 1Zm-13-1v-4.586c0-.89-1.077-1.337-1.707-.707l-4.586 4.586c-.63.63-.184 1.707.707 1.707H17a1 1 0 0 0 1-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReduceTwo0)"/>`
	reduceUserInnerSVG                                 = `<mask id="ipSReduceUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44m13-5h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReduceUser0)"/>`
	reelInnerSVG                                       = `<mask id="ipSReel0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M31 10L14 20m20-3L14 29m20-3L15 38"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M9 4h30v6H9zm0 34h30v6H9z"/><path stroke-linecap="round" stroke-linejoin="round" d="M14 10v28"/><path d="M34 10v28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReel0)"/>`
	refractionInnerSVG                                 = `<defs><path id="ipSRefraction0" fill="#fff" d="m24 9l16.454 28.5H7.545L24 9Z"/></defs><mask id="ipSRefraction1"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><use href="#ipSRefraction0"/><use href="#ipSRefraction0"/><path d="m4 22l15.5-5m8.5-1l16-3m-14 6.5L44 21m-11.3 3L44 29"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRefraction1)"/>`
	refreshOneInnerSVG                                 = `<mask id="ipSRefreshOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><rect width="10" height="10" x="17" y="24.071" fill="#fff" stroke-linejoin="round" rx="2" transform="rotate(-45 17 24.071)"/><path d="M40.12 16c-2.945-5.927-9.06-10-16.129-10C16.924 6 10.945 10.073 8 16m0-8v8m6.78 0H8m0 16c2.945 5.927 9.061 10 16.129 10c7.067 0 13.046-4.073 15.991-10m0 8v-8m-6.78 0h6.78"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRefreshOne0)"/>`
	refrigeratorInnerSVG                               = `<mask id="ipSRefrigerator0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="28" height="36" x="9" y="4" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="M9 22h28"/><path stroke="#fff" stroke-linecap="round" d="M9 20v4m28-4v4"/><path stroke="#000" stroke-linecap="round" d="M15 29v4m0-22v4"/><path stroke="#fff" stroke-linecap="round" d="M33 40v4m-20-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRefrigerator0)"/>`
	relationalGraphInnerSVG                            = `<mask id="ipSRelationalGraph0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M4 35h40"/><path d="M24 32c0-4.418-3.806-8-8.5-8S7 27.582 7 32"/><path stroke-linecap="round" stroke-linejoin="round" d="M41 32c0-11.046-7.611-20-17-20S7 20.954 7 32"/><circle cx="41" cy="35" r="3" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><circle cx="24" cy="35" r="3" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><circle cx="7" cy="35" r="3" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRelationalGraph0)"/>`
	relievedFaceInnerSVG                               = `<mask id="ipSRelievedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31s-2 4-7 4s-7-4-7-4m3-12s-1 2-3 2s-3-2-3-2m20 0s-1 2-3 2s-3-2-3-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRelievedFace0)"/>`
	reloadInnerSVG                                     = `<mask id="ipSReload0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M22 43c-4.726-1.767-8.668-7.815-10.64-11.357c-.852-1.53-.403-3.408.964-4.502a3.83 3.83 0 0 1 5.1.283L19 29V17.5a2.5 2.5 0 0 1 5 0v6a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v7.868c0 1.07-.265 2.128-.882 3.003C37.095 39.82 35.255 42.034 33 43c-3.5 1.5-6.63 1.634-11 0Z"/><path stroke-linejoin="round" d="m36 12l-4 4l-4-4"/><path d="M14 13a9 9 0 1 1 17.849 1.651"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReload0)"/>`
	remindInnerSVG                                     = `<mask id="ipSRemind0"><g fill="none"><path fill="#fff" d="M24 4c-7.732 0-14 6.268-14 14v20h28V18c0-7.732-6.268-14-14-14Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 38V18c0-7.732 6.268-14 14-14s14 6.268 14 14v20M4 38h40"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 44a5 5 0 0 0 5-5v-1H19v1a5 5 0 0 0 5 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRemind0)"/>`
	remindDisableInnerSVG                              = `<mask id="ipSRemindDisable0"><g fill="none"><path fill="#fff" d="M24 4c-7.732 0-14 6.268-14 14v20h28V18c0-7.732-6.268-14-14-14Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 38V18c0-7.732 6.268-14 14-14s14 6.268 14 14v20M4 38h40"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 44a5 5 0 0 0 5-5v-1H19v1a5 5 0 0 0 5 5Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m19 17l10 10m0-10L19 27"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRemindDisable0)"/>`
	remoteControlInnerSVG                              = `<mask id="ipSRemoteControl0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="26" height="40" x="11" y="4" rx="2"/><circle cx="24" cy="34" r="4"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M18 10h12v8H18z"/><path stroke-linecap="round" stroke-linejoin="round" d="M23 24h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRemoteControl0)"/>`
	remoteControlOneInnerSVG                           = `<mask id="ipSRemoteControlOne0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M11 5.446C11 4.647 11.647 4 12.446 4h23.108C36.353 4 37 4.647 37 5.446V31c0 7.18-5.82 13-13 13s-13-5.82-13-13V5.446Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 16h3m8 0h3"/><circle cx="17" cy="10" r="2" fill="#fff"/><circle cx="24" cy="31" r="7" fill="#fff" stroke="#fff" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRemoteControlOne0)"/>`
	renaultInnerSVG                                    = `<mask id="ipSRenault0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M30 4H18L8 24h9l5-10h4l5 10h9L30 4Zm0 40H18L8 24h9l5 10h4l5-10h9L30 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRenault0)"/>`
	repairInnerSVG                                     = `<mask id="ipSRepair0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M17 14h12m-6 14V15m-2.857 27H8a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2v9.717"/><path fill="#fff" d="m27 38l10.5-14.5L42 27L31 42h-4v-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRepair0)"/>`
	replayMusicInnerSVG                                = `<mask id="ipSReplayMusic0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M21 24v-6l5 3l5 3l-5 3l-5 3v-6Z"/><path stroke-linecap="round" d="M11.272 36.728A17.943 17.943 0 0 0 24 42c9.941 0 18-8.059 18-18S33.941 6 24 6c-4.97 0-9.47 2.015-12.728 5.272C9.614 12.93 6 17 6 17"/><path stroke-linecap="round" d="M6 9v8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReplayMusic0)"/>`
	reportInnerSVG                                     = `<mask id="ipSReport0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M36 35H12V21c0-6.627 5.373-12 12-12s12 5.373 12 12v14Z"/><path stroke-linecap="round" d="M8 42h32M4 13l3 1m6-10l1 3m-4 3L7 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReport0)"/>`
	repositioningInnerSVG                              = `<mask id="ipSRepositioning0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M33 22c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0Z"/><path fill="#000" stroke="#000" d="M24 25a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" d="M9 14s7.5-11.5 20.5-7S42 24.5 42 24.5M42 8v16m-3 10s-6 11-19.5 7.5S6 24 6 24m0 0v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRepositioning0)"/>`
	resistorInnerSVG                                   = `<mask id="ipSResistor0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M9.858 31.071a2 2 0 0 1 0-2.829l2.95-2.95a2 2 0 0 1 1.414-.585h2.585a2 2 0 0 0 1.415-.586l5.899-5.9a2 2 0 0 0 .586-1.413v-2.586a2 2 0 0 1 .586-1.415l2.95-2.95a2 2 0 0 1 2.828 0l7.07 7.072a2 2 0 0 1 0 2.828l-2.949 2.95a2 2 0 0 1-1.414.586h-2.586a2 2 0 0 0-1.414.586l-5.9 5.9a2 2 0 0 0-.585 1.413v2.586a2 2 0 0 1-.586 1.414l-2.95 2.95a2 2 0 0 1-2.828 0l-7.071-7.071Z"/><path stroke-linecap="round" d="m7.03 40.97l6.363-6.364m21.214-21.213l6.364-6.364"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSResistor0)"/>`
	restingInnerSVG                                    = `<mask id="ipSResting0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M24 26v12"/><path stroke="#000" d="M24 6v20"/><path stroke="#fff" d="M24 4v2M8 40h26l6-6m-25 6v4m17-4v4"/><path fill="#fff" stroke="#fff" d="M24 6C14.059 6 6 14.034 6 23.944V26c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5v-2.056C42 14.034 33.941 6 24 6Z"/><path stroke="#000" d="M15 26s-1.5-5.5 1-11c2.501-5.5 8-9 8-9m9 20s.5-4.5-2-11s-7-9-7-9m0 19V6"/><path stroke="#fff" d="M28.5 21c2.485 0 4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5m-9 0c-2.485 0-4.5 2.522-4.5 5c0-2.478-2.015-5-4.5-5m-9 0c2.485 0 4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5M15.733 8C18.21 6.722 21.02 6 24 6c2.98 0 5.79.722 8.266 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSResting0)"/>`
	retroBagInnerSVG                                   = `<mask id="ipSRetroBag0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M35 14c0-5.523-4.925-10-11-10S13 8.477 13 14"/><path fill="#fff" d="M7 16a2 2 0 0 1 2-2h30a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-9a2 2 0 0 1-2-2v0a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v0a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V16Z"/><path d="M10 30v14h28V30"/><path d="M20 26h8v6h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRetroBag0)"/>`
	reverseLensInnerSVG                                = `<mask id="ipSReverseLens0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M13 25V10h6l2-3h6l2 3h6v15H13Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m20 35l4 4l-4 4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M32 38.168C39.064 36.625 45 33.1 45 29c0-2.252-1.488-4.33-4-6.001M24 39C12.954 39 3 34.523 3 29c0-2.252 1.488-4.33 4-6.001"/><path fill="#000" stroke="#000" stroke-miterlimit="10" d="M24 20a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReverseLens0)"/>`
	reverseLensOneInnerSVG                             = `<mask id="ipSReverseLensOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="m15 12l3-6h12l3 6H15Z"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M41 12H7c-1.657 0-3 1.254-3 2.8v24.4C4 40.746 5.343 42 7 42h34c1.657 0 3-1.254 3-2.8V14.8c0-1.546-1.343-2.8-3-2.8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M32 19v8m-16 0v8"/><path stroke="#000" stroke-linecap="round" d="M16 27a8 8 0 0 0 11 7.419M32 27a8 8 0 0 0-11-7.419"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReverseLensOne0)"/>`
	reverseOperationInInnerSVG                         = `<mask id="ipSReverseOperationIn0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 5h18v32H6zm18 6h18v32H24z"/><path stroke="#000" d="m13 17l4 3.79L13.333 25M35 23l-4 3.79L34.667 31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReverseOperationIn0)"/>`
	reverseOperationOutInnerSVG                        = `<mask id="ipSReverseOperationOut0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 5h18v32H6zm18 6h18v32H24z"/><path stroke="#000" d="m17 17l-4 3.79L16.667 25M31 23l4 3.79L31.333 31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSReverseOperationOut0)"/>`
	riceInnerSVG                                       = `<mask id="ipSRice0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M24 38c9.389 0 17-7.059 17-17H7c0 9.941 7.611 17 17 17Z"/><path d="M30 21c0-5.523-4.253-10-9.5-10S11 15.477 11 21"/><path d="M39 21c0-3.314-2.766-6-6.178-6c-1.443 0-2.77.48-3.822 1.286"/><path stroke-linecap="round" d="m33 15l3-10m2 13l4-7"/><path stroke-linecap="round" stroke-linejoin="round" d="m18 37l-2 6h16l-2-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRice0)"/>`
	ridingInnerSVG                                     = `<mask id="ipSRiding0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-miterlimit="2" d="M33 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" d="M40 23h-7.63c-.56 0-1.1-.24-1.48-.65l-5.34-5.78a2.01 2.01 0 0 0-2.53-.36l-7.45 4.58a1 1 0 0 0 0 1.7l7.46 4.57c.59.36.96 1.01.96 1.71L24 38"/><circle cx="36.5" cy="36.5" r="7.5" fill="#fff"/><circle cx="11.5" cy="36.5" r="7.5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRiding0)"/>`
	rightAngleInnerSVG                                 = `<mask id="ipSRightAngle0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 9.115c0-1.82 2.235-2.694 3.47-1.356l29.432 31.884c1.182 1.282.273 3.357-1.47 3.357H10a2 2 0 0 1-2-2V9.115Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightAngle0)"/>`
	rightBarInnerSVG                                   = `<mask id="ipSRightBar0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M32 6v36"/><path stroke="#fff" stroke-linecap="round" d="M29 42h6M29 6h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightBar0)"/>`
	rightCInnerSVG                                     = `<mask id="ipSRightC0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m21 33l9-9l-9-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightC0)"/>`
	rightExpandInnerSVG                                = `<mask id="ipSRightExpand0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="28" height="36" x="14" y="6" fill="#fff" rx="2"/><path d="M6 6v36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightExpand0)"/>`
	rightOneInnerSVG                                   = `<mask id="ipSRightOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m20 12l12 12l-12 12V12Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightOne0)"/>`
	rightRunInnerSVG                                   = `<mask id="ipSRightRun0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 5h18v32H6zm18 6h18v32H24z"/><path stroke="#000" d="m13 17l4 3.79L13.333 25M31 23l4 3.79L31.333 31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightRun0)"/>`
	rightSquareInnerSVG                                = `<mask id="ipSRightSquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="m19 14l10 10l-10 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightSquare0)"/>`
	rightTwoInnerSVG                                   = `<mask id="ipSRightTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 43l18-19L24 5v12H6v14h18v12Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightTwo0)"/>`
	rightUserInnerSVG                                  = `<mask id="ipSRightUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44"/><path d="m30 36l-8 8l-4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRightUser0)"/>`
	ringInnerSVG                                       = `<mask id="ipSRing0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 11.619c2.093 0 3.79-1.706 3.79-3.81C27.79 5.707 26.093 4 24 4s-3.79 1.706-3.79 3.81c0 2.103 1.697 3.809 3.79 3.809ZM9.79 40.19c2.092 0 3.789-1.705 3.789-3.809s-1.697-3.81-3.79-3.81C7.697 32.572 6 34.278 6 36.382s1.697 3.81 3.79 3.81Zm28.42 0c2.093 0 3.79-1.705 3.79-3.809s-1.697-3.81-3.79-3.81s-3.79 1.706-3.79 3.81s1.697 3.81 3.79 3.81Z"/><path stroke-linecap="round" d="M33.143 10.314A18.105 18.105 0 0 1 42 25.904c0 .578-.027 1.148-.08 1.711v0m-10.906 14.96A17.863 17.863 0 0 1 24 44c-2.488 0-4.858-.507-7.014-1.425M6.08 27.615a18.416 18.416 0 0 1-.08-1.71a18.105 18.105 0 0 1 8.857-15.59"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRing0)"/>`
	ringOneInnerSVG                                    = `<mask id="ipSRingOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 11.273A3.636 3.636 0 1 0 24 4a3.636 3.636 0 0 0 0 7.273ZM24 44a3.636 3.636 0 1 0 0-7.273A3.636 3.636 0 0 0 24 44ZM7.636 27.636a3.636 3.636 0 1 0 0-7.272a3.636 3.636 0 0 0 0 7.272Zm32.728 0a3.636 3.636 0 1 0 0-7.273a3.636 3.636 0 0 0 0 7.273Z"/><path stroke-linecap="round" d="M32.734 10.16a16.45 16.45 0 0 1 5.107 5.106m-.001 17.468a16.45 16.45 0 0 1-5.106 5.106m-17.467 0a16.45 16.45 0 0 1-5.107-5.106m0-17.468a16.45 16.45 0 0 1 5.107-5.106"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRingOne0)"/>`
	ringsInnerSVG                                      = `<mask id="ipSRings0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" stroke-linecap="round" d="M13 43c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Zm22 0c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Z"/><path stroke-linecap="round" d="M6 5h36"/><path stroke-linecap="square" d="M13 27V5m22 22V5"/><path stroke-linecap="round" d="M9 19h8m14 0h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRings0)"/>`
	roadConeInnerSVG                                   = `<mask id="ipSRoadCone0"><g fill="none"><path fill="#fff" d="M27 6h-6l-1.25 4.5L18.5 15L16 24l-2.5 9l-1.25 4.5L11 42h26l-1.5-5.4L32 24l-2.5-9l-1.25-4.5L27 6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m37 42l-1.5-5.4L32 24l-2.5-9l-1.25-4.5L27 6h-6l-1.25 4.5L18.5 15L16 24l-2.5 9l-1.25 4.5L11 42m26 0H11h26Zm0 0H6h31Zm0 0h5h-5Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13.5 33h21M32 24H16m13.5-9h-11"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m28.25 10.5l7.25 26.1m-23.25.9l7.5-27"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoadCone0)"/>`
	roadSignInnerSVG                                   = `<mask id="ipSRoadSign0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 10v12h32l6-6l-6-6H6Z"/><path stroke-linecap="round" d="M23 22v22m0-40v6m-5 34h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoadSign0)"/>`
	roadSignBothInnerSVG                               = `<mask id="ipSRoadSignBoth0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 8v8h28l4-4l-4-4H10Zm28 15v8H10l-4-4l4-4h28Z"/><path stroke-linecap="round" d="M24 31v13m0-28v7m0-19v4m-5 36h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoadSignBoth0)"/>`
	robotInnerSVG                                      = `<mask id="ipSRobot0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="30" height="26" x="9" y="17" stroke-linecap="round" stroke-linejoin="round" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="m33 9l-5 8M15 9l5 8"/><circle cx="34" cy="7" r="2"/><circle cx="14" cy="7" r="2"/><rect width="16" height="8" x="16" y="24" fill="#fff" rx="4"/><path stroke-linecap="round" stroke-linejoin="round" d="M9 24H4v10h5m30-10h5v10h-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRobot0)"/>`
	robotOneInnerSVG                                   = `<mask id="ipSRobotOne0"><g fill="none"><rect width="30" height="24" x="9" y="18" fill="#fff" stroke="#fff" stroke-width="4" rx="2"/><circle cx="17" cy="26" r="2" fill="#000"/><circle cx="31" cy="26" r="2" fill="#000"/><path fill="#000" d="M20 32a2 2 0 1 0 0 4v-4Zm8 4a2 2 0 1 0 0-4v4Zm-8 0h8v-4h-8v4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 10v8M4 26v8m40-8v8"/><circle cx="24" cy="8" r="2" stroke="#fff" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRobotOne0)"/>`
	robotTwoInnerSVG                                   = `<mask id="ipSRobotTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M5 35a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v7H5v-7Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M42 18h-8l-6-6l6-6h8"/><circle cx="8" cy="12" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 12h16m-18 4l8 17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRobotTwo0)"/>`
	rockGestureInnerSVG                                = `<mask id="ipSRockGesture0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 25V7.5c0-1.281.5-3.5 3-3.5s3 2.219 3 3.5V30l7-7c1.297-1.297 3.078-1.922 4.5-.5c1.422 1.422 1.594 2.906 0 4.5L35 33.5S29.094 44 26 44H13s-3 0-5-2s-2-4.5-2-4.5V12.781C6 12.062 6.5 10 9 10s3 2 3 2.781V25"/><rect width="6" height="12" x="12" y="19" fill="#fff" rx="3"/><rect width="6" height="12" x="18" y="19" fill="#fff" rx="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRockGesture0)"/>`
	rocketInnerSVG                                     = `<mask id="ipSRocket0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M18.705 7.894L24 4l5.295 3.894A14 14 0 0 1 35 19.172V37H13V19.172a14 14 0 0 1 5.705-11.278Z"/><path stroke-linecap="round" d="m13 17l-6 6v8l6-3V17Zm22 0l6 6v8l-6-3V17Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M18 39v3m6-3v5m6-5v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRocket0)"/>`
	rocketOneInnerSVG                                  = `<mask id="ipSRocketOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="m20.906 6.063l1.43-.954a3 3 0 0 1 3.328 0l1.43.954A20 20 0 0 1 36 22.703V33H12V22.704a20 20 0 0 1 8.906-16.641Z"/><circle cx="24" cy="20" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m12 22l-6 6.217V33h36v-4.783L36 22M24 38v6m-8-4v2m16-2v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRocketOne0)"/>`
	rockingHorseInnerSVG                               = `<mask id="ipSRockingHorse0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 29s-3-5-3-11h16s0-4.5 3-8s6-5 6-5l8 8.5v5L36 16c-4 5-2 13-2 13H14Z"/><path d="m30 29l5 12M18 29l-5 12m-9-4s6 6 20 6s20-6 20-6M11 18c0-3-2-6-7-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRockingHorse0)"/>`
	rollerskatesInnerSVG                               = `<mask id="ipSRollerskates0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path stroke="#fff" d="M44 4H28v8h16V4Z"/><path fill="#fff" stroke="#fff" d="M44 12v22c0 1.11-.89 2-2 2H8c-2.21 0-4-1.79-4-4v-6c0-4.42 3.58-8 8-8h16v-6h16Z"/><path stroke="#000" d="M14 24v-6m7 6v-6"/><path stroke="#fff" d="M23 18H12M9 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm10.33 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm10.34 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM40 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRollerskates0)"/>`
	romperInnerSVG                                     = `<mask id="ipSRomper0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m6.572 19.575l-2.165-7.217c-.244-.813.048-1.696.765-2.15C8.057 8.377 14.642 5 24 5c9.343 0 15.8 3.366 18.759 5.198c.748.463 1.068 1.377.816 2.22l-2.147 7.157A2 2 0 0 1 39.512 21H36c-1.105 0-2 .891-2 1.996v10.006c0 1.104-.905 2.011-1.973 2.295c-1.299.345-2.952 1.09-4.027 2.703c-2 3-2 6-2 6h-4s0-3-2-6c-1.075-1.613-2.728-2.358-4.027-2.703c-1.068-.284-1.973-1.19-1.973-2.295V22.996A1.996 1.996 0 0 0 12 21H8.488a2 2 0 0 1-1.916-1.425Z"/><path stroke="#000" d="M29.811 5.5a6 6 0 1 1-11.622 0"/><path stroke="#fff" d="M13.5 6.494A37.093 37.093 0 0 1 24 5c4.043 0 7.545.63 10.457 1.494"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRomper0)"/>`
	ropeSkippingInnerSVG                               = `<mask id="ipSRopeSkipping0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 32V11a7 7 0 1 1 14 0v26a7 7 0 1 0 14 0V16"/><path fill="#fff" d="M41 4v12h-6V4h6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 16h3m9 0h-3m0 0V4h-6v12m6 0h-6"/><path fill="#fff" d="M7 44V32h6v12H7Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 32h-3m-9 0h3m0 0v12h6V32m-6 0h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRopeSkipping0)"/>`
	rotateInnerSVG                                     = `<mask id="ipSRotate0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 24h30v18H12V24Z"/><path stroke-linecap="round" d="M6 8v9h9"/><path stroke-linecap="round" d="M38.475 13.299C35.195 8.87 29.933 6 24 6c-5.821 0-10.997 2.763-14.287 7.05L6 17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRotate0)"/>`
	rotateOneInnerSVG                                  = `<mask id="ipSRotateOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M44 24c0-11.046-8.954-20-20-20S4 12.954 4 24s8.954 20 20 20c6.957 0 13.084-3.552 16.667-8.94M44 24H30"/><circle cx="24" cy="24" r="6" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRotateOne0)"/>`
	rotationOneInnerSVG                                = `<mask id="ipSRotationOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 4v36h36"/><path fill="#fff" d="M28 40c0-11.046-8.954-20-20-20v20h20Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRotationOne0)"/>`
	roundInnerSVG                                      = `<mask id="ipSRound0"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff" stroke-width="4"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRound0)"/>`
	roundCaliperInnerSVG                               = `<mask id="ipSRoundCaliper0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#fff" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm20-4a20 20 0 0 1-9.284 16.887l-4.286-6.755A12 12 0 0 0 36 24h8ZM13.423 40.974A20 20 0 0 1 4 24.165l8-.066a12 12 0 0 0 5.654 10.086l-4.23 6.79Zm1.019-34.542a20 20 0 0 1 19.27.084l-3.885 6.994a12 12 0 0 0-11.562-.051l-3.823-7.027Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoundCaliper0)"/>`
	roundMaskInnerSVG                                  = `<mask id="ipSRoundMask0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#fff" d="M24 44c8.955 0 16.536-5.886 19.084-14H4.916C7.464 38.114 15.045 44 24 44Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoundMask0)"/>`
	roundSocketInnerSVG                                = `<mask id="ipSRoundSocket0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m15 26l2 6m16-6l-2 6m-7-19v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoundSocket0)"/>`
	roundTripInnerSVG                                  = `<mask id="ipSRoundTrip0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m9 24l-4-4s-1.4 4.728-1.076 7.578C4.248 30.428 7.274 32.574 10 31c2.727-1.574 34-21 34-21l-9-2L9 24Z"/><path d="m26 13l-15.202-1.615L8 13l7 7m14 24l-4-5h17v-4m-10-7l4 5H19v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRoundTrip0)"/>`
	routerInnerSVG                                     = `<mask id="ipSRouter0"><g fill="none"><rect width="40" height="14" x="4" y="28" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 35h8"/><rect width="4" height="4" x="30" y="33" fill="#000" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M12 28V8m24 20V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRouter0)"/>`
	routerOneInnerSVG                                  = `<mask id="ipSRouterOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M10 24L4 38h40l-6-14H10Z"/><path fill="#fff" fill-rule="evenodd" d="M10 4v20V4Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 4v20"/><path fill="#fff" fill-rule="evenodd" d="M38 4v20V4Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 4v20"/><path fill="#fff" fill-rule="evenodd" d="M24 4v20V4Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 4v20M4 38v6h40v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRouterOne0)"/>`
	rowingInnerSVG                                     = `<mask id="ipSRowing0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M30.02 16a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m42 31l-7 13m-2.99-4L26 29L9 40l12-20l23 5M4 40h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRowing0)"/>`
	rsMaleInnerSVG                                     = `<mask id="ipSRsMale0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4.31 16.27A2 2 0 0 1 6.29 14h35.42a2 2 0 0 1 1.981 2.27l-2.454 18A2 2 0 0 1 39.254 36H8.746a2 2 0 0 1-1.982-1.73l-2.454-18Z"/><path stroke="#000" d="M19 22h2m2 6h2m-14-6h2m2 6h2m10-6h2m2 6h2m2-6h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRsMale0)"/>`
	rssInnerSVG                                        = `<mask id="ipSRss0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v38l-16-8.273L8 44Z"/><path stroke="#000" stroke-linecap="round" d="M23.95 13.95v12m-6-6h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRss0)"/>`
	rugbyInnerSVG                                      = `<mask id="ipSRugby0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSRugby1)"><path d="M33.9 33.9c9.372-9.373 12.538-21.403 7.07-26.87c-5.467-5.468-17.497-2.302-26.87 7.07c-9.372 9.373-12.538 21.403-7.07 26.87c5.467 5.468 17.497 2.302 26.87-7.07ZM21.171 21.172l5.657 5.656m-1.414-9.899l5.657 5.657M16.93 25.414l5.656 5.657m-9.894 4.249L35.32 12.692M5.615 28.243l14.142 14.142m8.486-36.77l14.142 14.142"/></g><defs><clipPath id="ipSRugby1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRugby0)"/>`
	rulerOneInnerSVG                                   = `<mask id="ipSRulerOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M43 41H23"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M38.718 5H21L5 41h17.662L38.718 5Z"/><path stroke="#000" stroke-linejoin="round" d="M9.959 29.882h8.028m-4.722-7.412h8.028m-4.519-7.87h8.029"/><path stroke="#fff" d="M21 5L5 41"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRulerOne0)"/>`
	runLeftInnerSVG                                    = `<mask id="ipSRunLeft0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 5h18v32H6zm18 6h18v32H24z"/><path stroke="#000" d="m17 17l-4 3.79L16.667 25M35 23l-4 3.79L34.667 31"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSRunLeft0)"/>`
	sTurnDownInnerSVG                                  = `<mask id="ipSSTurnDown0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 17v-4c0-4 3-7 7-7s7 3 7 7v19M10 6v29c0 4 3 7 7 7s7-3 7-7V17"/><path stroke-linecap="round" stroke-linejoin="round" d="m15 11l-5-5l-5 5"/><circle cx="38" cy="37" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSTurnDown0)"/>`
	sTurnLeftInnerSVG                                  = `<mask id="ipSSTurnLeft0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M42 38H13c-4 0-7-3-7-7s3-7 7-7h6m0 0h16c4 0 7-3 7-7s-3-7-7-7H17"/><path stroke-linecap="round" stroke-linejoin="round" d="m37 43l5-5l-5-5"/><circle cx="12" cy="10" r="5" fill="#fff" transform="rotate(-180 12 10)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSTurnLeft0)"/>`
	sTurnRightInnerSVG                                 = `<mask id="ipSSTurnRight0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M30 24H13c-4 0-7-3-7-7s3-7 7-7h19M8 38h27c4 0 7-3 7-7s-3-7-7-7h-5"/><path stroke-linecap="round" stroke-linejoin="round" d="m13 43l-5-5l5-5"/><circle cx="37.176" cy="10" r="5" fill="#fff" transform="rotate(-180 37.176 10)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSTurnRight0)"/>`
	sTurnUpInnerSVG                                    = `<mask id="ipSSTurnUp0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 31v4c0 4-3 7-7 7s-7-3-7-7V16m28 26V13c0-4-3-7-7-7s-7 3-7 7v18"/><path stroke-linecap="round" stroke-linejoin="round" d="m33 37l5 5l5-5"/><circle cx="10" cy="11" r="5" fill="#fff" transform="rotate(-180 10 11)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSTurnUp0)"/>`
	safeRetrievalInnerSVG                              = `<mask id="ipSSafeRetrieval0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7 9.127L24.008 4L41 9.127v10.515C41 30.695 34.153 40.506 24.003 44C13.849 40.506 7 30.692 7 19.638V9.128Z"/><path fill="#000" stroke="#000" d="M24 30a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke="#000" stroke-linecap="round" d="m29 29l6 7"/><path stroke="#fff" d="M41 19.643C41 30.695 34.153 40.507 24.002 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSafeRetrieval0)"/>`
	sailboatInnerSVG                                   = `<mask id="ipSSailboat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="m8 28l-2-4h36l-2 4"/><path fill="#fff" d="M28 4L10 24h18V4Z"/><path d="m28 11l10 13H28V11ZM4 34l2.5 1.351c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0L44 34M4 40l2.5 1.351c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0L44 40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSailboat0)"/>`
	sailboatOneInnerSVG                                = `<mask id="ipSSailboatOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M21 31V5L7 31h14Zm6 0V13l14 18H27Z"/><path d="M5 37h38l-5 6H10l-5-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSailboatOne0)"/>`
	sailingInnerSVG                                    = `<mask id="ipSSailing0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path stroke-linejoin="round" d="M19 30h-8l8-9m20 9C39 17.008 28.994 4 19 4v26h20Z"/><path fill="#fff" stroke-linejoin="round" d="M32.651 41.577L42 36H6l2 6h23.114a3 3 0 0 0 1.537-.423Z"/><path stroke-linejoin="round" d="M19 30v6"/><path d="M29 21h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSailing0)"/>`
	salesReportInnerSVG                                = `<mask id="ipSSalesReport0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M41 14L24 4L7 14v20l17 10l17-10V14Z"/><path stroke="#000" stroke-linecap="round" d="M24 22v8m8-12v12m-16-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSalesReport0)"/>`
	sandwichInnerSVG                                   = `<mask id="ipSSandwich0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 36V22H6v14a4 4 0 0 0 4 4h28a4 4 0 0 0 4-4Z"/><path stroke="#000" d="M6 30h36"/><path stroke="#fff" d="M6 26v8m36-8v8M6.067 22H42c0-2.016-11.807-10.582-17.967-14.613c-6.16-4.03-11.293 1.512-15.4 6.55C5.348 17.97 6.067 19.986 6.067 22Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSandwich0)"/>`
	sandwichOneInnerSVG                                = `<mask id="ipSSandwichOne0"><g fill="none"><g stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSSandwichOne1)"><path stroke="#fff" d="M17.799 40.142s4.16 4.16 8.652 2.995c4.492-1.165 15.805-12.479 16.97-16.97c1.165-4.493-2.995-8.652-2.995-8.652M7.9 30.243s-4.16-4.16-2.995-8.652c1.164-4.492 12.478-15.806 16.97-16.97c4.492-1.165 8.652 2.994 8.652 2.994"/><rect width="40" height="14" x="5.071" y="33.071" fill="#fff" stroke="#fff" rx="7" transform="rotate(-45 5.071 33.071)"/><path stroke="#000" d="m15.678 33.779l.563-1.689a5.996 5.996 0 0 1 3.326-3.615l.42-.18a4.98 4.98 0 0 0 2.762-3.002v0a4.98 4.98 0 0 1 2.762-3.002l.95-.407a4.712 4.712 0 0 0 2.614-2.84v0a4.712 4.712 0 0 1 2.98-2.981l2.008-.67"/></g><defs><clipPath id="ipSSandwichOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSandwichOne0)"/>`
	saplingInnerSVG                                    = `<mask id="ipSSapling0"><g fill="none"><path fill="#fff" d="M27 8c-4.686 4.686-3.965 13.035-3.965 13.035S31.314 21.686 36 17s4.006-12.965 4.006-12.965S31.686 3.314 27 8Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M23.035 21.035L31 13.07m-7.965 7.965S22.314 12.686 27 8s13.006-3.965 13.006-3.965S40.686 12.314 36 17s-12.965 4.035-12.965 4.035Z"/><path fill="#fff" d="M20 21c3.85 3.843 2.971 10.971 2.971 10.971s-7.122.872-10.97-2.971c-3.85-3.843-2.969-10.971-2.969-10.971S16.151 17.157 20 21Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22.971 31.971L16.001 25m6.97 6.971s.878-7.128-2.97-10.971c-3.85-3.843-10.969-2.971-10.969-2.971S8.151 25.157 12 29c3.85 3.843 10.971 2.971 10.971 2.971ZM23 4v40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSapling0)"/>`
	saveInnerSVG                                       = `<mask id="ipSSave0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M6 9a3 3 0 0 1 3-3h25.281L42 13.207V39a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3V9Z"/><path fill="#000" fill-rule="evenodd" d="M24.008 6L24 13.385c0 .34-.448.615-1 .615h-8c-.552 0-1-.275-1-.615V6" clip-rule="evenodd"/><path stroke="#000" stroke-linejoin="round" stroke-width="4" d="M24.008 6L24 13.385c0 .34-.448.615-1 .615h-8c-.552 0-1-.275-1-.615V6h10.008Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 6h25.281"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 26h20m-20 8h10.008"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSave0)"/>`
	saveOneInnerSVG                                    = `<mask id="ipSSaveOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M39.3 6H8.7A2.7 2.7 0 0 0 6 8.7v30.6A2.7 2.7 0 0 0 8.7 42h30.6a2.7 2.7 0 0 0 2.7-2.7V8.7A2.7 2.7 0 0 0 39.3 6Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M32 6v18H15V6h17Z"/><path stroke="#000" stroke-linecap="round" d="M26 13v4"/><path stroke="#fff" stroke-linecap="round" d="M10.997 6H36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSaveOne0)"/>`
	scaleOneInnerSVG                                   = `<mask id="ipSScaleOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M18 14H5V9l13-5h12l13 5v5H30"/><path fill="#fff" stroke="#fff" d="M18 4h12v40H18z"/><path stroke="#000" stroke-linecap="round" d="M18 12h4m-4 18h5m-5-12h5m-5 6h4m-4 12h4"/><path stroke="#fff" stroke-linecap="round" d="M18 10v28"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScaleOne0)"/>`
	scallionInnerSVG                                   = `<mask id="ipSScallion0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSScallion1)"><path d="M20 24s2.5-4.5 3-9s-1-8-1-8l5-3s1 6 1 9"/><path fill="#fff" d="M6 43c-2-1.5-2-6.91 2-10s4.186-2.283 9-6S34 4 34 4l4.5 3.5l-12.19 16.24c-2.984 3.977-3.758 9.313-6.26 13.61C18.102 40.7 16 42 14 43s-6 1.5-8 0Z"/><path d="M23 30s3-2 7-4s13-2 13-2l-3-7s-8 0-11 3"/></g><defs><clipPath id="ipSScallion1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScallion0)"/>`
	scanSettingInnerSVG                                = `<mask id="ipSScanSetting0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="38" x="5" y="5" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="m34 21l3 3l-3 3m-20-6l-3 3l3 3m13-13l-3-3l-3 3m6 20l-3 3l-3-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScanSetting0)"/>`
	scheduleInnerSVG                                   = `<mask id="ipSSchedule0"><g fill="none" stroke-linecap="round" stroke-width="4"><rect width="40" height="30" x="4" y="10" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="2"/><path stroke="#fff" d="M14 6v8"/><path stroke="#000" d="M25 23H14m20 8H14"/><path stroke="#fff" d="M34 6v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSchedule0)"/>`
	schoolInnerSVG                                     = `<mask id="ipSSchool0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 33a2 2 0 0 1 2-2h6v-7l12-8l12 8v7h6a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H4V33Z"/><path stroke="#fff" stroke-linecap="round" d="M24 6v10"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 12V6s-1.5 3-6 0s-6 0-6 0v6s1.5-3 6 0s6 0 6 0Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M28 44V31h-8v13"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M18 44h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSchool0)"/>`
	scissorsInnerSVG                                   = `<mask id="ipSScissors0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="38" x="5" y="5" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M19 19c2 3 2 7 0 10m17-15L21 24l15 10"/><circle cx="16" cy="16" r="4" stroke="#000"/><circle cx="16" cy="32" r="4" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScissors0)"/>`
	scoreboardInnerSVG                                 = `<mask id="ipSScoreboard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="40" height="28" x="4" y="12" fill="#fff" stroke="#fff" rx="3"/><path stroke="#fff" stroke-linecap="round" d="M14 6v6m20-6v6"/><path stroke="#000" stroke-linecap="round" d="M10.227 24L15 19.017V33m9-21v28"/><ellipse cx="34" cy="26" stroke="#000" rx="3" ry="7"/><path stroke="#fff" stroke-linecap="round" d="M21 12h6m-6 28h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScoreboard0)"/>`
	screenRotationInnerSVG                             = `<mask id="ipSScreenRotation0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 24c0 11.046 8.954 20 20 20l-5-5m25-15c0-11.046-8.954-20-20-20l5 5"/><path fill="#fff" d="M30 41L7 18L18 7l23 23l-11 11Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScreenRotation0)"/>`
	screenshotInnerSVG                                 = `<mask id="ipSScreenshot0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 42a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke-linecap="round" d="M40.062 8C24 28.433 15.805 38.68 14.242 40.243a6 6 0 0 1-8.485 0"/><path fill="#fff" d="M38 42a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke-linecap="round" d="M42.242 40.243a6 6 0 0 1-8.485 0C32.195 38.68 24 28.446 8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScreenshot0)"/>`
	screenshotOneInnerSVG                              = `<mask id="ipSScreenshotOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M16 6H8a2 2 0 0 0-2 2v8m10 26H8a2 2 0 0 1-2-2v-8m26 10h8a2 2 0 0 0 2-2v-8M32 6h8a2 2 0 0 1 2 2v8"/><rect width="20" height="20" x="14" y="14" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScreenshotOne0)"/>`
	screenshotTwoInnerSVG                              = `<mask id="ipSScreenshotTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 24V4h40v20"/><path fill="#fff" fill-rule="evenodd" d="M10 44a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z" clip-rule="evenodd"/><path d="M36 12C20.39 33.266 15.805 40.68 14.243 42.243a6 6 0 0 1-8.486 0"/><path fill="#fff" fill-rule="evenodd" d="M38 44a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z" clip-rule="evenodd"/><path d="M42.243 42.243a6 6 0 0 1-8.486 0C32.195 40.68 27.61 33.266 12 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScreenshotTwo0)"/>`
	screwdriverInnerSVG                                = `<mask id="ipSScrewdriver0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M19 24h10v5c.961.976 2.039 2.524 3 3.5V44H16V32.5l3-3.5v-5Z"/><path stroke-linecap="round" d="M21 13v11h6V13l2-3l-2-6h-6l-2 6l2 3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSScrewdriver0)"/>`
	sdInnerSVG                                         = `<mask id="ipSSd0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M15.402 5.683A2 2 0 0 1 16.907 5H37a2 2 0 0 1 2 2v34a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2V24h4v-6H9v-5l6.402-7.317Z"/><path stroke="#000" d="M33 11v4m-12-4v4m6-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSd0)"/>`
	sdCardInnerSVG                                     = `<mask id="ipSSdCard0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M8 12v32h32V4H14l-6 8Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M15 15v6m6-9v6m12-6v6m-6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSdCard0)"/>`
	sealInnerSVG                                       = `<mask id="ipSSeal0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M5 37a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-5Z"/><path d="M5 31a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V31Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M18.763 15.664a1 1 0 0 1 .942-.664h8.59a1 1 0 0 1 .942.664L34 29H14l4.763-13.336Z"/><rect width="18" height="10.8" x="15" y="4" fill="#fff" rx="5.4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSeal0)"/>`
	searchInnerSVG                                     = `<mask id="ipSSearch0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M21 38c9.389 0 17-7.611 17-17S30.389 4 21 4S4 11.611 4 21s7.611 17 17 17Z"/><path stroke="#000" stroke-linecap="round" d="M26.657 14.343A7.975 7.975 0 0 0 21 12a7.975 7.975 0 0 0-5.657 2.343"/><path stroke="#fff" stroke-linecap="round" d="m33.222 33.222l8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSearch0)"/>`
	seatInnerSVG                                       = `<mask id="ipSSeat0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M17 21.458c-4.057 1.274-7 5.065-7 9.542c0 5.523 4.477 10 10 10a9.985 9.985 0 0 0 8.662-5"/><path stroke-linecap="round" stroke-linejoin="round" d="M38 20c-4 0-7.5-.5-14-3v12h14v14"/><circle cx="24" cy="8" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSeat0)"/>`
	securityStallInnerSVG                              = `<mask id="ipSSecurityStall0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M16 29h16v15H16zM12 4h24v6H12z"/><path d="M16 10v19m16-19v19"/><path stroke-linejoin="round" d="M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSecurityStall0)"/>`
	seedlingInnerSVG                                   = `<mask id="ipSSeedling0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 42V26"/><path fill="#fff" d="M41.942 10.007c-.776 13.024-9.13 17.236-15.946 17.896C24.896 28.009 24 27.104 24 26v-8.372c0-.233.04-.468.125-.684C27.117 9.199 34.282 8.155 40 8.02c1.105-.027 2.006.884 1.94 1.987ZM7.998 6.072c9.329.685 14.197 6.091 15.836 9.558c.115.242.166.508.166.776v7.504c0 1.14-.96 2.055-2.094 1.94C7.337 24.384 6.11 14.786 6.009 8C5.993 6.894 6.897 5.99 8 6.072Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSeedling0)"/>`
	selectedInnerSVG                                   = `<mask id="ipSSelected0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 4H4v8h8V4Zm32 32h-8v8h8v-8Zm-32 0H4v8h8v-8ZM44 4h-8v8h8V4Z"/><path stroke-linecap="round" d="M8 36V12m32 24V12M12 8h24M12 40h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSelected0)"/>`
	selectedFocusInnerSVG                              = `<mask id="ipSSelectedFocus0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 4H4v8h8V4Zm32 32h-8v8h8v-8Zm-32 0H4v8h8v-8ZM44 4h-8v8h8V4Z"/><path stroke-dasharray="1 5" stroke-linecap="round" d="M8 36V12m32 24V12M12 8h24M12 40h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSelectedFocus0)"/>`
	selfieInnerSVG                                     = `<mask id="ipSSelfie0"><g fill="none"><g stroke="#fff" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSSelfie1)"><path stroke-linecap="round" d="M29.234 6.98c3.714-1.568 11.276-2.47 13.794 5.891c2.518 8.362-8.307 14.612-8.026 8.099c.28-6.514 7.995-1.152 7.83 3.562c-.165 4.714-5.063 5.232-5.063 5.232"/><rect width="26" height="12" x="4.241" y="15.778" fill="#fff" rx="2" transform="rotate(-30 4.241 15.778)"/><path stroke-linecap="round" d="M21.5 19.67L29 32.66"/><rect width="6" height="10" x="26.401" y="34.16" fill="#fff" rx="3" transform="rotate(-30 26.401 34.16)"/><path stroke-linecap="round" d="m11.401 8.18l5.197-3m5.303 21.186l5.197-3"/></g><defs><clipPath id="ipSSelfie1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSelfie0)"/>`
	sendBackwardInnerSVG                               = `<mask id="ipSSendBackward0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 14h36V6H6zm0 14h36v-8H6z"/><path stroke-linecap="round" d="m30 36l-6 6l-6-6v0m6 6V28m0-14v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSendBackward0)"/>`
	sendToBackInnerSVG                                 = `<mask id="ipSSendToBack0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M14 21H5V5h16v9"/><path stroke-linecap="round" d="M32 27h11v16H27V32"/><path fill="#fff" d="M14 32V14h18v18H14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSendToBack0)"/>`
	seoInnerSVG                                        = `<mask id="ipSSeo0"><g fill="none" stroke-width="4"><rect width="40" height="32" x="4" y="8" fill="#fff" stroke="#fff" rx="1.633"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M16 18.948c-2-2.948-5.502-1.01-5.251 2.02C11 24 15 24 15.249 27.032C15.5 30.062 12 32 10 29.051M26 18h-4v13h4m-4-6h4"/><rect width="6" height="13" x="32" y="18" stroke="#000" stroke-linecap="round" stroke-linejoin="round" rx="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSeo0)"/>`
	seoFolderInnerSVG                                  = `<mask id="ipSSeoFolder0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M5 8a2 2 0 0 1 2-2h12l5 6h17a2 2 0 0 1 2 2v26a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V8Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m14 22l5 5l-5 5"/><path stroke="#000" stroke-linecap="round" d="M26 32h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSeoFolder0)"/>`
	serverInnerSVG                                     = `<mask id="ipSServer0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 4H4v16h40V4Zm0 24H4v16h40V28Z"/><path fill="#000" d="M13 10h-2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Zm0 24h-2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Zm8-24h-2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Zm0 24h-2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSServer0)"/>`
	setOffInnerSVG                                     = `<mask id="ipSSetOff0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-miterlimit="2" d="M29 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" d="m24 19l-4.29 8l7.6 6.02c.31.24.53.57.66.94L31.31 44m-11.6-17l-5.2 7.64C12.973 36.888 10.5 39.5 9.5 41"/><path stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" d="m42 24l-6.94.1c-.36 0-.72-.09-1.04-.27l-3.27-1.91c-4.01-2.35-8.4-3.96-12.97-4.78l-3.22-.57L12 21"/><path fill="#fff" stroke-linejoin="round" d="m8.652 19.103l6.373 3.68l-4.5 7.794l-6.373-3.68z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSetOff0)"/>`
	settingInnerSVG                                    = `<mask id="ipSSetting0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M36.686 15.171a15.37 15.37 0 0 1 2.529 6.102H44v5.454h-4.785a15.37 15.37 0 0 1-2.529 6.102l3.385 3.385l-3.857 3.857l-3.385-3.385a15.37 15.37 0 0 1-6.102 2.529V44h-5.454v-4.785a15.37 15.37 0 0 1-6.102-2.529l-3.385 3.385l-3.857-3.857l3.385-3.385a15.37 15.37 0 0 1-2.529-6.102H4v-5.454h4.785a15.37 15.37 0 0 1 2.529-6.102l-3.385-3.385l3.857-3.857l3.385 3.385a15.37 15.37 0 0 1 6.102-2.529V4h5.454v4.785a15.37 15.37 0 0 1 6.102 2.529l3.385-3.385l3.857 3.857l-3.385 3.385Z"/><path fill="#000" stroke="#000" d="M24 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSetting0)"/>`
	settingComputerInnerSVG                            = `<mask id="ipSSettingComputer0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M24 6H9a3 3 0 0 0-3 3v22a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3v-5m-18 8v8m-10 0h20"/><circle cx="37" cy="13" r="3" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M37 20v-4m0-6V6m-6.062 10.5l3.464-2m5.196-3l3.464-2m-12.124 0l3.464 2m5.196 3l3.464 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingComputer0)"/>`
	settingLaptopInnerSVG                              = `<mask id="ipSSettingLaptop0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M21 9H11a3 3 0 0 0-3 3v21h32v-7"/><path fill="#fff" stroke-linejoin="round" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><circle cx="35" cy="14" r="3"/><path stroke-linecap="round" stroke-linejoin="round" d="M35 21v-4m0-6V7m-6.062 10.5l3.464-2m5.196-3l3.464-2m-12.124 0l3.464 2m5.196 3l3.464 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingLaptop0)"/>`
	settingOneInnerSVG                                 = `<mask id="ipSSettingOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m34 41l10-17L34 7H14L4 24l10 17h20Z"/><path fill="#000" stroke="#000" d="M24 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingOne0)"/>`
	settingThreeInnerSVG                               = `<mask id="ipSSettingThree0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="15" fill="#fff"/><path d="M24 39v5m15-21h5M4 23h5M24 4v5m10.606 25.606l3.536 3.536M33.9 12.687l3.535-3.536M9.15 37.435l3.536-3.535M9.858 9.858l3.535 3.535"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingThree0)"/>`
	settingTwoInnerSVG                                 = `<mask id="ipSSettingTwo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M18.284 43.171a19.995 19.995 0 0 1-8.696-5.304a6 6 0 0 0-5.182-9.838A20.09 20.09 0 0 1 4 24c0-2.09.32-4.106.916-6H5a6 6 0 0 0 5.385-8.65a19.968 19.968 0 0 1 8.267-4.627A6 6 0 0 0 24 8a6 6 0 0 0 5.348-3.277a19.968 19.968 0 0 1 8.267 4.627A6 6 0 0 0 43.084 18A19.99 19.99 0 0 1 44 24c0 1.38-.14 2.728-.406 4.03a6 6 0 0 0-5.182 9.838a19.995 19.995 0 0 1-8.696 5.303a6.003 6.003 0 0 0-11.432 0Z"/><path fill="#000" stroke="#000" d="M24 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingTwo0)"/>`
	settingWebInnerSVG                                 = `<mask id="ipSSettingWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v12.059"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/><circle cx="37" cy="34" r="3" stroke="#fff" stroke-width="4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 41v-4m0-6v-4m-6.062 10.5l3.464-2m5.196-3l3.464-2m-12.124 0l3.464 2m5.196 3l3.464 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSettingWeb0)"/>`
	sevenKeyInnerSVG                                   = `<mask id="ipSSevenKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M18.998 15H29l-8.006 18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSevenKey0)"/>`
	shadeInnerSVG                                      = `<mask id="ipSShade0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 6C14.059 6 6 14.034 6 23.944V26c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5s4.5 2.522 4.5 5v-2.056C42 14.034 33.941 6 24 6Z"/><path stroke="#000" d="M15 26s-1.5-5.5 1-11c2.501-5.5 8-9 8-9m9 20s.5-4.5-2-11s-7-9-7-9"/><path stroke="#fff" d="M24 25v14.5a4.5 4.5 0 0 1-4.5 4.5v0a4.5 4.5 0 0 1-4.5-4.5v-1.318"/><path stroke="#000" d="M24 25V6"/><path stroke="#fff" d="M24 6V4m4.5 17c2.485 0 4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5m-9 0c-2.485 0-4.5 2.522-4.5 5c0-2.478-2.015-5-4.5-5m-9 0c2.485 0 4.5 2.522 4.5 5c0-2.478 2.015-5 4.5-5M15.733 8C18.21 6.722 21.02 6 24 6c2.98 0 5.79.722 8.266 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShade0)"/>`
	shakeInnerSVG                                      = `<mask id="ipSShake0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="m4 10l4 4.667l-4 4.666L8 24l-4 4.667l4 4.666L4 38m40-28l-4 4.667l4 4.666L40 24l4 4.667l-4 4.666L44 38"/><path fill="#fff" stroke="#fff" d="M34 6H14v36h20V6Z"/><path stroke="#000" stroke-linecap="round" d="M22 35h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShake0)"/>`
	shareOneInnerSVG                                   = `<mask id="ipSShareOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M35 16a5 5 0 1 0 0-10a5 5 0 0 0 0 10ZM13 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" d="m30 13.575l-12.66 7.67m-.002 5.319l13.34 7.883"/><path fill="#fff" d="M35 32a5 5 0 1 1 0 10a5 5 0 0 1 0-10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShareOne0)"/>`
	shareTwoInnerSVG                                   = `<mask id="ipSShareTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m26 4l18 18l-18 17V28C12 28 6 43 6 43c0-17 5-28 20-28V4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShareTwo0)"/>`
	shaverInnerSVG                                     = `<mask id="ipSShaver0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M20.785 18.73a.719.719 0 0 1 1.016 0l7.469 7.469a.72.72 0 0 1 0 1.016L17.757 38.728a6 6 0 0 1-8.485-8.486L20.785 18.73Z"/><path stroke="#fff" d="M42.581 22.389a.894.894 0 0 0 0-1.264L26.874 5.418a.894.894 0 0 0-1.263 0l-.783.783c-4.686 4.686-4.686 12.284 0 16.97c4.687 4.687 12.285 4.687 16.97 0l.783-.782Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m19.879 28.121l-1.415 1.414"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m27.657 17.515l2.828 2.828"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShaver0)"/>`
	shaverOneInnerSVG                                  = `<mask id="ipSShaverOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M36 14H12V6.02L16.474 4l4.245 2.02L24.193 4l3.474 2.02L31.912 4L36 6.02V14Z"/><path d="M12 14v19c0 15 24 15 24 0V14M20 35h8"/><circle cx="24" cy="25" r="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShaverOne0)"/>`
	shavingInnerSVG                                    = `<mask id="ipSShaving0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="20" height="27" x="14" y="17" fill="#fff" rx="2"/><path d="M19 12h10v5H19zm0 0V9c0-1 0-5 8-5h9v5h-7v3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShaving0)"/>`
	shieldInnerSVG                                     = `<mask id="ipSShield0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M6 8.256L24.009 3L42 8.256v10.778A26.316 26.316 0 0 1 24.003 44A26.32 26.32 0 0 1 6 19.029V8.256Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShield0)"/>`
	shieldAddInnerSVG                                  = `<mask id="ipSShieldAdd0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M6 8.256L24.009 3L42 8.256v10.778A26.316 26.316 0 0 1 24.003 44A26.32 26.32 0 0 1 6 19.029V8.256Z"/><path stroke="#000" stroke-linecap="round" d="M23.95 14.95v16m-8-8h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShieldAdd0)"/>`
	shipInnerSVG                                       = `<mask id="ipSShip0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M6 20.377L24 14l18 6.377L36.667 34H11.333L6 20.377Z" clip-rule="evenodd"/><path fill="#fff" d="M13 8h22l-.002 9.896L24 14l-11 3.896V8Z"/><path stroke-linecap="round" d="M24 8V4m0 20v-8M10 40l3.5 4l3.5-4l3.5 4l3.5-4l3.5 4l3.5-4l3.5 4l3.5-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShip0)"/>`
	shopInnerSVG                                       = `<mask id="ipSShop0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 12h40v8l-1.398.84a7 7 0 0 1-7.203 0L34 20l-1.398.84a7 7 0 0 1-7.203 0L24 20l-1.398.84a7 7 0 0 1-7.204 0L14 20l-1.399.84a7 7 0 0 1-7.202 0L4 20v-8Z"/><path d="M8 22.489V44h32V22M8 11.822V4h32v8"/><path fill="#fff" d="M19 32h10v12H19z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShop0)"/>`
	shoppingInnerSVG                                   = `<mask id="ipSShopping0"><g fill="none"><path fill="#fff" d="M39 32H13L8 12h36l-5 20Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M3 6h3.5L8 12m0 0l5 20h26l5-20H8Z"/><circle cx="13" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="39" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShopping0)"/>`
	shoppingBagInnerSVG                                = `<mask id="ipSShoppingBag0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 17h38l-4.2 26H9.2L5 17Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M35 17c0-6.627-4.925-12-11-12s-11 5.373-11 12"/><circle cx="17" cy="26" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 33s2 3 6 3s6-3 6-3"/><circle cx="31" cy="26" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingBag0)"/>`
	shoppingBagOneInnerSVG                             = `<mask id="ipSShoppingBagOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="28" height="30" x="10" y="12" fill="#fff" rx="3"/><path stroke-linecap="round" d="M30 18v-8a6 6 0 0 0-6-6v0a6 6 0 0 0-6 6v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingBagOne0)"/>`
	shoppingCartInnerSVG                               = `<mask id="ipSShoppingCart0"><g fill="none"><path fill="#fff" d="M39 32H13L8 12h36l-5 20Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M3 6h3.5L8 12m0 0l5 20h26l5-20H8Z"/><circle cx="13" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="39" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 22h8m-4 4v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingCart0)"/>`
	shoppingCartAddInnerSVG                            = `<mask id="ipSShoppingCartAdd0"><g fill="none"><path fill="#fff" d="M39 32H13L8 12h36l-5 20Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M3 6h3.5L8 12m0 0l5 20h26l5-20H8Z"/><circle cx="13" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="39" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 22h8m-4 4v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingCartAdd0)"/>`
	shoppingCartDelInnerSVG                            = `<mask id="ipSShoppingCartDel0"><g fill="none"><path fill="#fff" d="M39 32H13L8 12h36l-5 20Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M3 6h3.5L8 12m0 0l5 20h26l5-20H8Z"/><circle cx="13" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><circle cx="39" cy="39" r="3" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22 22h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingCartDel0)"/>`
	shoppingCartTwoInnerSVG                            = `<mask id="ipSShoppingCartTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M5 7h6l7 17h17.5L43 10m-22 2h12m-6-6v12m-9 6l-4 6h26"/><circle cx="19" cy="39" r="3" fill="#fff"/><circle cx="35" cy="39" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingCartTwo0)"/>`
	shoppingMallInnerSVG                               = `<mask id="ipSShoppingMall0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M8 44V6a1 1 0 0 1 1-1h20a1 1 0 0 1 1 1v38" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 44V6a1 1 0 0 1 1-1h20a1 1 0 0 1 1 1v38m0-29l10 6v23"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoppingMall0)"/>`
	shortSkirtInnerSVG                                 = `<mask id="ipSShortSkirt0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m12 9l5-5h14l5 5l7 26s-3 9-19 9s-19-9-19-9l7-26Z"/><path stroke="#000" d="m13 42l4-16"/><path stroke="#fff" d="M5 35s3 9 19 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShortSkirt0)"/>`
	shortsInnerSVG                                     = `<mask id="ipSShorts0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 6H11v10L4 33l15 9l5-6l5 6l15-9l-7-17V6Z"/><path fill="#000" d="M11 14a2 2 0 1 0 0 4v-4Zm26 4a2 2 0 1 0 0-4v4Zm-26 0h26v-4H11v4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 14v2l1.75 4.25M11 14v2l-1.75 4.25"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShorts0)"/>`
	shoulderBagInnerSVG                                = `<mask id="ipSShoulderBag0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4.682 23.564A3 3 0 0 1 7.63 20h32.74a3 3 0 0 1 2.947 3.564l-3.062 16A3 3 0 0 1 37.309 42H10.691a3 3 0 0 1-2.947-2.436l-3.062-16Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m24 6l-9 14h18L24 6Z"/><circle cx="24" cy="31" r="3" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShoulderBag0)"/>`
	shovelInnerSVG                                     = `<mask id="ipSShovel0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M13 4h22l-1 9l-8.5 6h-3L14 13l-1-9Z"/><path d="M24 19v11"/><rect width="6" height="14" x="21" y="30" fill="#fff" rx="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShovel0)"/>`
	shovelOneInnerSVG                                  = `<mask id="ipSShovelOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M11 4h26l-2.833 20H13.833L11 4Z"/><path stroke="#000" d="M21 11v6m6-6v6"/><path stroke="#fff" d="M24 24v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShovelOne0)"/>`
	showerHeadInnerSVG                                 = `<mask id="ipSShowerHead0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M27 20v2H9v-2c0-3.314 4.03-6 9-6s9 2.686 9 6Z"/><path d="M42 44V12.5C42 7.806 36.627 4 30 4s-12 3.806-12 8.5V14m0 15v-1m-7.829.03l-.342.94M4.171 43.03l-.342.94M18 44v-1m0-6v-2m-10.658.06l-.684 1.88"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShowerHead0)"/>`
	shrimpInnerSVG                                     = `<mask id="ipSShrimp0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20.623 11H39s0 5-3 8s-6 4-7 4s-10.5 1-13 3s-3.999 5.5 0 9s11 5 16 3s8-8 8-8l4 10s-8 3-15 4s-14 0-20-6s-7.001-13.5-2-20c4.166-5.416 10.414-6.666 12.382-6.933A9.202 9.202 0 0 1 20.623 11Z"/><path stroke="#fff" stroke-width="4" d="m26 23l-6-12"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 4h14a7 7 0 0 1 7 7v0"/><circle cx="30" cy="16" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShrimp0)"/>`
	shutterPriorityInnerSVG                            = `<mask id="ipSShutterPriority0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="m15 12l3-6h12l3 6H15Z"/><path fill="#fff" stroke="#fff" d="M41 12H7c-1.657 0-3 1.254-3 2.8v24.4C4 40.746 5.343 42 7 42h34c1.657 0 3-1.254 3-2.8V14.8c0-1.546-1.343-2.8-3-2.8Z"/><path stroke="#000" stroke-linecap="round" d="M28 20c-3 .13-9 1.089-9 3.889c0 3.5 10 2.722 10 6.222c0 2.8-6.667 3.76-10 3.889"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSShutterPriority0)"/>`
	sickbedInnerSVG                                    = `<mask id="ipSSickbed0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="m4 23l36 12"/><circle cx="12" cy="16" r="3" fill="#fff"/><path fill="#fff" stroke-linejoin="round" d="M29 36v-4.5L19 28v8h10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M18 27.5L23 14l18.374 7a3 3 0 0 1 1.8 3.686L40 35"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSickbed0)"/>`
	signalStrengthInnerSVG                             = `<mask id="ipSSignalStrength0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38.142 38.142c7.81-7.81 7.81-20.474 0-28.284c-7.81-7.81-20.474-7.81-28.284 0c-7.81 7.81-7.81 20.474 0 28.284m22.627-5.657c4.687-4.686 4.687-12.284 0-16.97c-4.686-4.687-12.284-4.687-16.97 0c-4.687 4.686-4.687 12.284 0 16.97"/><path fill="#fff" d="M28 24a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 0v16m0 0h4m-4 0h-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSignalStrength0)"/>`
	signalTowerInnerSVG                                = `<mask id="ipSSignalTower0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17.081 6c-6.12 4.285-7.607 12.72-3.322 18.84c4.285 6.12 12.72 7.608 18.84 3.323L17.082 6Z"/><path d="M22 31v11m-9-17.5L6 42h36M40 6L25 17M17 6h23l-7 21.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSignalTower0)"/>`
	simInnerSVG                                        = `<mask id="ipSSim0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 4h24.889L40 11.273V44H8V4Z"/><path fill="#000" stroke="#000" d="M33 26H15v10h18V26Z"/><path stroke="#000" stroke-linecap="round" d="M15 12v6m6-6v6m6-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSim0)"/>`
	simCardInnerSVG                                    = `<mask id="ipSSimCard0"><g fill="none"><path stroke="#fff" stroke-width="4" d="M10 44h28a2 2 0 0 0 2-2V14.885a2 2 0 0 0-.655-1.48L29.572 4.52A2 2 0 0 0 28.227 4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><circle cx="17" cy="14" r="3" fill="#fff"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16 23h16v14H16z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSimCard0)"/>`
	singleBedInnerSVG                                  = `<mask id="ipSSingleBed0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M8 12a3 3 0 0 1 3-3h26a3 3 0 0 1 3 3v11H8V12ZM6 35v4m36-4v4"/><path fill="#fff" d="M29 18H19a3 3 0 0 0-3 3v2h16v-2a3 3 0 0 0-3-3Z"/><path d="M4 26a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSingleBed0)"/>`
	sippyCupInnerSVG                                   = `<mask id="ipSSippyCup0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m34 44l3-28H11l3.5 28H34ZM24 10l-2-6M6 16h36m-5.005 9s5.47 0 4.973 4.404C41.471 33.81 36 32.928 36 32.928M11.005 25s-5.47 0-4.973 4.404C6.529 33.81 12 32.928 12 32.928"/><path fill="#fff" d="M37 10H11v6h26v-6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSippyCup0)"/>`
	sixInnerSVG                                        = `<mask id="ipSSix0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 41C13.5 38.25 8 30 5 25s3.313-9.688 7-6l4 4v-5.5a3.5 3.5 0 1 1 7 0V16a3.5 3.5 0 1 1 7 0v1.5a3.5 3.5 0 1 1 7 0v-10a3.5 3.5 0 1 1 7 0v21.466c0 2.003-.37 4.008-1.456 5.691C41.264 36.645 39.111 39.303 36 41c-5.5 3-11.5 2.75-17 0Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSix0)"/>`
	sixCircularConnectionInnerSVG                      = `<mask id="ipSSixCircularConnection0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M37.856 20v8M27.464 38l3.464-2l3.464-2m-13.856 4l-3.465-2l-3.464-2m-3.463-14v8m3.463-14l3.465-2l3.464-2m6.928 0l3.464 2l3.464 2"/><path fill="#fff" d="M24 44a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0-32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm14-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8ZM10 20a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm0 16a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSixCircularConnection0)"/>`
	sixKeyInnerSVG                                     = `<mask id="ipSSixKey0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" rx="3"/><path stroke="#000" d="M24.5 33a5.5 5.5 0 1 0 0-11a5.5 5.5 0 0 0 0 11Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M29.596 17.74C28.778 15.545 26.804 14 24.5 14c-3.038 0-5.5 2.686-5.5 6v7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSixKey0)"/>`
	sixPointsInnerSVG                                  = `<mask id="ipSSixPoints0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M24 24V12m0 12l-10.5 6.062L24 24Zm0 0l10.5 6.062L24 24Z"/><path fill="#fff" d="M14 16a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm0 16a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm14 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm14-8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Zm0-16a4 4 0 1 1-8 0a4 4 0 0 1 8 0ZM28 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSixPoints0)"/>`
	skateInnerSVG                                      = `<mask id="ipSSkate0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M44 39.82H4l32.54-18H44v18Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M3.857 19.201L7.09 20.8l17.321-10l.232-3.598"/><path fill="#fff" d="M12.33 24.88a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm11.12-6a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSkate0)"/>`
	skatesInnerSVG                                     = `<mask id="ipSSkates0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M5 5h26v8H5V5Z"/><path fill="#fff" d="M9 36V13h18v10c14 0 14 9 14 13H9Z"/><path d="M7 36h36v6H7z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSkates0)"/>`
	skatingInnerSVG                                    = `<mask id="ipSSkating0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path stroke="#fff" d="M44 4H28v8h16V4Z"/><path fill="#fff" stroke="#fff" d="M44 12v22c0 1.11-.89 2-2 2H8c-2.21 0-4-1.79-4-4v-6c0-4.42 3.58-8 8-8h16v-6h16Z"/><path stroke="#000" d="M14 24v-6m7 6v-6"/><path stroke="#fff" d="M14 44v-8m22 8v-8M23 18H12m32 26H6a2 2 0 0 1-2-2v-1.37"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSkating0)"/>`
	sketchInnerSVG                                     = `<mask id="ipSSketch0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" stroke-linecap="round" d="M18.6 16h10.8l3.6 4.706L24 32l-9-11.294L18.6 16Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSketch0)"/>`
	skiingNordicInnerSVG                               = `<mask id="ipSSkiingNordic0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M24 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M34 24h-6l-6-5l-3 10l6 6l2 9M17 34l-2 5l-6 5"/><path stroke-linecap="round" stroke-linejoin="round" d="M5 44h34l5-7M34 24v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSkiingNordic0)"/>`
	skullInnerSVG                                      = `<mask id="ipSSkull0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m11.263 44l3.364-8.315C10.031 32.593 7 27.293 7 21.273C7 11.733 14.611 4 24 4s17 7.733 17 17.273c0 6.02-3.031 11.32-7.627 14.412L36.737 44H11.263Z"/><path stroke="#000" stroke-linecap="round" d="M20 38v6m8-6v6"/><path fill="#000" stroke="#000" d="M17 23a3 3 0 1 0 0-6a3 3 0 0 0 0 6Zm14 0a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" stroke-linecap="round" d="M32 44h-8m0 0h-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSkull0)"/>`
	slaveInnerSVG                                      = `<mask id="ipSSlave0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 38v-7.5M10 38V6a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v1"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25 13h-1a6 6 0 0 0-6 6v0a6 6 0 0 0 6 6h1m8-12h1a6 6 0 0 1 6 6v0a6 6 0 0 1-6 6h-1m-8-6h8"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 38a6 6 0 0 1 6-6h16a6 6 0 0 1 0 12H16a6 6 0 0 1-6-6Z"/><circle cx="32" cy="38" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlave0)"/>`
	sleepInnerSVG                                      = `<mask id="ipSSleep0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M16.866 7.47A17.986 17.986 0 0 0 16 13c0 9.941 8.059 18 18 18a17.94 17.94 0 0 0 7.134-1.47C38.801 36.767 32.012 42 24 42c-9.941 0-18-8.059-18-18c0-7.407 4.473-13.768 10.866-16.53Z"/><path stroke-linecap="round" d="M31.66 10H41l-10 8h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSleep0)"/>`
	sleepTwoInnerSVG                                   = `<mask id="ipSSleepTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M4 12v24m40-7v7m0-7H4"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M22 16v13h22V19a3 3 0 0 0-3-3H22Z"/><circle cx="13" cy="20" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSleepTwo0)"/>`
	slideInnerSVG                                      = `<mask id="ipSSlide0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M41 5.5H7v28h34v-28Z"/><path stroke="#fff" stroke-linecap="round" d="m16 41.5l8-8l8 8"/><path stroke="#000" stroke-linecap="round" d="m13.924 24.663l5.642-5.508l4.442 4.345l9.959-9.98"/><path stroke="#fff" stroke-linecap="round" d="M4 5.5h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlide0)"/>`
	slideTwoInnerSVG                                   = `<mask id="ipSSlideTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M4 8h40"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M8 8h32v26H8V8Z" clip-rule="evenodd"/><path stroke="#000" d="m31 18l3 3l-3 3m-14 0l-3-3l3-3"/><path stroke="#fff" d="m16 42l8-8l8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlideTwo0)"/>`
	slidingHorizontalInnerSVG                          = `<mask id="ipSSlidingHorizontal0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m28 20l4 4l-4 4m-8-8l-4 4l4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlidingHorizontal0)"/>`
	slidingVerticalInnerSVG                            = `<mask id="ipSSlidingVertical0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m20 20l4-4l4 4m-8 8l4 4l4-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlidingVertical0)"/>`
	slightlyFrowningFaceWhitOpenMouthInnerSVG          = `<mask id="ipSSlightlyFrowningFaceWhitOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm7-11v4m-14-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlightlyFrowningFaceWhitOpenMouth0)"/>`
	slightlySmilingFaceInnerSVG                        = `<mask id="ipSSlightlySmilingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m14 12s-2 4-7 4s-7-4-7-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlightlySmilingFace0)"/>`
	slippersInnerSVG                                   = `<mask id="ipSSlippers0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 29h40v6H4v-6Z"/><path fill="#fff" d="M23.53 13c-3.5 4-3.5 12-3.5 16h20v-8.5S28 15 23.53 13Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlippers0)"/>`
	slippersOneInnerSVG                                = `<mask id="ipSSlippersOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 29h40v6H4v-6Z"/><path fill="#fff" d="M7 22c-3 4-3 7-3 7h26v-8c0-2.5-1.5-5.5-5-6s-13.124.5-18 7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlippersOne0)"/>`
	slyFaceWhitSmileInnerSVG                           = `<mask id="ipSSlyFaceWhitSmile0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m34 21l-4-2m-11 0l-4 2m16 10s-2 4-7 4s-7-4-7-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSlyFaceWhitSmile0)"/>`
	smilingFaceInnerSVG                                = `<mask id="ipSSmilingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31s-2 4-7 4s-7-4-7-4m14-13v4m-14-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSmilingFace0)"/>`
	smilingFaceWithSquintingEyesInnerSVG               = `<mask id="ipSSmilingFaceWithSquintingEyes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31s-2 4-7 4s-7-4-7-4m4-10s-1-4-4-4s-4 4-4 4m22 0s-1-4-4-4s-4 4-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSmilingFaceWithSquintingEyes0)"/>`
	snacksInnerSVG                                     = `<mask id="ipSSnacks0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 14h36V8h-4l-2-4H12l-2 4H6v6Z"/><path stroke-linecap="round" d="m36 44l2-30H10l2 30h24Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSnacks0)"/>`
	snakeZodiacInnerSVG                                = `<mask id="ipSSnakeZodiac0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-width="4" clip-path="url(#ipSSnakeZodiac1)"><path d="m35.786 39.083l2.828-2.828a6 6 0 0 0 0-8.486v0a6 6 0 0 0-8.485 0l-2.462 2.462m-10.266-6.705l7.071-7.07a6 6 0 0 0 0-8.486v0a6 6 0 0 0-8.485 0l-7.071 7.071"/><path d="m18.283 22.645l-8.66 8.66a6 6 0 0 0 0 8.486v0a6 6 0 0 0 8.485 0l9.9-9.9"/><path stroke-linejoin="round" d="M15 9H7"/></g><defs><clipPath id="ipSSnakeZodiac1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSnakeZodiac0)"/>`
	snowmanInnerSVG                                    = `<mask id="ipSSnowman0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m12 24l-8-4m4 2v-4m32 4v-4"/><circle cx="24" cy="10" r="6" fill="#fff" stroke="#fff" stroke-width="4"/><ellipse cx="24" cy="30" fill="#fff" stroke="#fff" stroke-width="4" rx="13" ry="14"/><circle cx="24" cy="26" r="2" fill="#000"/><circle cx="24" cy="31" r="2" fill="#000"/><circle cx="24" cy="36" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m44 20l-8 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSnowman0)"/>`
	soapBubbleInnerSVG                                 = `<mask id="ipSSoapBubble0"><g fill="none" stroke-linecap="round" stroke-width="4"><ellipse cx="22" cy="30" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="16" ry="14"/><path stroke="#000" d="M26 24c1.333.167 4 1 5 5"/><circle cx="8" cy="8" r="4" fill="#fff" stroke="#fff" stroke-linejoin="round"/><circle cx="41" cy="13" r="3" fill="#fff" stroke="#fff" stroke-linejoin="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSoapBubble0)"/>`
	soccerInnerSVG                                     = `<mask id="ipSSoccer0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M17.817 4.98C7.31 8.39 1.57 19.677 4.98 30.176c3.41 10.498 14.698 16.247 25.196 12.838c10.508-3.41 16.247-14.698 12.838-25.196C39.603 7.309 28.315 1.57 17.817 4.98Z"/><path fill="#fff" d="m34 21l-10-8l-10 8l4 12h12l4-12Z"/><path d="m34 21l9-3m-7 22l-6-7m-12 0l-6 7m2-19l-9-3m19-5V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSoccer0)"/>`
	soccerOneInnerSVG                                  = `<mask id="ipSSoccerOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-miterlimit="2" stroke-width="4" d="M29 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path fill="#fff" d="M19 46a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M24.38 18.91L20 27l7.31 6.02c.31.24.53.57.66.94L31 44M20 27l-5.49 7.64c-.54.79-1.56 1.09-2.44.72L4 32"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M42 24h-7c-.36 0-.72-.09-1.04-.27l-3.21-1.81c-4.01-2.35-8.4-3.96-12.97-4.78l-3.22-.57c-.45-.08-.92 0-1.32.22L7 20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSoccerOne0)"/>`
	sofaInnerSVG                                       = `<mask id="ipSSofa0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 21H4v14h8V21Zm32 0h-8v14h8V21Z"/><path stroke-linecap="round" d="M36 27H12v8h24v-8ZM8 20V8h32v12M8 36v4m32-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSofa0)"/>`
	sofaTwoInnerSVG                                    = `<mask id="ipSSofaTwo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 38V18h-8v13H12V18H4v20h40Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 6H12v25h24V6Z"/><path fill="#fff" fill-rule="evenodd" d="M10 44a4 4 0 0 0 4-4c-1.097.004-7.3 0-8 0a4 4 0 0 0 4 4Zm28 0a4 4 0 0 0 4-4c-1.905-.007-7.137 0-8 0a4 4 0 0 0 4 4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSofaTwo0)"/>`
	solarEnergyOneInnerSVG                             = `<mask id="ipSSolarEnergyOne0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M10 30h6a6 6 0 0 1 0 12h-6V30Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M10 28v16M4 32h6m-6 6h6m12-2h8a2 2 0 0 0 2-2V23m0-19v7m-9.121-3.121l4.242 4.242m-4.242 13l4.242-4.242m14-13L36.88 12.12m4.241 13.001L36.88 20.88"/><circle cx="32" cy="17" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M20 17h6m12 0h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSolarEnergyOne0)"/>`
	solidStateDiskInnerSVG                             = `<mask id="ipSSolidStateDisk0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M44 29H4v13h40V29Z"/><path fill="#000" d="M35.5 38a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 29L9.038 4.999H39.02l4.98 24"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M10 35.5h17"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSolidStateDisk0)"/>`
	sorcererHatInnerSVG                                = `<mask id="ipSSorcererHat0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 40c11.046 0 20-1.79 20-4c0-1.439-3.299-2.7-9-3.405L27 12L15 8l3 6l-5 18.595C7.299 33.3 4 34.56 4 36c0 2.21 8.954 4 20 4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSorcererHat0)"/>`
	sortInnerSVG                                       = `<mask id="ipSSort0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m24 42l-9-13h18l-9 13Zm0-36l-9 13h18L24 6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSort0)"/>`
	soundInnerSVG                                      = `<mask id="ipSSound0"><g fill="none"><rect width="32" height="40" x="8" y="4" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><circle cx="24" cy="15" r="5" fill="#fff" stroke="#fff" stroke-width="4"/><circle cx="14" cy="10" r="2" fill="#fff"/><circle cx="14" cy="38" r="2" fill="#fff"/><circle cx="34" cy="10" r="2" fill="#fff"/><circle cx="34" cy="38" r="2" fill="#fff"/><circle cx="24" cy="32" r="6" fill="#fff" stroke="#fff" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSound0)"/>`
	soundOneInnerSVG                                   = `<mask id="ipSSoundOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M9 7a3 3 0 0 1 3-3h24a3 3 0 0 1 3 3v34a3 3 0 0 1-3 3H12a3 3 0 0 1-3-3V7Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-width="4" d="M24 29a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><rect width="4" height="4" x="30" y="8" fill="#000" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M27 36h2m-10 0h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSoundOne0)"/>`
	sourceCodeInnerSVG                                 = `<mask id="ipSSourceCode0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M23 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v14.882"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m34 33l-4 4l4 4m6-8l4 4l-4 4"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSourceCode0)"/>`
	soybeanMilkMakerInnerSVG                           = `<mask id="ipSSoybeanMilkMaker0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M35 10h5.064a1 1 0 0 1 .998.934l.867 13A1 1 0 0 1 40.93 25H32M7 5h28l-4 26H15l-3-21l-5-5Z"/><path fill="#fff" stroke="#fff" d="M15 31h16l4 12H11l4-12Z"/><path stroke="#000" d="M21 37h4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSoybeanMilkMaker0)"/>`
	spaCandleInnerSVG                                  = `<mask id="ipSSpaCandle0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6.54 26.434A2 2 0 0 1 8.494 24h31.014a2 2 0 0 1 1.952 2.434l-3.111 14A2 2 0 0 1 36.396 42H11.604a2 2 0 0 1-1.952-1.566l-3.111-14Z"/><path d="M20.643 9.889C22.074 8.009 23.178 5.41 23.774 4c1.044 1.41 3.31 4.948 4.026 6.829c.894 2.35-1.342 5.171-4.026 5.171c-2.684 0-4.92-3.76-3.131-6.111ZM24 16v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpaCandle0)"/>`
	spannerInnerSVG                                    = `<mask id="ipSSpanner0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M30.442 5c1.964 0 3.823.448 5.479 1.246l-3.204 3.18a4.671 4.671 0 0 0 0 6.64a4.753 4.753 0 0 0 6.687 0l2.853-2.832c.48 1.322.743 2.748.743 4.234c0 6.887-5.623 12.469-12.558 12.469c-1.66 0-3.244-.32-4.693-.9L13.07 41.625a4.751 4.751 0 0 1-6.685 0a4.67 4.67 0 0 1 0-6.637L18.952 22.51a12.35 12.35 0 0 1-1.069-5.042C17.883 10.582 23.506 5 30.442 5Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpanner0)"/>`
	speakerInnerSVG                                    = `<mask id="ipSSpeaker0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M38 2H10a2 2 0 0 0-2 2v40a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Z"/><path fill="#000" stroke="#000" d="M24 38a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm0-20a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpeaker0)"/>`
	speakerOneInnerSVG                                 = `<mask id="ipSSpeakerOne0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 15h11v18H4z"/><path d="m15 15l18-7v32l-18-7m25-16h2m-3 8h5m-4 8h2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpeakerOne0)"/>`
	speedInnerSVG                                      = `<mask id="ipSSpeed0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M34.023 6.69A19.908 19.908 0 0 0 24 4C12.954 4 4 12.954 4 24s8.954 20 20 20s20-8.954 20-20c0-3.627-.966-7.03-2.654-9.962"/><path fill="#fff" d="M31.95 16.05S28.562 25.095 27 26.657A4 4 0 0 1 21.343 21c1.562-1.562 10.607-4.95 10.607-4.95Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpeed0)"/>`
	speedOneInnerSVG                                   = `<mask id="ipSSpeedOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M30.297 18.779s-3.23 9.102-4.764 10.691a4 4 0 0 1-5.754-5.557c1.534-1.59 10.518-5.134 10.518-5.134Z"/><path stroke-linecap="round" d="M38.85 38.85A20.941 20.941 0 0 0 45 24c0-11.598-9.402-21-21-21S3 12.402 3 24c0 5.799 2.35 11.049 6.15 14.85M24 4v4m14.845 3.142l-3.108 2.517m6.785 13.574l-3.897-.9m-33.148.9l3.898-.9m-.22-15.191l3.108 2.517"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpeedOne0)"/>`
	spermInnerSVG                                      = `<mask id="ipSSperm0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSSperm1)"><path fill="#fff" fill-rule="evenodd" d="M18.237 24.475c1.856 1.299 2.33 2.674 3.609 3.57c1.4.98 2.947 1.5 4.169 1.014c2.307-.916 3.976-3.908 6.011-6.815c3.96-5.655 3.954-14.385.26-16.971c-3.692-2.586-11.843.433-15.802 6.088c-1.935 2.763-4.47 6.445-4.317 8.002c.129 1.311.57 2.042 1.958 3.275s2.132.45 4.112 1.837Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M13.617 22.317c-3.54 3.898-4.008 6.86-1.402 8.885c2.605 2.026 5.877 1.027 9.815-2.995"/><path stroke-linecap="round" d="M12.239 31.227c-3.097 3.388-3.667 6.546-1.71 9.477c2.937 4.396 8.755 4.155 11.595.879c2.84-3.277 8.184-11.396 14.059-9.727c5.875 1.669 4.877 8.088.939 8.762"/></g><defs><clipPath id="ipSSperm1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSperm0)"/>`
	spikedshoesInnerSVG                                = `<mask id="ipSSpikedshoes0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path stroke="#fff" d="M44 6H28v8h16V6Z"/><path fill="#fff" stroke="#fff" d="M44 14v22c0 1.11-.89 2-2 2H8c-2.21 0-4-1.79-4-4v-6c0-4.42 3.58-8 8-8h16v-6h16Z"/><path stroke="#000" d="M14 26v-6m7 6v-6"/><path stroke="#fff" d="M15 42v-4m-7 4v-4m14 4v-4m12 4v-4m7 4v-4M23 20H12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpikedshoes0)"/>`
	spinningTopInnerSVG                                = `<mask id="ipSSpinningTop0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M24 44v-3"/><path fill="#fff" d="M44 20L24 41L4 20h40Z"/><path d="M44 12H4v8h40v-8Zm-20 0V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpinningTop0)"/>`
	splitInnerSVG                                      = `<mask id="ipSSplit0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M19 10V7a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v22a2 2 0 0 1-2 2h-4"/><rect width="24" height="24" x="5" y="18" fill="#fff" rx="2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSplit0)"/>`
	splitBranchInnerSVG                                = `<mask id="ipSSplitBranch0"><g fill="none"><path fill="#fff" d="M44 44V4H24v13l9 9v18h11ZM4 4v40h21V30l-9-9V4H4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 44V4H24v13l9 9v18h11ZM4 4v40h21V30l-9-9V4H4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSplitBranch0)"/>`
	splitTurnDownLeftInnerSVG                          = `<mask id="ipSSplitTurnDownLeft0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M37 22H21a8 8 0 0 0-8 8v14"/><circle cx="37" cy="8.944" r="5" fill="#fff" transform="rotate(-90 37 8.944)"/><path stroke-linecap="round" stroke-linejoin="round" d="M37 14v29m5-4l-5 5l-5-5m-14 0l-5 5l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSplitTurnDownLeft0)"/>`
	splitTurnDownRightInnerSVG                         = `<mask id="ipSSplitTurnDownRight0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M13 22h16a8 8 0 0 1 8 8v14"/><circle cx="13" cy="8.944" r="5" fill="#fff" transform="rotate(-90 13 8.944)"/><path stroke-linecap="round" stroke-linejoin="round" d="M13 14v29m5-4l-5 5l-5-5m34 0l-5 5l-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSplitTurnDownRight0)"/>`
	spoonInnerSVG                                      = `<mask id="ipSSpoon0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="20" height="20" x="14" y="4" fill="#fff" rx="10"/><path d="M24 24v12"/><rect width="6" height="8" x="21" y="36" fill="#fff" rx="3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSpoon0)"/>`
	sportInnerSVG                                      = `<mask id="ipSSport0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M36 15a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m12 16.77l8.003-2.772L31 19.247l-10.997 8.197L31 34.684l-6.992 9.314M35.32 21.643l2.682 1.459L44 17.466M16.849 31.545l-2.97 3.912l-9.875 5.54"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSport0)"/>`
	sportingInnerSVG                                   = `<mask id="ipSSporting0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="8" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M7 18h12v16m22-16H29v26"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSporting0)"/>`
	squareInnerSVG                                     = `<mask id="ipSSquare0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSquare0)"/>`
	squareSmallInnerSVG                                = `<mask id="ipSSquareSmall0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M34 12H14a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V14a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSquareSmall0)"/>`
	ssdInnerSVG                                        = `<mask id="ipSSsd0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38 38V6a2 2 0 0 0-2-2H12a2 2 0 0 0-2 2v32m15-24h-2m2 8h-2"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 38a6 6 0 0 1 6-6h16a6 6 0 0 1 0 12H16a6 6 0 0 1-6-6Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M17 39v5m5-5v5m5-5v5"/><circle cx="32" cy="38" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M29 44H15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSsd0)"/>`
	stackLightInnerSVG                                 = `<mask id="ipSStackLight0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M17 4h14v30H17z"/><path stroke-linecap="round" d="M17 14h14M17 24h14M6.879 7.879l4.242 4.242m-4.242 21l4.242-4.243m30-20.999L36.88 12.12m4.241 21.001l-4.242-4.243M4 21h6m28 0h6"/><path fill="#fff" d="M20 34h8v10h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStackLight0)"/>`
	stampInnerSVG                                      = `<mask id="ipSStamp0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 8.8L8.8 5l3.8 2.85L16.4 5l3.8 2.85L24 5l3.8 2.85L31.6 5l3.8 2.85L39.2 5L43 8.8l-2.85 3.8L43 16.4l-2.85 3.8L43 24l-2.85 3.8L43 31.6l-2.85 3.8L43 39.2L39.2 43l-3.8-2.85L31.6 43l-3.8-2.85L24 43l-3.8-2.85L16.4 43l-3.8-2.85L8.8 43L5 39.2l2.85-3.8L5 31.6l2.85-3.8L5 24l2.85-3.8L5 16.4l2.85-3.8L5 8.8Z"/><circle cx="24" cy="24" r="9" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStamp0)"/>`
	standUpInnerSVG                                    = `<mask id="ipSStandUp0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M17 22.458c-4.057 1.274-7 5.065-7 9.542c0 5.523 4.477 10 10 10a9.985 9.985 0 0 0 8.662-5"/><path stroke-linecap="round" stroke-linejoin="round" d="m17 18l1.5-2H30l-7 14h14v14"/><circle cx="34" cy="8" r="4" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStandUp0)"/>`
	staplerInnerSVG                                    = `<mask id="ipSStapler0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M42 35v8H6v-8h25m7.384-13.194L8.314 10.862l-2.736 7.517l24.175 8.8M8.37 10.778l14.512 5.38a.03.03 0 0 0 .04-.018v0a5.285 5.285 0 0 0-3.119-6.792l-9.502-3.523a.09.09 0 0 0-.115.053l-1.816 4.9Zm8.385 11.942l-1.368 3.759a1 1 0 0 1-1.282.597l-6.578-2.394a1 1 0 0 1-.598-1.281l1.368-3.76"/><circle cx="36" cy="30" r="7" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStapler0)"/>`
	starInnerSVG                                       = `<mask id="ipSStar0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m23.999 5l-6.113 12.478L4 19.49l10.059 9.834L11.654 43L24 36.42L36.345 43L33.96 29.325L44 19.491l-13.809-2.013L24 5Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStar0)"/>`
	steeringWheelInnerSVG                              = `<defs><path id="ipSSteeringWheel0" fill="#fff" d="M32 24a8 8 0 1 1-16 0a8 8 0 0 1 16 0Z"/></defs><mask id="ipSSteeringWheel1"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Zm0 0V32M4 24h12m28 0H32"/><use href="#ipSSteeringWheel0"/><use href="#ipSSteeringWheel0" fill-rule="evenodd" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 24a8 8 0 1 1-16 0a8 8 0 0 1 16 0Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSteeringWheel1)"/>`
	steollerInnerSVG                                   = `<mask id="ipSSteoller0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M40 24H12l2.5 10H36l4-10Z"/><path d="m12 24l-4-9H3.5"/><circle cx="20" cy="41" r="3" fill="#fff"/><circle cx="31" cy="41" r="3" fill="#fff"/><path fill="#fff" d="m23 8l5 16h12s3.5-8-2.5-14S25.667 6.667 23 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSteoller0)"/>`
	stereoOneInnerSVG                                  = `<mask id="ipSStereoOne0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="30" height="38" x="9" y="5" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="M9 18h30"/><circle cx="24" cy="30" r="6" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStereoOne0)"/>`
	stethoscopeInnerSVG                                = `<mask id="ipSStethoscope0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M21.947 4v6M10.053 7H4v14c0 5 4 11 12 11s12-6 12-11V7H10.053Zm0-3v6v-6Z"/><path fill="#fff" d="M40 23a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path d="M16 32c0 6.627 5.373 12 12 12s12-5.373 12-12v-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStethoscope0)"/>`
	stickersInnerSVG                                   = `<mask id="ipSStickers0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 44c11.046 0 20-8.954 20-20c0 0-10.5 3-17-4S24 4 24 4C12.954 4 4 12.954 4 24s8.954 20 20 20Z"/><path d="M44 24L24 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStickers0)"/>`
	stockMarketInnerSVG                                = `<mask id="ipSStockMarket0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M6 20h8v14H6zm14-6h8v26h-8z"/><path stroke-linecap="round" d="M24 44v-4"/><path fill="#fff" d="M34 12h8v9h-8z"/><path stroke-linecap="round" d="M10 20V10m28 24V21m0-9V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStockMarket0)"/>`
	stopwatchInnerSVG                                  = `<mask id="ipSStopwatch0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c9.389 0 17-7.611 17-17s-7.611-17-17-17S7 17.611 7 27s7.611 17 17 17Z"/><path stroke="#fff" stroke-linecap="round" d="M31 4H17m21 6l-3 3"/><path stroke="#000" stroke-linecap="round" d="M24 18v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStopwatch0)"/>`
	stopwatchStartInnerSVG                             = `<mask id="ipSStopwatchStart0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c9.389 0 17-7.611 17-17s-7.611-17-17-17S7 17.611 7 27s7.611 17 17 17Z"/><path stroke="#fff" stroke-linecap="round" d="M18 4h12"/><path stroke="#000" stroke-linecap="round" d="M24 19v8m8 0h-8"/><path stroke="#fff" stroke-linecap="round" d="M24 4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStopwatchStart0)"/>`
	storageCardOneInnerSVG                             = `<mask id="ipSStorageCardOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M33.778 4h-18v8h18V4Z"/><path stroke-linecap="round" d="M15.366 4h-4.588a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H34.19"/><path stroke-linecap="round" d="m27.777 20l-8 8.001h10.005l-8.004 8"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSStorageCardOne0)"/>`
	storageCardTwoInnerSVG                             = `<mask id="ipSStorageCardTwo0"><g fill="none" stroke-width="4"><rect width="32" height="40" x="8" y="4" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M14 4v10h20V4"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M14 24h20v20H14z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M14 32h20"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M34 29v6m-20-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStorageCardTwo0)"/>`
	straightRazorInnerSVG                              = `<mask id="ipSStraightRazor0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="38" height="6" x="3.609" y="36.534" fill="#fff" rx="2" transform="rotate(-10 3.61 36.534)"/><path d="m44 40l-4-4"/><path fill="#fff" d="m8 4l18.385 18.385l-4.243 4.242L9.414 13.9c-2.828-2.83-2.828-4.244-2.828-5.658C6.586 6.828 8 4 8 4Z"/><path d="m8 4l18 18l9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStraightRazor0)"/>`
	stretchingInnerSVG                                 = `<mask id="ipSStretching0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSStretching1)"><path stroke-linecap="round" stroke-linejoin="round" d="M23 6H8a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h32a2 2 0 0 0 2-2V25"/><path stroke-linecap="round" d="M24.001 16v8M42 6v8m-9.999 10h-8"/><path d="M42 6L24 24"/><path stroke-linecap="round" d="M42 6h-8"/></g><defs><clipPath id="ipSStretching1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStretching0)"/>`
	stretchingOneInnerSVG                              = `<mask id="ipSStretchingOne0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="8" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="m41 8l-12 9.59V44M10.111 23.25L19 18v10.917L7 41"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStretchingOne0)"/>`
	strongboxInnerSVG                                  = `<mask id="ipSStrongbox0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path fill="#000" d="M12 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 24a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm24-24a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 24a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 33a9 9 0 1 0 0-18a9 9 0 0 0 0 18Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSStrongbox0)"/>`
	subwayInnerSVG                                     = `<mask id="ipSSubway0"><g fill="none"><rect width="32" height="26" x="8" y="6" stroke="#fff" stroke-width="4" rx="2"/><circle cx="14" cy="27" r="2" fill="#fff"/><circle cx="34" cy="27" r="2" fill="#fff"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 12h20v10H14z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m32 32l8 9m-23-9l-9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSubway0)"/>`
	successInnerSVG                                    = `<mask id="ipSSuccess0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m24 4l5.253 3.832l6.503-.012l1.997 6.188l5.268 3.812L41 24l2.021 6.18l-5.268 3.812l-1.997 6.188l-6.503-.012L24 44l-5.253-3.832l-6.503.012l-1.997-6.188l-5.268-3.812L7 24l-2.021-6.18l5.268-3.812l1.997-6.188l6.503.012L24 4Z"/><path stroke="#000" d="m17 24l5 5l10-10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSuccess0)"/>`
	sumInnerSVG                                        = `<mask id="ipSSum0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M19 7v12H7a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V29h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2H21a2 2 0 0 0-2 2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSum0)"/>`
	sunInnerSVG                                        = `<mask id="ipSSun0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="m9.15 9.15l2.228 2.228M3 24h3.15m3 14.85l2.228-2.228M38.85 38.85l-2.228-2.228M45 24h-3.15m-3-14.85l-2.228 2.228M24 3v3.15"/><path fill="#000" d="M24 36c6.627 0 12-5.373 12-12s-5.373-12-12-12s-12 5.373-12 12s5.373 12 12 12Z"/><path stroke-linecap="round" d="M24 45v-3.15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSun0)"/>`
	sunHatInnerSVG                                     = `<mask id="ipSSunHat0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 10a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v10H12V10Z"/><path d="M44 35c-1.108 1.333-2.375 5-7.6 5c-2.737 0-6.456-1.684-11.4-3"/><path d="M4 35s6-9 8-15h24c2 6 8 15 8 15c-6-4-25 5-32 5c-5.5 0-6.833-3.667-8-5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSunHat0)"/>`
	sunOneInnerSVG                                     = `<mask id="ipSSunOne0"><g fill="#fff"><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 37c7.18 0 13-5.82 13-13s-5.82-13-13-13s-13 5.82-13 13s5.82 13 13 13Z"/><path d="M24 6a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm14.5 6a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm6 14.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm-6 14.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5ZM24 47a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5ZM9.5 41a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm-6-14.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm6-14.5a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSunOne0)"/>`
	sunsetInnerSVG                                     = `<mask id="ipSSunset0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="m19 8l14 26H5L19 8Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m29 26l5-6l9 14H32m-22 7h28"/><circle cx="38" cy="10" r="3" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSunset0)"/>`
	surprisedFaceWithOpenBigMouthInnerSVG              = `<mask id="ipSSurprisedFaceWithOpenBigMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/><rect width="12" height="12" x="18" y="24" fill="#000" stroke="#000" stroke-linecap="round" rx="6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSurprisedFaceWithOpenBigMouth0)"/>`
	surprisedFaceWithOpenMouthInnerSVG                 = `<mask id="ipSSurprisedFaceWithOpenMouth0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1"/><rect width="8" height="8" x="20" y="28" fill="#000" stroke="#000" stroke-linecap="round" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSurprisedFaceWithOpenMouth0)"/>`
	surveillanceCamerasInnerSVG                        = `<mask id="ipSSurveillanceCameras0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M43 6H5m18 17V6"/><path fill="#fff" d="m8.425 19.58l31.876 8.54l-1.743 2.64l-4.002 7.21l-1.743 2.639l-28.011-7.506L8.425 19.58Z"/><path d="m38.558 30.76l3.864 1.035l-2.07 7.727l-5.796-1.552"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSurveillanceCameras0)"/>`
	surveillanceCamerasOneInnerSVG                     = `<mask id="ipSSurveillanceCamerasOne0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M6 26v16m0-9h7l4-6M7 20l26.474 17.649a1 1 0 0 0 1.069.025L44 32"/><path fill="#fff" d="M7.078 12.719a1 1 0 0 1-.11-1.58l7.46-6.63a1 1 0 0 1 1.212-.09l27.065 17.732a1 1 0 0 1-.011 1.68l-9.144 5.82a1 1 0 0 1-1.092-.012l-25.38-16.92Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSurveillanceCamerasOne0)"/>`
	surveillanceCamerasTwoInnerSVG                     = `<mask id="ipSSurveillanceCamerasTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M19.006 26.276V37H5m37.62-15.785l-3.863-1.035l-4.003 7.21l5.796 1.553l2.07-7.728Z"/><path fill="#fff" d="m38.757 20.18l-4.003 7.21l-1.742 2.639L5 22.523L8.623 9L40.5 17.541l-1.742 2.639Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSurveillanceCamerasTwo0)"/>`
	swallowInnerSVG                                    = `<mask id="ipSSwallow0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="m8.999 33.313l15.035-26.37C24.958 4.98 26.627 4 29.04 4c3.62 0 5.977 4.986 5.977 4.986L39 9.58c-4.01.065-6.33.872-6.957 2.42c-.94 2.322 2.456 4.73 2.975 8.004c.52 3.273-1.55 8.801-6.529 11.563c-3.319 1.841-7.462 2.319-12.43 1.433l-6.1 11"/><path fill="#fff" fill-rule="evenodd" d="M18.942 27.978c2.58-4.65 4.275-7.635 5.087-8.957c1.219-1.982 6.245-1.384 4.44 3.563c-1.204 3.298-4.38 5.096-9.527 5.394Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwallow0)"/>`
	sweaterInnerSVG                                    = `<mask id="ipSSweater0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 37H6V24l5-15l8-5h10l9 5l4 15v13h-8v7H14v-7Z"/><path d="M34 28v9m-20-9v9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSweater0)"/>`
	swimmingRingInnerSVG                               = `<mask id="ipSSwimmingRing0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M28 33.168A10.036 10.036 0 0 0 33.168 28m-18.336 0A10.037 10.037 0 0 0 20 33.168m0-18.336A10.038 10.038 0 0 0 14.832 20M28 14.832A10.037 10.037 0 0 1 33.168 20M30 40.976A18.05 18.05 0 0 0 40.976 30M7.024 30A18.05 18.05 0 0 0 18 40.976m0-33.952A18.05 18.05 0 0 0 7.024 18M30 7.024A18.05 18.05 0 0 1 40.976 18"/><path fill="#fff" stroke-linejoin="round" stroke-miterlimit="2" d="M27 17h-6L18 7l2-3h8l2 3l-3 10Zm-10 4v6L7 30l-3-2v-8l3-2l10 3Zm4 10h6l3 10l-2 3h-8l-2-3l3-10Zm10-4v-6l10-3c1.08.8 1.92 1.2 3 2v8c-1.08.8-1.92 1.2-3 2l-10-3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwimmingRing0)"/>`
	swimsuitInnerSVG                                   = `<mask id="ipSSwimsuit0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M14 4v7m20-7v7M12 31h24v5c-3 0-10 3-10 8h-5c0-5-6-8-9-8v-5Z"/><circle cx="14" cy="18" r="7" fill="#fff"/><circle cx="34" cy="18" r="7" fill="#fff"/><path d="M21 18h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwimsuit0)"/>`
	swingInnerSVG                                      = `<mask id="ipSSwing0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSSwing1)"><path fill="#fff" d="M10 36c-2-3.5-2.001-10-2-19c0-3 4-4 6-1c1.107 1.662 1.816 6.264 1.816 6.264l6.495-11.25a2.52 2.52 0 1 1 4.365 2.52l.388-.67a2.52 2.52 0 1 1 4.366 2.52l-.388.671a2.52 2.52 0 1 1 4.365 2.52l-1.552 2.69a2.523 2.523 0 0 1 4.373 2.518l-9.17 15.962c-.097.17-.197.337-.32.489C28.167 40.94 26.143 43 22 43c-4.66 0-9.522-2.661-12-7Z"/><path d="M37 5c1.379.733 3.505 1.758 5 4c1 1.5 1.5 3.5 1.79 6"/></g><defs><clipPath id="ipSSwing1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwing0)"/>`
	switchButtonInnerSVG                               = `<mask id="ipSSwitchButton0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M36 4H12a8 8 0 1 0 0 16h24a8 8 0 1 0 0-16Zm0 24H12a8 8 0 1 0 0 16h24a8 8 0 1 0 0-16Z"/><path fill="#000" stroke="#000" d="M36 14a2 2 0 1 0 0-4a2 2 0 0 0 0 4ZM12 38a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwitchButton0)"/>`
	switchNintendoInnerSVG                             = `<mask id="ipSSwitchNintendo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M6 12a8 8 0 0 1 8-8h5a2 2 0 0 1 2 2v34a2 2 0 0 1-2 2h-5a8 8 0 0 1-8-8V12Zm36 2a8 8 0 0 0-8-8h-6a2 2 0 0 0-2 2v34a2 2 0 0 0 2 2h6a8 8 0 0 0 8-8V14Z"/><rect width="5" height="5" x="11" y="30" fill="#000" rx="2.5"/><rect width="5" height="5" x="31.5" y="14" fill="#000" rx="2.5"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15 17h-3m22 11v6m-3-3h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwitchNintendo0)"/>`
	switchOneInnerSVG                                  = `<mask id="ipSSwitchOne0"><g fill="none" stroke-width="4"><circle cx="24" cy="24" r="19" fill="#fff" stroke="#fff"/><rect width="10.519" height="24.012" x="36.006" y="19.334" fill="#000" stroke="#000" rx="5.259" transform="rotate(90 36.006 19.334)"/><rect width="10" height="10" x="36.006" y="29.852" stroke="#000" rx="5" transform="rotate(-180 36.006 29.852)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwitchOne0)"/>`
	switchThemesInnerSVG                               = `<mask id="ipSSwitchThemes0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M23 4v23h20.993L44 4H23Z" clip-rule="evenodd"/><path stroke="#fff" d="M31.005 44H18.658c-1.702 0-3.742-.568-5.11-2.387c-.925-1.23-1.543-3.03-1.543-5.613V25"/><path stroke="#fff" stroke-linejoin="round" d="m4 33l8.005-8l8.009 8"/><path stroke="#000" d="M30 19h7m-7-7h7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSwitchThemes0)"/>`
	systemInnerSVG                                     = `<mask id="ipSSystem0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M18 6H8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm0 22H8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2Zm17-8a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm5 8H30a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V30a2 2 0 0 0-2-2Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSSystem0)"/>`
	tShirtInnerSVG                                     = `<mask id="ipSTShirt0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m9 9l9-5h12l9 5l4 15l-8 6v14H13V30l-8-6L9 9Z"/><path d="M13 31v-7m22 7v-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTShirt0)"/>`
	tableInnerSVG                                      = `<mask id="ipSTable0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="32" height="40" x="8" y="4" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" d="M14 16h20m-20 8h20m-20 8h20M18 12v24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTable0)"/>`
	tableFileInnerSVG                                  = `<mask id="ipSTableFile0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 6H6a2 2 0 0 0-2 2v32a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Z"/><path stroke="#000" stroke-linecap="round" d="M4 18h40m-26.5 0v24m13-24v24M4 30h40"/><path stroke="#fff" stroke-linecap="round" d="M44 8v32a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTableFile0)"/>`
	tableLampInnerSVG                                  = `<mask id="ipSTableLamp0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m31 44l11-16l-20-16"/><path fill="#fff" d="m6 12l10 10l8-14l-4-4l-14 8Z"/><path d="M38 44H12m5 0v-4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTableLamp0)"/>`
	tableReportInnerSVG                                = `<mask id="ipSTableReport0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M5 7a3 3 0 0 1 3-3h24a3 3 0 0 1 3 3v37H8a3 3 0 0 1-3-3V7Z"/><path stroke="#fff" d="M35 24a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v17a3 3 0 0 1-3 3h-5V24Z"/><path stroke="#000" stroke-linecap="round" d="M11 12h8m-8 7h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTableReport0)"/>`
	tabletennisInnerSVG                                = `<mask id="ipSTabletennis0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-miterlimit="2" stroke-width="4" d="M31.45 16.96a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m36 34l-2-11l-11 5l-13-3M4 41.03h40"/><circle cx="9" cy="25" r="5" fill="#fff"/><circle cx="6" cy="17" r="2" fill="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m34 23l10 6l-15 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTabletennis0)"/>`
	tagInnerSVG                                        = `<mask id="ipSTag0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 44V6a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v38l-16-8.273L8 44Z"/><path stroke="#000" stroke-linecap="round" d="M16 18h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTag0)"/>`
	tagOneInnerSVG                                     = `<mask id="ipSTagOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M42.17 29.245L29.262 42.151a3.6 3.6 0 0 1-5.094 0L8 26V8h18l16.17 16.17a3.6 3.6 0 0 1 0 5.075Z"/><path fill="#000" fill-rule="evenodd" d="M18.5 21a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTagOne0)"/>`
	tajMahalInnerSVG                                   = `<mask id="ipSTajMahal0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M16 28H8a2 2 0 0 0-2 2v14m26-16h8a2 2 0 0 1 2 2v14"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M20 24h8s5.165-5.678 4-9c-.755-2.15-2.439-3.34-4-5c-1.563-1.66-4-4-4-4s-2.439 2.34-4 4c-1.563 1.66-3.246 2.85-4 5c-1.166 3.322 4 9 4 9Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M4 44h40"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M16 24h16v20H16V24Z"/><path stroke="#000" stroke-linecap="round" d="M24 34v10"/><path stroke="#fff" stroke-linecap="round" d="M24 4v3M10 24v4m28-4v4M20 44h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTajMahal0)"/>`
	takeOffOneInnerSVG                                 = `<mask id="ipSTakeOffOne0"><g fill="none"><g stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSTakeOffOne1)"><path d="M4.997 40.988h38"/><path fill="#fff" d="m8.52 31.264l-4.612-7.99c.97-.56 5.771 1.115 7.559 2.032l9.702-3.473l-8.296-14.368l4.115-.247l13.4 12.462l8.25-2.612c3.655-1.045 4.807.95 5.037 1.35c1.383 2.394-1.411 4.007-1.81 4.238c-3.193 1.843-33.344 8.608-33.344 8.608Z"/></g><defs><clipPath id="ipSTakeOffOne1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTakeOffOne0)"/>`
	tapeInnerSVG                                       = `<mask id="ipSTape0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 12a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V12Z"/><path stroke="#000" stroke-linecap="round" d="M14.27 10c-1.696 0-2.622 1.978-1.536 3.28l1.666 2a2 2 0 0 0 1.537.72h16.126a2 2 0 0 0 1.537-.72l1.666-2c1.086-1.302.16-3.28-1.536-3.28H14.27Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" d="M6 10v0h36"/><path fill="#000" stroke="#000" d="M33 31a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm-18 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTape0)"/>`
	tapeMeasureInnerSVG                                = `<mask id="ipSTapeMeasure0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M13 15v-3a3 3 0 0 0-3-3v0a3 3 0 0 0-3 3v7"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 27c0-6.627 5.373-12 12-12s12 5.373 12 12v12H4V27Zm24 0h16v12H28z"/><circle cx="16" cy="27" r="4" fill="#000" stroke="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M39 27v4m-6-4v4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M30 27h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTapeMeasure0)"/>`
	targetOneInnerSVG                                  = `<mask id="ipSTargetOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M23.889 39.889c8.84 0 16-7.16 16-16s-7.16-16-16-16s-16 7.16-16 16s7.16 16 16 16Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M23.889 31.889c4.42 0 8-3.58 8-8s-3.58-8-8-8s-8 3.58-8 8s3.58 8 8 8Z"/><path fill="#fff" d="M23.889 25.889c1.1 0 2-.9 2-2s-.9-2-2-2s-2 .9-2 2s.9 2 2 2Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="M23.889 7.889v-4m14 40l-4-7m-20 0l-4 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTargetOne0)"/>`
	taurusInnerSVG                                     = `<mask id="ipSTaurus0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="24" cy="31" r="9" fill="#fff"/><path stroke-linecap="round" d="M44 8c0 7.732-8.954 14-20 14S4 15.732 4 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTaurus0)"/>`
	taxiInnerSVG                                       = `<mask id="ipSTaxi0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M4 35v-7.29a6 6 0 0 1 3.319-5.368l.682-.34l2.31-7.91A4 4 0 0 1 14.205 11h19.688a4 4 0 0 1 3.904 3.128l2.205 7.873l.68.34A6 6 0 0 1 44 27.709V35a3 3 0 0 1-3 3h-1.997v1a4 4 0 0 1-4 4A4 4 0 0 1 31 39v-1H17v1a4 4 0 1 1-8 0v-1H7a3 3 0 0 1-3-3Z"/><path fill="#000" d="M13.5 33a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Zm21 0a2.5 2.5 0 1 0 0-5a2.5 2.5 0 0 0 0 5Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 11h12l-.991-4.956C28.887 5.434 28.399 5 27.837 5h-7.674c-.563 0-1.05.434-1.172 1.044L18 11Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15 23h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTaxi0)"/>`
	teaInnerSVG                                        = `<mask id="ipSTea0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M11 18.167c0-.092.075-.167.167-.167h23.666c.092 0 .167.075.167.167V30c0 6.627-5.373 12-12 12s-12-5.373-12-12V18.167Z"/><path d="M35 30a6 6 0 0 0 0-12"/><path stroke-linejoin="round" d="M11 8v3m24-3v3M23 5v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTea0)"/>`
	teaDrinkInnerSVG                                   = `<mask id="ipSTeaDrink0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M2 20c0 12.15 6 22 18 22s18-9.85 18-22H2Z" clip-rule="evenodd"/><path d="M20 14V6m10 8v-4m-20 4v-4m26.19 20.623c.99-2.584 1.574-5.486 1.752-8.572c.345-.034.698-.051 1.058-.051c3.866 0 7 2.015 7 4.5S42.866 31 39 31c-1 0-1.95-.135-2.81-.377Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTeaDrink0)"/>`
	teapotInnerSVG                                     = `<mask id="ipSTeapot0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M23.001 13c-7.3 0-13.458 5.07-15.379 12H38.38c-1.92-6.93-8.079-12-15.379-12Z"/><path fill="#fff" d="M7.001 29.593c0 4.418 1.665 8.433 4.381 11.407H34.62c2.716-2.974 4.381-6.989 4.381-11.407c0-1.594-.217-3.134-.62-4.593H7.62C7.217 26.459 7 28 7 29.593Z"/><path d="M27 13v-2a4 4 0 0 0-4-4v0a4 4 0 0 0-4 4v2M7 28s-1.985-.131-3-2.5C2.5 22 5 20 6 17c.761-2.282-.793-3.986-1.58-4.67c-.252-.22-.42-.53-.42-.865v-.618c0-.489.354-.903.843-.92C5.878 9.887 7.663 9.996 9 11c2 1.5 3 6 3 6M9 41h28m2-16a5 5 0 1 0-4.584-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTeapot0)"/>`
	teethInnerSVG                                      = `<mask id="ipSTeeth0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M13.117 5h.886c4.666.69 5.931 3.338 9.997 3.338S29.331 5.69 33.998 5h.502a9.5 9.5 0 0 1 9.5 9.5v.626c0 2.903-3.09 6.217-4 9.357c-.965 3.334-1.626 6.06-1.82 8.911C37.725 40.075 35.447 43 33 43c-3.654 0-6.898-14.975-8.937-14.975C22.023 28.025 17.978 43 15 43c-1.817 0-4.17-1.075-5.054-9.606C9.594 30 9 27.941 8 24.483c-.88-3.04-3.848-6.672-4-9.932A9.127 9.127 0 0 1 13.117 5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="m15.482 12.463l16.519 5.326m-16.519 0l16.519-5.326"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTeeth0)"/>`
	telescopeInnerSVG                                  = `<mask id="ipSTelescope0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="12" height="38" x="6" y="5" rx="6"/><rect width="12" height="38" x="30" y="5" rx="6"/><path fill="#fff" d="M12 43a6 6 0 1 0 0-12a6 6 0 0 0 0 12Zm24 0a6 6 0 1 0 0-12a6 6 0 0 0 0 12Z"/><path stroke-linecap="round" d="M30 21a6 6 0 0 0-12 0m12 10a6 6 0 0 0-12 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTelescope0)"/>`
	tencentQqInnerSVG                                  = `<mask id="svgIDa"><g fill="none"><path fill="#fff" d="M23.794 44.518c-3.659 0-7.017-1.225-9.179-3.053c-1.098.328-2.502.855-3.389 1.51c-.759.56-.664 1.13-.527 1.361c.6 1.013 10.296.647 13.095.332v-.15Zm0 0c3.659 0 7.016-1.225 9.179-3.053c1.097.328 2.502.855 3.389 1.51c.758.56.663 1.13.526 1.361c-.6 1.013-10.295.647-13.094.332v-.15Z"/><path fill="#fff" d="M23.814 22.591c6.042-.04 10.884-1.21 12.525-1.658c.39-.107.6-.3.6-.3c.001-.055.025-.983.025-1.462c0-8.066-3.808-16.17-13.172-16.171c-9.364 0-13.171 8.105-13.171 16.171c0 .48.023 1.407.025 1.462c0 0 .17.18.481.267c1.515.421 6.448 1.65 12.643 1.691h.044Zm16.418 6.72c-.375-1.206-.886-2.61-1.404-3.96c0 0-.297-.037-.448.006c-4.645 1.35-10.275 2.21-14.566 2.158h-.044c-4.267.05-9.858-.8-14.488-2.136c-.177-.05-.526-.029-.526-.029c-.518 1.35-1.029 2.756-1.403 3.96c-1.786 5.748-1.208 8.126-.767 8.18c.945.114 3.68-4.327 3.68-4.327c0 4.513 4.073 11.441 13.403 11.505h.247c9.329-.064 13.403-6.992 13.403-11.505c0 0 2.734 4.44 3.68 4.327c.44-.054 1.019-2.432-.767-8.18Z"/><path fill="#000" d="M20.46 14.916c-1.27.057-2.355-1.39-2.423-3.23c-.07-1.84.904-3.378 2.174-3.436c1.27-.057 2.354 1.39 2.423 3.23c.07 1.84-.904 3.38-2.174 3.436Zm9.088-3.23c-.068 1.84-1.153 3.287-2.424 3.23c-1.27-.057-2.242-1.595-2.173-3.436c.069-1.84 1.154-3.286 2.423-3.23c1.27.058 2.243 1.596 2.174 3.437Zm2.257 5.828c-.34-.751-3.758-1.59-7.99-1.59h-.046c-4.232 0-7.65.839-7.99 1.59a.253.253 0 0 0-.025.108c0 .052.017.102.047.145c.286.416 4.082 2.477 7.968 2.477h.046c3.886 0 7.682-2.06 7.968-2.477a.256.256 0 0 0 .047-.146a.25.25 0 0 0-.025-.106"/><path fill="#fff" d="M22.022 11.714c.058.727-.34 1.373-.89 1.443c-.549.07-1.04-.461-1.1-1.188c-.057-.727.341-1.373.89-1.443c.55-.071 1.042.461 1.1 1.188Zm3.49.243c.112-.201.877-1.259 2.46-.874c.415.102.608.25.648.309c.06.086.077.21.016.375c-.12.329-.369.32-.506.256c-.09-.042-1.192-.777-2.208.32c-.07.075-.195.1-.313.012c-.119-.09-.167-.272-.097-.398Z"/><path fill="#000" d="M23.814 27.25h-.045c-2.918.035-6.455-.351-9.882-1.027c-.293 1.699-.47 3.834-.318 6.38c.384 6.433 4.205 10.478 10.104 10.536h.24c5.898-.058 9.718-4.103 10.103-10.537c.152-2.546-.025-4.68-.319-6.379c-3.426.676-6.965 1.063-9.883 1.027"/><path fill="#fff" d="M15.504 26.712v6.332s2.9.585 5.807.18v-5.841a53.39 53.39 0 0 1-5.807-.671Z"/><path fill="#fff" d="M36.938 20.634s-5.642 1.78-13.124 1.831h-.044c-7.47-.05-13.105-1.825-13.124-1.831l-1.89 4.716c4.726 1.425 10.584 2.343 15.014 2.29h.044c4.43.053 10.287-.865 15.014-2.29l-1.89-4.716Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#svgIDa)"/>`
	tentInnerSVG                                       = `<mask id="ipSTent0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M10 12L4 36h12"/><path fill="#fff" stroke="#fff" d="M38 12H10l6 24h28l-6-24Z"/><path stroke="#000" d="M12 18h27"/><path stroke="#fff" d="m10 12l3 12m25-12l3 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTent0)"/>`
	tentBannerInnerSVG                                 = `<mask id="ipSTentBanner0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M7 43h32L23 17L7 43Z"/><path d="M18.077 25L23 28l4.923-3M23 17V4"/><path fill="#fff" d="M35 4H23v8h12l-3-4l3-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTentBanner0)"/>`
	terminalInnerSVG                                   = `<mask id="ipSTerminal0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="40" height="32" x="4" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#000" stroke-linecap="round" d="m12 18l7 6l-7 6m11 2h13"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTerminal0)"/>`
	terminationFileInnerSVG                            = `<mask id="ipSTerminationFile0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M40 16.398V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h10"/><path stroke="#fff" d="M16 14h13m-13 7h5"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M34 44c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10Z"/><path stroke="#000" d="m27 27l14 14"/><path stroke="#fff" stroke-linejoin="round" d="M24 34c0-5.523 4.477-10 10-10m0 20c5.523 0 10-4.477 10-10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTerminationFile0)"/>`
	testTubeInnerSVG                                   = `<mask id="ipSTestTube0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M18 4h12"/><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44a6 6 0 0 0 6-6V10H18v28a6 6 0 0 0 6 6Z" clip-rule="evenodd"/><path stroke="#000" d="M24 27v1m0-10v3"/><path stroke="#fff" d="M19 35h11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTestTube0)"/>`
	textInnerSVG                                       = `<mask id="ipSText0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M16 19v-3h16v3M22 34h4m-2-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSText0)"/>`
	textMessageInnerSVG                                = `<mask id="ipSTextMessage0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M44 7H4v30h15l5 5l5-5h15V7Z"/><path stroke="#000" d="M14 16h6m-6 8h2m13-10l7 14m-7-14l-7 14m2-4h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTextMessage0)"/>`
	textureTwoInnerSVG                                 = `<mask id="ipSTextureTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M40 4H8a4 4 0 0 0-4 4v32a4 4 0 0 0 4 4h32a4 4 0 0 0 4-4V8a4 4 0 0 0-4-4Z"/><path stroke="#000" d="M12 12v8m16 8v8m-8-24v8m8-8h8M12 28h8m8-8h8M12 36h8m16-8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTextureTwo0)"/>`
	theSingleShoulderBagInnerSVG                       = `<mask id="ipSTheSingleShoulderBag0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M28 27c0-8.819-1.22-23-4-23c-3.429 0-4 14.181-4 23m-5 0h18v17H15z"/><path fill="#fff" d="M15 27h18l-5.294 9h-7.941L15 27Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTheSingleShoulderBag0)"/>`
	theaterInnerSVG                                    = `<mask id="ipSTheater0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke-linejoin="round" d="M8 6h32a2 2 0 0 1 2 2v28L32 22.005c-2.667 1.585-5.333 2.378-8 2.378s-5.333-.793-8-2.378L6 36V8a2 2 0 0 1 2-2Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M6 42h36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTheater0)"/>`
	themeInnerSVG                                      = `<mask id="ipSTheme0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M18 6a6 6 0 0 0 12 0h5.455L42 15.818l-5.727 4.91V42H11.727V20.727L6 15.818L12.546 6H18Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTheme0)"/>`
	thermometerInnerSVG                                = `<mask id="ipSThermometer0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M18 26V10a6 6 0 0 1 12 0v16a9.985 9.985 0 0 1 4 8c0 5.523-4.477 10-10 10s-10-4.477-10-10a9.985 9.985 0 0 1 4-8Z"/><path stroke="#000" stroke-linecap="round" d="M24 17v13"/><path fill="#000" stroke="#000" d="M24 38a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThermometer0)"/>`
	thermometerOneInnerSVG                             = `<mask id="ipSThermometerOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44a9 9 0 0 0 4-17.064V10c0-2 0-6-4-6s-4 4-4 6v16.936A9 9 0 0 0 24 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThermometerOne0)"/>`
	thermosCupInnerSVG                                 = `<mask id="ipSThermosCup0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M10 31s.071 6 14 6s14-6 14-6V15H10v16Z"/><path stroke-linecap="round" d="M24 4v6m-8-5v4m16-4v4M14 36v5a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThermosCup0)"/>`
	thinInnerSVG                                       = `<mask id="ipSThin0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M33 25H15c-1.59 0-3.77-.23-5-1c-3.65-2.31-4.34-7.37-2-11l6-9c3.93 8.43 16.04 8.42 20 0l6 9c2.34 3.63 1.64 8.69-2 11c-1.23.78-3.41 1-5 1Z"/><path d="m12 25l2.52 9.55c.87 3.38-.06 6.97-2.52 9.45m24-19l-2.52 9.58c-.87 3.38.06 6.94 2.52 9.42m-12-2v-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThin0)"/>`
	thinkingProblemInnerSVG                            = `<mask id="ipSThinkingProblem0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m38 21l5 9l-5 1v6h-3l-6-1l-1 7H13l-2-10.381C7.92 29.703 6 25.576 6 21c0-8.837 7.163-16 16-16s16 7.163 16 16Z"/><path stroke="#000" d="M17 19a5 5 0 1 1 5 5v3m0 6v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThinkingProblem0)"/>`
	threeInnerSVG                                      = `<mask id="ipSThree0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m11 40l-4.208-9.117a5 5 0 0 1 1.767-6.255l1.904-1.27a1 1 0 0 1 1.085-.016l.452.283l-1.87-13.68a2.32 2.32 0 0 1 .442-1.707a1.547 1.547 0 0 1 2.166-.31l.133.1c.41.308.719.73.886 1.215l4.112 11.879a.562.562 0 0 0 1.092-.22l-.883-13.685a2.696 2.696 0 0 1 .785-2.08a1.797 1.797 0 0 1 2.393-.132l.34.272a3 3 0 0 1 1.088 1.865l2.239 13.88a.568.568 0 0 0 1.127-.036l1.328-13.724a3 3 0 0 1 1.112-2.054l.206-.165a1.865 1.865 0 0 1 2.484.138c.525.524.82 1.236.82 1.978V19.91a.82.82 0 0 0 .017.175c.112.514.79 3.183 2.983 3.914c.907.302 2.364 2.8 3.373 4.727c.74 1.414.669 3.097-.106 4.492L34.5 40S31 44 23 44s-11.333-2.667-12-4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThree0)"/>`
	threeDGlassesInnerSVG                              = `<mask id="ipSThreeDGlasses0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M19.6 34.5h8.8"/><path stroke-linecap="round" stroke-linejoin="round" d="M2.303 27.39L9.958 9.563L14.949 7m30.855 20.633L38.05 9.562L33.059 7"/><path fill="#fff" fill-rule="evenodd" d="M3.4 26.8h15.317a1.294 1.294 0 0 1 1.29 1.396l-.927 11.712a1.294 1.294 0 0 1-1.29 1.192H4.328a1.294 1.294 0 0 1-1.29-1.192l-.927-11.712A1.294 1.294 0 0 1 3.4 26.8Zm25.884 0H44.6a1.294 1.294 0 0 1 1.29 1.396l-.928 11.712a1.294 1.294 0 0 1-1.29 1.192h-13.46a1.294 1.294 0 0 1-1.29-1.192l-.928-11.712a1.294 1.294 0 0 1 1.29-1.396Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeDGlasses0)"/>`
	threeHexagonsInnerSVG                              = `<mask id="ipSThreeHexagons0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m24 27l-10-6l-10 6v12l10 6l10-6V27Zm20 0l-10-6l-10 6v12l10 6l10-6V27Z"/><path d="M34 9L24 3L14 9v12l10 6l10-6V9Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeHexagons0)"/>`
	threeKeyInnerSVG                                   = `<mask id="ipSThreeKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M19 14h10l-7 9c4 0 7 2 7 6s-3 5-5 5c-2.381 0-4-1-5-2.1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeKey0)"/>`
	threeSlashesInnerSVG                               = `<mask id="ipSThreeSlashes0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m6 10l36-6v7L6 17v-7Zm0 14l36-6v7L6 31v-7Zm0 14l36-6v7L6 45v-7Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeSlashes0)"/>`
	threeThreeInnerSVG                                 = `<mask id="ipSThreeThree0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25.745 44h-.896c-5.21 0-10.07-2.626-12.925-6.984l-2.195-3.35a5.629 5.629 0 0 1 1.072-7.382l2.288-1.936c.26-.22.411-.545.411-.887V7.25a3.25 3.25 0 0 1 6.5 0v-1a3.25 3.25 0 0 1 6.5 0v1a3.25 3.25 0 0 1 6.5 0v14.5a3.25 3.25 0 0 1 6.5 0v10.219c0 1.649-.498 3.26-1.43 4.62l-.973 1.423A13.755 13.755 0 0 1 25.745 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeThree0)"/>`
	threeTrianglesInnerSVG                             = `<mask id="ipSThreeTriangles0"><g fill="none"><path fill="#fff" d="m17 7l7 12.124L29.99 29.5H4.01L17 7Z"/><path fill="#fff" d="m31 7l12.99 22.5H18.01L24 19.124L31 7ZM11.01 41.5h25.98l-7-12H18.01l-7 12Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M29.99 29.5L24 19.124M18.01 29.5l-7 12h25.98l-7-12H18.01Zm0 0h25.98L31 7l-7 12.124L18.01 29.5Zm0 0L24 19.124L18.01 29.5Zm0 0h11.98h-11.98Zm11.98 0H4.01L17 7l7 12.124L29.99 29.5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThreeTriangles0)"/>`
	thumbsDownInnerSVG                                 = `<mask id="ipSThumbsDown0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M20.38 29.4v7.2a5.4 5.4 0 0 0 5.4 5.4l7.2-16.2V6H12.062a3.6 3.6 0 0 0-3.6 3.06L5.98 25.26a3.6 3.6 0 0 0 3.6 4.14h10.8Z"/><path fill="#fff" d="M32.98 6h4.806a4.158 4.158 0 0 1 4.194 3.6v12.6c-.283 2.09-2.086 3.838-4.194 3.8H32.98V6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThumbsDown0)"/>`
	thumbsUpInnerSVG                                   = `<mask id="ipSThumbsUp0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M27.6 18.6v-7.2A5.4 5.4 0 0 0 22.2 6L15 22.2V42h20.916a3.6 3.6 0 0 0 3.6-3.06L42 22.74a3.6 3.6 0 0 0-3.6-4.14H27.6Z"/><path fill="#fff" d="M15 22h-4.806C8.085 21.963 6.283 23.71 6 25.8v12.6a4.158 4.158 0 0 0 4.194 3.6H15V22Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThumbsUp0)"/>`
	thunderboltInnerSVG                                = `<mask id="ipSThunderbolt0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 26a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v5.36c0 .954-.683 1.781-1.52 2.238c-1.187.65-2.724 1.943-3.273 4.416C38.966 39.092 38.105 40 37 40H11c-1.105 0-1.967-.908-2.207-1.986c-.55-2.474-2.086-3.767-3.273-4.416C4.683 33.141 4 32.314 4 31.36V26Z"/><path stroke="#000" d="M14 31h20"/><path stroke="#fff" d="m25 4l-6 7h10l-6 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThunderbolt0)"/>`
	thunderstormOneInnerSVG                            = `<mask id="ipSThunderstormOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M20.53 20L17 31.5l6.177.885L20.529 43L32 29.73l-7.059-1.768L30.235 20H20.53Z"/><path stroke-linecap="round" d="M9.455 29.994A13.95 13.95 0 0 1 4 18.885C4 11.217 10.105 5 17.636 5c6.297 0 11.598 4.346 13.166 10.253a8.921 8.921 0 0 1 4.107-.996c5.02 0 9.091 4.144 9.091 9.257c0 3.795-2.244 7.058-5.455 8.486"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSThunderstormOne0)"/>`
	ticketInnerSVG                                     = `<mask id="ipSTicket0"><g fill="none" stroke-linecap="round" stroke-width="4"><path stroke="#fff" stroke-linejoin="round" d="M9 16L34 6l4 10"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 16h40v6c-3 0-6 2-6 5.5s3 6.5 6 6.5v6H4v-6c3 0 6-2 6-6s-3-6-6-6v-6Z"/><path stroke="#000" d="M17 25.385h6m-6 6h14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTicket0)"/>`
	ticketOneInnerSVG                                  = `<mask id="ipSTicketOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 8h7s1 5 6 5s6-5 6-5h21v32H23s-1-5-6-5s-6 5-6 5H4V8Z"/><path stroke="#000" d="M17 19v2m0 6v2m8-8h11m-11 6h11"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTicketOne0)"/>`
	ticketsOneInnerSVG                                 = `<mask id="ipSTicketsOne0"><g fill="none"><rect width="26" height="38" x="5" y="42" fill="#fff" stroke="#fff" stroke-linejoin="bevel" stroke-width="4" rx="2" transform="rotate(-90 5 42)"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 16L32 5l5 11"/><circle cx="13" cy="23" r="2" fill="#000"/><circle cx="13" cy="29" r="2" fill="#000"/><circle cx="13" cy="35" r="2" fill="#000"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21 35h4l11-12m-12 6h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTicketsOne0)"/>`
	ticketsTwoInnerSVG                                 = `<mask id="ipSTicketsTwo0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 30c3 0 5 1.88 5 4h6V4h-6c0 2-2 4-5 4s-5-2-5-4h-6v14"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 44h-6c0-2.12-2-4-5-4s-5 1.88-5 4H8V14h6c0 2 2 4 5 4s5-2 5-4h6v30Z"/><circle cx="14" cy="24" r="2" fill="#000"/><circle cx="19" cy="24" r="2" fill="#000"/><circle cx="24" cy="24" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTicketsTwo0)"/>`
	tiktokInnerSVG                                     = `<mask id="ipSTiktok0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="3.833" d="M21.358 19.14c-5.889-.284-9.982 1.815-12.28 6.298c-3.446 6.725-.598 17.729 10.9 17.729c11.5 0 11.832-11.112 11.832-12.276V17.875c2.46 1.557 4.533 2.495 6.22 2.813c1.689.317 2.761.458 3.22.422v-6.476c-1.561-.188-2.911-.547-4.05-1.076c-1.709-.794-5.096-2.997-5.096-6.226c.002.016.002-.817 0-2.499h-7.118c-.021 15.816-.021 24.502 0 26.058c.031 2.334-1.78 5.6-5.45 5.6c-3.672 0-5.483-3.263-5.483-5.367c0-1.288.443-3.155 2.272-4.538c1.085-.82 2.59-1.148 5.033-1.148V19.14Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTiktok0)"/>`
	timeInnerSVG                                       = `<mask id="ipSTime0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24.008 12v12.01l8.479 8.48"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTime0)"/>`
	timedMailInnerSVG                                  = `<mask id="ipSTimedMail0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M44 35V9H4v28h22"/><circle cx="35" cy="35" r="9" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M34 32v4h4"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="m4 9l20 13L44 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTimedMail0)"/>`
	timelineInnerSVG                                   = `<mask id="ipSTimeline0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSTimeline1)"><path fill="#fff" stroke-linejoin="round" d="M13 12a4 4 0 1 0 8 0a4 4 0 0 0-8 0Zm18 12a4 4 0 1 0 8 0a4 4 0 0 0-8 0ZM13 36a4 4 0 1 0 8 0a4 4 0 0 0-8 0Z"/><path stroke-linecap="round" d="M4 36h9m8 0h23M4 12h9m8 0h23"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 4v40"/><path stroke-linecap="round" d="M4 24h27m8 0h5"/></g><defs><clipPath id="ipSTimeline1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTimeline0)"/>`
	timerInnerSVG                                      = `<mask id="ipSTimer0"><g fill="none" stroke-width="4"><circle cx="24" cy="28" r="16" fill="#fff" stroke="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M28 4h-8m4 0v8m11 4l3-3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 28v-6m0 6h-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTimer0)"/>`
	tipsInnerSVG                                       = `<mask id="ipSTips0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M40 20c0 6.808-4.252 12.622-10.244 14.934H18.244C12.252 32.622 8 26.808 8 20c0-8.837 7.163-16 16-16s16 7.163 16 16Z"/><path stroke="#fff" d="m29.756 34.934l-.68 8.15a1 1 0 0 1-.996.916h-8.16a1 1 0 0 1-.996-.917l-.68-8.15"/><path stroke="#000" d="M18 17v6l6-3l6 3v-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTips0)"/>`
	tipsOneInnerSVG                                    = `<mask id="ipSTipsOne0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M44 8H4v30h15l5 5l5-5h15V8Z"/><path stroke="#000" d="M24 23v9m0-16v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTipsOne0)"/>`
	tireSwingInnerSVG                                  = `<mask id="ipSTireSwing0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M4 4s6 6 20 6s20-6 20-6m-20 6v6"/><ellipse cx="30" cy="30" fill="#fff" stroke="#fff" rx="8" ry="14"/><ellipse cx="30" cy="30" fill="#000" stroke="#000" rx="3" ry="6"/><path stroke="#fff" d="M18 44c-4.418 0-8-6.268-8-14s3.582-14 8-14m12 0H18m12 28H18m4-15H10m13-7H12m11 15H12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTireSwing0)"/>`
	toiletInnerSVG                                     = `<mask id="ipSToilet0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19.999 10h8v12h-8V10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m17 35l-5 9h24l-5-9m2.999-13V5a1 1 0 0 0-1-1h-18a1 1 0 0 0-1 1v17"/><path d="M6.08 22.364A.3.3 0 0 1 6.372 22h35.254a.3.3 0 0 1 .292.364c-1.224 5.508-4.635 10.452-10 12.2C29.436 35.374 26.656 36 24 36c-2.655 0-5.436-.627-7.92-1.436c-5.365-1.749-8.776-6.692-10-12.2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSToilet0)"/>`
	tomatoInnerSVG                                     = `<mask id="ipSTomato0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 44c11.046 0 20-7.387 20-16.5c0-6.442-4.475-11.799-11-14.516L29.5 14.5L30 20l-6.5-2l-6.5 2v-5.5l-3-1.516C8.022 15.837 4 21.393 4 27.5C4 36.613 12.954 44 24 44Z"/><path d="m23.5 4l3.809 5.117L36 9.91l-6.337 4.573L31.5 21l-8-3l-8 3l1.837-6.517L11 9.91l8.691-.793L23.5 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTomato0)"/>`
	toolInnerSVG                                       = `<mask id="ipSTool0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 16c0 6.627-5.373 12-12 12c-2.027 0-3.936-.503-5.61-1.39L9 44l-5-5l17.39-17.39A11.948 11.948 0 0 1 20 16c0-6.627 5.373-12 12-12c2.027 0 3.936.502 5.61 1.39L30 13l5 5l7.61-7.61A11.948 11.948 0 0 1 44 16Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTool0)"/>`
	toolkitInnerSVG                                    = `<mask id="ipSToolkit0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M8 25v13a3 3 0 0 0 3 3h26a3 3 0 0 0 3-3V25"/><path fill="#fff" d="M5 15a2 2 0 0 1 2-2h34a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-8Z"/><path stroke-linecap="round" d="M31 13V9a2 2 0 0 0-2-2H19a2 2 0 0 0-2 2v4m-2 10v6m18-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSToolkit0)"/>`
	topBarInnerSVG                                     = `<mask id="ipSTopBar0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" d="M6 16h36"/><path stroke="#fff" stroke-linecap="round" d="M6 13v6m36-6v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTopBar0)"/>`
	topbuzzInnerSVG                                    = `<mask id="ipSTopbuzz0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m18.905 18.168l-8.58-1.824a1.032 1.032 0 0 1-.794-1.224l1.931-9.087a1.032 1.032 0 0 1 1.225-.795l29.28 6.223c.558.119.914.667.796 1.225l-1.932 9.087a1.032 1.032 0 0 1-1.224.795l-8.506-1.808c-.388-.082-.617.046-.69.385l-3.97 18.676a1.032 1.032 0 0 1-1.223.795l-9.088-1.931a1.032 1.032 0 0 1-.795-1.225l3.971-18.681c.071-.335-.062-.54-.4-.611Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTopbuzz0)"/>`
	topicInnerSVG                                      = `<mask id="ipSTopic0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24a19.94 19.94 0 0 0 3.368 11.112c.244.363-.213 2.66-1.368 6.888c4.229-1.155 6.525-1.612 6.888-1.368A19.94 19.94 0 0 0 24 44Z"/><path stroke="#000" stroke-linecap="round" d="M16.605 19.82h16.779m-11.537-4.082l-2.914 16.524m9.914-16.524l-2.914 16.524M14.604 28h16.78"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTopic0)"/>`
	topicDiscussionInnerSVG                            = `<mask id="ipSTopicDiscussion0"><g fill="none" stroke-linecap="round" stroke-width="4"><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M44 8H4v30h15l5 5l5-5h15V8Z"/><path stroke="#000" d="m21 15l-1 17m8-17l-1 17m6-12H16m16 7H15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTopicDiscussion0)"/>`
	torchInnerSVG                                      = `<mask id="ipSTorch0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path d="M27 34h-6v10h6V34Zm4 0H17l-3-8h20l-3 8Z"/><path fill="#fff" d="M21 14c2-4.61 6-10 6-10s6.36 11.49 6.36 15.23S30.74 26 27 26h-8c-2.64 0-4.36-2.14-4.36-4.78S19 10 19 10s.96 2.01 2 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTorch0)"/>`
	tourBusInnerSVG                                    = `<mask id="ipSTourBus0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M9 23h30v11a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2V23Z"/><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M9 8a2 2 0 0 1 2-2h26a2 2 0 0 1 2 2v15H9V8Z"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M15 42a3 3 0 0 1-3-3v-3h6v3a3 3 0 0 1-3 3Zm18 0a3 3 0 0 1-3-3v-3h6v3a3 3 0 0 1-3 3Z"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M6 12v4m36-4v4"/><circle cx="15" cy="30" r="2" fill="#000"/><circle cx="33" cy="30" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="m31 6l-9 10m16-9l-5 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTourBus0)"/>`
	towelInnerSVG                                      = `<mask id="ipSTowel0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M36 18H4v8h32v-8Z"/><path d="M36 12v20a4 4 0 0 1-4 4H12m0 0H8a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4h32a4 4 0 0 1 4 4v32c0 2.21-1.79 4-4 4H16c-2.21 0-4-1.79-4-4v-4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTowel0)"/>`
	towerInnerSVG                                      = `<mask id="ipSTower0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M17 31h14v13H17zm2-14h10v14H19zm2-13h6v13h-6z"/><path stroke-linecap="round" d="M4 44h40"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTower0)"/>`
	towerOfBabelInnerSVG                               = `<mask id="ipSTowerOfBabel0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M20 14.5V4h8v9.5M14 25v-9.538L34 13v10M11 35v-9l26-3v9"/><path fill="#fff" d="M40 44H8v-8l32-4v12Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTowerOfBabel0)"/>`
	towerOfPisaInnerSVG                                = `<mask id="ipSTowerOfPisa0"><g fill="none"><g stroke="#fff" stroke-width="4" clip-path="url(#ipSTowerOfPisa1)"><path stroke-linecap="round" stroke-linejoin="round" d="M4 44h40"/><path stroke-linejoin="round" d="m21.25 7.474l15.455 4.142L28 44H11L21.25 7.474Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m19.317 6.957l19.319 5.176M16.21 18.548l19.32 5.176"/><path stroke-linecap="round" d="m25.482 20.932l1.036-3.864"/><path stroke-linecap="round" stroke-linejoin="round" d="m13.105 30.14l19.319 5.175"/><path stroke-linecap="round" d="m22.482 31.932l1.036-3.864"/><rect width="10" height="4" x="25.183" y="4.387" stroke-linecap="round" stroke-linejoin="round" rx="1" transform="rotate(15 25.183 4.387)"/><path stroke-linecap="round" d="m19.482 42.932l1.036-3.864"/></g><defs><clipPath id="ipSTowerOfPisa1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTowerOfPisa0)"/>`
	toxinsInnerSVG                                     = `<mask id="ipSToxins0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M33.958 44s.024-3.47 0-4.24a18.993 18.993 0 0 0 4.477-3.325A18.94 18.94 0 0 0 44 23c0-10.493-8.507-19-19-19S6 12.507 6 23a18.94 18.94 0 0 0 5.565 13.435a19.088 19.088 0 0 0 2.879 2.365c.515.345 1.01.666 1.56.96V44h17.954Z" clip-rule="evenodd"/><path fill="#000" stroke="#000" d="M18 27a4 4 0 0 0 4-4l-4-4a4 4 0 0 0 0 8Zm14 0a4 4 0 0 1-4-4l4-4a4 4 0 0 1 0 8Z"/><path stroke="#000" stroke-linecap="round" d="m22 34l2.938-3L28 33.897"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSToxins0)"/>`
	traceInnerSVG                                      = `<mask id="ipSTrace0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 6C14.059 6 6 14.059 6 24s8.059 18 18 18s18-8.059 18-18"/><path stroke-linecap="round" d="M24 15a9 9 0 1 0 9 9m-9 0l6.3-6.306"/><path fill="#fff" d="M30.3 11.426V17.7h6.325L42 12.3h-6.297V6L30.3 11.426Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrace0)"/>`
	trademarkInnerSVG                                  = `<mask id="ipSTrademark0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="24" r="20" fill="#fff" stroke="#fff"/><path stroke="#000" d="M12 19h8m-4 0v10m10 0V19l5 6l5-6v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrademark0)"/>`
	traditionalChineseMedicineInnerSVG                 = `<mask id="ipSTraditionalChineseMedicine0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M24 43h5.955c.083-2.737.484-4.242 1.204-4.515C38.669 35.635 44 28.434 44 20H4c0 8.251 5.103 15.323 12.357 18.294c.758.31 1.325 1.88 1.699 4.706H24Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M14.443 27.023c.36 1.187.836 2.168 1.427 2.942a11.253 11.253 0 0 0 2.14 2.104"/><path stroke="#fff" stroke-linecap="round" d="M25.214 20.026a3301.104 3301.104 0 0 0 6.622-13.708c1.05-2.21 3.18-2.742 5.145-1.902c1.965.84 2.76 3.242 1.935 4.917c-.51 1.034-2.24 4.591-5.19 10.671"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTraditionalChineseMedicine0)"/>`
	trainInnerSVG                                      = `<mask id="ipSTrain0"><g fill="none"><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M9 8.84c0-.933.438-1.807 1.271-2.225C12.246 5.625 16.613 4 24 4c7.388 0 11.754 1.625 13.728 2.615C38.563 7.033 39 7.907 39 8.839V36a2 2 0 0 1-2 2H11a2 2 0 0 1-2-2V8.84Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M34 38v4m-20-4v4"/><path fill="#fff" stroke="#fff" d="M20.5 32a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm10 0a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 44h8"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M9 12h30v14H9z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 12v14"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 12h8m-8 14h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrain0)"/>`
	transactionInnerSVG                                = `<mask id="ipSTransaction0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" d="m21 31l5 4l8-10M14 15h20m-20 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransaction0)"/>`
	transactionOrderInnerSVG                           = `<mask id="ipSTransactionOrder0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="30" height="36" x="9" y="8" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M18 4v6m12-6v6"/><path stroke="#000" stroke-linecap="round" d="M16 19h16m-16 8h12m-12 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransactionOrder0)"/>`
	transferInnerSVG                                   = `<mask id="ipSTransfer0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 28.392v7.015C37 39.048 34.089 42 30.497 42s-6.503-2.952-6.503-6.593l.012-22.264C24.006 9.198 21.095 6 17.503 6C13.912 6 11 9.198 11 13.143v15.25"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m43 31l-6-6l-6 6"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M43 10.727C43 15.182 37 19 37 19s-6-3.818-6-8.273c0-1.519.632-2.975 1.757-4.05A6.148 6.148 0 0 1 37 5a6.15 6.15 0 0 1 4.243 1.677A5.598 5.598 0 0 1 43 10.727Zm-26 24C17 39.182 11 43 11 43s-6-3.818-6-8.273c0-1.519.632-2.975 1.757-4.05A6.148 6.148 0 0 1 11 29a6.15 6.15 0 0 1 4.243 1.677A5.598 5.598 0 0 1 17 34.727Z"/><circle cx="37" cy="11" r="2" fill="#000"/><circle cx="11" cy="35" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransfer0)"/>`
	transformInnerSVG                                  = `<mask id="ipSTransform0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="13.715" cy="13.714" r="6.857" fill="#fff"/><circle cx="34.286" cy="34.285" r="6.857" fill="#fff"/><path d="M24.001 44c-11.046 0-20-8.954-20-20l6.667 3.333M24.001 4c11.046 0 20 8.954 20 20l-6.667-3.333"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransform0)"/>`
	transportInnerSVG                                  = `<mask id="ipSTransport0"><g fill="none" stroke-width="4"><rect width="28" height="18" x="16" y="12" fill="#fff" stroke="#fff" stroke-linejoin="round" rx="3"/><path stroke="#000" stroke-linecap="round" d="M24 18v6m12-6v6"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M36 12V6H24v6m20 24H12a2 2 0 0 1-2-2V11a2 2 0 0 0-2-2H4"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M19 42a3 3 0 0 1-3-3v-3h6v3a3 3 0 0 1-3 3Zm18 0a3 3 0 0 1-3-3v-3h6v3a3 3 0 0 1-3 3Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransport0)"/>`
	transporterInnerSVG                                = `<mask id="ipSTransporter0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M42 8H20a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h22a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2ZM4 34h14V20h-7l-7 6.462V34Z"/><path stroke-linecap="round" d="M18 36a4 4 0 0 1-8 0m30 0a4 4 0 0 1-8 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTransporter0)"/>`
	trapezoidInnerSVG                                  = `<mask id="ipSTrapezoid0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M31.794 8H16.206a3 3 0 0 0-2.864 2.105l-8.125 26A3 3 0 0 0 8.081 40h31.838a3 3 0 0 0 2.864-3.895l-8.125-26A3 3 0 0 0 31.794 8Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrapezoid0)"/>`
	trayInnerSVG                                       = `<mask id="ipSTray0"><g fill="none"><g stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSTray1)"><rect width="28" height="30" x="24.762" y="3.243" fill="#fff" stroke="#fff" rx="2" transform="rotate(45 24.762 3.243)"/><path stroke="#fff" d="m38.197 16.677l4.242-4.242l-7.07-7.071l-4.244 4.242"/><path stroke="#000" d="M18 21h12m-12 6h4m6 0h2"/></g><defs><clipPath id="ipSTray1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTray0)"/>`
	treadmillInnerSVG                                  = `<mask id="ipSTreadmill0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M39.75 44H9.31C6.38 44 4 41.62 4 38.69v-5.42c0-1.21 1.06-2.14 2.25-1.99l34.02 4.25c2.13.27 3.73 2.08 3.73 4.22C44 42.1 42.1 44 39.75 44Z"/><path d="M16 32L4 4h6.43M6 31l6-8m13-8H9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreadmill0)"/>`
	treadmillOneInnerSVG                               = `<mask id="ipSTreadmillOne0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M30 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="m11 21l6-5l8 3l-3 6l7 6l2 7"/><path stroke-linecap="round" stroke-linejoin="round" d="m22 25l-5 8l-8-1M6 44h34l4-9M25 19l8 5l6-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreadmillOne0)"/>`
	treadmillTwoInnerSVG                               = `<mask id="ipSTreadmillTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M8 39v5m32-5v5m-4-13l6-16l-4-6m-5 5L43 4"/><rect width="40" height="8" x="4" y="31" fill="#fff" rx="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreadmillTwo0)"/>`
	treasureChestInnerSVG                              = `<mask id="ipSTreasureChest0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M42 4H6a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path stroke-linecap="round" d="M4 24h13m14 0h13"/><path fill="#fff" d="M24 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreasureChest0)"/>`
	treeDiagramInnerSVG                                = `<mask id="ipSTreeDiagram0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="10" cy="24" r="4" fill="#fff"/><circle cx="38" cy="10" r="4" fill="#fff"/><circle cx="38" cy="24" r="4" fill="#fff"/><circle cx="38" cy="38" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M34 38H22V10h12M14 24h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreeDiagram0)"/>`
	treeListInnerSVG                                   = `<mask id="ipSTreeList0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M38 20H18v8h20v-8ZM32 6H18v8h14V6Zm12 28H18v8h26v-8Z"/><path stroke-linecap="round" d="M17 10H5m12 14H5m12 14H5m0 6V4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreeList0)"/>`
	treeOneInnerSVG                                    = `<mask id="ipSTreeOne0"><g fill="none" stroke-width="4"><ellipse cx="24" cy="20" fill="#fff" stroke="#fff" rx="15" ry="16"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 14v22"/><path stroke="#fff" d="M30 34.669A14.154 14.154 0 0 1 24 36a14.16 14.16 0 0 1-6-1.331"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M24 36v8"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m24 22l6-6m-6 13l-6-6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTreeOne0)"/>`
	trendInnerSVG                                      = `<mask id="ipSTrend0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" d="m13.44 29.835l5.657-5.657l4.388 4.377L34 18"/><path stroke="#000" stroke-linecap="round" d="M26 18h8v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrend0)"/>`
	trendTwoInnerSVG                                   = `<mask id="ipSTrendTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M4 44h40"/><path fill="#fff" d="m4 26l8 2v10H4V26Zm16-2l8-4v18h-8V24Zm16-8l8-4v26h-8V16Z"/><path stroke-linecap="round" d="m4 18l8 2L44 4H34"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrendTwo0)"/>`
	triangleInnerSVG                                   = `<mask id="ipSTriangle0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M22.27 6.99c.77-1.33 2.69-1.33 3.46 0l18.532 32.008c.772 1.333-.19 3.002-1.73 3.002H5.468c-1.54 0-2.503-1.669-1.731-3.002L22.269 6.99Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTriangle0)"/>`
	triangleRoundRectangleInnerSVG                     = `<mask id="ipSTriangleRoundRectangle0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M20 29H6v14h14V29Zm4-25l10 17H14L24 4Zm12 40a8 8 0 1 0 0-16a8 8 0 0 0 0 16Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTriangleRoundRectangle0)"/>`
	triangleRulerInnerSVG                              = `<defs><path id="ipSTriangleRuler0" fill="#fff" fill-rule="evenodd" d="M13 35h12L13 23v12Z" clip-rule="evenodd"/><path id="ipSTriangleRuler1" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M13 35h12L13 23v12Z" clip-rule="evenodd"/></defs><mask id="ipSTriangleRuler2"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 44L4 4v40h40Z"/><use href="#ipSTriangleRuler0" fill-rule="evenodd" clip-rule="evenodd"/><use href="#ipSTriangleRuler0" fill-rule="evenodd" clip-rule="evenodd"/><use href="#ipSTriangleRuler0" fill-rule="evenodd" clip-rule="evenodd"/><use href="#ipSTriangleRuler0" fill-rule="evenodd" clip-rule="evenodd"/><use href="#ipSTriangleRuler1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-rule="evenodd"/><use href="#ipSTriangleRuler1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-rule="evenodd"/><use href="#ipSTriangleRuler1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-rule="evenodd"/><use href="#ipSTriangleRuler1" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M30 44v-3m-6 3v-3m-6 3v-3m-6 3v-3m-8-5h3m-3-6h3m-3-6h3m-3-6h3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTriangleRuler2)"/>`
	trophyInnerSVG                                     = `<mask id="ipSTrophy0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 30c6.627 0 12-5.53 12-12.353V4H12v13.647C12 24.47 17.373 30 24 30Z"/><path stroke-linecap="round" d="M12 21V11H4c0 6.667 4 10 8 10Zm24 0V11h8c0 6.667-4 10-8 10Z" clip-rule="evenodd"/><path stroke-linecap="round" d="M24 32v4"/><path fill="#fff" d="m15 42l3.69-6h10.352L33 42H15Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrophy0)"/>`
	trousersBellBottomsInnerSVG                        = `<mask id="ipSTrousersBellBottoms0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m16 12l2-8h12l2 8v12l4 17l-12 3l-12-3l4-17V12Z"/><path stroke="#000" d="M24 44V16"/><path stroke="#fff" d="m12 41l12 3l12-3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrousersBellBottoms0)"/>`
	trumpetInnerSVG                                    = `<mask id="ipSTrumpet0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M32 28h6v11a3 3 0 1 1-6 0V28Z"/><path stroke-linecap="round" d="M29 12h10a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3H28"/><path stroke-linejoin="round" d="M14 14h-2a6 6 0 0 0 0 12h2"/><path fill="#fff" d="M14.198 33a.198.198 0 0 1-.198-.198V6.198c0-.11.089-.198.198-.198H17.5C24.956 6 31 12.044 31 19.5S24.956 33 17.5 33h-3.302Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrumpet0)"/>`
	trunkInnerSVG                                      = `<mask id="ipSTrunk0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="24" height="28" x="12" y="12" fill="#fff" stroke="#fff" rx="4"/><path stroke="#fff" d="M20 12V6m8 6V6M16 4h16M18 40v4m12-4v4"/><path stroke="#000" d="M20 25h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTrunk0)"/>`
	tubInnerSVG                                        = `<mask id="ipSTub0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M40 23V12a7 7 0 0 0-7-7v0a7 7 0 0 0-7 7v1"/><path fill="#fff" d="M40 29v-6H8v6a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8Z"/><path d="M43 23H5"/><path stroke-linejoin="round" d="m17 37l-4 6m18-6l4 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTub0)"/>`
	tuchongInnerSVG                                    = `<mask id="ipSTuchong0"><g fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path d="M5 39h38V28h-6v5H11V15h12V9H5v30Z"/><path stroke-linecap="round" d="M43 16v6c-8 0-14-5-14-13h6c0 4 2 7 8 7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTuchong0)"/>`
	tumblrInnerSVG                                     = `<mask id="ipSTumblr0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" d="M15 22v-5h5v-3l6-2v5h5v5h-5v7s0 1.5 2 2s5-1 5-1l-2 6h-5c-3.5 0-6-3.5-6-6v-8h-5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTumblr0)"/>`
	turkeyInnerSVG                                     = `<mask id="ipSTurkey0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M4 36h40l-5 8H9l-5-8Z"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M11 30v6h26v-5c0-6-3-8-3-8c2-2.5 3-6 0-8s-5.5 0-7 2c0 0-16-2-16 13Z"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M21 24s-1 .5-2 2s-1 3-1 3"/><path stroke="#fff" stroke-width="4" d="m39 9l-5 6"/><circle cx="38.356" cy="7.483" r="2.5" fill="#fff" transform="rotate(35.072 38.356 7.483)"/><circle cx="40.811" cy="9.206" r="2.5" fill="#fff" transform="rotate(35.072 40.81 9.206)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTurkey0)"/>`
	turnAroundInnerSVG                                 = `<mask id="ipSTurnAround0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Zm3 6h-6c-.929 0-1.393 0-1.784.038a8 8 0 0 0-7.178 7.178C12 27.607 12 28.07 12 29h24c0-.929 0-1.393-.038-1.784a8 8 0 0 0-7.178-7.178C28.393 20 27.93 20 27 20Z"/><path d="M41 26.784c1.902 1.224 3 2.669 3 4.216c0 4.418-8.954 8-20 8S4 35.418 4 31c0-1.547 1.098-2.992 3-4.216"/><path d="m19 34l5 5l-5 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTurnAround0)"/>`
	turnOnInnerSVG                                     = `<mask id="ipSTurnOn0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round"><path fill="#fff" stroke-width="4" d="M21 43c-4.726-1.767-8.668-7.815-10.64-11.357c-.852-1.53-.403-3.408.964-4.502a3.83 3.83 0 0 1 5.1.283L18 29V17.5a2.5 2.5 0 0 1 5 0v6a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v2a2.5 2.5 0 0 1 5 0v7.868c0 1.07-.265 2.128-.882 3.003C36.095 39.82 34.255 42.034 32 43c-3.5 1.5-6.63 1.634-11 0Z"/><path stroke-width="3" d="m12 9l3 3m4-8l1 6m7-2l-2 3"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTurnOn0)"/>`
	tvOneInnerSVG                                      = `<mask id="ipSTvOne0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 12H6a2 2 0 0 0-2 2v26a2 2 0 0 0 2 2h36a2 2 0 0 0 2-2V14a2 2 0 0 0-2-2Z"/><path fill="#000" stroke="#000" d="M31 19H11v16h20V19Z"/><path stroke="#fff" stroke-linecap="round" d="m14 4.5l9.09 7.5L34 2"/><path stroke="#000" stroke-linecap="round" d="M38 18v1m0 6v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTvOne0)"/>`
	twitterInnerSVG                                    = `<mask id="ipSTwitter0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5 35.762c1.929 1.067 15.891 9.115 25.82 2.912c9.928-6.203 9.38-16.89 9.38-21.788c.9-1.884 2.8-2.842 2.8-7.942c-1.866 1.724-3.721 2.31-5.565 1.76c-1.806-2.754-4.291-3.973-7.456-3.655c-4.746.477-6.482 5.133-5.971 11.158c-7.318 3.7-13.056-2.683-16.014-7.503c-.988 3.796-1.94 8.354 0 13.395c1.294 3.362 4.405 6.203 9.331 8.526C12.332 35.33 8.224 36.377 5 35.762Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwitter0)"/>`
	twoInnerSVG                                        = `<mask id="ipSTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m11 40l-4.107-8.898a5 5 0 0 1 1.996-6.4l5.541-3.274a3 3 0 0 1 3.116.038l.687.43a1 1 0 0 0 1.524-.965L18.148 7.26a2.616 2.616 0 0 1 .748-2.155a1.744 1.744 0 0 1 2.323-.129l.378.302a3 3 0 0 1 1.087 1.865l2.239 13.88a.568.568 0 0 0 1.127-.036l1.328-13.724a3 3 0 0 1 1.112-2.054l.206-.165a1.865 1.865 0 0 1 2.484.138c.525.524.82 1.236.82 1.978v22.26a1 1 0 0 0 1.624.782L37 27.5c1.653-1.322 3.875-.459 5.255.445c.439.287.504.881.192 1.303L34.5 40S31 44 23 44s-11.333-2.667-12-4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwo0)"/>`
	twoDimensionalCodeInnerSVG                         = `<mask id="ipSTwoDimensionalCode0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M20 6H6v14h14V6Zm0 22H6v14h14V28ZM42 6H28v14h14V6Z"/><path stroke-linecap="round" d="M29 28v14m12-14v14"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoDimensionalCode0)"/>`
	twoDimensionalCodeOneInnerSVG                      = `<mask id="ipSTwoDimensionalCodeOne0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M18 6H6v12h12V6Zm0 24H6v12h12V30Zm24 0H30v12h12V30Zm0-24H30v12h12V6Z"/><path stroke-linecap="round" d="M24 6v18m0 6v12m0-18H6m36 0H30"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoDimensionalCodeOne0)"/>`
	twoDimensionalCodeTwoInnerSVG                      = `<mask id="ipSTwoDimensionalCodeTwo0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M18 6H6v12h12V6Zm0 24H6v12h12V30ZM42 6H30v12h12V6Z"/><path stroke-linecap="round" d="M24 6v12m18 6H6m28 6v12m8-12v12M26 30v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoDimensionalCodeTwo0)"/>`
	twoKeyInnerSVG                                     = `<mask id="ipSTwoKey0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="M19 19c0-3.167 2.667-5 5-5s5 1.833 5 5c0 5.7-10 9.933-10 15h10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoKey0)"/>`
	twoSemicirclesInnerSVG                             = `<mask id="ipSTwoSemicircles0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M44 25c0-11.046-8.954-20-20-20S4 13.954 4 25h40Zm-30 7c0 5.523 4.477 10 10 10s10-4.477 10-10H14Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoSemicircles0)"/>`
	twoTrianglesInnerSVG                               = `<mask id="ipSTwoTriangles0"><g fill="none"><path fill="#fff" d="m24 4l17.32 30H6.68L24 4Z"/><path fill="#fff" d="m24 44l17.32-30H6.68L24 44Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 4l17.32 30H6.68L24 4Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 44l17.32-30H6.68L24 44Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoTriangles0)"/>`
	twoTwoInnerSVG                                     = `<mask id="ipSTwoTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M26.745 44h-.896c-5.21 0-10.07-2.626-12.925-6.984l-2.195-3.35a5.629 5.629 0 0 1 1.072-7.382l2.288-1.936c.26-.22.411-.545.411-.887V7.25a3.25 3.25 0 0 1 6.5 0v-1a3.25 3.25 0 0 1 6.5 0v11.5a3.25 3.25 0 0 1 6.5 0v4a3.25 3.25 0 0 1 6.5 0v10.219c0 1.649-.498 3.26-1.43 4.62l-.973 1.423A13.755 13.755 0 0 1 26.745 44Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTwoTwo0)"/>`
	typeDriveInnerSVG                                  = `<mask id="ipSTypeDrive0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 12a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V12Z"/><path fill="#fff" stroke="#000" d="M15.414 32.586A2 2 0 0 1 16.828 32H30.26a2 2 0 0 1 1.302.481L38 38H10l5.414-5.414Z"/><path stroke="#fff" d="M39 38H9"/><circle cx="15" cy="21" r="4" fill="#000" stroke="#000"/><circle cx="33" cy="21" r="4" fill="#000" stroke="#000"/><path stroke="#000" d="M15 25h18m-18-8h18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSTypeDrive0)"/>`
	uDiskInnerSVG                                      = `<mask id="ipSUDisk0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M30 12V4H18v8"/><path fill="#fff" stroke="#fff" d="M13 12.373c0-.206.167-.373.373-.373h21.254c.206 0 .373.167.373.373V33c0 6.075-4.925 11-11 11s-11-4.925-11-11V12.373Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M20 21h8m-8 8h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUDisk0)"/>`
	uTurnDownInnerSVG                                  = `<mask id="ipSUTurnDown0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M35 34V15c0-6.075-4.925-11-11-11v0c-6.075 0-11 4.925-11 11v29"/><path stroke-linecap="round" stroke-linejoin="round" d="m18 39l-5 5l-5-5"/><circle cx="35" cy="39" r="5" fill="#fff" transform="rotate(90 35 39)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUTurnDown0)"/>`
	uTurnLeftInnerSVG                                  = `<mask id="ipSUTurnLeft0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M14 13h19c6.075 0 11 4.925 11 11v0c0 6.075-4.925 11-11 11H4"/><path stroke-linecap="round" stroke-linejoin="round" d="m9 40l-5-5l5-5"/><circle cx="9" cy="13" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUTurnLeft0)"/>`
	uTurnRightInnerSVG                                 = `<mask id="ipSUTurnRight0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M34 13H15C8.925 13 4 17.925 4 24v0c0 6.075 4.925 11 11 11h29"/><path stroke-linecap="round" stroke-linejoin="round" d="m39 30l5 5l-5 5"/><circle cx="39" cy="13" r="5" fill="#fff"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUTurnRight0)"/>`
	uTurnUpInnerSVG                                    = `<mask id="ipSUTurnUp0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M13 14v19c0 6.075 4.925 11 11 11v0c6.075 0 11-4.925 11-11V4"/><path stroke-linecap="round" stroke-linejoin="round" d="m30 9l5-5l5 5"/><circle cx="13" cy="9" r="5" fill="#fff" transform="rotate(-90 13 9)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUTurnUp0)"/>`
	ulikecamInnerSVG                                   = `<mask id="ipSUlikecam0"><path fill="#fff" stroke="#fff" stroke-width="4" d="M22 44c9.941 0 18-8.059 18-18S31.941 8 22 8S4 16.059 4 26s8.059 18 18 18Zm19-34a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUlikecam0)"/>`
	umbrellaInnerSVG                                   = `<mask id="ipSUmbrella0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M16.727 27c2.424-2.424 4.849-3.636 7.273-3.636c2.424 0 4.849 1.212 7.273 3.636c2.828-2.424 4.95-3.636 6.363-3.636c1.414 0 3.536 1.212 6.364 3.636c0-11.046-8.954-20-20-20S4 15.954 4 27c2.828-2.424 4.95-3.636 6.364-3.636c1.414 0 3.535 1.212 6.363 3.636Z"/><path stroke-linecap="round" d="M24 24v14.554c0 3.014 2.486 5.457 5.5 5.457s5.5-2.443 5.5-5.457M24 3v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUmbrella0)"/>`
	umbrellaOneInnerSVG                                = `<mask id="ipSUmbrellaOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M44 24c0-11.046-8.954-20-20-20S4 12.954 4 24h40Z"/><path stroke-linecap="round" d="M24 24v14.554c0 3.014 2.486 5.457 5.5 5.457s5.5-2.443 5.5-5.457"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUmbrellaOne0)"/>`
	umbrellaTwoInnerSVG                                = `<mask id="ipSUmbrellaTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M27 24v13.125C27 39 26.638 44 23 44c-3.429 0-4-4.375-4-5.625"/><path fill="#fff" stroke="#fff" d="M24 4c14.5 0 19.375 13.333 20 20H4c.625-6.667 5.5-20 20-20Z"/><path stroke="#000" d="m19 14l4 4l6-7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUmbrellaTwo0)"/>`
	ungroupInnerSVG                                    = `<mask id="ipSUngroup0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M11.273 4H4v7.273h7.273V4ZM44 36.727h-7.273V44H44v-7.273ZM11.273 24H4v7.273h7.273V24ZM24 36.727h-7.273V44H24v-7.273ZM31.273 4H24v7.273h7.273V4ZM44 16.727h-7.273V24H44v-7.273Z"/><path stroke-linecap="round" d="M11.273 7.636H24m0 32.728h12.727M11.273 27.637h16.364V11.273m1.191 9.09h7.899M20.363 36.727v-9.099v9.099ZM7.637 11.273V24m32.726 0v12.727"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUngroup0)"/>`
	unicastInnerSVG                                    = `<mask id="ipSUnicast0"><g fill="none" stroke="#fff"><path fill="#fff" stroke-width="4" d="M24 15a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-width="4" d="M24 15v8"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M18 33V23l6 .003"/><path stroke-linecap="round" stroke-width="5" d="M41 41v1M7 41v1m11-1v1m12-1v1"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUnicast0)"/>`
	universalInnerSVG                                  = `<mask id="ipSUniversal0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-width="4" d="M24 38c7.732 0 14-6.268 14-14s-6.268-14-14-14s-14 6.268-14 14s6.268 14 14 14Z"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M11 29c1.509.624 4 1 5.259-.468c1.258-1.469.136-3.78 1.53-4.564c1.528-.86 2.631 2.064 5.502 1.548S28 21 28 19s-1.715-2-1.838-3.946C26 12.5 28 11 28 11m0 26c-1.086-.909-2-1.5-2-3s1-1 2-2s.5-3 1.5-3.5s4.108.556 6.5 2.5"/><circle cx="24" cy="4" r="2" fill="#fff"/><circle cx="24" cy="44" r="2" fill="#fff"/><circle cx="44" cy="24" r="2" fill="#fff"/><circle cx="38" cy="10" r="2" fill="#fff"/><circle cx="10" cy="38" r="2" fill="#fff"/><circle cx="4" cy="24" r="2" fill="#fff"/><circle cx="10" cy="10" r="2" fill="#fff"/><circle cx="38" cy="38" r="2" fill="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M10 24c0 3.815 1.526 7.273 4 9.798M24 38c7.732 0 14-6.268 14-14M24 10c3.815 0 7.273 1.526 9.798 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUniversal0)"/>`
	unlockInnerSVG                                     = `<mask id="ipSUnlock0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="34" height="22" x="7" y="22.048" fill="#fff" stroke="#fff" rx="2"/><path stroke="#fff" stroke-linecap="round" d="M14 22v-7.995c-.005-5.135 3.923-9.438 9.086-9.954S32.967 6.974 34 12.006"/><path stroke="#000" stroke-linecap="round" d="M24 30v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUnlock0)"/>`
	unlockOneInnerSVG                                  = `<mask id="ipSUnlockOne0"><g fill="none" stroke-width="4"><circle cx="24" cy="30" r="14" fill="#fff" stroke="#fff"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M31 12v-1a7 7 0 0 0-7-7v0a7 7 0 0 0-7 7v6"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M24 26v8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUnlockOne0)"/>`
	upAndDownInnerSVG                                  = `<mask id="ipSUpAndDown0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 36v8h32V12h-8v8h-8v8h-8v8h-8Z"/><path d="m18 13l9-9m-6 0h6v6M10 27H4v-6m9-3l-9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpAndDown0)"/>`
	upCInnerSVG                                        = `<mask id="ipSUpC0"><g fill="none" stroke-width="4"><path stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z" clip-rule="evenodd"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m33 27l-9-9l-9 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpC0)"/>`
	upOneInnerSVG                                      = `<mask id="ipSUpOne0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="m12 29l12-12l12 12H12Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpOne0)"/>`
	upSquareInnerSVG                                   = `<mask id="ipSUpSquare0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" d="m14 29l10-10l10 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpSquare0)"/>`
	upTwoInnerSVG                                      = `<mask id="ipSUpTwo0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 24L24 6l19 18H31v18H17V24H5Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpTwo0)"/>`
	updateRotationInnerSVG                             = `<mask id="ipSUpdateRotation0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" d="M33.542 27c-1.274 4.057-5.064 7-9.542 7c-4.477 0-8.268-2.943-9.542-7v6m19.084-18v6c-1.274-4.057-5.064-7-9.542-7c-4.477 0-8.268 2.943-9.542 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpdateRotation0)"/>`
	uploadInnerSVG                                     = `<mask id="ipSUpload0" width="48" height="48" x="0" y="0" maskUnits="userSpaceOnUse" style="mask-type:alpha"><path d="M48 0H0v48h48V0Z"/></mask><mask id="ipSUpload1"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" mask="url(#ipSUpload0)"><path d="M6 24.008V42h36V24m-9-9l-9-9l-9 9m8.992 17V6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpload1)"/>`
	uploadLaptopInnerSVG                               = `<mask id="ipSUploadLaptop0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M25 9H11a3 3 0 0 0-3 3v21h32v-9"/><path fill="#fff" d="M4 33h40v2a6 6 0 0 1-6 6H10a6 6 0 0 1-6-6v-2Z"/><path stroke-linecap="round" d="M37 19V7m-5 5l5-5l5 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUploadLaptop0)"/>`
	uploadThreeInnerSVG                                = `<mask id="ipSUploadThree0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" d="m32 28l-8-8l-8 8m8 8V20.5M16 14h16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUploadThree0)"/>`
	uploadWebInnerSVG                                  = `<mask id="ipSUploadWeb0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M28 40H7a3 3 0 0 1-3-3V11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v12.059M39 41V29m-5 5l5-5l5 5"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUploadWeb0)"/>`
	upsideDownFaceInnerSVG                             = `<mask id="ipSUpsideDownFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 4C12.954 4 4 12.954 4 24s8.954 20 20 20s20-8.954 20-20S35.046 4 24 4Z"/><path stroke="#000" stroke-linecap="round" d="M17 30v-1m14 1v-1M17 17s2-4 7-4s7 4 7 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUpsideDownFace0)"/>`
	usbInnerSVG                                        = `<mask id="ipSUsb0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 22a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm24 6a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path stroke-linecap="round" d="m19 9l5-5l5 5m-4 30L12 28.263V22m24 6v4.79L24 41m0-37v39m-3 1h6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsb0)"/>`
	usbMemoryStickInnerSVG                             = `<mask id="ipSUsbMemoryStick0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M8 22a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V22Zm7-18h18v16H15V4Z"/><path stroke="#000" d="M21 10v2m6-2v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsbMemoryStick0)"/>`
	usbMicroOneInnerSVG                                = `<mask id="ipSUsbMicroOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 18a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V18Z"/><path fill="#fff" stroke="#000" d="M11 15h26v8H11v-8Z"/><path stroke="#000" d="M21 23v-2m6 2v-2m5 2v-2m-16 2v-2"/><path stroke="#fff" d="M8 15h32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsbMicroOne0)"/>`
	usbMicroTwoInnerSVG                                = `<mask id="ipSUsbMicroTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 18a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v6.14a3 3 0 0 1-.456 1.59l-3.663 5.86A3 3 0 0 1 37.337 33H10.663a3 3 0 0 1-2.544-1.41l-3.663-5.86A3 3 0 0 1 4 24.14V18Z"/><path fill="#fff" stroke="#000" d="M11 15h26v8H11v-8Z"/><path stroke="#000" d="M21 23v-2m6 2v-2m5 2v-2m-16 2v-2"/><path stroke="#fff" d="M8 15h32"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsbMicroTwo0)"/>`
	usbOneInnerSVG                                     = `<mask id="ipSUsbOne0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M42 21H6v21h36V21Z"/><path stroke-linecap="round" d="M14 21V6h20v15m-14-9v2m8-2v2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsbOne0)"/>`
	usbTypeCInnerSVG                                   = `<mask id="ipSUsbTypeC0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M15 15h18c15 0 15 18 0 18H15C0 33 0 15 15 15Z"/><path stroke="#000" d="M21 27v-6m6 6v-6m6 6v-6m-18 6v-6m21 3H12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUsbTypeC0)"/>`
	userInnerSVG                                       = `<mask id="ipSUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUser0)"/>`
	userBusinessInnerSVG                               = `<mask id="ipSUserBusiness0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44"/><path fill="#fff" d="m24 44l4-5l-4-13l-4 13l4 5Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUserBusiness0)"/>`
	userPositioningInnerSVG                            = `<mask id="ipSUserPositioning0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="16" r="6" fill="#fff"/><path d="M36 36c0-6.627-5.373-12-12-12s-12 5.373-12 12M36 4h8v8M12 4H4v8m32 32h8v-8m-32 8H4v-8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUserPositioning0)"/>`
	userToUserTransmissionInnerSVG                     = `<mask id="ipSUserToUserTransmission0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M14 18a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm20 0a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M4 44v-9c0-5.523 3.77-10 8.421-10h5.053C21.559 25 24 29.027 24 29.027"/><path stroke-linecap="round" d="M44 44v-9c0-5.523-3.815-10-8.521-10h-5.113c-3.961 0-6.374 4.027-6.366 4.027M11 40h27"/><path stroke-linecap="round" d="m34.295 36.258l1.24 1.247L38.015 40l-2.48 2.561l-1.24 1.281m-19.965-7.61l-1.26 1.254l-2.518 2.507l2.518 2.548l1.26 1.275"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUserToUserTransmission0)"/>`
	uterusInnerSVG                                     = `<mask id="ipSUterus0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" d="M32 18c-.923 6-3 11.5-7.5 11.5s-6-5-7.5-11.5s0-12 7.5-12s8.423 6 7.5 12Z"/><path stroke-linecap="round" d="M32.5 12.5c1.75-1.632 3.533-2.17 6.34-1.996c4.212.262 5.16 3.144 5.16 7.452m0 0c0 4.309-1.651 8.227-4.941 7.34c-3.29-.886-2.83-4.386-1.291-6.027c1.538-1.641 4.23-2.31 6.232-1.313ZM16.5 12c-1.77-1.544-3.86-1.67-6.413-1.495C6.257 10.767 4 13.692 4 18m0 0c0 4.308 2.897 8.182 5.888 7.296c2.992-.887 2.574-4.387 1.175-6.028C9.663 17.628 5.821 17.002 4 18Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M20 27v16m9-16v16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSUterus0)"/>`
	vacationInnerSVG                                   = `<mask id="ipSVacation0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m11 14.999l-6 1c1.63-7.514 6.364-9.993 11-10c2.997-.005 5.952 1.026 8 2c2.048-.974 5-2 8-2c4.611 0 9.37 2.486 11 10l-6-1c.559 2.1 1.788 5.792 0 9c-2.98-2.673-9.87-6.709-13-9c-3.13 2.291-10.02 6.327-13 9c-1.788-3.207-.559-6.9 0-9Z"/><path d="M24 15c-.755 3.889-1.811 13.533 0 21"/><path fill="#fff" d="M12 42h24c-4.787-4.585-7-5.995-12-6c-5-.005-10.108 3.382-12 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVacation0)"/>`
	vacuumCleanerInnerSVG                              = `<mask id="ipSVacuumCleaner0"><g fill="none" stroke="#fff" stroke-width="4"><path d="M26 22.5V10c0-3 2-6 6-6s6 3 6 6v24"/><path fill="#fff" stroke-linecap="round" stroke-linejoin="round" d="M32.75 34h10.5l.75 6H32l.75-6Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M10 40h15.886c.063 0 .114-.05.114-.114V23.255C26 15.935 20.066 10 12.745 10v0A5.745 5.745 0 0 0 7 15.745V29"/><circle cx="10" cy="34" r="6" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M14 10v19"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVacuumCleaner0)"/>`
	vegetableBasketInnerSVG                            = `<mask id="ipSVegetableBasket0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M10 14H7.378a3 3 0 0 0-2.98 3.354L7.12 40.236A2 2 0 0 0 9.105 42h30.368a2 2 0 0 0 1.991-1.807l2.218-22.904A3 3 0 0 0 40.696 14H38M5 22h38m-28 7h18m-16 7h14"/><path fill="#fff" d="M24 6c-4.418 0-8 6.925-8 15.467c0 .178.002.356.005.533h15.99c.003-.177.005-.355.005-.533C32 12.925 28.418 6 24 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVegetableBasket0)"/>`
	vegetablesInnerSVG                                 = `<mask id="ipSVegetables0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M32 7.902c1.5-.402 3.33-.29 4.44 0c2.501.658 4.325 1.788 5.416 3.36c1.263 1.817 1.481 4.137.652 6.894c-1.699 5.64-8.6 9.14-9.008 9.344m-6.253 13.77c.515.098 1.038.15 1.562.151c1.47 0 2.735-.415 3.757-1.234c1.113-.885 1.934-2.187 2.267-3.909c.332-1.721-.153-3.335-.68-4.91c-.373-1.118-.618-2.804-.653-3.868m-20.5-1s-5.81-2.706-7.507-8.344c-.83-2.756-.611-5.074.651-6.894c1.093-1.571 2.914-2.7 5.416-3.36c1.111-.29 2.174-.439 3.162-.439M13.5 27c.5 1 .068 2.796-.46 4.372c-.527 1.576-1.071 3.202-.68 4.91c.39 1.706 1.153 3.023 2.264 3.908c1.024.818 1.906 1.31 3.376 1.31c.523-.002 2-.5 2-.5"/><path d="M23.5 4C28.747 4 33 6.643 33 14.375C33 22.108 23.5 32 23.5 32S14 22.107 14 14.375C14 6.642 18.253 4 23.5 4Z"/><path fill="#fff" d="M24 42.229c-2.01 0-3.72-.662-4.87-1.67c-1.327-1.166-2.003-2.826-2.003-4.932c0-1.756.95-3.221 1.867-4.64c.652-1.007 1.554-2.99 1.554-2.99s.475-1.636.397-2.7c-.145-1.964-2.052-3.443-2.362-4.457c-.375-1.26-.283-2.028.285-2.412c.175-.12.845-.16.845-.16s-.126-1.846-.047-2.455c.095-.73.476-1.772 1.372-1.848c.62-.053 1.11.04 1.428.707c.102.216.173.477.272.839a25.869 25.869 0 0 0 1.257 3.532a25.817 25.817 0 0 0 1.26-3.532c.1-.361.17-.623.273-.84c.318-.667.81-.758 1.43-.705c.755.066 1.275 1.119 1.37 1.847c.08.609.064 1.42-.047 2.454h.047c.215 0 .626.04.802.16c.569.384.602 1.519.283 2.413C29 22 27.203 23.133 27 25c-.129 1.177.095 1.87.451 2.998c.396 1.255.9 1.983 1.554 2.989c.918 1.418 1.867 2.885 1.867 4.64c0 2.106-.674 3.765-2.004 4.931c-1.152 1.008-2.859 1.67-4.869 1.671Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVegetables0)"/>`
	verticalTidyUpInnerSVG                             = `<mask id="ipSVerticalTidyUp0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8 7h32v6H8zm0 14h32v6H8zm0 14h32v6H8z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVerticalTidyUp0)"/>`
	verticalTimelineInnerSVG                           = `<mask id="ipSVerticalTimeline0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" d="M4 5h40M4 43h40M8 36v7"/><path fill="#fff" stroke-linejoin="round" d="M12 28H4v8h8v-8Zm16-8h-8v8h8v-8Zm16-8h-8v8h8v-8Z"/><path stroke-linecap="round" d="M40 20v23M8 12v1m0 7v1m15-9v1m1 15v15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVerticalTimeline0)"/>`
	verticallyCenteredInnerSVG                         = `<mask id="ipSVerticallyCentered0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-width="4"><path d="M6 7h36"/><path fill="#fff" stroke-linejoin="round" d="M16 16h16v16H16z"/><path d="M6 41h36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVerticallyCentered0)"/>`
	vestInnerSVG                                       = `<mask id="ipSVest0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36 4h-5l-7 20v20h16V19l-4-6V4ZM12 4h5l7 20v20H8V19l4-6V4Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVest0)"/>`
	vialInnerSVG                                       = `<mask id="ipSVial0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M30 33V4H18v28.968M30 14h-5m5 6h-5"/><path fill="#fff" d="M18 33v4.699C18 41.178 20.686 44 24 44s6-2.821 6-6.301v-4.635L18 33Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVial0)"/>`
	viciaFabaInnerSVG                                  = `<mask id="ipSViciaFaba0"><g fill="none"><g stroke-linejoin="round" stroke-width="4" clip-path="url(#ipSViciaFaba1)"><path fill="#fff" stroke="#fff" d="M4 31c0-6.5 4-8.963 7-9.981C14 20 16 20 19 17s3-9 9-11s13.091 1 15 8c1.908 7-3.5 16-6 19s-7.501 8-16 9c-8.5 1-17-4.5-17-11Z"/><path stroke="#000" stroke-linecap="round" d="M12 21.044c7 8.956 17 0 10-9.044"/><path stroke="#fff" stroke-linecap="round" d="M11 21.019C14 20 16 20 19 17s3-9 9-11"/></g><defs><clipPath id="ipSViciaFaba1"><path fill="#000" d="M0 0h48v48H0z"/></clipPath></defs></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViciaFaba0)"/>`
	videoInnerSVG                                      = `<mask id="ipSVideo0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 10a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V10Z"/><path stroke="#000" stroke-linecap="round" d="M36 8v32M12 8v32m26-22h6m-6 12h6M4 18h6"/><path stroke="#fff" stroke-linecap="round" d="M4 16v4M9 8h6M9 40h6M33 8h6m-6 32h6"/><path stroke="#000" stroke-linecap="round" d="M4 30h6"/><path stroke="#fff" stroke-linecap="round" d="M4 28v4m40-4v4m0-16v4"/><path fill="#000" stroke="#000" d="m21 19l8 5l-8 5V19Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideo0)"/>`
	videoConferenceInnerSVG                            = `<mask id="ipSVideoConference0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 10a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v9l8-6v23l-8-6v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V10Z"/><path stroke="#000" d="M10 16v4m5-6v8m5-6v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideoConference0)"/>`
	videoFileInnerSVG                                  = `<mask id="ipSVideoFile0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M10 44h28a2 2 0 0 0 2-2V14H30V4H10a2 2 0 0 0-2 2v36a2 2 0 0 0 2 2Z"/><path stroke="#fff" d="m30 4l10 10"/><path fill="#000" stroke="#000" d="M14 21h13.493v3.5L34 22v11l-6.507-2.5V34H14V21Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideoFile0)"/>`
	videoOneInnerSVG                                   = `<mask id="ipSVideoOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 10a2 2 0 0 1 2-2h28a2 2 0 0 1 2 2v9l8-6v23l-8-6v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V10Z"/><circle cx="17" cy="21" r="5" fill="#000" stroke="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideoOne0)"/>`
	videoTwoInnerSVG                                   = `<mask id="ipSVideoTwo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#fff" d="M20.5 28v-6.062l5.25 3.03L31 28l-5.25 3.031l-5.25 3.031V28Z"/><path d="M6 15h36m-9-9l-6 9m-6-9l-6 9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideoTwo0)"/>`
	videocameraInnerSVG                                = `<mask id="ipSVideocamera0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="32" height="26" x="4" y="11" rx="2"/><circle cx="20" cy="24" r="6" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke-linecap="round" stroke-linejoin="round" d="m36 29l8 4V15l-8 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideocamera0)"/>`
	videocameraOneInnerSVG                             = `<mask id="ipSVideocameraOne0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="31" height="20" x="4" y="21" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="M20 27h9v8h-9z"/><circle cx="27" cy="13" r="5" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><circle cx="13" cy="13" r="5" fill="#fff" stroke-linecap="round" stroke-linejoin="round"/><path stroke-linecap="round" stroke-linejoin="round" d="m35 35l9 4V23l-9 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVideocameraOne0)"/>`
	viewGridCardInnerSVG                               = `<mask id="ipSViewGridCard0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M13 13h8v8h-8zm14 0h8v8h-8zM13 27h8v8h-8zm14 0h8v8h-8z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViewGridCard0)"/>`
	viewGridDetailInnerSVG                             = `<mask id="ipSViewGridDetail0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M13 13h8v8h-8z"/><path stroke="#000" stroke-linecap="round" d="M27 13h8m-8 7h8m-22 8h22m-22 7h22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViewGridDetail0)"/>`
	viewGridListInnerSVG                               = `<mask id="ipSViewGridList0"><g fill="none" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path fill="#000" stroke="#000" d="M13 13h8v8h-8zm0 14h8v8h-8z"/><path stroke="#000" stroke-linecap="round" d="M27 28h8m-8 7h8m-8-22h8m-8 7h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViewGridList0)"/>`
	viewListInnerSVG                                   = `<mask id="ipSViewList0"><g fill="none"><rect width="32" height="40" x="8" y="4" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21 14h12M21 24h12M21 34h12"/><path fill="#000" fill-rule="evenodd" d="M15 16a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 10a2 2 0 1 0 0-4a2 2 0 0 0 0 4Zm0 10a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z" clip-rule="evenodd"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViewList0)"/>`
	viewfinderInnerSVG                                 = `<mask id="ipSViewfinder0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M16 6H8a2 2 0 0 0-2 2v8m10 26H8a2 2 0 0 1-2-2v-8m26 10h8a2 2 0 0 0 2-2v-8M32 6h8a2 2 0 0 1 2 2v8"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M13 33V18h6l2-3h6l2 3h6v15H13Z"/><path fill="#000" stroke="#000" stroke-miterlimit="10" d="M24 28a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSViewfinder0)"/>`
	vigoInnerSVG                                       = `<mask id="ipSVigo0"><g fill="#fff" stroke-linejoin="round" stroke-width="3.833"><path stroke="#fff" d="M24 44.125c9.527 0 17.25-7.616 17.25-17.01c0-2.306-.315-4.5-.99-6.591c-.39-1.207-.704-1.783-1.167-2.894c-.463-1.111-1.079-2.05-1.78-2.993c-.7-.943-2.067-2.798-3.012-3.17c0 1.461-2.873 6.568-3.975 6.824c-1.103.257.815-5.369-1.628-9.217c-2.443-3.848-6.393-6.374-6.393-4.644c0 1.729-1.093 4.632-2.194 6.072c-1.1 1.439-2.886 2.675-4.13 3.256c-1.243.581-.793-2.908-1.726-2.292c-.94.621-2.278 2.351-2.98 3.437c-2.462 3.801-4.525 7.515-4.525 12.212c0 9.394 7.723 17.01 17.25 17.01Z"/><path stroke="#000" d="M19.296 23.733v8.737a1.878 1.878 0 0 0 2.863 1.599l8.385-5.169a.939.939 0 0 0 0-1.598l-8.385-5.168a1.878 1.878 0 0 0-2.863 1.599Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVigo0)"/>`
	vipInnerSVG                                        = `<mask id="ipSVip0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M12 4H4l11 40h8L12 4Z"/><path stroke-linecap="round" d="M23 44L44 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVip0)"/>`
	vipOneInnerSVG                                     = `<mask id="ipSVipOne0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="m4.503 16.366l8.013-8.694A2.13 2.13 0 0 1 14.082 7h19.836a2.13 2.13 0 0 1 1.566.672l8.013 8.694a1.85 1.85 0 0 1-.035 2.572L24.75 40.15a1 1 0 0 1-1.5 0L4.538 18.938a1.85 1.85 0 0 1-.035-2.572Z"/><path stroke="#000" d="m16 20l8 9l8-9"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVipOne0)"/>`
	virtualRealityGlassesInnerSVG                      = `<mask id="ipSVirtualRealityGlasses0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M5 16h38a1 1 0 0 1 1 1v22a1 1 0 0 1-1 1H30l-5.992-5.999L18 40H5a1 1 0 0 1-1-1V17a1 1 0 0 1 1-1Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M14 32a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm20 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/><path fill="#fff" fill-rule="evenodd" d="M6 10h36H6Z" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M6 10h36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVirtualRealityGlasses0)"/>`
	voiceInnerSVG                                      = `<mask id="ipSVoice0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><rect width="14" height="27" x="17" y="4" fill="#fff" rx="7"/><path stroke-linecap="round" d="M9 23c0 8.284 6.716 15 15 15c8.284 0 15-6.716 15-15M24 38v6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVoice0)"/>`
	voiceInputInnerSVG                                 = `<mask id="ipSVoiceInput0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M4 30c0 6.627 5.373 12 12 12s10-4 11-7l1.538-5L35 9l9 33m-3.273-12H28.54"/><path fill="#fff" d="M22 15a6 6 0 0 0-12 0v15a6 6 0 0 0 12 0V15Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVoiceInput0)"/>`
	voiceMessageInnerSVG                               = `<mask id="ipSVoiceMessage0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path fill="#000" d="M17 25.9a2 2 0 1 0 0-4a2 2 0 0 0 0 4Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M21.95 28.85A6.978 6.978 0 0 0 24 23.9a6.978 6.978 0 0 0-2.05-4.95m4.95 14.849a13.956 13.956 0 0 0 4.1-9.9c0-3.866-1.567-7.366-4.1-9.899"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVoiceMessage0)"/>`
	voiceOneInnerSVG                                   = `<mask id="ipSVoiceOne0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M30 18v12m6-8v4m-18-8v12m-6-8v4m12-12v20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVoiceOne0)"/>`
	voicemailInnerSVG                                  = `<mask id="ipSVoicemail0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M11 31a7 7 0 1 0 0-14a7 7 0 0 0 0 14Zm26 0a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z"/><path stroke-linecap="round" d="M12 31h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVoicemail0)"/>`
	volkswagenInnerSVG                                 = `<mask id="ipSVolkswagen0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m7 14l9 23l6-11h4l6 11l9-23"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m16 6l6 13h4l6-13"/><path stroke="#fff" stroke-linecap="round" d="M44 24a19.952 19.952 0 0 0-6.77-15A19.924 19.924 0 0 0 24 4a19.924 19.924 0 0 0-13.23 5A19.952 19.952 0 0 0 4 24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolkswagen0)"/>`
	volumeDownInnerSVG                                 = `<mask id="ipSVolumeDown0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 6v36c-7 0-12.201-9.16-12.201-9.16H6a2 2 0 0 1-2-2V17.01a2 2 0 0 1 2-2h5.799S17 6 24 6Z"/><path stroke-linecap="round" d="M32 24h12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolumeDown0)"/>`
	volumeMuteInnerSVG                                 = `<mask id="ipSVolumeMute0" width="13" height="13" x="30" y="18" maskUnits="userSpaceOnUse" style="mask-type:alpha"><path d="M30 18h13v13H30z"/></mask><mask id="ipSVolumeMute1"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><g stroke-linecap="round" mask="url(#ipSVolumeMute0)"><path d="m40.735 20.286l-8.486 8.485m.001-8.485l8.485 8.485"/></g><path fill="#fff" d="M24 6v36c-7 0-12.201-9.16-12.201-9.16H6a2 2 0 0 1-2-2V17.01a2 2 0 0 1 2-2h5.799S17 6 24 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolumeMute1)"/>`
	volumeNoticeInnerSVG                               = `<mask id="ipSVolumeNotice0"><g fill="none" stroke="#fff" stroke-width="4"><path fill="#fff" stroke-linejoin="round" d="M24 6v36c-7 0-12.201-9.16-12.201-9.16H6a2 2 0 0 1-2-2V17.01a2 2 0 0 1 2-2h5.799S17 6 24 6Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M32 15h0a11.91 11.91 0 0 1 1.684 1.859A12.07 12.07 0 0 1 36 24c0 2.654-.846 5.107-2.278 7.09A11.936 11.936 0 0 1 32 33"/><path stroke-linecap="round" d="M34.236 41.186C40.084 37.696 44 31.305 44 24c0-7.192-3.796-13.496-9.493-17.02"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolumeNotice0)"/>`
	volumeSmallInnerSVG                                = `<mask id="ipSVolumeSmall0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 6v36c-7 0-12.201-9.16-12.201-9.16H6a2 2 0 0 1-2-2V17.01a2 2 0 0 1 2-2h5.799S17 6 24 6Z"/><path stroke-linecap="round" d="M32 15h0a11.91 11.91 0 0 1 1.684 1.859A12.07 12.07 0 0 1 36 24c0 2.654-.846 5.107-2.278 7.09A11.936 11.936 0 0 1 32 33"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolumeSmall0)"/>`
	volumeUpInnerSVG                                   = `<mask id="ipSVolumeUp0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 6v36c-7 0-12.201-9.16-12.201-9.16H6a2 2 0 0 1-2-2V17.01a2 2 0 0 1 2-2h5.799S17 6 24 6Z"/><path stroke-linecap="round" d="M32 24h12m-6-6v12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVolumeUp0)"/>`
	vrGlassesInnerSVG                                  = `<mask id="ipSVrGlasses0"><g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" clip-rule="evenodd"><path fill="#fff" stroke="#fff" d="M2 12h44v24H30l-6-6l-6 6H2V12Z"/><path fill="#000" stroke="#000" d="M13 28a4 4 0 1 0 0-8a4 4 0 0 0 0 8Zm22 0a4 4 0 1 0 0-8a4 4 0 0 0 0 8Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSVrGlasses0)"/>`
	walletInnerSVG                                     = `<mask id="ipSWallet0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" d="M17.982 11.969L31.785 4l4.612 7.989l-18.415-.02Z" clip-rule="evenodd"/><path fill="#fff" stroke="#fff" stroke-linejoin="round" d="M4 14a2 2 0 0 1 2-2h36a2 2 0 0 1 2 2v28a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V14Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M35.25 33H44V23h-8.75c-2.9 0-5.25 2.239-5.25 5s2.35 5 5.25 5Z"/><path stroke="#fff" stroke-linecap="round" d="M44 16.5v24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWallet0)"/>`
	walletOneInnerSVG                                  = `<mask id="ipSWalletOne0"><g fill="none"><rect width="38" height="26" x="5" y="13" fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" rx="2"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M25 20h18v11H25z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M43 18v15M32 13c0-5-3.5-6-5-6H12.5C8.9 7 8 9.866 8 11.299V13"/><circle cx="33.5" cy="25.5" r="1.5" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWalletOne0)"/>`
	walletThreeInnerSVG                                = `<mask id="ipSWalletThree0"><g fill="none"><path stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M39 16V9a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h27a3 3 0 0 0 3-3v-7"/><rect width="20" height="16" x="22" y="16" fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 30 24)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWalletThree0)"/>`
	walletTwoInnerSVG                                  = `<mask id="ipSWalletTwo0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M4 8h40v8s-10 2-10 8s10 8 10 8v8H4V8Z"/><path stroke-linecap="round" d="M44 24h-2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWalletTwo0)"/>`
	warehousingInnerSVG                                = `<mask id="ipSWarehousing0"><g fill="none" stroke="#fff" stroke-width="4"><path stroke-linecap="round" stroke-linejoin="round" d="M34 24H18m6-6l-6 6l6 6"/><circle cx="38" cy="24" r="4" fill="#fff"/><path stroke-linecap="round" d="M40.706 13A20.102 20.102 0 0 0 38 9.717A19.935 19.935 0 0 0 24 4C12.954 4 4 12.954 4 24s8.954 20 20 20c5.45 0 10.392-2.18 14-5.717A20.104 20.104 0 0 0 40.706 35"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWarehousing0)"/>`
	washingMachineInnerSVG                             = `<mask id="ipSWashingMachine0"><g fill="none"><rect width="32" height="40" x="8.778" y="4" stroke="#fff" stroke-width="4" rx="2"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M8.778 15.5h32"/><circle cx="28.778" cy="10" r="2" fill="#fff"/><circle cx="34.778" cy="10" r="2" fill="#fff"/><circle cx="24.778" cy="30" r="7" fill="#fff" stroke="#fff" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h49v48H0z" mask="url(#ipSWashingMachine0)"/>`
	washingMachineOneInnerSVG                          = `<mask id="ipSWashingMachineOne0"><g fill="none"><rect width="32" height="40" x="8" y="4" stroke="#fff" stroke-width="4" rx="2"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M8 12a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v6Z"/><circle cx="14" cy="9" r="2" fill="#000"/><circle cx="20" cy="9" r="2" fill="#000"/><circle cx="24" cy="29" r="7" fill="#fff" stroke="#fff" stroke-width="4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWashingMachineOne0)"/>`
	watchInnerSVG                                      = `<mask id="ipSWatch0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M34.956 31L31 44H17l-3.957-13m0-14L17 4h14l3.956 13"/><path fill="#fff" stroke="#fff" d="M37 24c0 2.577-.75 4.98-2.044 7A12.99 12.99 0 0 1 24 37a12.99 12.99 0 0 1-10.956-6A12.94 12.94 0 0 1 11 24c0-2.577.75-4.98 2.044-7A12.99 12.99 0 0 1 24 11a12.99 12.99 0 0 1 10.956 6A12.94 12.94 0 0 1 37 24Z"/><path stroke="#000" d="M24 17v7l4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWatch0)"/>`
	watchOneInnerSVG                                   = `<mask id="ipSWatchOne0"><g fill="none" stroke-width="4"><path stroke="#fff" stroke-linecap="round" d="M19 14V6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v8m0 20v8a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8"/><circle cx="24" cy="24" r="11" fill="#fff" stroke="#fff"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M21 25h4m0-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWatchOne0)"/>`
	waterInnerSVG                                      = `<mask id="ipSWater0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M9 29a5 5 0 0 0 5-5a5 5 0 0 0 10 0a5 5 0 0 0 10 0a5 5 0 0 0 10 0c0 11.046-8.954 20-20 20S4 35.046 4 24a5 5 0 0 0 5 5Zm19-16a4 4 0 0 1-8 0c0-2.21 4-9 4-9s4 6.79 4 9Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWater0)"/>`
	waterLevelInnerSVG                                 = `<mask id="ipSWaterLevel0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path stroke-linecap="round" d="M24 44c8.284 0 15-6.716 15-15C39 15 24 4 24 4S9 15 9 29c0 8.284 6.716 15 15 15Z" clip-rule="evenodd"/><path fill="#fff" d="M9 29c0 8.284 6.716 15 15 15c8.284 0 15-6.716 15-15c0 0-9 3-15 0S9 29 9 29Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterLevel0)"/>`
	waterNoInnerSVG                                    = `<mask id="ipSWaterNo0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M9 29a5 5 0 0 0 5-5a5 5 0 0 0 10 0a5 5 0 0 0 10 0a5 5 0 0 0 10 0c0 11.046-8.954 20-20 20S4 35.046 4 24a5 5 0 0 0 5 5Z"/><path d="m19 5l10 10m0-10L19 15"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterNo0)"/>`
	waterRateInnerSVG                                  = `<mask id="ipSWaterRate0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c8.837 0 16-6.512 16-14.546C40 21.576 34.667 13.091 24 4C13.333 13.09 8 21.576 8 29.454C8 37.489 15.163 44 24 44Z"/><path stroke="#000" stroke-linecap="round" d="M18.857 19L24 24.368L29.143 19M18 26.158h12m-12 5.368h12m-6-5.368V36"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterRate0)"/>`
	waterRateTwoInnerSVG                               = `<mask id="ipSWaterRateTwo0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" d="M24 44c8.837 0 16-7.164 16-16C40 15 24 4 24 4S8 15 8 28c0 8.837 7.163 16 16 16Z" clip-rule="evenodd"/><path stroke="#000" d="m24 20l-4 8h8l-4 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterRateTwo0)"/>`
	waterfallsHInnerSVG                                = `<mask id="ipSWaterfallsH0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M20 6H6v11h14V6Zm22 25H28v11h14V31Zm0-25H28v17h14V6ZM20 25H6v17h14V25Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterfallsH0)"/>`
	waterfallsVInnerSVG                                = `<mask id="ipSWaterfallsV0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M23 20V6H6v14h17Zm19 22V28H25v14h17ZM31 6v14h11V6H31ZM6 28v14h11V28H6Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterfallsV0)"/>`
	watermelonInnerSVG                                 = `<mask id="ipSWatermelon0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M23 34c11.046 0 20-8.954 20-20H3c0 11.046 8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M23 23v3m-6.364-5.636l-2.121 2.121m14.849-2.121l2.122 2.121"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWatermelon0)"/>`
	watermelonOneInnerSVG                              = `<mask id="ipSWatermelonOne0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 4l17 29.92S36.046 38 24 38S7 33.92 7 33.92L24 4Z"/><circle cx="24" cy="17" r="2" fill="#000"/><circle cx="27" cy="23" r="2" fill="#000"/><circle cx="21" cy="23" r="2" fill="#000"/><path stroke="#fff" stroke-linecap="round" stroke-width="4" d="M41 39.92S36.046 44 24 44S7 39.92 7 39.92"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWatermelonOne0)"/>`
	waterpoloOneInnerSVG                               = `<mask id="ipSWaterpoloOne0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m4 35l2.5 1.351c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0L44 35M4 41l2.5 1.351c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0c1.6-.864 3.4-.864 5 0c1.6.865 3.4.865 5 0L44 41"/><path fill="#fff" stroke="#fff" stroke-miterlimit="2" stroke-width="4" d="M25 18a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="2" stroke-width="4" d="m25 29l-1-4M4 11l7 11l13 2.93h18"/><path fill="#fff" d="M11 10a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWaterpoloOne0)"/>`
	wearyFaceInnerSVG                                  = `<mask id="ipSWearyFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M24 29c5 0 7 4 7 4H17s2-4 7-4Zm-5-11l-4 2m14-2l4 2"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWearyFace0)"/>`
	webPageInnerSVG                                    = `<mask id="ipSWebPage0"><g fill="none"><rect width="40" height="32" x="4" y="8" stroke="#fff" stroke-linejoin="round" stroke-width="4" rx="3"/><path fill="#fff" stroke="#fff" stroke-width="4" d="M4 11a3 3 0 0 1 3-3h34a3 3 0 0 1 3 3v9H4v-9Z"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 10 14)"/><circle r="2" fill="#000" transform="matrix(0 -1 -1 0 16 14)"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWebPage0)"/>`
	webcamInnerSVG                                     = `<mask id="ipSWebcam0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M7.825 29.766C11.462 34.756 17.352 38 24 38c6.648 0 12.538-3.243 16.175-8.234C43.79 33.508 46 38.508 46 44H2c0-5.492 2.209-10.492 5.825-14.234Z"/><path fill="#fff" stroke="#fff" d="M24 30c7.18 0 13-5.82 13-13S31.18 4 24 4S11 9.82 11 17s5.82 13 13 13Z"/><path fill="#000" stroke="#000" d="M24 22a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWebcam0)"/>`
	wechatInnerSVG                                     = `<mask id="ipSWechat0"><g fill="none"><path fill="#fff" fill-rule="evenodd" d="M36.997 21.711C36.843 13.008 29.74 6 21 6C12.163 6 5 13.163 5 22c0 4.17 1.595 7.968 4.209 10.815l-1.199 7.21l7.115-3.055c3.135 1.042 6.093 1.303 8.875.782" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M36.997 21.711C36.843 13.008 29.74 6 21 6C12.163 6 5 13.163 5 22c0 4.17 1.595 7.968 4.209 10.815l-1.199 7.21l7.115-3.055c3.135 1.042 6.093 1.303 8.875.782"/><path fill="#000" d="M15.125 20.467a2.258 2.258 0 0 0 2.25-2.267a2.258 2.258 0 0 0-2.25-2.267a2.258 2.258 0 0 0-2.25 2.267a2.258 2.258 0 0 0 2.25 2.267Zm9 0a2.258 2.258 0 0 0 2.25-2.267a2.258 2.258 0 0 0-2.25-2.267a2.258 2.258 0 0 0-2.25 2.267a2.258 2.258 0 0 0 2.25 2.267Z"/><path fill="#fff" fill-rule="evenodd" d="M38.762 39.93A10.453 10.453 0 0 1 32.5 42C26.701 42 22 37.299 22 31.5S26.701 21 32.5 21S43 25.701 43 31.5c0 1.6-.358 3.116-.998 4.473" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M38.762 39.93A10.453 10.453 0 0 1 32.5 42C26.701 42 22 37.299 22 31.5S26.701 21 32.5 21S43 25.701 43 31.5c0 1.6-.358 3.116-.998 4.473"/><path fill="#fff" fill-rule="evenodd" d="M42.002 35.973L43 42l-4.238-2.07" clip-rule="evenodd"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M42.002 35.973L43 42l-4.238-2.07"/><path fill="#000" d="M35.688 30.8A1.694 1.694 0 0 1 34 29.1c0-.939.755-1.7 1.688-1.7c.931 0 1.687.761 1.687 1.7s-.755 1.7-1.688 1.7Zm-6.75 0a1.694 1.694 0 0 1-1.688-1.7c0-.939.756-1.7 1.688-1.7c.931 0 1.687.761 1.687 1.7s-.756 1.7-1.688 1.7Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWechat0)"/>`
	weiboInnerSVG                                      = `<mask id="ipSWeibo0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4.159" d="M12.562 16.41c-3.344 3.25-10.399 12.736-5.2 19.522c5.2 6.785 19.92 4.168 25.997-.613c6.077-4.78 5.477-7.734 4.16-9.036c-1.318-1.301-5.163.014-6.24-1.757c-1.076-1.77 1.917-6.195-.634-7.595c-2.55-1.4-6.954 3.65-8.944 2.338c-1.989-1.312 2.19-5.596 0-6.83c-2.189-1.235-5.795.722-9.14 3.972Z"/><path stroke="#fff" stroke-linecap="round" stroke-width="4.159" d="M43.379 16.516a12.954 12.954 0 0 0-3.642-8.073a12.963 12.963 0 0 0-7.723-3.84m5.278 12.328c-.13-1.64-.867-3.117-2-4.228a7.249 7.249 0 0 0-4.24-2.01"/><path fill="#000" d="M25 30c0 2.21-2.686 4-6 4s-6-1.79-6-4s2.686-4 6-4s6 1.79 6 4Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeibo0)"/>`
	weightInnerSVG                                     = `<mask id="ipSWeight0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M41 4H7a3 3 0 0 0-3 3v34a3 3 0 0 0 3 3h34a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3Z"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="M12 19.054c3.325-4 7.325-6 12-6s8.675 2 12 6"/><path fill="#000" d="M24 31a3 3 0 1 0 0-6a3 3 0 0 0 0 6Z"/><path stroke="#000" stroke-linecap="round" stroke-width="4" d="m19 21l5.008 7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeight0)"/>`
	weightliftingInnerSVG                              = `<mask id="ipSWeightlifting0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M24 27a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M4 9h40M4 4v10M44 4v10M11 9v17.1L24 34l13-8V9M24 34v10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeightlifting0)"/>`
	weixinCardsOffersInnerSVG                          = `<mask id="ipSWeixinCardsOffers0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="m6 12l36 4v24L6 36V12Z"/><path d="M38 15.555V8L6 12"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinCardsOffers0)"/>`
	weixinMarketInnerSVG                               = `<mask id="ipSWeixinMarket0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M38 14H10a2 2 0 0 0-2 2v26a2 2 0 0 0 2 2h28a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Z"/><path d="M17 18v-7a7 7 0 1 1 14 0v7"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinMarket0)"/>`
	weixinMiniAppInnerSVG                              = `<mask id="ipSWeixinMiniApp0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" d="M29 24a5 5 0 1 0-5-5v10a5 5 0 1 1-5-5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinMiniApp0)"/>`
	weixinPeopleNearbyInnerSVG                         = `<mask id="ipSWeixinPeopleNearby0"><g fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="15" cy="10" r="4"/><circle cx="33" cy="10" r="4"/><path d="M10 20h10l-2 22h-6l-2-22Zm18 0h10l-2 22h-6l-2-22Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinPeopleNearby0)"/>`
	weixinScanInnerSVG                                 = `<mask id="ipSWeixinScan0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M37 30H12l2 5h12l2.088 6.265A4 4 0 0 0 31.883 44H38a4 4 0 0 0 4-4V30l1-7l-3.646.73a2 2 0 0 0-1.58 1.632L37 30ZM11 18h25l-2-5H22l-2.088-6.265A4 4 0 0 0 16.117 4H10a4 4 0 0 0-4 4v10l-1 7l3.646-.73a2 2 0 0 0 1.58-1.632L11 18Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinScan0)"/>`
	weixinShakeInnerSVG                                = `<mask id="ipSWeixinShake0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M42 19L29 6L6 29l13 13l23-23Z"/><path stroke="#000" d="m16 29l3 3"/><path stroke="#fff" d="m30 42l12-12M6 18L18 6"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinShake0)"/>`
	weixinTopStoriesInnerSVG                           = `<mask id="ipSWeixinTopStories0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="m24 4l7.2 7.53L41.32 14L38.4 24l2.92 10l-10.12 2.47L24 44l-7.2-7.53L6.68 34L9.6 24L6.68 14l10.12-2.47L24 4Z"/><path fill="#fff" d="m30.977 11.915l.395 7.829L37.954 24l-6.582 4.256l-.395 7.829L24 32.512l-6.977 3.573l-.395-7.829L10.045 24l6.583-4.256l.395-7.829L24 15.488l6.977-3.573Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWeixinTopStories0)"/>`
	whaleInnerSVG                                      = `<mask id="ipSWhale0"><g fill="none"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M16.07 13c-9.817.35-11.394 8.006-10.956 11.791c-1.753 3.145-1.218 3.93.096 5.24c6.574 6.115 18.843 5.678 24.54 3.495c5.96-2.446 8.999-7.051 9.29-9.526c5.26-3.494 5.366-9.399 4.636-11c-.78 1.31-3.029 2.272-4.635 3c-1.753.35-4.275-.962-5.005-2.127c-.502 2.627 0 4.627 1.314 5.678c2.288 1.747 1.125 3.512.687 3.949c-1.896 1.89-5.506.99-7.26-1.766C24.053 14.31 18.99 13 16.07 13Z"/><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M5 28c2.833.532 8.4 1.554 12-1"/><circle cx="12" cy="20" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWhale0)"/>`
	wheelchairInnerSVG                                 = `<mask id="ipSWheelchair0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path d="M29.622 35c-1.332 5.176-6.03 9-11.622 9c-6.627 0-12-5.373-12-12c0-4.843 2.869-9.016 7-10.912"/><path d="m18 12l2 18l15-1l3 11h3"/><path fill="#fff" d="M22 8a4 4 0 1 1-8 0a4 4 0 0 1 8 0Z"/><path d="M25 20h8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWheelchair0)"/>`
	whirlwindInnerSVG                                  = `<mask id="ipSWhirlwind0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M24 29a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path d="M23.5 44C16.596 44 11 38.404 11 31.5S16.596 19 23.5 19"/><path d="M44 23.5C44 30.404 38.404 36 31.5 36S19 30.404 19 23.5"/><path d="M23.5 29C30.404 29 36 23.404 36 16.5S30.404 4 23.5 4"/><path d="M29 23.5C29 16.596 23.404 11 16.5 11S4 16.596 4 23.5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWhirlwind0)"/>`
	wholeSiteAcceleratorInnerSVG                       = `<mask id="ipSWholeSiteAccelerator0"><g fill="none" stroke="#fff" stroke-width="4"><circle cx="22" cy="40" r="4" fill="#fff"/><circle cx="26" cy="8" r="4" fill="#fff"/><circle cx="36" cy="24" r="4" fill="#fff"/><circle cx="12" cy="24" r="4" fill="#fff"/><path stroke-linecap="round" stroke-linejoin="round" d="M32 24H16m7-13l-8 10"/><path d="m33 27l-8.001 10"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWholeSiteAccelerator0)"/>`
	windTurbineInnerSVG                                = `<mask id="ipSWindTurbine0"><g fill="none"><path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M24 30v14"/><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M29 23c11 5 16 14 16 14s-12 0-21-8c-9 8-21 8-21 8s5-10 16-14c0-13 5-19 5-19s5 6 5 19Z"/><circle cx="24" cy="24" r="2" fill="#000"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWindTurbine0)"/>`
	windmillInnerSVG                                   = `<mask id="ipSWindmill0"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="m24 23.992l-.03-9.996L23.943 4L12 14v10l12-.008Zm.008.008l9.996-.03L44 23.943L34 12H24l.008 12Zm-.008.008l.03 9.996l.028 9.996L36 34V24l-12 .008ZM23.992 24l-9.996.03L4 24.057L14 36h10l-.008-12Z" clip-rule="evenodd"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWindmill0)"/>`
	windmillTwoInnerSVG                                = `<mask id="ipSWindmillTwo0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M24 24c5.523 0 10-4.477 10-10S29.523 4 24 4v20Zm0 0c0 5.523 4.477 10 10 10s10-4.477 10-10H24Zm0 0c0-5.523-4.477-10-10-10S4 18.477 4 24h20Zm0 0c-5.523 0-10 4.477-10 10s4.477 10 10 10V24Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWindmillTwo0)"/>`
	windowsInnerSVG                                    = `<mask id="ipSWindows0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="3.833" d="m6.75 11.063l12.938-1.725v12.075H6.75v-10.35Zm18.112-2.218L41.25 6.75v14.663H24.862V8.845Zm0 18.605l16.388.383V41.25l-16.388-2.683V27.45ZM6.75 26.587l12.938.312V37.8L6.75 35.62v-9.032Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWindows0)"/>`
	wingsuitFlyingInnerSVG                             = `<mask id="ipSWingsuitFlying0"><g fill="none" stroke="#fff" stroke-miterlimit="2" stroke-width="4"><path fill="#fff" d="M24 14a5 5 0 1 0 0-10a5 5 0 0 0 0 10Z"/><path stroke-linecap="round" stroke-linejoin="round" d="M24 20c-8.71 0-16 7.28-16 16h7v8h18v-8h7c.01-8.71-7.29-16-16-16Zm-9 16V23m18 13V23m-9 21V20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWingsuitFlying0)"/>`
	winkingFaceInnerSVG                                = `<mask id="ipSWinkingFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 31s-2 4-7 4s-7-4-7-4m16-11h-4m-12-2v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWinkingFace0)"/>`
	winkingFaceWithOpenEyesInnerSVG                    = `<mask id="ipSWinkingFaceWithOpenEyes0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="m33 16l-4 4l4 4m-2 7s-2 4-7 4s-7-4-7-4"/><circle cx="17" cy="20" r="4" fill="#000" stroke="#000" stroke-linecap="round"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWinkingFaceWithOpenEyes0)"/>`
	womenInnerSVG                                      = `<mask id="ipSWomen0"><path fill="#fff" stroke="#fff" stroke-linejoin="round" stroke-width="4" d="M19.225 6.37c-3.183 0-8.063 1.837-6.366 13.213c.026.172.06.358.095.557c.31 1.711.788 4.36-2.254 6.544c2.069 1.698 5.016 3.395 8.597 4.13a27.834 27.834 0 0 1-.532 2.414c-.291 1.068-.901 1.825-1.991 2.148c-.96.284-1.966.514-2.996.75c-.265.06-.532.121-.8.184c-1.285.299-2.595.63-3.756 1.098c-1.164.47-2.246 1.103-3.028 2.047c-.796.963-1.222 2.177-1.193 3.695c.01.472.414.85.91.85h36.178c.496 0 .9-.378.91-.85c.029-1.518-.396-2.732-1.193-3.695c-.781-.944-1.864-1.578-3.027-2.047c-1.162-.469-2.472-.8-3.758-1.099l-.798-.183c-1.031-.236-2.037-.466-2.997-.75c-1.09-.323-1.7-1.08-1.991-2.148a26.78 26.78 0 0 1-.606-2.88c2.738-.824 5.648-2.305 8.671-4.67l-.014-.014c-1.419-1.358-4.079-3.904-4.268-9.948c0-8.322-5.306-15.637-13.793-9.347Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWomen0)"/>`
	woolenHatInnerSVG                                  = `<mask id="ipSWoolenHat0"><g fill="none" stroke="#fff" stroke-width="4"><rect width="40" height="10" x="4" y="34" fill="#fff" stroke-linecap="round" stroke-linejoin="round" rx="2"/><path stroke-linecap="round" stroke-linejoin="round" d="M15 26v8m9-8v8m9-8v8"/><circle cx="24" cy="8" r="4" fill="#fff"/><path d="M8 34c0-8.25 1-22 16-22s16 13.75 16 22"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWoolenHat0)"/>`
	wordInnerSVG                                       = `<mask id="ipSWord0"><g fill="none" stroke-width="4"><rect width="36" height="36" x="6" y="6" fill="#fff" stroke="#fff" rx="3"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m14 16l4 16l6-13l6 13l4-16"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWord0)"/>`
	workbenchInnerSVG                                  = `<mask id="ipSWorkbench0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M12 33H4V7h40v26H12Z"/><path stroke="#000" stroke-linecap="round" d="M16 22v4"/><path stroke="#fff" stroke-linecap="round" d="M24 33v6"/><path stroke="#000" stroke-linecap="round" d="M24 18v8m8-12v12"/><path stroke="#fff" stroke-linecap="round" d="M12 41h24"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWorkbench0)"/>`
	workerInnerSVG                                     = `<mask id="ipSWorker0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path stroke="#fff" d="M32 16a8 8 0 1 1-16 0"/><path fill="#fff" stroke="#fff" d="M24 8a8 8 0 0 0-8 8h16a8 8 0 0 0-8-8Z"/><path stroke="#fff" d="M12 16h24M24 4v4"/><path fill="#fff" stroke="#fff" d="M24 27c-9.389 0-17 7.163-17 16h34c0-8.837-7.611-16-17-16Z"/><path stroke="#000" d="M18 34v4m12-4v4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWorker0)"/>`
	worriedFaceInnerSVG                                = `<mask id="ipSWorriedFace0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z"/><path stroke="#000" stroke-linecap="round" d="M31 18v1m-14-1v1m14 12s-2-4-7-4s-7 4-7 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWorriedFace0)"/>`
	writeInnerSVG                                      = `<mask id="ipSWrite0"><g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M5.325 43.5h8.485l31.113-31.113l-8.486-8.485L5.325 35.015V43.5Z"/><path stroke-linecap="round" d="m27.952 12.387l8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWrite0)"/>`
	writingFluentlyInnerSVG                            = `<mask id="ipSWritingFluently0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" fill-rule="evenodd" d="M24 24v-5L39 4l5 5l-15 15h-5Z" clip-rule="evenodd"/><path d="M16 24H9a5 5 0 0 0 0 10h30a5 5 0 0 1 0 10H18"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWritingFluently0)"/>`
	wrongUserInnerSVG                                  = `<mask id="ipSWrongUser0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><circle cx="24" cy="12" r="8" fill="#fff"/><path d="M42 44c0-9.941-8.059-18-18-18S6 34.059 6 44m14-8l8 8m0-8l-8 8"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSWrongUser0)"/>`
	xiaoduInnerSVG                                     = `<mask id="ipSXiaodu0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4.143 21.08c.355-3.786.533-5.68 2.513-7.705c1.98-2.025 4.16-2.28 8.517-2.788C18.003 10.257 21.131 10 24 10c2.87 0 5.996.257 8.827.587c4.358.508 6.537.763 8.517 2.788c1.98 2.026 2.158 3.919 2.513 7.706c.09.955.143 1.937.143 2.919s-.054 1.964-.143 2.92c-.355 3.786-.533 5.68-2.513 7.705c-1.98 2.025-4.16 2.28-8.517 2.788c-2.83.33-5.957.587-8.827.587s-5.996-.257-8.827-.587c-4.358-.508-6.537-.763-8.517-2.788c-1.98-2.026-2.158-3.919-2.513-7.706A31.388 31.388 0 0 1 4 24c0-.982.054-1.964.143-2.92Z"/><path stroke="#000" d="M16 19v10m17-10l-5 5l5 5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSXiaodu0)"/>`
	xiaoduHomeInnerSVG                                 = `<mask id="ipSXiaoduHome0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M4 20L24 6l20 14v22H4V20Z"/><path stroke="#000" d="M12.687 26.686a16.002 16.002 0 0 1 22.627 0m-16.971 5.657a8 8 0 0 1 11.314 0"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSXiaoduHome0)"/>`
	xiguaInnerSVG                                      = `<mask id="ipSXigua0"><g fill="none" stroke-linejoin="round" stroke-width="3.667"><path fill="#fff" stroke="#fff" d="M24 42.333c10.126 0 18.334-8.208 18.334-18.333c0-10.125-8.209-18.333-18.334-18.333S5.667 13.875 5.667 24c0 2.486 1.14 3.687 2.947 4.745c1.807 1.057 5.206.882 7.519 2.956c2.312 2.075 2.468 5.45 2.947 7.09c.479 1.64 2.435 3.542 4.92 3.542Z"/><path fill="#000" stroke="#000" d="M19.526 18.541c-.538 1.308-.807 2.846-.807 4.612c0 1.68.178 3.343.535 4.99a3.056 3.056 0 0 0 3.812 2.294c1.8-.505 3.367-1.166 4.701-1.983c1.248-.764 2.41-1.729 3.489-2.894a3.056 3.056 0 0 0-.278-4.413a32.764 32.764 0 0 0-3.977-2.87c-1.446-.885-2.863-1.42-4.25-1.602a3.056 3.056 0 0 0-3.225 1.866Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSXigua0)"/>`
	xingfuliInnerSVG                                   = `<mask id="ipSXingfuli0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M39 6H9a3 3 0 0 0-3 3v30a3 3 0 0 0 3 3h30a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3Z"/><path fill="#000" stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="m32 17l-12-4v19l6 3V19l6-2Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSXingfuli0)"/>`
	yepInnerSVG                                        = `<mask id="ipSYep0"><path fill="#fff" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4" d="M32 42c-4.736 2.706-11 2.5-16 0s-9-8-9-12.5c0-2.623 4.356-4.53 6.196-5.219c.46-.172.75-.64.677-1.126L11.586 7.909a3.404 3.404 0 1 1 6.75-.88L20 22l.83-15.77a3.408 3.408 0 1 1 6.795.518l-1.038 10.386A2.372 2.372 0 0 1 28.947 15A4.053 4.053 0 0 1 33 19.053V21.5a3.5 3.5 0 1 1 7 0v10.649c0 .566-.053 1.132-.253 1.661c-.596 1.577-2.46 5.169-7.747 8.19Z"/></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSYep0)"/>`
	youtobeInnerSVG                                    = `<mask id="ipSYoutobe0"><g fill="none" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 32.768V15.232c0-1.325-.87-2.49-2.155-2.812C38.369 11.548 31.185 10 24 10c-7.184 0-14.369 1.548-17.845 2.42C4.87 12.743 4 13.907 4 15.232v17.536c0 1.325.87 2.49 2.155 2.812C9.631 36.452 16.815 38 24 38c7.184 0 14.369-1.548 17.845-2.42C43.13 35.257 44 34.093 44 32.768Z"/><path fill="#000" stroke="#000" stroke-linejoin="round" d="M22.573 29.899a1 1 0 0 1-1.573-.82V18.921a1 1 0 0 1 1.573-.82l7.257 5.08a1 1 0 0 1 0 1.638l-7.256 5.08Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSYoutobe0)"/>`
	youtubeInnerSVG                                    = `<mask id="ipSYoutube0"><g fill="none" stroke-linejoin="round"><path fill="#fff" stroke="#fff" stroke-width="4" d="M11.064 10.414c5.543-.276 9.854-.414 12.934-.414s7.393.138 12.939.415a6 6 0 0 1 5.68 5.492c.254 3.034.381 5.706.381 8.017c0 2.339-.13 5.048-.39 8.128a6 6 0 0 1-5.587 5.483c-4.741.31-9.082.465-13.023.465c-3.94 0-8.28-.155-13.018-.465a6 6 0 0 1-5.587-5.48c-.263-3.103-.395-5.814-.395-8.131c0-2.29.129-4.963.385-8.02a6 6 0 0 1 5.68-5.49Z"/><path fill="#000" stroke="#000" stroke-width="3.429" d="M21 19.61v8.796a.857.857 0 0 0 1.33.715l6.597-4.36a.857.857 0 0 0 .006-1.427l-6.598-4.436a.857.857 0 0 0-1.335.711Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSYoutube0)"/>`
	zeroKeyInnerSVG                                    = `<mask id="ipSZeroKey0"><g fill="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><rect width="36" height="36" x="6" y="6" stroke="#fff" rx="3"/><rect width="10" height="20" x="19" y="14" stroke="#000" rx="5"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZeroKey0)"/>`
	zijinyunyingInnerSVG                               = `<mask id="ipSZijinyunying0"><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M34 6H14L3 24l11 18h20l11-18L34 6Z"/><path fill="#000" stroke="#000" d="m15 29l9-14l9 14H15Z"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZijinyunying0)"/>`
	zipInnerSVG                                        = `<mask id="ipSZip0"><g fill="none" stroke-width="4"><path fill="#fff" fill-rule="evenodd" stroke="#fff" stroke-linejoin="round" d="M4.629 12.749L24 5l19.371 7.749a1 1 0 0 1 .629.928V42a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V13.677a1 1 0 0 1 .629-.928Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M24 22v10"/><path stroke="#000" d="M33 27c1.657 0 3-1.12 3-2.5S34.657 22 33 22h-2.7a.3.3 0 0 0-.3.3v2.2c0 1.38 1.343 2.5 3 2.5Z" clip-rule="evenodd"/><path stroke="#000" stroke-linecap="round" d="M30 22v10"/><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" d="M12 22h6.005L12 32h6.005"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZip0)"/>`
	zoomInnerSVG                                       = `<mask id="ipSZoom0"><g fill="none" stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="4"><path fill="#fff" d="M20 43c-4.726-1.767-8.668-7.815-10.64-11.357c-.852-1.53-.403-3.408.964-4.502a3.83 3.83 0 0 1 5.1.283L17 29v-8.5a2.5 2.5 0 0 1 5 0v-4a2.5 2.5 0 0 1 5 0v8a2.5 2.5 0 0 1 5 0v3a2.5 2.5 0 0 1 5 0v7.868c0 1.07-.265 2.128-.882 3.003C35.095 39.82 33.255 42.034 31 43c-3.5 1.5-6.63 1.634-11 0Z"/><path d="M13 8h22m-18 4l-4-4l4-4m14 0l4 4l-4 4"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZoom0)"/>`
	zoomInInnerSVG                                     = `<mask id="ipSZoomIn0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M21 38c9.389 0 17-7.611 17-17S30.389 4 21 4S4 11.611 4 21s7.611 17 17 17Z"/><path stroke="#000" stroke-linecap="round" d="M21 15v12m-5.984-5.984L27 21"/><path stroke="#fff" stroke-linecap="round" d="m33.222 33.222l8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZoomIn0)"/>`
	zoomInternalInnerSVG                               = `<mask id="ipSZoomInternal0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M44 4H4v40h40V4Z"/><path stroke="#000" stroke-linecap="round" d="M16 4v12H4m32 8v12H24m12 0L24 24"/><path stroke="#fff" stroke-linecap="round" d="M4 6v20M7 4h20"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZoomInternal0)"/>`
	zoomOutInnerSVG                                    = `<mask id="ipSZoomOut0"><g fill="none" stroke-linejoin="round" stroke-width="4"><path fill="#fff" stroke="#fff" d="M21 38c9.389 0 17-7.611 17-17S30.389 4 21 4S4 11.611 4 21s7.611 17 17 17Z"/><path stroke="#000" stroke-linecap="round" d="M15 21h12"/><path stroke="#fff" stroke-linecap="round" d="m33.222 33.222l8.485 8.485"/></g></mask><path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipSZoomOut0)"/>`
)

var sharedIconAttrs = []engine.Attributer{
	engine.NewAttribute("width", "1em"),
	engine.NewAttribute("height", "1em"),
}

func ACane(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(aCaneInnerSVG).
		Element(children...)
}

func Abnormal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(abnormalInnerSVG).
		Element(children...)
}

func Acceleration(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(accelerationInnerSVG).
		Element(children...)
}

func ActivitySource(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(activitySourceInnerSVG).
		Element(children...)
}

func Ad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adInnerSVG).
		Element(children...)
}

func Add(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addInnerSVG).
		Element(children...)
}

func AddItem(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addItemInnerSVG).
		Element(children...)
}

func AddMode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addModeInnerSVG).
		Element(children...)
}

func AddMusic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addMusicInnerSVG).
		Element(children...)
}

func AddOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addOneInnerSVG).
		Element(children...)
}

func AddPic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addPicInnerSVG).
		Element(children...)
}

func AddPrint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addPrintInnerSVG).
		Element(children...)
}

func AddSubset(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addSubsetInnerSVG).
		Element(children...)
}

func AddSubtract(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addSubtractInnerSVG).
		Element(children...)
}

func AddTextTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addTextTwoInnerSVG).
		Element(children...)
}

func AddUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addUserInnerSVG).
		Element(children...)
}

func AddWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addWebInnerSVG).
		Element(children...)
}

func AddressBook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(addressBookInnerSVG).
		Element(children...)
}

func AdjacentItem(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adjacentItemInnerSVG).
		Element(children...)
}

func Adjustment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adjustmentInnerSVG).
		Element(children...)
}

func AdobeIllustrate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adobeIllustrateInnerSVG).
		Element(children...)
}

func AdobeIndesign(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adobeIndesignInnerSVG).
		Element(children...)
}

func AdobeLightroom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adobeLightroomInnerSVG).
		Element(children...)
}

func AdobePhotoshop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(adobePhotoshopInnerSVG).
		Element(children...)
}

func AfroPick(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(afroPickInnerSVG).
		Element(children...)
}

func Agreement(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(agreementInnerSVG).
		Element(children...)
}

func Aiming(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(aimingInnerSVG).
		Element(children...)
}

func AirBike(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airBikeInnerSVG).
		Element(children...)
}

func AirConditioning(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airConditioningInnerSVG).
		Element(children...)
}

func Airplane(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airplaneInnerSVG).
		Element(children...)
}

func AirplaneWindow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airplaneWindowInnerSVG).
		Element(children...)
}

func AirplaneWindowOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airplaneWindowOneInnerSVG).
		Element(children...)
}

func Airplay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airplayInnerSVG).
		Element(children...)
}

func Airpods(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(airpodsInnerSVG).
		Element(children...)
}

func Alarm(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alarmInnerSVG).
		Element(children...)
}

func AlarmClock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alarmClockInnerSVG).
		Element(children...)
}

func AlignBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignBottomInnerSVG).
		Element(children...)
}

func AlignBottomTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignBottomTwoInnerSVG).
		Element(children...)
}

func AlignHorizontalCenterTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignHorizontalCenterTwoInnerSVG).
		Element(children...)
}

func AlignHorizontally(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignHorizontallyInnerSVG).
		Element(children...)
}

func AlignLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLeftInnerSVG).
		Element(children...)
}

func AlignLeftOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLeftOneInnerSVG).
		Element(children...)
}

func AlignLeftTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignLeftTwoInnerSVG).
		Element(children...)
}

func AlignRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignRightInnerSVG).
		Element(children...)
}

func AlignRightOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignRightOneInnerSVG).
		Element(children...)
}

func AlignRightTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignRightTwoInnerSVG).
		Element(children...)
}

func AlignTextBothOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextBothOneInnerSVG).
		Element(children...)
}

func AlignTextBottomOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextBottomOneInnerSVG).
		Element(children...)
}

func AlignTextCenterOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextCenterOneInnerSVG).
		Element(children...)
}

func AlignTextLeftOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextLeftOneInnerSVG).
		Element(children...)
}

func AlignTextMiddleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextMiddleOneInnerSVG).
		Element(children...)
}

func AlignTextRightOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextRightOneInnerSVG).
		Element(children...)
}

func AlignTextTopOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTextTopOneInnerSVG).
		Element(children...)
}

func AlignTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTopInnerSVG).
		Element(children...)
}

func AlignTopTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignTopTwoInnerSVG).
		Element(children...)
}

func AlignVerticalCenterTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignVerticalCenterTwoInnerSVG).
		Element(children...)
}

func AlignVertically(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignVerticallyInnerSVG).
		Element(children...)
}

func AlignmentBottomCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentBottomCenterInnerSVG).
		Element(children...)
}

func AlignmentBottomLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentBottomLeftInnerSVG).
		Element(children...)
}

func AlignmentBottomRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentBottomRightInnerSVG).
		Element(children...)
}

func AlignmentHorizontalBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentHorizontalBottomInnerSVG).
		Element(children...)
}

func AlignmentHorizontalCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentHorizontalCenterInnerSVG).
		Element(children...)
}

func AlignmentHorizontalTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentHorizontalTopInnerSVG).
		Element(children...)
}

func AlignmentLeftBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentLeftBottomInnerSVG).
		Element(children...)
}

func AlignmentLeftCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentLeftCenterInnerSVG).
		Element(children...)
}

func AlignmentLeftTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentLeftTopInnerSVG).
		Element(children...)
}

func AlignmentRightBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentRightBottomInnerSVG).
		Element(children...)
}

func AlignmentRightCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentRightCenterInnerSVG).
		Element(children...)
}

func AlignmentRightTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentRightTopInnerSVG).
		Element(children...)
}

func AlignmentTopCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentTopCenterInnerSVG).
		Element(children...)
}

func AlignmentTopLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentTopLeftInnerSVG).
		Element(children...)
}

func AlignmentTopRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentTopRightInnerSVG).
		Element(children...)
}

func AlignmentVerticalCenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentVerticalCenterInnerSVG).
		Element(children...)
}

func AlignmentVerticalLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentVerticalLeftInnerSVG).
		Element(children...)
}

func AlignmentVerticalRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(alignmentVerticalRightInnerSVG).
		Element(children...)
}

func AllApplication(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(allApplicationInnerSVG).
		Element(children...)
}

func Ambulance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ambulanceInnerSVG).
		Element(children...)
}

func Analysis(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(analysisInnerSVG).
		Element(children...)
}

func Anchor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorInnerSVG).
		Element(children...)
}

func AnchorOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorOneInnerSVG).
		Element(children...)
}

func AnchorRound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorRoundInnerSVG).
		Element(children...)
}

func AnchorSqure(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorSqureInnerSVG).
		Element(children...)
}

func AnchorTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anchorTwoInnerSVG).
		Element(children...)
}

func Android(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(androidInnerSVG).
		Element(children...)
}

func AngryFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(angryFaceInnerSVG).
		Element(children...)
}

func AnguishedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(anguishedFaceInnerSVG).
		Element(children...)
}

func Announcement(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(announcementInnerSVG).
		Element(children...)
}

func AntiCorrosion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(antiCorrosionInnerSVG).
		Element(children...)
}

func AperturePriority(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(aperturePriorityInnerSVG).
		Element(children...)
}

func Api(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(apiInnerSVG).
		Element(children...)
}

func AppStore(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appStoreInnerSVG).
		Element(children...)
}

func AppSwitch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appSwitchInnerSVG).
		Element(children...)
}

func Apple(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appleInnerSVG).
		Element(children...)
}

func AppleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appleOneInnerSVG).
		Element(children...)
}

func AppletClosed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appletClosedInnerSVG).
		Element(children...)
}

func Application(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(applicationInnerSVG).
		Element(children...)
}

func ApplicationOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(applicationOneInnerSVG).
		Element(children...)
}

func ApplicationTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(applicationTwoInnerSVG).
		Element(children...)
}

func Appointment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(appointmentInnerSVG).
		Element(children...)
}

func ArcDeTriomphe(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arcDeTriompheInnerSVG).
		Element(children...)
}

func ArchersBow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(archersBowInnerSVG).
		Element(children...)
}

func Archery(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(archeryInnerSVG).
		Element(children...)
}

func AreaMap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(areaMapInnerSVG).
		Element(children...)
}

func Arena(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arenaInnerSVG).
		Element(children...)
}

func ArithmeticButtons(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arithmeticButtonsInnerSVG).
		Element(children...)
}

func ArrowCircleDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleDownInnerSVG).
		Element(children...)
}

func ArrowCircleLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleLeftInnerSVG).
		Element(children...)
}

func ArrowCircleRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleRightInnerSVG).
		Element(children...)
}

func ArrowCircleUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowCircleUpInnerSVG).
		Element(children...)
}

func ArrowKeys(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(arrowKeysInnerSVG).
		Element(children...)
}

func AssemblyLine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(assemblyLineInnerSVG).
		Element(children...)
}

func Asterisk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(asteriskInnerSVG).
		Element(children...)
}

func AsteriskKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(asteriskKeyInnerSVG).
		Element(children...)
}

func AstonishedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(astonishedFaceInnerSVG).
		Element(children...)
}

func AtSign(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(atSignInnerSVG).
		Element(children...)
}

func Attention(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(attentionInnerSVG).
		Element(children...)
}

func AudioFile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(audioFileInnerSVG).
		Element(children...)
}

func Audit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(auditInnerSVG).
		Element(children...)
}

func AutoFocus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(autoFocusInnerSVG).
		Element(children...)
}

func Avatar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(avatarInnerSVG).
		Element(children...)
}

func Aviation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(aviationInnerSVG).
		Element(children...)
}

func Avocado(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(avocadoInnerSVG).
		Element(children...)
}

func AvocadoOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(avocadoOneInnerSVG).
		Element(children...)
}

func Baby(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyInnerSVG).
		Element(children...)
}

func BabyApp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyAppInnerSVG).
		Element(children...)
}

func BabyCarSeat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyCarSeatInnerSVG).
		Element(children...)
}

func BabyFeet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyFeetInnerSVG).
		Element(children...)
}

func BabyMeal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyMealInnerSVG).
		Element(children...)
}

func BabyMobile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyMobileInnerSVG).
		Element(children...)
}

func BabyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyOneInnerSVG).
		Element(children...)
}

func BabyPants(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyPantsInnerSVG).
		Element(children...)
}

func BabySling(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babySlingInnerSVG).
		Element(children...)
}

func BabyTaste(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(babyTasteInnerSVG).
		Element(children...)
}

func BachelorCap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bachelorCapInnerSVG).
		Element(children...)
}

func BachelorCapOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bachelorCapOneInnerSVG).
		Element(children...)
}

func BachelorCapTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bachelorCapTwoInnerSVG).
		Element(children...)
}

func Back(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(backInnerSVG).
		Element(children...)
}

func Backpack(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(backpackInnerSVG).
		Element(children...)
}

func Bad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badInnerSVG).
		Element(children...)
}

func BadOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badOneInnerSVG).
		Element(children...)
}

func BadTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badTwoInnerSVG).
		Element(children...)
}

func Badge(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badgeInnerSVG).
		Element(children...)
}

func BadgeTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badgeTwoInnerSVG).
		Element(children...)
}

func Badminton(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(badmintonInnerSVG).
		Element(children...)
}

func BaggageDelay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(baggageDelayInnerSVG).
		Element(children...)
}

func Balance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(balanceInnerSVG).
		Element(children...)
}

func BalanceOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(balanceOneInnerSVG).
		Element(children...)
}

func BalanceTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(balanceTwoInnerSVG).
		Element(children...)
}

func Banana(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bananaInnerSVG).
		Element(children...)
}

func BankCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bankCardInnerSVG).
		Element(children...)
}

func BankCardOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bankCardOneInnerSVG).
		Element(children...)
}

func BankCardTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bankCardTwoInnerSVG).
		Element(children...)
}

func BankTransfer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bankTransferInnerSVG).
		Element(children...)
}

func Baokemeng(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(baokemengInnerSVG).
		Element(children...)
}

func Barbecue(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(barbecueInnerSVG).
		Element(children...)
}

func BarberBrush(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(barberBrushInnerSVG).
		Element(children...)
}

func BarberClippers(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(barberClippersInnerSVG).
		Element(children...)
}

func BaseballBat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(baseballBatInnerSVG).
		Element(children...)
}

func BaseballCap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(baseballCapInnerSVG).
		Element(children...)
}

func BasketballClothes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(basketballClothesInnerSVG).
		Element(children...)
}

func BasketballOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(basketballOneInnerSVG).
		Element(children...)
}

func Bat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batInnerSVG).
		Element(children...)
}

func BatteryEmpty(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryEmptyInnerSVG).
		Element(children...)
}

func BatteryFailure(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryFailureInnerSVG).
		Element(children...)
}

func BatteryFull(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryFullInnerSVG).
		Element(children...)
}

func BatteryStorage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryStorageInnerSVG).
		Element(children...)
}

func BatteryTips(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryTipsInnerSVG).
		Element(children...)
}

func BatteryWorking(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryWorkingInnerSVG).
		Element(children...)
}

func BatteryWorkingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(batteryWorkingOneInnerSVG).
		Element(children...)
}

func BeachUmbrella(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beachUmbrellaInnerSVG).
		Element(children...)
}

func Bear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bearInnerSVG).
		Element(children...)
}

func Beauty(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beautyInnerSVG).
		Element(children...)
}

func BeautyInstrument(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beautyInstrumentInnerSVG).
		Element(children...)
}

func Bedside(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bedsideInnerSVG).
		Element(children...)
}

func BedsideTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bedsideTwoInnerSVG).
		Element(children...)
}

func Bee(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beeInnerSVG).
		Element(children...)
}

func Beer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beerInnerSVG).
		Element(children...)
}

func BeerMug(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(beerMugInnerSVG).
		Element(children...)
}

func Behance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(behanceInnerSVG).
		Element(children...)
}

func BellRing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bellRingInnerSVG).
		Element(children...)
}

func Benz(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(benzInnerSVG).
		Element(children...)
}

func BezierCurve(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bezierCurveInnerSVG).
		Element(children...)
}

func Bib(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bibInnerSVG).
		Element(children...)
}

func BigClock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bigClockInnerSVG).
		Element(children...)
}

func BigX(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bigXInnerSVG).
		Element(children...)
}

func Bike(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bikeInnerSVG).
		Element(children...)
}

func Bill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(billInnerSVG).
		Element(children...)
}

func Bird(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(birdInnerSVG).
		Element(children...)
}

func BirthdayCake(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(birthdayCakeInnerSVG).
		Element(children...)
}

func Bitcoin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bitcoinInnerSVG).
		Element(children...)
}

func BlackEight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blackEightInnerSVG).
		Element(children...)
}

func Blackboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blackboardInnerSVG).
		Element(children...)
}

func Blade(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bladeInnerSVG).
		Element(children...)
}

func BlockEight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockEightInnerSVG).
		Element(children...)
}

func BlockFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockFiveInnerSVG).
		Element(children...)
}

func BlockFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockFourInnerSVG).
		Element(children...)
}

func BlockNine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockNineInnerSVG).
		Element(children...)
}

func BlockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockOneInnerSVG).
		Element(children...)
}

func BlockSeven(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockSevenInnerSVG).
		Element(children...)
}

func BlockSix(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockSixInnerSVG).
		Element(children...)
}

func BlockTen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockTenInnerSVG).
		Element(children...)
}

func BlockThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockThreeInnerSVG).
		Element(children...)
}

func BlockTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockTwoInnerSVG).
		Element(children...)
}

func Blockchain(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blockchainInnerSVG).
		Element(children...)
}

func BlocksAndArrows(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blocksAndArrowsInnerSVG).
		Element(children...)
}

func Bloom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bloomInnerSVG).
		Element(children...)
}

func Blossom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(blossomInnerSVG).
		Element(children...)
}

func Boiler(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boilerInnerSVG).
		Element(children...)
}

func BoltOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boltOneInnerSVG).
		Element(children...)
}

func Book(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookInnerSVG).
		Element(children...)
}

func BookOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookOneInnerSVG).
		Element(children...)
}

func BookOpen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookOpenInnerSVG).
		Element(children...)
}

func Bookmark(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookmarkInnerSVG).
		Element(children...)
}

func BookmarkOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookmarkOneInnerSVG).
		Element(children...)
}

func BookmarkThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookmarkThreeInnerSVG).
		Element(children...)
}

func Bookshelf(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bookshelfInnerSVG).
		Element(children...)
}

func BoosterCarSeat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boosterCarSeatInnerSVG).
		Element(children...)
}

func Booth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boothInnerSVG).
		Element(children...)
}

func Bottle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottleInnerSVG).
		Element(children...)
}

func BottleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottleOneInnerSVG).
		Element(children...)
}

func BottleThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottleThreeInnerSVG).
		Element(children...)
}

func BottleTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottleTwoInnerSVG).
		Element(children...)
}

func BottomBar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottomBarInnerSVG).
		Element(children...)
}

func BottomBarOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bottomBarOneInnerSVG).
		Element(children...)
}

func Bow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bowInnerSVG).
		Element(children...)
}

func Bowl(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bowlInnerSVG).
		Element(children...)
}

func BowlOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bowlOneInnerSVG).
		Element(children...)
}

func Box(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boxInnerSVG).
		Element(children...)
}

func Boxing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boxingInnerSVG).
		Element(children...)
}

func Boy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boyInnerSVG).
		Element(children...)
}

func BoyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boyOneInnerSVG).
		Element(children...)
}

func BoyStroller(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boyStrollerInnerSVG).
		Element(children...)
}

func BoyTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(boyTwoInnerSVG).
		Element(children...)
}

func Brain(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(brainInnerSVG).
		Element(children...)
}

func BrakePads(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(brakePadsInnerSVG).
		Element(children...)
}

func Branch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(branchInnerSVG).
		Element(children...)
}

func BranchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(branchOneInnerSVG).
		Element(children...)
}

func BranchTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(branchTwoInnerSVG).
		Element(children...)
}

func Bread(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(breadInnerSVG).
		Element(children...)
}

func BreadMachine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(breadMachineInnerSVG).
		Element(children...)
}

func BreadOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(breadOneInnerSVG).
		Element(children...)
}

func BreastPump(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(breastPumpInnerSVG).
		Element(children...)
}

func BridgeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bridgeOneInnerSVG).
		Element(children...)
}

func Briefcase(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(briefcaseInnerSVG).
		Element(children...)
}

func Brightness(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(brightnessInnerSVG).
		Element(children...)
}

func BringForward(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bringForwardInnerSVG).
		Element(children...)
}

func BringToFront(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bringToFrontInnerSVG).
		Element(children...)
}

func BringToFrontOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bringToFrontOneInnerSVG).
		Element(children...)
}

func Broadcast(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(broadcastInnerSVG).
		Element(children...)
}

func BroadcastOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(broadcastOneInnerSVG).
		Element(children...)
}

func BroadcastRadio(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(broadcastRadioInnerSVG).
		Element(children...)
}

func Browser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(browserInnerSVG).
		Element(children...)
}

func BrowserSafari(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(browserSafariInnerSVG).
		Element(children...)
}

func BubbleChart(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bubbleChartInnerSVG).
		Element(children...)
}

func Bug(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bugInnerSVG).
		Element(children...)
}

func BuildingFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(buildingFourInnerSVG).
		Element(children...)
}

func BuildingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(buildingOneInnerSVG).
		Element(children...)
}

func BuildingThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(buildingThreeInnerSVG).
		Element(children...)
}

func BuildingTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(buildingTwoInnerSVG).
		Element(children...)
}

func Bus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(busInnerSVG).
		Element(children...)
}

func BusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(busOneInnerSVG).
		Element(children...)
}

func BusTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(busTwoInnerSVG).
		Element(children...)
}

func Butterfly(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(butterflyInnerSVG).
		Element(children...)
}

func Buy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(buyInnerSVG).
		Element(children...)
}

func Bydesign(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bydesignInnerSVG).
		Element(children...)
}

func Bytedance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bytedanceInnerSVG).
		Element(children...)
}

func BytedanceMiniApp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(bytedanceMiniAppInnerSVG).
		Element(children...)
}

func CableCar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cableCarInnerSVG).
		Element(children...)
}

func Cactus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cactusInnerSVG).
		Element(children...)
}

func Cake(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cakeInnerSVG).
		Element(children...)
}

func CakeFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cakeFiveInnerSVG).
		Element(children...)
}

func CakeFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cakeFourInnerSVG).
		Element(children...)
}

func CakeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cakeOneInnerSVG).
		Element(children...)
}

func CakeThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cakeThreeInnerSVG).
		Element(children...)
}

func Calculator(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calculatorInnerSVG).
		Element(children...)
}

func CalculatorOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calculatorOneInnerSVG).
		Element(children...)
}

func Calendar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calendarInnerSVG).
		Element(children...)
}

func CalendarDot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calendarDotInnerSVG).
		Element(children...)
}

func CalendarThirty(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calendarThirtyInnerSVG).
		Element(children...)
}

func CalendarThirtyTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calendarThirtyTwoInnerSVG).
		Element(children...)
}

func CalendarThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(calendarThreeInnerSVG).
		Element(children...)
}

func Camera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraInnerSVG).
		Element(children...)
}

func CameraFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraFiveInnerSVG).
		Element(children...)
}

func CameraFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraFourInnerSVG).
		Element(children...)
}

func CameraOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraOneInnerSVG).
		Element(children...)
}

func CameraThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraThreeInnerSVG).
		Element(children...)
}

func CameraTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cameraTwoInnerSVG).
		Element(children...)
}

func Camp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(campInnerSVG).
		Element(children...)
}

func Cancer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cancerInnerSVG).
		Element(children...)
}

func Candy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(candyInnerSVG).
		Element(children...)
}

func CannedFruit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cannedFruitInnerSVG).
		Element(children...)
}

func Capricornus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(capricornusInnerSVG).
		Element(children...)
}

func Car(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(carInnerSVG).
		Element(children...)
}

func CarBattery(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(carBatteryInnerSVG).
		Element(children...)
}

func CardTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cardTwoInnerSVG).
		Element(children...)
}

func Carousel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(carouselInnerSVG).
		Element(children...)
}

func CarouselVideo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(carouselVideoInnerSVG).
		Element(children...)
}

func Castle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(castleInnerSVG).
		Element(children...)
}

func CategoryManagement(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(categoryManagementInnerSVG).
		Element(children...)
}

func Cattle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cattleInnerSVG).
		Element(children...)
}

func Caution(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cautionInnerSVG).
		Element(children...)
}

func Cd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cdInnerSVG).
		Element(children...)
}

func Cell(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cellInnerSVG).
		Element(children...)
}

func Certificate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(certificateInnerSVG).
		Element(children...)
}

func ChafingDish(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chafingDishInnerSVG).
		Element(children...)
}

func ChafingDishOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chafingDishOneInnerSVG).
		Element(children...)
}

func Chair(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chairInnerSVG).
		Element(children...)
}

func ChairOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chairOneInnerSVG).
		Element(children...)
}

func ChangeDateSort(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(changeDateSortInnerSVG).
		Element(children...)
}

func ChargingTreasure(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chargingTreasureInnerSVG).
		Element(children...)
}

func ChartGraph(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartGraphInnerSVG).
		Element(children...)
}

func ChartHistogramTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartHistogramTwoInnerSVG).
		Element(children...)
}

func ChartLineArea(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartLineAreaInnerSVG).
		Element(children...)
}

func ChartPie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartPieInnerSVG).
		Element(children...)
}

func ChartPieOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartPieOneInnerSVG).
		Element(children...)
}

func ChartProportion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartProportionInnerSVG).
		Element(children...)
}

func ChartRing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartRingInnerSVG).
		Element(children...)
}

func ChartStock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chartStockInnerSVG).
		Element(children...)
}

func CheckCorrect(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkCorrectInnerSVG).
		Element(children...)
}

func CheckOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkOneInnerSVG).
		Element(children...)
}

func Checkbox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkboxInnerSVG).
		Element(children...)
}

func Checkerboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checkerboardInnerSVG).
		Element(children...)
}

func Checklist(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(checklistInnerSVG).
		Element(children...)
}

func Cheese(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cheeseInnerSVG).
		Element(children...)
}

func ChefHat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chefHatInnerSVG).
		Element(children...)
}

func ChefHatOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chefHatOneInnerSVG).
		Element(children...)
}

func Cherry(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cherryInnerSVG).
		Element(children...)
}

func ChessOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chessOneInnerSVG).
		Element(children...)
}

func Chicken(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chickenInnerSVG).
		Element(children...)
}

func ChickenLeg(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chickenLegInnerSVG).
		Element(children...)
}

func ChildrenCap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(childrenCapInnerSVG).
		Element(children...)
}

func ChildrenPyramid(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(childrenPyramidInnerSVG).
		Element(children...)
}

func Chili(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chiliInnerSVG).
		Element(children...)
}

func Chimney(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chimneyInnerSVG).
		Element(children...)
}

func Chinese(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chineseInnerSVG).
		Element(children...)
}

func ChineseOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chineseOneInnerSVG).
		Element(children...)
}

func ChinesePavilion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chinesePavilionInnerSVG).
		Element(children...)
}

func Chip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(chipInnerSVG).
		Element(children...)
}

func ChoppingBoard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(choppingBoardInnerSVG).
		Element(children...)
}

func ChristmasTree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(christmasTreeInnerSVG).
		Element(children...)
}

func ChristmasTreeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(christmasTreeOneInnerSVG).
		Element(children...)
}

func ChurchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(churchOneInnerSVG).
		Element(children...)
}

func ChurchTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(churchTwoInnerSVG).
		Element(children...)
}

func CircleDoubleDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleDoubleDownInnerSVG).
		Element(children...)
}

func CircleDoubleLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleDoubleLeftInnerSVG).
		Element(children...)
}

func CircleDoubleRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleDoubleRightInnerSVG).
		Element(children...)
}

func CircleDoubleUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleDoubleUpInnerSVG).
		Element(children...)
}

func CircleFiveLine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleFiveLineInnerSVG).
		Element(children...)
}

func CircleFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleFourInnerSVG).
		Element(children...)
}

func CircleFourLine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleFourLineInnerSVG).
		Element(children...)
}

func CircleHouse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleHouseInnerSVG).
		Element(children...)
}

func CircleLeftDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleLeftDownInnerSVG).
		Element(children...)
}

func CircleLeftUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleLeftUpInnerSVG).
		Element(children...)
}

func CircleRightDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleRightDownInnerSVG).
		Element(children...)
}

func CircleRightUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleRightUpInnerSVG).
		Element(children...)
}

func CircleThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleThreeInnerSVG).
		Element(children...)
}

func CircleTwoLine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circleTwoLineInnerSVG).
		Element(children...)
}

func CirclesAndTriangles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circlesAndTrianglesInnerSVG).
		Element(children...)
}

func CirclesSeven(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circlesSevenInnerSVG).
		Element(children...)
}

func CircularConnection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circularConnectionInnerSVG).
		Element(children...)
}

func Circus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(circusInnerSVG).
		Element(children...)
}

func City(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cityInnerSVG).
		Element(children...)
}

func CityGate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cityGateInnerSVG).
		Element(children...)
}

func CityOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cityOneInnerSVG).
		Element(children...)
}

func Clap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clapInnerSVG).
		Element(children...)
}

func Classroom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(classroomInnerSVG).
		Element(children...)
}

func Clear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clearInnerSVG).
		Element(children...)
}

func ClearFormat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clearFormatInnerSVG).
		Element(children...)
}

func Click(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clickInnerSVG).
		Element(children...)
}

func Clipboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clipboardInnerSVG).
		Element(children...)
}

func ClockTower(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clockTowerInnerSVG).
		Element(children...)
}

func CloseOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(closeOneInnerSVG).
		Element(children...)
}

func ClothesBriefs(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesBriefsInnerSVG).
		Element(children...)
}

func ClothesGloves(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesGlovesInnerSVG).
		Element(children...)
}

func ClothesGlovesTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesGlovesTwoInnerSVG).
		Element(children...)
}

func ClothesHoodie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesHoodieInnerSVG).
		Element(children...)
}

func ClothesPantsShort(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesPantsShortInnerSVG).
		Element(children...)
}

func ClothesPantsSweat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesPantsSweatInnerSVG).
		Element(children...)
}

func ClothesSkates(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesSkatesInnerSVG).
		Element(children...)
}

func ClothesTurtleneck(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesTurtleneckInnerSVG).
		Element(children...)
}

func ClothesWindbreaker(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clothesWindbreakerInnerSVG).
		Element(children...)
}

func CloudStorage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cloudStorageInnerSVG).
		Element(children...)
}

func Cloudy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cloudyInnerSVG).
		Element(children...)
}

func CloudyNight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cloudyNightInnerSVG).
		Element(children...)
}

func Clue(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(clueInnerSVG).
		Element(children...)
}

func CoatHanger(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coatHangerInnerSVG).
		Element(children...)
}

func Cocktail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cocktailInnerSVG).
		Element(children...)
}

func CoconutTree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coconutTreeInnerSVG).
		Element(children...)
}

func CodeLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(codeLaptopInnerSVG).
		Element(children...)
}

func CoffeeMachine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coffeeMachineInnerSVG).
		Element(children...)
}

func Cola(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(colaInnerSVG).
		Element(children...)
}

func CollectComputer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(collectComputerInnerSVG).
		Element(children...)
}

func CollectLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(collectLaptopInnerSVG).
		Element(children...)
}

func CollectPicture(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(collectPictureInnerSVG).
		Element(children...)
}

func CollectionFiles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(collectionFilesInnerSVG).
		Element(children...)
}

func CollectionRecords(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(collectionRecordsInnerSVG).
		Element(children...)
}

func ColorCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(colorCardInnerSVG).
		Element(children...)
}

func ColorFilter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(colorFilterInnerSVG).
		Element(children...)
}

func Come(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(comeInnerSVG).
		Element(children...)
}

func Command(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commandInnerSVG).
		Element(children...)
}

func Comment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commentInnerSVG).
		Element(children...)
}

func CommentOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commentOneInnerSVG).
		Element(children...)
}

func Comments(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commentsInnerSVG).
		Element(children...)
}

func Commodity(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commodityInnerSVG).
		Element(children...)
}

func Communication(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(communicationInnerSVG).
		Element(children...)
}

func CommuterBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(commuterBagInnerSVG).
		Element(children...)
}

func Compass(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(compassInnerSVG).
		Element(children...)
}

func CompassOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(compassOneInnerSVG).
		Element(children...)
}

func Components(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(componentsInnerSVG).
		Element(children...)
}

func Composition(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(compositionInnerSVG).
		Element(children...)
}

func Compression(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(compressionInnerSVG).
		Element(children...)
}

func Computer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(computerInnerSVG).
		Element(children...)
}

func ConceptSharing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(conceptSharingInnerSVG).
		Element(children...)
}

func Concern(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(concernInnerSVG).
		Element(children...)
}

func Conditioner(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(conditionerInnerSVG).
		Element(children...)
}

func Cones(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(conesInnerSVG).
		Element(children...)
}

func Config(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(configInnerSVG).
		Element(children...)
}

func ConfoundedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(confoundedFaceInnerSVG).
		Element(children...)
}

func ConfusedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(confusedFaceInnerSVG).
		Element(children...)
}

func Connect(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectInnerSVG).
		Element(children...)
}

func ConnectAddressOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectAddressOneInnerSVG).
		Element(children...)
}

func ConnectAddressTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectAddressTwoInnerSVG).
		Element(children...)
}

func Connection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectionInnerSVG).
		Element(children...)
}

func ConnectionBox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectionBoxInnerSVG).
		Element(children...)
}

func ConnectionPoint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectionPointInnerSVG).
		Element(children...)
}

func ConnectionPointTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(connectionPointTwoInnerSVG).
		Element(children...)
}

func Consignment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(consignmentInnerSVG).
		Element(children...)
}

func Consume(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(consumeInnerSVG).
		Element(children...)
}

func Contrast(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(contrastInnerSVG).
		Element(children...)
}

func ContrastView(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(contrastViewInnerSVG).
		Element(children...)
}

func ContrastViewCircle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(contrastViewCircleInnerSVG).
		Element(children...)
}

func Control(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(controlInnerSVG).
		Element(children...)
}

func ConvergingGateway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(convergingGatewayInnerSVG).
		Element(children...)
}

func Cook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cookInnerSVG).
		Element(children...)
}

func Cooking(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cookingInnerSVG).
		Element(children...)
}

func CookingPot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cookingPotInnerSVG).
		Element(children...)
}

func Cool(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coolInnerSVG).
		Element(children...)
}

func CoordinateSystem(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coordinateSystemInnerSVG).
		Element(children...)
}

func Copy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(copyInnerSVG).
		Element(children...)
}

func CopyLink(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(copyLinkInnerSVG).
		Element(children...)
}

func CopyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(copyOneInnerSVG).
		Element(children...)
}

func Copyright(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(copyrightInnerSVG).
		Element(children...)
}

func Coronavirus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(coronavirusInnerSVG).
		Element(children...)
}

func Correct(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(correctInnerSVG).
		Element(children...)
}

func CosmeticBrush(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cosmeticBrushInnerSVG).
		Element(children...)
}

func Coupon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(couponInnerSVG).
		Element(children...)
}

func Cpu(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cpuInnerSVG).
		Element(children...)
}

func Crab(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crabInnerSVG).
		Element(children...)
}

func Creative(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(creativeInnerSVG).
		Element(children...)
}

func Croissant(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(croissantInnerSVG).
		Element(children...)
}

func CrossRing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crossRingInnerSVG).
		Element(children...)
}

func CrossSociety(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crossSocietyInnerSVG).
		Element(children...)
}

func Crown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crownInnerSVG).
		Element(children...)
}

func CrownThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crownThreeInnerSVG).
		Element(children...)
}

func CrownTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(crownTwoInnerSVG).
		Element(children...)
}

func Cruise(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cruiseInnerSVG).
		Element(children...)
}

func CryingBaby(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cryingBabyInnerSVG).
		Element(children...)
}

func CubeFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cubeFourInnerSVG).
		Element(children...)
}

func Cup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cupInnerSVG).
		Element(children...)
}

func CupOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cupOneInnerSVG).
		Element(children...)
}

func Curling(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(curlingInnerSVG).
		Element(children...)
}

func CurveAdjustment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(curveAdjustmentInnerSVG).
		Element(children...)
}

func CuttingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cuttingOneInnerSVG).
		Element(children...)
}

func Cuvette(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cuvetteInnerSVG).
		Element(children...)
}

func CycleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cycleOneInnerSVG).
		Element(children...)
}

func Cylinder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(cylinderInnerSVG).
		Element(children...)
}

func DamageMap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(damageMapInnerSVG).
		Element(children...)
}

func DarkMode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(darkModeInnerSVG).
		Element(children...)
}

func DashboardCar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dashboardCarInnerSVG).
		Element(children...)
}

func DashboardOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dashboardOneInnerSVG).
		Element(children...)
}

func Data(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataInnerSVG).
		Element(children...)
}

func DataAll(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataAllInnerSVG).
		Element(children...)
}

func DataArrival(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataArrivalInnerSVG).
		Element(children...)
}

func DataDisplay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataDisplayInnerSVG).
		Element(children...)
}

func DataFile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataFileInnerSVG).
		Element(children...)
}

func DataFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataFourInnerSVG).
		Element(children...)
}

func DataLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataLockInnerSVG).
		Element(children...)
}

func DataOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataOneInnerSVG).
		Element(children...)
}

func DataScreen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataScreenInnerSVG).
		Element(children...)
}

func DataServer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataServerInnerSVG).
		Element(children...)
}

func DataSheet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataSheetInnerSVG).
		Element(children...)
}

func DataSwitching(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataSwitchingInnerSVG).
		Element(children...)
}

func DataThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataThreeInnerSVG).
		Element(children...)
}

func DataTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataTwoInnerSVG).
		Element(children...)
}

func DataUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dataUserInnerSVG).
		Element(children...)
}

func DatabaseAlert(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseAlertInnerSVG).
		Element(children...)
}

func DatabaseCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseCodeInnerSVG).
		Element(children...)
}

func DatabaseConfig(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseConfigInnerSVG).
		Element(children...)
}

func DatabaseDownload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseDownloadInnerSVG).
		Element(children...)
}

func DatabaseEnter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseEnterInnerSVG).
		Element(children...)
}

func DatabaseFail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseFailInnerSVG).
		Element(children...)
}

func DatabaseFirst(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseFirstInnerSVG).
		Element(children...)
}

func DatabaseForbid(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseForbidInnerSVG).
		Element(children...)
}

func DatabaseLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseLockInnerSVG).
		Element(children...)
}

func DatabaseNetwork(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseNetworkInnerSVG).
		Element(children...)
}

func DatabaseNetworkPoint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseNetworkPointInnerSVG).
		Element(children...)
}

func DatabasePoint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databasePointInnerSVG).
		Element(children...)
}

func DatabasePosition(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databasePositionInnerSVG).
		Element(children...)
}

func DatabasePower(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databasePowerInnerSVG).
		Element(children...)
}

func DatabaseProportion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseProportionInnerSVG).
		Element(children...)
}

func DatabaseSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseSearchInnerSVG).
		Element(children...)
}

func DatabaseSetting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseSettingInnerSVG).
		Element(children...)
}

func DatabaseSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseSuccessInnerSVG).
		Element(children...)
}

func DatabaseSync(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseSyncInnerSVG).
		Element(children...)
}

func DatabaseTime(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(databaseTimeInnerSVG).
		Element(children...)
}

func DeathStar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deathStarInnerSVG).
		Element(children...)
}

func Deer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deerInnerSVG).
		Element(children...)
}

func DegreeHat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(degreeHatInnerSVG).
		Element(children...)
}

func Delete(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteInnerSVG).
		Element(children...)
}

func DeleteFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteFiveInnerSVG).
		Element(children...)
}

func DeleteFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteFourInnerSVG).
		Element(children...)
}

func DeleteKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteKeyInnerSVG).
		Element(children...)
}

func DeleteMode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteModeInnerSVG).
		Element(children...)
}

func DeleteOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteOneInnerSVG).
		Element(children...)
}

func DeleteThemes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteThemesInnerSVG).
		Element(children...)
}

func DeleteThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteThreeInnerSVG).
		Element(children...)
}

func DeleteTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deleteTwoInnerSVG).
		Element(children...)
}

func Delivery(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deliveryInnerSVG).
		Element(children...)
}

func Descend(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(descendInnerSVG).
		Element(children...)
}

func DeskLamp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deskLampInnerSVG).
		Element(children...)
}

func DeskLampOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(deskLampOneInnerSVG).
		Element(children...)
}

func Devices(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(devicesInnerSVG).
		Element(children...)
}

func DiamondNecklace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondNecklaceInnerSVG).
		Element(children...)
}

func DiamondOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondOneInnerSVG).
		Element(children...)
}

func DiamondRing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondRingInnerSVG).
		Element(children...)
}

func DiamondThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondThreeInnerSVG).
		Element(children...)
}

func DiamondTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondTwoInnerSVG).
		Element(children...)
}

func Diamonds(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diamondsInnerSVG).
		Element(children...)
}

func DifferenceSet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(differenceSetInnerSVG).
		Element(children...)
}

func DigitalWatches(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(digitalWatchesInnerSVG).
		Element(children...)
}

func Direction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(directionInnerSVG).
		Element(children...)
}

func DirectionAdjustmentTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(directionAdjustmentTwoInnerSVG).
		Element(children...)
}

func DisabaledWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(disabaledWebInnerSVG).
		Element(children...)
}

func DisabledLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(disabledLaptopInnerSVG).
		Element(children...)
}

func DisappointedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(disappointedFaceInnerSVG).
		Element(children...)
}

func DiscoveryIndex(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(discoveryIndexInnerSVG).
		Element(children...)
}

func Disk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diskInnerSVG).
		Element(children...)
}

func DiskOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diskOneInnerSVG).
		Element(children...)
}

func DiskTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(diskTwoInnerSVG).
		Element(children...)
}

func DislikeTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dislikeTwoInnerSVG).
		Element(children...)
}

func Display(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(displayInnerSVG).
		Element(children...)
}

func DistraughtFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(distraughtFaceInnerSVG).
		Element(children...)
}

func DistributeHorizontalSpacing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(distributeHorizontalSpacingInnerSVG).
		Element(children...)
}

func DistributeHorizontally(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(distributeHorizontallyInnerSVG).
		Element(children...)
}

func DistributeVerticalSpacing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(distributeVerticalSpacingInnerSVG).
		Element(children...)
}

func DistributeVertically(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(distributeVerticallyInnerSVG).
		Element(children...)
}

func Diving(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(divingInnerSVG).
		Element(children...)
}

func DivingBottle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(divingBottleInnerSVG).
		Element(children...)
}

func DivingSuit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(divingSuitInnerSVG).
		Element(children...)
}

func Division(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(divisionInnerSVG).
		Element(children...)
}

func DizzyFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dizzyFaceInnerSVG).
		Element(children...)
}

func DocAdd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docAddInnerSVG).
		Element(children...)
}

func DocDetail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docDetailInnerSVG).
		Element(children...)
}

func DocFail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docFailInnerSVG).
		Element(children...)
}

func DocSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docSearchInnerSVG).
		Element(children...)
}

func DocSearchTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docSearchTwoInnerSVG).
		Element(children...)
}

func DocSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(docSuccessInnerSVG).
		Element(children...)
}

func DocumentFolder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(documentFolderInnerSVG).
		Element(children...)
}

func Dog(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dogInnerSVG).
		Element(children...)
}

func Dolphin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dolphinInnerSVG).
		Element(children...)
}

func DomeLight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(domeLightInnerSVG).
		Element(children...)
}

func DoorHandle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(doorHandleInnerSVG).
		Element(children...)
}

func DoubleBed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(doubleBedInnerSVG).
		Element(children...)
}

func Doughnut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(doughnutInnerSVG).
		Element(children...)
}

func DownC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downCInnerSVG).
		Element(children...)
}

func DownOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downOneInnerSVG).
		Element(children...)
}

func DownSquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downSquareInnerSVG).
		Element(children...)
}

func DownTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downTwoInnerSVG).
		Element(children...)
}

func DownloadFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downloadFourInnerSVG).
		Element(children...)
}

func DownloadLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downloadLaptopInnerSVG).
		Element(children...)
}

func DownloadThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downloadThreeInnerSVG).
		Element(children...)
}

func DownloadWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(downloadWebInnerSVG).
		Element(children...)
}

func DragonZodiac(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dragonZodiacInnerSVG).
		Element(children...)
}

func Dribble(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dribbleInnerSVG).
		Element(children...)
}

func Drink(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(drinkInnerSVG).
		Element(children...)
}

func Drone(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(droneInnerSVG).
		Element(children...)
}

func DroneOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(droneOneInnerSVG).
		Element(children...)
}

func DropShadowDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dropShadowDownInnerSVG).
		Element(children...)
}

func DropShadowLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dropShadowLeftInnerSVG).
		Element(children...)
}

func DropShadowRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dropShadowRightInnerSVG).
		Element(children...)
}

func DropShadowUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dropShadowUpInnerSVG).
		Element(children...)
}

func Dropbox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dropboxInnerSVG).
		Element(children...)
}

func Drumstick(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(drumstickInnerSVG).
		Element(children...)
}

func Duck(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(duckInnerSVG).
		Element(children...)
}

func Dvi(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(dviInnerSVG).
		Element(children...)
}

func Eagle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eagleInnerSVG).
		Element(children...)
}

func Easy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(easyInnerSVG).
		Element(children...)
}

func Edit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(editInnerSVG).
		Element(children...)
}

func EditMovie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(editMovieInnerSVG).
		Element(children...)
}

func EditName(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(editNameInnerSVG).
		Element(children...)
}

func EditTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(editTwoInnerSVG).
		Element(children...)
}

func Editing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(editingInnerSVG).
		Element(children...)
}

func Effects(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(effectsInnerSVG).
		Element(children...)
}

func Egg(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eggInnerSVG).
		Element(children...)
}

func EggOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eggOneInnerSVG).
		Element(children...)
}

func Eggplant(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eggplantInnerSVG).
		Element(children...)
}

func EightKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eightKeyInnerSVG).
		Element(children...)
}

func ElectricDrill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electricDrillInnerSVG).
		Element(children...)
}

func ElectricIron(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electricIronInnerSVG).
		Element(children...)
}

func ElectricWave(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electricWaveInnerSVG).
		Element(children...)
}

func Electrocardiogram(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electrocardiogramInnerSVG).
		Element(children...)
}

func ElectronicDoorLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electronicDoorLockInnerSVG).
		Element(children...)
}

func ElectronicLocksClose(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electronicLocksCloseInnerSVG).
		Element(children...)
}

func ElectronicLocksOpen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electronicLocksOpenInnerSVG).
		Element(children...)
}

func ElectronicPen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(electronicPenInnerSVG).
		Element(children...)
}

func Elevator(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(elevatorInnerSVG).
		Element(children...)
}

func EmailBlock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emailBlockInnerSVG).
		Element(children...)
}

func EmailDelect(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emailDelectInnerSVG).
		Element(children...)
}

func EmailLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emailLockInnerSVG).
		Element(children...)
}

func EmailSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emailSearchInnerSVG).
		Element(children...)
}

func EmailSecurity(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emailSecurityInnerSVG).
		Element(children...)
}

func EmotionHappy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emotionHappyInnerSVG).
		Element(children...)
}

func EmotionUnhappy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emotionUnhappyInnerSVG).
		Element(children...)
}

func Empty(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(emptyInnerSVG).
		Element(children...)
}

func Endocrine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(endocrineInnerSVG).
		Element(children...)
}

func EndpointDisplacement(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(endpointDisplacementInnerSVG).
		Element(children...)
}

func EnergySocket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(energySocketInnerSVG).
		Element(children...)
}

func EngineeringBrand(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(engineeringBrandInnerSVG).
		Element(children...)
}

func EngineeringVehicle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(engineeringVehicleInnerSVG).
		Element(children...)
}

func English(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(englishInnerSVG).
		Element(children...)
}

func EnglishMustache(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(englishMustacheInnerSVG).
		Element(children...)
}

func Enquire(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(enquireInnerSVG).
		Element(children...)
}

func EnterKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(enterKeyInnerSVG).
		Element(children...)
}

func EnterKeyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(enterKeyOneInnerSVG).
		Element(children...)
}

func EnterTheKeyboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(enterTheKeyboardInnerSVG).
		Element(children...)
}

func Entertainment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(entertainmentInnerSVG).
		Element(children...)
}

func EqualRatio(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(equalRatioInnerSVG).
		Element(children...)
}

func Equalizer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(equalizerInnerSVG).
		Element(children...)
}

func Erase(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eraseInnerSVG).
		Element(children...)
}

func Error(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(errorInnerSVG).
		Element(children...)
}

func Escalators(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(escalatorsInnerSVG).
		Element(children...)
}

func EthernetOff(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ethernetOffInnerSVG).
		Element(children...)
}

func EthernetOn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ethernetOnInnerSVG).
		Element(children...)
}

func EveryUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(everyUserInnerSVG).
		Element(children...)
}

func Excel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(excelInnerSVG).
		Element(children...)
}

func ExcelOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(excelOneInnerSVG).
		Element(children...)
}

func ExchangeFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exchangeFourInnerSVG).
		Element(children...)
}

func ExchangeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exchangeOneInnerSVG).
		Element(children...)
}

func ExchangeThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exchangeThreeInnerSVG).
		Element(children...)
}

func ExchangeTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exchangeTwoInnerSVG).
		Element(children...)
}

func ExclusiveGateway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(exclusiveGatewayInnerSVG).
		Element(children...)
}

func ExpandDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expandDownInnerSVG).
		Element(children...)
}

func ExpandLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expandLeftInnerSVG).
		Element(children...)
}

func ExpandRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expandRightInnerSVG).
		Element(children...)
}

func ExpandUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expandUpInnerSVG).
		Element(children...)
}

func Experiment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(experimentInnerSVG).
		Element(children...)
}

func ExperimentOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(experimentOneInnerSVG).
		Element(children...)
}

func ExpressDelivery(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expressDeliveryInnerSVG).
		Element(children...)
}

func ExpressionlessFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(expressionlessFaceInnerSVG).
		Element(children...)
}

func Extend(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(extendInnerSVG).
		Element(children...)
}

func Eyebrow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eyebrowInnerSVG).
		Element(children...)
}

func Eyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(eyesInnerSVG).
		Element(children...)
}

func FEightKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fEightKeyInnerSVG).
		Element(children...)
}

func FFiveKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fFiveKeyInnerSVG).
		Element(children...)
}

func FFourKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fFourKeyInnerSVG).
		Element(children...)
}

func FNKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fNKeyInnerSVG).
		Element(children...)
}

func FNineKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fNineKeyInnerSVG).
		Element(children...)
}

func FOneKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fOneKeyInnerSVG).
		Element(children...)
}

func FSevenKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fSevenKeyInnerSVG).
		Element(children...)
}

func FSixKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fSixKeyInnerSVG).
		Element(children...)
}

func FThreeKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fThreeKeyInnerSVG).
		Element(children...)
}

func FTwoKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fTwoKeyInnerSVG).
		Element(children...)
}

func FZeroKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fZeroKeyInnerSVG).
		Element(children...)
}

func FacePowder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(facePowderInnerSVG).
		Element(children...)
}

func FaceWithSmilingOpenEyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(faceWithSmilingOpenEyesInnerSVG).
		Element(children...)
}

func FaceWithoutMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(faceWithoutMouthInnerSVG).
		Element(children...)
}

func Facebook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(facebookInnerSVG).
		Element(children...)
}

func Facetime(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(facetimeInnerSVG).
		Element(children...)
}

func Faceu(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(faceuInnerSVG).
		Element(children...)
}

func FacialCleanser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(facialCleanserInnerSVG).
		Element(children...)
}

func FacialMask(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(facialMaskInnerSVG).
		Element(children...)
}

func FactoryBuilding(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(factoryBuildingInnerSVG).
		Element(children...)
}

func Family(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(familyInnerSVG).
		Element(children...)
}

func Feelgood(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(feelgoodInnerSVG).
		Element(children...)
}

func FeelgoodOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(feelgoodOneInnerSVG).
		Element(children...)
}

func Female(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(femaleInnerSVG).
		Element(children...)
}

func FerrisWheel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ferrisWheelInnerSVG).
		Element(children...)
}

func Figma(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(figmaInnerSVG).
		Element(children...)
}

func FigmaComponent(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(figmaComponentInnerSVG).
		Element(children...)
}

func FigmaMask(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(figmaMaskInnerSVG).
		Element(children...)
}

func FileAddition(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileAdditionInnerSVG).
		Element(children...)
}

func FileCabinet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileCabinetInnerSVG).
		Element(children...)
}

func FileCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileCodeInnerSVG).
		Element(children...)
}

func FileCollection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileCollectionInnerSVG).
		Element(children...)
}

func FileCollectionOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileCollectionOneInnerSVG).
		Element(children...)
}

func FileConversion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileConversionInnerSVG).
		Element(children...)
}

func FileDate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileDateInnerSVG).
		Element(children...)
}

func FileDateOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileDateOneInnerSVG).
		Element(children...)
}

func FileDisplay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileDisplayInnerSVG).
		Element(children...)
}

func FileDisplayOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileDisplayOneInnerSVG).
		Element(children...)
}

func FileEditing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileEditingInnerSVG).
		Element(children...)
}

func FileEditingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileEditingOneInnerSVG).
		Element(children...)
}

func FileExcel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileExcelInnerSVG).
		Element(children...)
}

func FileFailed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileFailedInnerSVG).
		Element(children...)
}

func FileFocus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileFocusInnerSVG).
		Element(children...)
}

func FileFocusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileFocusOneInnerSVG).
		Element(children...)
}

func FileGif(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileGifInnerSVG).
		Element(children...)
}

func FileHash(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileHashInnerSVG).
		Element(children...)
}

func FileHiding(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileHidingInnerSVG).
		Element(children...)
}

func FileJpg(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileJpgInnerSVG).
		Element(children...)
}

func FileLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileLockInnerSVG).
		Element(children...)
}

func FileLockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileLockOneInnerSVG).
		Element(children...)
}

func FileMusic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileMusicInnerSVG).
		Element(children...)
}

func FileMusicOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileMusicOneInnerSVG).
		Element(children...)
}

func FilePdf(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(filePdfInnerSVG).
		Element(children...)
}

func FileProtection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileProtectionInnerSVG).
		Element(children...)
}

func FileProtectionOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileProtectionOneInnerSVG).
		Element(children...)
}

func FileQuality(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileQualityInnerSVG).
		Element(children...)
}

func FileQualityOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileQualityOneInnerSVG).
		Element(children...)
}

func FileQuestion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileQuestionInnerSVG).
		Element(children...)
}

func FileRemoval(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileRemovalInnerSVG).
		Element(children...)
}

func FileSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSearchInnerSVG).
		Element(children...)
}

func FileSearchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSearchOneInnerSVG).
		Element(children...)
}

func FileSearchTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSearchTwoInnerSVG).
		Element(children...)
}

func FileSettings(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSettingsInnerSVG).
		Element(children...)
}

func FileSettingsOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSettingsOneInnerSVG).
		Element(children...)
}

func FileStaff(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileStaffInnerSVG).
		Element(children...)
}

func FileStaffOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileStaffOneInnerSVG).
		Element(children...)
}

func FileSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileSuccessInnerSVG).
		Element(children...)
}

func FileText(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileTextInnerSVG).
		Element(children...)
}

func FileTips(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileTipsInnerSVG).
		Element(children...)
}

func FileTxt(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileTxtInnerSVG).
		Element(children...)
}

func FileWithdrawal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileWithdrawalInnerSVG).
		Element(children...)
}

func FileWord(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fileWordInnerSVG).
		Element(children...)
}

func Fill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fillInnerSVG).
		Element(children...)
}

func Filter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(filterInnerSVG).
		Element(children...)
}

func Finance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(financeInnerSVG).
		Element(children...)
}

func Financing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(financingInnerSVG).
		Element(children...)
}

func FinancingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(financingOneInnerSVG).
		Element(children...)
}

func FinancingTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(financingTwoInnerSVG).
		Element(children...)
}

func Find(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(findInnerSVG).
		Element(children...)
}

func Fingernail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fingernailInnerSVG).
		Element(children...)
}

func Fire(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fireInnerSVG).
		Element(children...)
}

func FireExtinguisher(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fireExtinguisherInnerSVG).
		Element(children...)
}

func FireExtinguisherOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fireExtinguisherOneInnerSVG).
		Element(children...)
}

func Fireworks(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fireworksInnerSVG).
		Element(children...)
}

func FirstAidKit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(firstAidKitInnerSVG).
		Element(children...)
}

func Fish(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fishInnerSVG).
		Element(children...)
}

func FishOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fishOneInnerSVG).
		Element(children...)
}

func Fist(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fistInnerSVG).
		Element(children...)
}

func Five(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fiveInnerSVG).
		Element(children...)
}

func FiveFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fiveFiveInnerSVG).
		Element(children...)
}

func FiveKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fiveKeyInnerSVG).
		Element(children...)
}

func FiveStarBadge(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fiveStarBadgeInnerSVG).
		Element(children...)
}

func Flag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flagInnerSVG).
		Element(children...)
}

func FlashPayment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flashPaymentInnerSVG).
		Element(children...)
}

func Flashlamp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flashlampInnerSVG).
		Element(children...)
}

func Flashlight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flashlightInnerSVG).
		Element(children...)
}

func Flask(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flaskInnerSVG).
		Element(children...)
}

func FlightAirflow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flightAirflowInnerSVG).
		Element(children...)
}

func FlightSafety(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flightSafetyInnerSVG).
		Element(children...)
}

func FlipCamera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipCameraInnerSVG).
		Element(children...)
}

func FlipHorizontally(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipHorizontallyInnerSVG).
		Element(children...)
}

func FlipVertically(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(flipVerticallyInnerSVG).
		Element(children...)
}

func Float(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(floatInnerSVG).
		Element(children...)
}

func Fm(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fmInnerSVG).
		Element(children...)
}

func Focus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(focusInnerSVG).
		Element(children...)
}

func FocusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(focusOneInnerSVG).
		Element(children...)
}

func Folder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderInnerSVG).
		Element(children...)
}

func FolderBlock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderBlockInnerSVG).
		Element(children...)
}

func FolderBlockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderBlockOneInnerSVG).
		Element(children...)
}

func FolderClose(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderCloseInnerSVG).
		Element(children...)
}

func FolderCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderCodeInnerSVG).
		Element(children...)
}

func FolderConversion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderConversionInnerSVG).
		Element(children...)
}

func FolderDownload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderDownloadInnerSVG).
		Element(children...)
}

func FolderFailed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderFailedInnerSVG).
		Element(children...)
}

func FolderFocus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderFocusInnerSVG).
		Element(children...)
}

func FolderFocusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderFocusOneInnerSVG).
		Element(children...)
}

func FolderLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderLockInnerSVG).
		Element(children...)
}

func FolderLockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderLockOneInnerSVG).
		Element(children...)
}

func FolderMinus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderMinusInnerSVG).
		Element(children...)
}

func FolderMusic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderMusicInnerSVG).
		Element(children...)
}

func FolderMusicOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderMusicOneInnerSVG).
		Element(children...)
}

func FolderOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderOneInnerSVG).
		Element(children...)
}

func FolderOpen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderOpenInnerSVG).
		Element(children...)
}

func FolderPlus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderPlusInnerSVG).
		Element(children...)
}

func FolderProtection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderProtectionInnerSVG).
		Element(children...)
}

func FolderProtectionOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderProtectionOneInnerSVG).
		Element(children...)
}

func FolderQuality(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderQualityInnerSVG).
		Element(children...)
}

func FolderQualityOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderQualityOneInnerSVG).
		Element(children...)
}

func FolderSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderSearchInnerSVG).
		Element(children...)
}

func FolderSearchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderSearchOneInnerSVG).
		Element(children...)
}

func FolderSettings(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderSettingsInnerSVG).
		Element(children...)
}

func FolderSettingsOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderSettingsOneInnerSVG).
		Element(children...)
}

func FolderSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderSuccessInnerSVG).
		Element(children...)
}

func FolderUpload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderUploadInnerSVG).
		Element(children...)
}

func FolderWithdrawal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(folderWithdrawalInnerSVG).
		Element(children...)
}

func FontSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fontSearchInnerSVG).
		Element(children...)
}

func Forbid(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(forbidInnerSVG).
		Element(children...)
}

func Fork(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(forkInnerSVG).
		Element(children...)
}

func ForkSpoon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(forkSpoonInnerSVG).
		Element(children...)
}

func Form(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(formInnerSVG).
		Element(children...)
}

func Format(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(formatInnerSVG).
		Element(children...)
}

func FormatBrush(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(formatBrushInnerSVG).
		Element(children...)
}

func FoundationMakeup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(foundationMakeupInnerSVG).
		Element(children...)
}

func Four(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourInnerSVG).
		Element(children...)
}

func FourArrows(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourArrowsInnerSVG).
		Element(children...)
}

func FourFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourFourInnerSVG).
		Element(children...)
}

func FourKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourKeyInnerSVG).
		Element(children...)
}

func FourPointConnection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourPointConnectionInnerSVG).
		Element(children...)
}

func FourRoundPointConnection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fourRoundPointConnectionInnerSVG).
		Element(children...)
}

func Foursquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(foursquareInnerSVG).
		Element(children...)
}

func FrenchFries(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(frenchFriesInnerSVG).
		Element(children...)
}

func FriendsCircle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(friendsCircleInnerSVG).
		Element(children...)
}

func Frigate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(frigateInnerSVG).
		Element(children...)
}

func Frog(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(frogInnerSVG).
		Element(children...)
}

func FrowningFaceWhitOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(frowningFaceWhitOpenMouthInnerSVG).
		Element(children...)
}

func Fruiter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fruiterInnerSVG).
		Element(children...)
}

func FullDressLonguette(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fullDressLonguetteInnerSVG).
		Element(children...)
}

func FullScreenPlay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fullScreenPlayInnerSVG).
		Element(children...)
}

func FullSelection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(fullSelectionInnerSVG).
		Element(children...)
}

func Game(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameInnerSVG).
		Element(children...)
}

func GameConsole(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameConsoleInnerSVG).
		Element(children...)
}

func GameConsoleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameConsoleOneInnerSVG).
		Element(children...)
}

func GameEmoji(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameEmojiInnerSVG).
		Element(children...)
}

func GameHandle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameHandleInnerSVG).
		Element(children...)
}

func GamePs(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gamePsInnerSVG).
		Element(children...)
}

func GameThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameThreeInnerSVG).
		Element(children...)
}

func GameTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gameTwoInnerSVG).
		Element(children...)
}

func Gamepad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gamepadInnerSVG).
		Element(children...)
}

func Gas(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gasInnerSVG).
		Element(children...)
}

func Gate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gateInnerSVG).
		Element(children...)
}

func GateMachine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gateMachineInnerSVG).
		Element(children...)
}

func Gauze(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gauzeInnerSVG).
		Element(children...)
}

func Gavel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gavelInnerSVG).
		Element(children...)
}

func GeneralBranch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(generalBranchInnerSVG).
		Element(children...)
}

func Germs(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(germsInnerSVG).
		Element(children...)
}

func Ghost(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ghostInnerSVG).
		Element(children...)
}

func Gift(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(giftInnerSVG).
		Element(children...)
}

func GiftBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(giftBagInnerSVG).
		Element(children...)
}

func GiftBox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(giftBoxInnerSVG).
		Element(children...)
}

func Girl(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(girlInnerSVG).
		Element(children...)
}

func GirlOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(girlOneInnerSVG).
		Element(children...)
}

func GirlTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(girlTwoInnerSVG).
		Element(children...)
}

func Gitlab(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gitlabInnerSVG).
		Element(children...)
}

func Glasses(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(glassesInnerSVG).
		Element(children...)
}

func GlassesOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(glassesOneInnerSVG).
		Element(children...)
}

func GlassesThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(glassesThreeInnerSVG).
		Element(children...)
}

func Globe(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(globeInnerSVG).
		Element(children...)
}

func Glove(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gloveInnerSVG).
		Element(children...)
}

func Goblet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gobletInnerSVG).
		Element(children...)
}

func GobletCracking(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gobletCrackingInnerSVG).
		Element(children...)
}

func GobletFull(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gobletFullInnerSVG).
		Element(children...)
}

func GobletOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gobletOneInnerSVG).
		Element(children...)
}

func GoldMedal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goldMedalInnerSVG).
		Element(children...)
}

func GoldMedalTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goldMedalTwoInnerSVG).
		Element(children...)
}

func GolfCourse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(golfCourseInnerSVG).
		Element(children...)
}

func Gongfu(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gongfuInnerSVG).
		Element(children...)
}

func Good(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goodInnerSVG).
		Element(children...)
}

func GoodOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goodOneInnerSVG).
		Element(children...)
}

func GoodTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goodTwoInnerSVG).
		Element(children...)
}

func Google(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(googleInnerSVG).
		Element(children...)
}

func GoogleAds(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(googleAdsInnerSVG).
		Element(children...)
}

func Gopro(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(goproInnerSVG).
		Element(children...)
}

func Gps(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gpsInnerSVG).
		Element(children...)
}

func GraphicDesign(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(graphicDesignInnerSVG).
		Element(children...)
}

func GraphicDesignTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(graphicDesignTwoInnerSVG).
		Element(children...)
}

func GraphicStitchingFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(graphicStitchingFourInnerSVG).
		Element(children...)
}

func GraphicStitchingThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(graphicStitchingThreeInnerSVG).
		Element(children...)
}

func GreenHouse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(greenHouseInnerSVG).
		Element(children...)
}

func GreenNewEnergy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(greenNewEnergyInnerSVG).
		Element(children...)
}

func GrimacingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grimacingFaceInnerSVG).
		Element(children...)
}

func GrinningFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grinningFaceInnerSVG).
		Element(children...)
}

func GrinningFaceWithOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grinningFaceWithOpenMouthInnerSVG).
		Element(children...)
}

func GrinningFaceWithSquintingEyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grinningFaceWithSquintingEyesInnerSVG).
		Element(children...)
}

func GrinningFaceWithTightlyClosedEyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grinningFaceWithTightlyClosedEyesInnerSVG).
		Element(children...)
}

func GrinningFaceWithTightlyClosedEyesOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(grinningFaceWithTightlyClosedEyesOpenMouthInnerSVG).
		Element(children...)
}

func Group(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(groupInnerSVG).
		Element(children...)
}

func GuideBoard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(guideBoardInnerSVG).
		Element(children...)
}

func Gymnastics(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gymnasticsInnerSVG).
		Element(children...)
}

func GymnasticsOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(gymnasticsOneInnerSVG).
		Element(children...)
}

func HairClip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hairClipInnerSVG).
		Element(children...)
}

func HairDryer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hairDryerInnerSVG).
		Element(children...)
}

func HairDryerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hairDryerOneInnerSVG).
		Element(children...)
}

func Halo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(haloInnerSVG).
		Element(children...)
}

func Hamburger(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hamburgerInnerSVG).
		Element(children...)
}

func HamburgerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hamburgerOneInnerSVG).
		Element(children...)
}

func HammerAndAnvil(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hammerAndAnvilInnerSVG).
		Element(children...)
}

func HandCream(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handCreamInnerSVG).
		Element(children...)
}

func HandDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handDownInnerSVG).
		Element(children...)
}

func HandLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handLeftInnerSVG).
		Element(children...)
}

func HandPaintedPlate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handPaintedPlateInnerSVG).
		Element(children...)
}

func HandRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handRightInnerSVG).
		Element(children...)
}

func HandUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handUpInnerSVG).
		Element(children...)
}

func Handbag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handbagInnerSVG).
		Element(children...)
}

func Handheld(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handheldInnerSVG).
		Element(children...)
}

func HandleA(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleAInnerSVG).
		Element(children...)
}

func HandleB(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleBInnerSVG).
		Element(children...)
}

func HandleC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleCInnerSVG).
		Element(children...)
}

func HandleDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleDownInnerSVG).
		Element(children...)
}

func HandleLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleLeftInnerSVG).
		Element(children...)
}

func HandleRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleRightInnerSVG).
		Element(children...)
}

func HandleRound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleRoundInnerSVG).
		Element(children...)
}

func HandleSquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleSquareInnerSVG).
		Element(children...)
}

func HandleTriangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleTriangleInnerSVG).
		Element(children...)
}

func HandleUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleUpInnerSVG).
		Element(children...)
}

func HandleX(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleXInnerSVG).
		Element(children...)
}

func HandleY(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleYInnerSVG).
		Element(children...)
}

func HandleZ(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handleZInnerSVG).
		Element(children...)
}

func Hands(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handsInnerSVG).
		Element(children...)
}

func Handwashing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handwashingInnerSVG).
		Element(children...)
}

func HandwashingFluid(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(handwashingFluidInnerSVG).
		Element(children...)
}

func Hanger(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hangerInnerSVG).
		Element(children...)
}

func HangerTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hangerTwoInnerSVG).
		Element(children...)
}

func HardDisk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hardDiskInnerSVG).
		Element(children...)
}

func HardDiskOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hardDiskOneInnerSVG).
		Element(children...)
}

func Harm(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(harmInnerSVG).
		Element(children...)
}

func HashtagKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hashtagKeyInnerSVG).
		Element(children...)
}

func Hat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hatInnerSVG).
		Element(children...)
}

func Hdd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hddInnerSVG).
		Element(children...)
}

func HdmiCable(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hdmiCableInnerSVG).
		Element(children...)
}

func HdmiConnector(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hdmiConnectorInnerSVG).
		Element(children...)
}

func HeadphoneSound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headphoneSoundInnerSVG).
		Element(children...)
}

func Headset(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headsetInnerSVG).
		Element(children...)
}

func HeadsetOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headsetOneInnerSVG).
		Element(children...)
}

func HeadsetTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headsetTwoInnerSVG).
		Element(children...)
}

func Headwear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(headwearInnerSVG).
		Element(children...)
}

func Health(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(healthInnerSVG).
		Element(children...)
}

func HealthProducts(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(healthProductsInnerSVG).
		Element(children...)
}

func HealthyRecognition(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(healthyRecognitionInnerSVG).
		Element(children...)
}

func HeartBallon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(heartBallonInnerSVG).
		Element(children...)
}

func HeaterResistor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(heaterResistorInnerSVG).
		Element(children...)
}

func Helmet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(helmetInnerSVG).
		Element(children...)
}

func HelmetOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(helmetOneInnerSVG).
		Element(children...)
}

func Help(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(helpInnerSVG).
		Element(children...)
}

func Helpcenter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(helpcenterInnerSVG).
		Element(children...)
}

func HexagonOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hexagonOneInnerSVG).
		Element(children...)
}

func HexagonStrip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hexagonStripInnerSVG).
		Element(children...)
}

func Hi(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hiInnerSVG).
		Element(children...)
}

func HighHeeledShoes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(highHeeledShoesInnerSVG).
		Element(children...)
}

func HighLight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(highLightInnerSVG).
		Element(children...)
}

func HighSpeedRail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(highSpeedRailInnerSVG).
		Element(children...)
}

func Hippo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hippoInnerSVG).
		Element(children...)
}

func HistoryQuery(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(historyQueryInnerSVG).
		Element(children...)
}

func Hockey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hockeyInnerSVG).
		Element(children...)
}

func HoldInterface(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(holdInterfaceInnerSVG).
		Element(children...)
}

func HoldSeeds(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(holdSeedsInnerSVG).
		Element(children...)
}

func HolySword(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(holySwordInnerSVG).
		Element(children...)
}

func Home(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(homeInnerSVG).
		Element(children...)
}

func HomeTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(homeTwoInnerSVG).
		Element(children...)
}

func Homestay(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(homestayInnerSVG).
		Element(children...)
}

func Honey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(honeyInnerSVG).
		Element(children...)
}

func HoneyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(honeyOneInnerSVG).
		Element(children...)
}

func HorizontalTidyUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(horizontalTidyUpInnerSVG).
		Element(children...)
}

func HorizontallyCentered(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(horizontallyCenteredInnerSVG).
		Element(children...)
}

func Hospital(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalInnerSVG).
		Element(children...)
}

func HospitalFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalFourInnerSVG).
		Element(children...)
}

func HospitalThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalThreeInnerSVG).
		Element(children...)
}

func HospitalTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hospitalTwoInnerSVG).
		Element(children...)
}

func HotAirBalloon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotAirBalloonInnerSVG).
		Element(children...)
}

func HotPot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotPotInnerSVG).
		Element(children...)
}

func HotPotOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotPotOneInnerSVG).
		Element(children...)
}

func Hotel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotelInnerSVG).
		Element(children...)
}

func HotelDoNotClean(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotelDoNotCleanInnerSVG).
		Element(children...)
}

func HotelPleaseClean(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hotelPleaseCleanInnerSVG).
		Element(children...)
}

func HourglassFull(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hourglassFullInnerSVG).
		Element(children...)
}

func HourglassNull(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(hourglassNullInnerSVG).
		Element(children...)
}

func HtmlFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(htmlFiveInnerSVG).
		Element(children...)
}

func HuntingGear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(huntingGearInnerSVG).
		Element(children...)
}

func IMac(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(iMacInnerSVG).
		Element(children...)
}

func Icecream(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(icecreamInnerSVG).
		Element(children...)
}

func IcecreamFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(icecreamFiveInnerSVG).
		Element(children...)
}

func IcecreamFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(icecreamFourInnerSVG).
		Element(children...)
}

func IcecreamTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(icecreamTwoInnerSVG).
		Element(children...)
}

func IdCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(idCardInnerSVG).
		Element(children...)
}

func IdCardH(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(idCardHInnerSVG).
		Element(children...)
}

func IdCardV(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(idCardVInnerSVG).
		Element(children...)
}

func ImageFiles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(imageFilesInnerSVG).
		Element(children...)
}

func Imbalance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(imbalanceInnerSVG).
		Element(children...)
}

func InFlight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inFlightInnerSVG).
		Element(children...)
}

func Inbox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxInnerSVG).
		Element(children...)
}

func InboxDownloadR(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxDownloadRInnerSVG).
		Element(children...)
}

func InboxIn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxInInnerSVG).
		Element(children...)
}

func InboxOut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxOutInnerSVG).
		Element(children...)
}

func InboxR(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxRInnerSVG).
		Element(children...)
}

func InboxSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxSuccessInnerSVG).
		Element(children...)
}

func InboxSuccessR(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxSuccessRInnerSVG).
		Element(children...)
}

func InboxUploadR(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inboxUploadRInnerSVG).
		Element(children...)
}

func InclusiveGateway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inclusiveGatewayInnerSVG).
		Element(children...)
}

func Incoming(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(incomingInnerSVG).
		Element(children...)
}

func InductionLock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inductionLockInnerSVG).
		Element(children...)
}

func IndustrialScales(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(industrialScalesInnerSVG).
		Element(children...)
}

func Info(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(infoInnerSVG).
		Element(children...)
}

func Infusion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(infusionInnerSVG).
		Element(children...)
}

func Injection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(injectionInnerSVG).
		Element(children...)
}

func InnerShadowBottomLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowBottomLeftInnerSVG).
		Element(children...)
}

func InnerShadowBottomRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowBottomRightInnerSVG).
		Element(children...)
}

func InnerShadowDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowDownInnerSVG).
		Element(children...)
}

func InnerShadowLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowLeftInnerSVG).
		Element(children...)
}

func InnerShadowRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowRightInnerSVG).
		Element(children...)
}

func InnerShadowTopLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowTopLeftInnerSVG).
		Element(children...)
}

func InnerShadowTopRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowTopRightInnerSVG).
		Element(children...)
}

func InnerShadowUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(innerShadowUpInnerSVG).
		Element(children...)
}

func InsertCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(insertCardInnerSVG).
		Element(children...)
}

func Inspection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(inspectionInnerSVG).
		Element(children...)
}

func Instagram(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(instagramInnerSVG).
		Element(children...)
}

func InstagramOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(instagramOneInnerSVG).
		Element(children...)
}

func Install(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(installInnerSVG).
		Element(children...)
}

func Instruction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(instructionInnerSVG).
		Element(children...)
}

func Intercom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(intercomInnerSVG).
		Element(children...)
}

func IntermediateMode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(intermediateModeInnerSVG).
		Element(children...)
}

func InternalExpansion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(internalExpansionInnerSVG).
		Element(children...)
}

func InternalReduction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(internalReductionInnerSVG).
		Element(children...)
}

func Intersection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(intersectionInnerSVG).
		Element(children...)
}

func InvalidFiles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(invalidFilesInnerSVG).
		Element(children...)
}

func InvertCamera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(invertCameraInnerSVG).
		Element(children...)
}

func Ipad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ipadInnerSVG).
		Element(children...)
}

func IpadOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ipadOneInnerSVG).
		Element(children...)
}

func Iphone(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(iphoneInnerSVG).
		Element(children...)
}

func Ipo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ipoInnerSVG).
		Element(children...)
}

func Iron(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ironInnerSVG).
		Element(children...)
}

func IronDisable(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ironDisableInnerSVG).
		Element(children...)
}

func IronThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ironThreeInnerSVG).
		Element(children...)
}

func IronTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ironTwoInnerSVG).
		Element(children...)
}

func Iwatch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(iwatchInnerSVG).
		Element(children...)
}

func IwatchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(iwatchOneInnerSVG).
		Element(children...)
}

func IwatchTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(iwatchTwoInnerSVG).
		Element(children...)
}

func Jewelry(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(jewelryInnerSVG).
		Element(children...)
}

func Jinritoutiao(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(jinritoutiaoInnerSVG).
		Element(children...)
}

func Journey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(journeyInnerSVG).
		Element(children...)
}

func Joystick(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(joystickInnerSVG).
		Element(children...)
}

func Juice(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(juiceInnerSVG).
		Element(children...)
}

func Jump(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(jumpInnerSVG).
		Element(children...)
}

func Kettle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(kettleInnerSVG).
		Element(children...)
}

func KettleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(kettleOneInnerSVG).
		Element(children...)
}

func Key(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyInnerSVG).
		Element(children...)
}

func KeyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyOneInnerSVG).
		Element(children...)
}

func KeyTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyTwoInnerSVG).
		Element(children...)
}

func Keyboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyboardInnerSVG).
		Element(children...)
}

func Keyhole(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keyholeInnerSVG).
		Element(children...)
}

func Keyline(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(keylineInnerSVG).
		Element(children...)
}

func KitchenKnife(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(kitchenKnifeInnerSVG).
		Element(children...)
}

func KnifeFork(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(knifeForkInnerSVG).
		Element(children...)
}

func KoalaBear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(koalaBearInnerSVG).
		Element(children...)
}

func Kungfu(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(kungfuInnerSVG).
		Element(children...)
}

func Label(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(labelInnerSVG).
		Element(children...)
}

func Lamp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lampInnerSVG).
		Element(children...)
}

func LandSurveying(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(landSurveyingInnerSVG).
		Element(children...)
}

func Landing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(landingInnerSVG).
		Element(children...)
}

func Laptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(laptopInnerSVG).
		Element(children...)
}

func LaptopComputer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(laptopComputerInnerSVG).
		Element(children...)
}

func LaptopOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(laptopOneInnerSVG).
		Element(children...)
}

func LarkOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(larkOneInnerSVG).
		Element(children...)
}

func Layers(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layersInnerSVG).
		Element(children...)
}

func LayoutFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layoutFiveInnerSVG).
		Element(children...)
}

func LayoutFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layoutFourInnerSVG).
		Element(children...)
}

func LayoutOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layoutOneInnerSVG).
		Element(children...)
}

func LayoutThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layoutThreeInnerSVG).
		Element(children...)
}

func LayoutTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(layoutTwoInnerSVG).
		Element(children...)
}

func LeavesOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leavesOneInnerSVG).
		Element(children...)
}

func LeavesTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leavesTwoInnerSVG).
		Element(children...)
}

func LedDiode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ledDiodeInnerSVG).
		Element(children...)
}

func LeftBar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftBarInnerSVG).
		Element(children...)
}

func LeftC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftCInnerSVG).
		Element(children...)
}

func LeftExpand(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftExpandInnerSVG).
		Element(children...)
}

func LeftOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftOneInnerSVG).
		Element(children...)
}

func LeftSquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftSquareInnerSVG).
		Element(children...)
}

func LeftTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leftTwoInnerSVG).
		Element(children...)
}

func Lemon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lemonInnerSVG).
		Element(children...)
}

func LensAlignment(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lensAlignmentInnerSVG).
		Element(children...)
}

func Leo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(leoInnerSVG).
		Element(children...)
}

func Level(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(levelInnerSVG).
		Element(children...)
}

func LightHouse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lightHouseInnerSVG).
		Element(children...)
}

func LightMember(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lightMemberInnerSVG).
		Element(children...)
}

func Lightning(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lightningInnerSVG).
		Element(children...)
}

func Like(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(likeInnerSVG).
		Element(children...)
}

func Lincoln(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lincolnInnerSVG).
		Element(children...)
}

func LipGloss(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lipGlossInnerSVG).
		Element(children...)
}

func LipTattoo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lipTattooInnerSVG).
		Element(children...)
}

func Lipstick(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lipstickInnerSVG).
		Element(children...)
}

func LipstickOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lipstickOneInnerSVG).
		Element(children...)
}

func Liqueur(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(liqueurInnerSVG).
		Element(children...)
}

func ListAlphabet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listAlphabetInnerSVG).
		Element(children...)
}

func ListBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listBottomInnerSVG).
		Element(children...)
}

func ListCheckbox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listCheckboxInnerSVG).
		Element(children...)
}

func ListFail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listFailInnerSVG).
		Element(children...)
}

func ListMiddle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listMiddleInnerSVG).
		Element(children...)
}

func ListOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listOneInnerSVG).
		Element(children...)
}

func ListSuccess(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listSuccessInnerSVG).
		Element(children...)
}

func ListTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listTopInnerSVG).
		Element(children...)
}

func ListTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(listTwoInnerSVG).
		Element(children...)
}

func LoadingThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(loadingThreeInnerSVG).
		Element(children...)
}

func Local(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(localInnerSVG).
		Element(children...)
}

func LocalPin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(localPinInnerSVG).
		Element(children...)
}

func LocalTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(localTwoInnerSVG).
		Element(children...)
}

func Lock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockInnerSVG).
		Element(children...)
}

func LockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockOneInnerSVG).
		Element(children...)
}

func LockingComputer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockingComputerInnerSVG).
		Element(children...)
}

func LockingLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockingLaptopInnerSVG).
		Element(children...)
}

func LockingPicture(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockingPictureInnerSVG).
		Element(children...)
}

func LockingWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lockingWebInnerSVG).
		Element(children...)
}

func Log(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(logInnerSVG).
		Element(children...)
}

func Lotion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lotionInnerSVG).
		Element(children...)
}

func Lotus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(lotusInnerSVG).
		Element(children...)
}

func LoudlyCryingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(loudlyCryingFaceInnerSVG).
		Element(children...)
}

func LoudlyCryingFaceWhitOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(loudlyCryingFaceWhitOpenMouthInnerSVG).
		Element(children...)
}

func LoveAndHelp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(loveAndHelpInnerSVG).
		Element(children...)
}

func Luggage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(luggageInnerSVG).
		Element(children...)
}

func MacFinder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(macFinderInnerSVG).
		Element(children...)
}

func MacadamiaNut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(macadamiaNutInnerSVG).
		Element(children...)
}

func Magnet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(magnetInnerSVG).
		Element(children...)
}

func Mail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailInnerSVG).
		Element(children...)
}

func MailDownload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailDownloadInnerSVG).
		Element(children...)
}

func MailEdit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailEditInnerSVG).
		Element(children...)
}

func MailOpen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailOpenInnerSVG).
		Element(children...)
}

func MailReview(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailReviewInnerSVG).
		Element(children...)
}

func MailUnpacking(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mailUnpackingInnerSVG).
		Element(children...)
}

func MaillOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(maillOneInnerSVG).
		Element(children...)
}

func Makeups(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(makeupsInnerSVG).
		Element(children...)
}

func Male(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(maleInnerSVG).
		Element(children...)
}

func MallBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mallBagInnerSVG).
		Element(children...)
}

func ManualGear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(manualGearInnerSVG).
		Element(children...)
}

func ManyToMany(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(manyToManyInnerSVG).
		Element(children...)
}

func MapDistance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mapDistanceInnerSVG).
		Element(children...)
}

func MapDraw(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mapDrawInnerSVG).
		Element(children...)
}

func MapRoad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mapRoadInnerSVG).
		Element(children...)
}

func MapRoadTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mapRoadTwoInnerSVG).
		Element(children...)
}

func MapTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mapTwoInnerSVG).
		Element(children...)
}

func Margin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(marginInnerSVG).
		Element(children...)
}

func MarginOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(marginOneInnerSVG).
		Element(children...)
}

func Mark(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(markInnerSVG).
		Element(children...)
}

func MarketAnalysis(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(marketAnalysisInnerSVG).
		Element(children...)
}

func Mascara(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mascaraInnerSVG).
		Element(children...)
}

func Mask(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(maskInnerSVG).
		Element(children...)
}

func MaskOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(maskOneInnerSVG).
		Element(children...)
}

func MaslowPyramids(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(maslowPyramidsInnerSVG).
		Element(children...)
}

func MassageChair(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(massageChairInnerSVG).
		Element(children...)
}

func MassageChairOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(massageChairOneInnerSVG).
		Element(children...)
}

func MassageTable(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(massageTableInnerSVG).
		Element(children...)
}

func Master(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(masterInnerSVG).
		Element(children...)
}

func Material(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(materialInnerSVG).
		Element(children...)
}

func MaterialTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(materialTwoInnerSVG).
		Element(children...)
}

func Me(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(meInnerSVG).
		Element(children...)
}

func MeasuringCup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(measuringCupInnerSVG).
		Element(children...)
}

func MedalOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medalOneInnerSVG).
		Element(children...)
}

func MedicalBox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicalBoxInnerSVG).
		Element(children...)
}

func MedicalFiles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicalFilesInnerSVG).
		Element(children...)
}

func MedicalMark(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicalMarkInnerSVG).
		Element(children...)
}

func MedicationTime(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicationTimeInnerSVG).
		Element(children...)
}

func MedicineBottle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicineBottleInnerSVG).
		Element(children...)
}

func MedicineBottleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicineBottleOneInnerSVG).
		Element(children...)
}

func MedicineChest(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(medicineChestInnerSVG).
		Element(children...)
}

func MemoryCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(memoryCardInnerSVG).
		Element(children...)
}

func MemoryCardOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(memoryCardOneInnerSVG).
		Element(children...)
}

func MemoryOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(memoryOneInnerSVG).
		Element(children...)
}

func MenuFoldOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(menuFoldOneInnerSVG).
		Element(children...)
}

func MenuUnfoldOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(menuUnfoldOneInnerSVG).
		Element(children...)
}

func Message(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageInnerSVG).
		Element(children...)
}

func MessageEmoji(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageEmojiInnerSVG).
		Element(children...)
}

func MessageOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageOneInnerSVG).
		Element(children...)
}

func MessagePrivacy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messagePrivacyInnerSVG).
		Element(children...)
}

func MessageSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageSearchInnerSVG).
		Element(children...)
}

func MessageSecurity(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageSecurityInnerSVG).
		Element(children...)
}

func MessageSent(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messageSentInnerSVG).
		Element(children...)
}

func Messages(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messagesInnerSVG).
		Element(children...)
}

func MessagesOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(messagesOneInnerSVG).
		Element(children...)
}

func MicroSd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microSdInnerSVG).
		Element(children...)
}

func MicroSlrCamera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microSlrCameraInnerSVG).
		Element(children...)
}

func MicrophoneOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microphoneOneInnerSVG).
		Element(children...)
}

func Microscope(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microscopeInnerSVG).
		Element(children...)
}

func MicroscopeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microscopeOneInnerSVG).
		Element(children...)
}

func MicrowaveOven(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(microwaveOvenInnerSVG).
		Element(children...)
}

func Milk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(milkInnerSVG).
		Element(children...)
}

func MilkOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(milkOneInnerSVG).
		Element(children...)
}

func MindMapping(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mindMappingInnerSVG).
		Element(children...)
}

func MiniSdCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(miniSdCardInnerSVG).
		Element(children...)
}

func MinusTheBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(minusTheBottomInnerSVG).
		Element(children...)
}

func MinusTheTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(minusTheTopInnerSVG).
		Element(children...)
}

func Mirror(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mirrorInnerSVG).
		Element(children...)
}

func MirrorOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mirrorOneInnerSVG).
		Element(children...)
}

func MirrorTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mirrorTwoInnerSVG).
		Element(children...)
}

func Mitsubishi(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mitsubishiInnerSVG).
		Element(children...)
}

func Modify(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(modifyInnerSVG).
		Element(children...)
}

func ModifyTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(modifyTwoInnerSVG).
		Element(children...)
}

func Monitor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monitorInnerSVG).
		Element(children...)
}

func MonitorCamera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monitorCameraInnerSVG).
		Element(children...)
}

func MonitorOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monitorOneInnerSVG).
		Element(children...)
}

func Monkey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monkeyInnerSVG).
		Element(children...)
}

func MonumentOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monumentOneInnerSVG).
		Element(children...)
}

func MonumentTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(monumentTwoInnerSVG).
		Element(children...)
}

func Moon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moonInnerSVG).
		Element(children...)
}

func MoreApp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moreAppInnerSVG).
		Element(children...)
}

func MoreFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moreFourInnerSVG).
		Element(children...)
}

func MoreThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moreThreeInnerSVG).
		Element(children...)
}

func MoreTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moreTwoInnerSVG).
		Element(children...)
}

func Mountain(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mountainInnerSVG).
		Element(children...)
}

func Mounted(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mountedInnerSVG).
		Element(children...)
}

func Mouse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mouseInnerSVG).
		Element(children...)
}

func MouseOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(mouseOneInnerSVG).
		Element(children...)
}

func Move(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moveInnerSVG).
		Element(children...)
}

func MoveInOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moveInOneInnerSVG).
		Element(children...)
}

func MoveOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(moveOneInnerSVG).
		Element(children...)
}

func Movie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(movieInnerSVG).
		Element(children...)
}

func MovieBoard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(movieBoardInnerSVG).
		Element(children...)
}

func MultiCircular(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiCircularInnerSVG).
		Element(children...)
}

func MultiFunctionKnife(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiFunctionKnifeInnerSVG).
		Element(children...)
}

func MultiPictureCarousel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiPictureCarouselInnerSVG).
		Element(children...)
}

func MultiRectangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiRectangleInnerSVG).
		Element(children...)
}

func MultiTriangularTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multiTriangularTwoInnerSVG).
		Element(children...)
}

func Multicast(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(multicastInnerSVG).
		Element(children...)
}

func Muscle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(muscleInnerSVG).
		Element(children...)
}

func MuseumOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(museumOneInnerSVG).
		Element(children...)
}

func MuseumTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(museumTwoInnerSVG).
		Element(children...)
}

func Music(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(musicInnerSVG).
		Element(children...)
}

func MusicCd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(musicCdInnerSVG).
		Element(children...)
}

func MusicList(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(musicListInnerSVG).
		Element(children...)
}

func MusicOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(musicOneInnerSVG).
		Element(children...)
}

func Mute(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(muteInnerSVG).
		Element(children...)
}

func NailPolish(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nailPolishInnerSVG).
		Element(children...)
}

func NailPolishOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nailPolishOneInnerSVG).
		Element(children...)
}

func NaturalMode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(naturalModeInnerSVG).
		Element(children...)
}

func Navigation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(navigationInnerSVG).
		Element(children...)
}

func Necktie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(necktieInnerSVG).
		Element(children...)
}

func Needle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(needleInnerSVG).
		Element(children...)
}

func NestedArrows(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nestedArrowsInnerSVG).
		Element(children...)
}

func Nests(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nestsInnerSVG).
		Element(children...)
}

func NetworkDrive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(networkDriveInnerSVG).
		Element(children...)
}

func NetworkTree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(networkTreeInnerSVG).
		Element(children...)
}

func Neural(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(neuralInnerSVG).
		Element(children...)
}

func NeutralFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(neutralFaceInnerSVG).
		Element(children...)
}

func NewComputer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(newComputerInnerSVG).
		Element(children...)
}

func NewDianziqian(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(newDianziqianInnerSVG).
		Element(children...)
}

func NewPicture(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(newPictureInnerSVG).
		Element(children...)
}

func Newlybuild(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(newlybuildInnerSVG).
		Element(children...)
}

func NewspaperFolding(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(newspaperFoldingInnerSVG).
		Element(children...)
}

func Next(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nextInnerSVG).
		Element(children...)
}

func NineKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nineKeyInnerSVG).
		Element(children...)
}

func NinePointsConnected(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ninePointsConnectedInnerSVG).
		Element(children...)
}

func NintendoSwitch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nintendoSwitchInnerSVG).
		Element(children...)
}

func Nmr(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nmrInnerSVG).
		Element(children...)
}

func NoShooting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(noShootingInnerSVG).
		Element(children...)
}

func Noodles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(noodlesInnerSVG).
		Element(children...)
}

func Notebook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(notebookInnerSVG).
		Element(children...)
}

func NotebookAndPen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(notebookAndPenInnerSVG).
		Element(children...)
}

func NotebookOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(notebookOneInnerSVG).
		Element(children...)
}

func Notepad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(notepadInnerSVG).
		Element(children...)
}

func Notes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(notesInnerSVG).
		Element(children...)
}

func NuclearPlant(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nuclearPlantInnerSVG).
		Element(children...)
}

func NurseCap(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nurseCapInnerSVG).
		Element(children...)
}

func Nut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nutInnerSVG).
		Element(children...)
}

func Nutrition(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(nutritionInnerSVG).
		Element(children...)
}

func Octagon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(octagonInnerSVG).
		Element(children...)
}

func OilIndustry(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oilIndustryInnerSVG).
		Element(children...)
}

func One(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneInnerSVG).
		Element(children...)
}

func OneKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneKeyInnerSVG).
		Element(children...)
}

func OneOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneOneInnerSVG).
		Element(children...)
}

func OneThirdRotation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneThirdRotationInnerSVG).
		Element(children...)
}

func OneToMany(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneToManyInnerSVG).
		Element(children...)
}

func OneToOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oneToOneInnerSVG).
		Element(children...)
}

func Onesies(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(onesiesInnerSVG).
		Element(children...)
}

func OnlineMeeting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(onlineMeetingInnerSVG).
		Element(children...)
}

func OpenAnAccount(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(openAnAccountInnerSVG).
		Element(children...)
}

func OpenDoor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(openDoorInnerSVG).
		Element(children...)
}

func OpenOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(openOneInnerSVG).
		Element(children...)
}

func Optimize(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(optimizeInnerSVG).
		Element(children...)
}

func Optional(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(optionalInnerSVG).
		Element(children...)
}

func Orange(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(orangeInnerSVG).
		Element(children...)
}

func OrangeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(orangeOneInnerSVG).
		Element(children...)
}

func Order(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(orderInnerSVG).
		Element(children...)
}

func Orthopedic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(orthopedicInnerSVG).
		Element(children...)
}

func Oscillator(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(oscillatorInnerSVG).
		Element(children...)
}

func Other(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(otherInnerSVG).
		Element(children...)
}

func Outbound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(outboundInnerSVG).
		Element(children...)
}

func Outdoor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(outdoorInnerSVG).
		Element(children...)
}

func Outgoing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(outgoingInnerSVG).
		Element(children...)
}

func OvalOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ovalOneInnerSVG).
		Element(children...)
}

func Oven(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ovenInnerSVG).
		Element(children...)
}

func OverallReduction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(overallReductionInnerSVG).
		Element(children...)
}

func Owl(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(owlInnerSVG).
		Element(children...)
}

func Pacifier(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pacifierInnerSVG).
		Element(children...)
}

func Pad(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(padInnerSVG).
		Element(children...)
}

func PageTemplate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pageTemplateInnerSVG).
		Element(children...)
}

func Pagoda(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pagodaInnerSVG).
		Element(children...)
}

func Paint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paintInnerSVG).
		Element(children...)
}

func PaintedEggshell(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paintedEggshellInnerSVG).
		Element(children...)
}

func PaintedScreen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paintedScreenInnerSVG).
		Element(children...)
}

func Palace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(palaceInnerSVG).
		Element(children...)
}

func Palm(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(palmInnerSVG).
		Element(children...)
}

func Panda(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pandaInnerSVG).
		Element(children...)
}

func PanoramaHorizontal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(panoramaHorizontalInnerSVG).
		Element(children...)
}

func PaperMoney(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paperMoneyInnerSVG).
		Element(children...)
}

func PaperShip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paperShipInnerSVG).
		Element(children...)
}

func Parachute(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(parachuteInnerSVG).
		Element(children...)
}

func ParagraphAlphabet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paragraphAlphabetInnerSVG).
		Element(children...)
}

func ParagraphRectangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paragraphRectangleInnerSVG).
		Element(children...)
}

func ParagraphRound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paragraphRoundInnerSVG).
		Element(children...)
}

func ParagraphTriangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(paragraphTriangleInnerSVG).
		Element(children...)
}

func ParallelGateway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(parallelGatewayInnerSVG).
		Element(children...)
}

func Parallelogram(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(parallelogramInnerSVG).
		Element(children...)
}

func ParentingBook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(parentingBookInnerSVG).
		Element(children...)
}

func Parking(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(parkingInnerSVG).
		Element(children...)
}

func PartyBalloon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(partyBalloonInnerSVG).
		Element(children...)
}

func Passport(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(passportInnerSVG).
		Element(children...)
}

func PassportOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(passportOneInnerSVG).
		Element(children...)
}

func PauseOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pauseOneInnerSVG).
		Element(children...)
}

func PayCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(payCodeInnerSVG).
		Element(children...)
}

func PayCodeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(payCodeOneInnerSVG).
		Element(children...)
}

func Peach(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peachInnerSVG).
		Element(children...)
}

func Pear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pearInnerSVG).
		Element(children...)
}

func PearlOfTheOrient(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pearlOfTheOrientInnerSVG).
		Element(children...)
}

func Peas(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peasInnerSVG).
		Element(children...)
}

func Pencil(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pencilInnerSVG).
		Element(children...)
}

func Pennant(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pennantInnerSVG).
		Element(children...)
}

func PentagonOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pentagonOneInnerSVG).
		Element(children...)
}

func People(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleInnerSVG).
		Element(children...)
}

func PeopleBottom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleBottomInnerSVG).
		Element(children...)
}

func PeopleBottomCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleBottomCardInnerSVG).
		Element(children...)
}

func PeopleDelete(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleDeleteInnerSVG).
		Element(children...)
}

func PeopleDeleteOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleDeleteOneInnerSVG).
		Element(children...)
}

func PeopleDownload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleDownloadInnerSVG).
		Element(children...)
}

func PeopleLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleLeftInnerSVG).
		Element(children...)
}

func PeopleMinus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleMinusInnerSVG).
		Element(children...)
}

func PeopleMinusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleMinusOneInnerSVG).
		Element(children...)
}

func PeoplePlus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peoplePlusInnerSVG).
		Element(children...)
}

func PeoplePlusOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peoplePlusOneInnerSVG).
		Element(children...)
}

func PeopleRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleRightInnerSVG).
		Element(children...)
}

func PeopleSafe(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleSafeInnerSVG).
		Element(children...)
}

func PeopleSafeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleSafeOneInnerSVG).
		Element(children...)
}

func PeopleSearch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleSearchInnerSVG).
		Element(children...)
}

func PeopleSearchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleSearchOneInnerSVG).
		Element(children...)
}

func PeopleSpeak(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleSpeakInnerSVG).
		Element(children...)
}

func PeopleTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleTopInnerSVG).
		Element(children...)
}

func PeopleTopCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleTopCardInnerSVG).
		Element(children...)
}

func PeopleUnknown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleUnknownInnerSVG).
		Element(children...)
}

func PeopleUpload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peopleUploadInnerSVG).
		Element(children...)
}

func Peoples(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peoplesInnerSVG).
		Element(children...)
}

func PeoplesTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(peoplesTwoInnerSVG).
		Element(children...)
}

func Percentage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(percentageInnerSVG).
		Element(children...)
}

func Performance(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(performanceInnerSVG).
		Element(children...)
}

func Perfume(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(perfumeInnerSVG).
		Element(children...)
}

func PerfumerBottle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(perfumerBottleInnerSVG).
		Element(children...)
}

func Permissions(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(permissionsInnerSVG).
		Element(children...)
}

func PersonalCollection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(personalCollectionInnerSVG).
		Element(children...)
}

func PersonalPrivacy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(personalPrivacyInnerSVG).
		Element(children...)
}

func Pesticide(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pesticideInnerSVG).
		Element(children...)
}

func Petrol(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(petrolInnerSVG).
		Element(children...)
}

func Phone(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneInnerSVG).
		Element(children...)
}

func PhoneBooth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneBoothInnerSVG).
		Element(children...)
}

func PhoneCall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneCallInnerSVG).
		Element(children...)
}

func PhoneIncoming(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneIncomingInnerSVG).
		Element(children...)
}

func PhoneIncomingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneIncomingOneInnerSVG).
		Element(children...)
}

func PhoneMissed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneMissedInnerSVG).
		Element(children...)
}

func PhoneOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneOneInnerSVG).
		Element(children...)
}

func PhoneOutgoing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneOutgoingInnerSVG).
		Element(children...)
}

func PhoneOutgoingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneOutgoingOneInnerSVG).
		Element(children...)
}

func PhoneTelephone(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneTelephoneInnerSVG).
		Element(children...)
}

func PhoneTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneTwoInnerSVG).
		Element(children...)
}

func PhoneVideoCall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phoneVideoCallInnerSVG).
		Element(children...)
}

func Phonograph(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(phonographInnerSVG).
		Element(children...)
}

func Photograph(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(photographInnerSVG).
		Element(children...)
}

func Piano(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pianoInnerSVG).
		Element(children...)
}

func Pic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(picInnerSVG).
		Element(children...)
}

func PicOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(picOneInnerSVG).
		Element(children...)
}

func Picture(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pictureInnerSVG).
		Element(children...)
}

func PictureAlbum(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pictureAlbumInnerSVG).
		Element(children...)
}

func PictureOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pictureOneInnerSVG).
		Element(children...)
}

func Pie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieInnerSVG).
		Element(children...)
}

func PieFive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieFiveInnerSVG).
		Element(children...)
}

func PieFour(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieFourInnerSVG).
		Element(children...)
}

func PieOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieOneInnerSVG).
		Element(children...)
}

func PieSeven(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieSevenInnerSVG).
		Element(children...)
}

func PieSix(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieSixInnerSVG).
		Element(children...)
}

func PieThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieThreeInnerSVG).
		Element(children...)
}

func PieTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pieTwoInnerSVG).
		Element(children...)
}

func Pig(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pigInnerSVG).
		Element(children...)
}

func Pigeon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pigeonInnerSVG).
		Element(children...)
}

func Pill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pillInnerSVG).
		Element(children...)
}

func Pills(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pillsInnerSVG).
		Element(children...)
}

func Pin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pinInnerSVG).
		Element(children...)
}

func Pinwheel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pinwheelInnerSVG).
		Element(children...)
}

func PivotTable(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pivotTableInnerSVG).
		Element(children...)
}

func Plan(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(planInnerSVG).
		Element(children...)
}

func Planet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(planetInnerSVG).
		Element(children...)
}

func Platte(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(platteInnerSVG).
		Element(children...)
}

func Play(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playInnerSVG).
		Element(children...)
}

func PlayBasketball(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playBasketballInnerSVG).
		Element(children...)
}

func PlayOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playOneInnerSVG).
		Element(children...)
}

func PlayTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playTwoInnerSVG).
		Element(children...)
}

func PlayVolleyball(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playVolleyballInnerSVG).
		Element(children...)
}

func PlayWrong(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playWrongInnerSVG).
		Element(children...)
}

func PlaybackProgress(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(playbackProgressInnerSVG).
		Element(children...)
}

func Plug(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(plugInnerSVG).
		Element(children...)
}

func PlugOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(plugOneInnerSVG).
		Element(children...)
}

func PlusCross(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(plusCrossInnerSVG).
		Element(children...)
}

func Point(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pointInnerSVG).
		Element(children...)
}

func PointOut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pointOutInnerSVG).
		Element(children...)
}

func PokeballOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pokeballOneInnerSVG).
		Element(children...)
}

func Poker(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pokerInnerSVG).
		Element(children...)
}

func Popcorn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(popcornInnerSVG).
		Element(children...)
}

func PopcornOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(popcornOneInnerSVG).
		Element(children...)
}

func Pot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(potInnerSVG).
		Element(children...)
}

func Potentiometer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(potentiometerInnerSVG).
		Element(children...)
}

func PoutingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(poutingFaceInnerSVG).
		Element(children...)
}

func Powder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(powderInnerSVG).
		Element(children...)
}

func PowerSupply(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(powerSupplyInnerSVG).
		Element(children...)
}

func PowerSupplyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(powerSupplyOneInnerSVG).
		Element(children...)
}

func Powerpoint(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(powerpointInnerSVG).
		Element(children...)
}

func Ppt(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pptInnerSVG).
		Element(children...)
}

func Preschool(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(preschoolInnerSVG).
		Element(children...)
}

func Prescription(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(prescriptionInnerSVG).
		Element(children...)
}

func Press(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pressInnerSVG).
		Element(children...)
}

func PreviewOpen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(previewOpenInnerSVG).
		Element(children...)
}

func Printer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(printerInnerSVG).
		Element(children...)
}

func PrinterTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(printerTwoInnerSVG).
		Element(children...)
}

func Prison(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(prisonInnerSVG).
		Element(children...)
}

func Projector(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(projectorInnerSVG).
		Element(children...)
}

func ProjectorOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(projectorOneInnerSVG).
		Element(children...)
}

func ProjectorThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(projectorThreeInnerSVG).
		Element(children...)
}

func ProjectorTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(projectorTwoInnerSVG).
		Element(children...)
}

func ProportionalScaling(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(proportionalScalingInnerSVG).
		Element(children...)
}

func Protect(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(protectInnerSVG).
		Element(children...)
}

func Protection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(protectionInnerSVG).
		Element(children...)
}

func PublicToilet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(publicToiletInnerSVG).
		Element(children...)
}

func PullDoor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pullDoorInnerSVG).
		Element(children...)
}

func PullRequests(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pullRequestsInnerSVG).
		Element(children...)
}

func Pumpkin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pumpkinInnerSVG).
		Element(children...)
}

func PureNatural(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pureNaturalInnerSVG).
		Element(children...)
}

func PushDoor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pushDoorInnerSVG).
		Element(children...)
}

func Pushpin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pushpinInnerSVG).
		Element(children...)
}

func Puzzle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(puzzleInnerSVG).
		Element(children...)
}

func PyramidOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(pyramidOneInnerSVG).
		Element(children...)
}

func QingniaoClue(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(qingniaoClueInnerSVG).
		Element(children...)
}

func Quadrilateral(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(quadrilateralInnerSVG).
		Element(children...)
}

func Rabbit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rabbitInnerSVG).
		Element(children...)
}

func RadarChart(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radarChartInnerSVG).
		Element(children...)
}

func RadarTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radarTwoInnerSVG).
		Element(children...)
}

func Radiation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radiationInnerSVG).
		Element(children...)
}

func Radio(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radioInnerSVG).
		Element(children...)
}

func RadioNanny(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radioNannyInnerSVG).
		Element(children...)
}

func RadioOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radioOneInnerSVG).
		Element(children...)
}

func RadioTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radioTwoInnerSVG).
		Element(children...)
}

func Radish(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radishInnerSVG).
		Element(children...)
}

func RadishOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(radishOneInnerSVG).
		Element(children...)
}

func Railway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(railwayInnerSVG).
		Element(children...)
}

func RankingList(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rankingListInnerSVG).
		Element(children...)
}

func Rattle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rattleInnerSVG).
		Element(children...)
}

func RattleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rattleOneInnerSVG).
		Element(children...)
}

func Razor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(razorInnerSVG).
		Element(children...)
}

func ReadBook(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(readBookInnerSVG).
		Element(children...)
}

func Receive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(receiveInnerSVG).
		Element(children...)
}

func Receiver(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(receiverInnerSVG).
		Element(children...)
}

func RecentViewsSort(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(recentViewsSortInnerSVG).
		Element(children...)
}

func Record(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(recordInnerSVG).
		Element(children...)
}

func RecordDisc(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(recordDiscInnerSVG).
		Element(children...)
}

func RecordPlayer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(recordPlayerInnerSVG).
		Element(children...)
}

func Rectangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangleInnerSVG).
		Element(children...)
}

func RectangleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangleOneInnerSVG).
		Element(children...)
}

func RectangleSmall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangleSmallInnerSVG).
		Element(children...)
}

func RectangleTear(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangleTearInnerSVG).
		Element(children...)
}

func RectangleX(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangleXInnerSVG).
		Element(children...)
}

func RectangularCircularConnection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangularCircularConnectionInnerSVG).
		Element(children...)
}

func RectangularCircularSeparation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rectangularCircularSeparationInnerSVG).
		Element(children...)
}

func RedCross(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(redCrossInnerSVG).
		Element(children...)
}

func RedEnvelope(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(redEnvelopeInnerSVG).
		Element(children...)
}

func RedEnvelopes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(redEnvelopesInnerSVG).
		Element(children...)
}

func Reduce(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reduceInnerSVG).
		Element(children...)
}

func ReduceOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reduceOneInnerSVG).
		Element(children...)
}

func ReduceTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reduceTwoInnerSVG).
		Element(children...)
}

func ReduceUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reduceUserInnerSVG).
		Element(children...)
}

func Reel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reelInnerSVG).
		Element(children...)
}

func Refraction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(refractionInnerSVG).
		Element(children...)
}

func RefreshOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(refreshOneInnerSVG).
		Element(children...)
}

func Refrigerator(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(refrigeratorInnerSVG).
		Element(children...)
}

func RelationalGraph(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(relationalGraphInnerSVG).
		Element(children...)
}

func RelievedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(relievedFaceInnerSVG).
		Element(children...)
}

func Reload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reloadInnerSVG).
		Element(children...)
}

func Remind(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(remindInnerSVG).
		Element(children...)
}

func RemindDisable(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(remindDisableInnerSVG).
		Element(children...)
}

func RemoteControl(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(remoteControlInnerSVG).
		Element(children...)
}

func RemoteControlOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(remoteControlOneInnerSVG).
		Element(children...)
}

func Renault(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(renaultInnerSVG).
		Element(children...)
}

func Repair(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(repairInnerSVG).
		Element(children...)
}

func ReplayMusic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(replayMusicInnerSVG).
		Element(children...)
}

func Report(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reportInnerSVG).
		Element(children...)
}

func Repositioning(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(repositioningInnerSVG).
		Element(children...)
}

func Resistor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(resistorInnerSVG).
		Element(children...)
}

func Resting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(restingInnerSVG).
		Element(children...)
}

func RetroBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(retroBagInnerSVG).
		Element(children...)
}

func ReverseLens(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reverseLensInnerSVG).
		Element(children...)
}

func ReverseLensOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reverseLensOneInnerSVG).
		Element(children...)
}

func ReverseOperationIn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reverseOperationInInnerSVG).
		Element(children...)
}

func ReverseOperationOut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(reverseOperationOutInnerSVG).
		Element(children...)
}

func Rice(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(riceInnerSVG).
		Element(children...)
}

func Riding(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ridingInnerSVG).
		Element(children...)
}

func RightAngle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightAngleInnerSVG).
		Element(children...)
}

func RightBar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightBarInnerSVG).
		Element(children...)
}

func RightC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightCInnerSVG).
		Element(children...)
}

func RightExpand(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightExpandInnerSVG).
		Element(children...)
}

func RightOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightOneInnerSVG).
		Element(children...)
}

func RightRun(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightRunInnerSVG).
		Element(children...)
}

func RightSquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightSquareInnerSVG).
		Element(children...)
}

func RightTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightTwoInnerSVG).
		Element(children...)
}

func RightUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rightUserInnerSVG).
		Element(children...)
}

func Ring(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ringInnerSVG).
		Element(children...)
}

func RingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ringOneInnerSVG).
		Element(children...)
}

func Rings(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ringsInnerSVG).
		Element(children...)
}

func RoadCone(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roadConeInnerSVG).
		Element(children...)
}

func RoadSign(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roadSignInnerSVG).
		Element(children...)
}

func RoadSignBoth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roadSignBothInnerSVG).
		Element(children...)
}

func Robot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(robotInnerSVG).
		Element(children...)
}

func RobotOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(robotOneInnerSVG).
		Element(children...)
}

func RobotTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(robotTwoInnerSVG).
		Element(children...)
}

func RockGesture(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rockGestureInnerSVG).
		Element(children...)
}

func Rocket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rocketInnerSVG).
		Element(children...)
}

func RocketOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rocketOneInnerSVG).
		Element(children...)
}

func RockingHorse(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rockingHorseInnerSVG).
		Element(children...)
}

func Rollerskates(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rollerskatesInnerSVG).
		Element(children...)
}

func Romper(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(romperInnerSVG).
		Element(children...)
}

func RopeSkipping(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ropeSkippingInnerSVG).
		Element(children...)
}

func Rotate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rotateInnerSVG).
		Element(children...)
}

func RotateOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rotateOneInnerSVG).
		Element(children...)
}

func RotationOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rotationOneInnerSVG).
		Element(children...)
}

func Round(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roundInnerSVG).
		Element(children...)
}

func RoundCaliper(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roundCaliperInnerSVG).
		Element(children...)
}

func RoundMask(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roundMaskInnerSVG).
		Element(children...)
}

func RoundSocket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roundSocketInnerSVG).
		Element(children...)
}

func RoundTrip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(roundTripInnerSVG).
		Element(children...)
}

func Router(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(routerInnerSVG).
		Element(children...)
}

func RouterOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(routerOneInnerSVG).
		Element(children...)
}

func Rowing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rowingInnerSVG).
		Element(children...)
}

func RsMale(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rsMaleInnerSVG).
		Element(children...)
}

func Rss(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rssInnerSVG).
		Element(children...)
}

func Rugby(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rugbyInnerSVG).
		Element(children...)
}

func RulerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(rulerOneInnerSVG).
		Element(children...)
}

func RunLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(runLeftInnerSVG).
		Element(children...)
}

func STurnDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sTurnDownInnerSVG).
		Element(children...)
}

func STurnLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sTurnLeftInnerSVG).
		Element(children...)
}

func STurnRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sTurnRightInnerSVG).
		Element(children...)
}

func STurnUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sTurnUpInnerSVG).
		Element(children...)
}

func SafeRetrieval(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(safeRetrievalInnerSVG).
		Element(children...)
}

func Sailboat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sailboatInnerSVG).
		Element(children...)
}

func SailboatOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sailboatOneInnerSVG).
		Element(children...)
}

func Sailing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sailingInnerSVG).
		Element(children...)
}

func SalesReport(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(salesReportInnerSVG).
		Element(children...)
}

func Sandwich(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sandwichInnerSVG).
		Element(children...)
}

func SandwichOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sandwichOneInnerSVG).
		Element(children...)
}

func Sapling(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(saplingInnerSVG).
		Element(children...)
}

func Save(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(saveInnerSVG).
		Element(children...)
}

func SaveOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(saveOneInnerSVG).
		Element(children...)
}

func ScaleOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scaleOneInnerSVG).
		Element(children...)
}

func Scallion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scallionInnerSVG).
		Element(children...)
}

func ScanSetting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scanSettingInnerSVG).
		Element(children...)
}

func Schedule(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scheduleInnerSVG).
		Element(children...)
}

func School(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(schoolInnerSVG).
		Element(children...)
}

func Scissors(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scissorsInnerSVG).
		Element(children...)
}

func Scoreboard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(scoreboardInnerSVG).
		Element(children...)
}

func ScreenRotation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(screenRotationInnerSVG).
		Element(children...)
}

func Screenshot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(screenshotInnerSVG).
		Element(children...)
}

func ScreenshotOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(screenshotOneInnerSVG).
		Element(children...)
}

func ScreenshotTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(screenshotTwoInnerSVG).
		Element(children...)
}

func Screwdriver(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(screwdriverInnerSVG).
		Element(children...)
}

func Sd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sdInnerSVG).
		Element(children...)
}

func SdCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sdCardInnerSVG).
		Element(children...)
}

func Seal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sealInnerSVG).
		Element(children...)
}

func Search(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(searchInnerSVG).
		Element(children...)
}

func Seat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(seatInnerSVG).
		Element(children...)
}

func SecurityStall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(securityStallInnerSVG).
		Element(children...)
}

func Seedling(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(seedlingInnerSVG).
		Element(children...)
}

func Selected(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(selectedInnerSVG).
		Element(children...)
}

func SelectedFocus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(selectedFocusInnerSVG).
		Element(children...)
}

func Selfie(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(selfieInnerSVG).
		Element(children...)
}

func SendBackward(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sendBackwardInnerSVG).
		Element(children...)
}

func SendToBack(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sendToBackInnerSVG).
		Element(children...)
}

func Seo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(seoInnerSVG).
		Element(children...)
}

func SeoFolder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(seoFolderInnerSVG).
		Element(children...)
}

func Server(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(serverInnerSVG).
		Element(children...)
}

func SetOff(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(setOffInnerSVG).
		Element(children...)
}

func Setting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingInnerSVG).
		Element(children...)
}

func SettingComputer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingComputerInnerSVG).
		Element(children...)
}

func SettingLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingLaptopInnerSVG).
		Element(children...)
}

func SettingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingOneInnerSVG).
		Element(children...)
}

func SettingThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingThreeInnerSVG).
		Element(children...)
}

func SettingTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingTwoInnerSVG).
		Element(children...)
}

func SettingWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(settingWebInnerSVG).
		Element(children...)
}

func SevenKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sevenKeyInnerSVG).
		Element(children...)
}

func Shade(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shadeInnerSVG).
		Element(children...)
}

func Shake(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shakeInnerSVG).
		Element(children...)
}

func ShareOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shareOneInnerSVG).
		Element(children...)
}

func ShareTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shareTwoInnerSVG).
		Element(children...)
}

func Shaver(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shaverInnerSVG).
		Element(children...)
}

func ShaverOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shaverOneInnerSVG).
		Element(children...)
}

func Shaving(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shavingInnerSVG).
		Element(children...)
}

func Shield(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shieldInnerSVG).
		Element(children...)
}

func ShieldAdd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shieldAddInnerSVG).
		Element(children...)
}

func Ship(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shipInnerSVG).
		Element(children...)
}

func Shop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shopInnerSVG).
		Element(children...)
}

func Shopping(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingInnerSVG).
		Element(children...)
}

func ShoppingBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingBagInnerSVG).
		Element(children...)
}

func ShoppingBagOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingBagOneInnerSVG).
		Element(children...)
}

func ShoppingCart(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingCartInnerSVG).
		Element(children...)
}

func ShoppingCartAdd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingCartAddInnerSVG).
		Element(children...)
}

func ShoppingCartDel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingCartDelInnerSVG).
		Element(children...)
}

func ShoppingCartTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingCartTwoInnerSVG).
		Element(children...)
}

func ShoppingMall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoppingMallInnerSVG).
		Element(children...)
}

func ShortSkirt(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shortSkirtInnerSVG).
		Element(children...)
}

func Shorts(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shortsInnerSVG).
		Element(children...)
}

func ShoulderBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shoulderBagInnerSVG).
		Element(children...)
}

func Shovel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shovelInnerSVG).
		Element(children...)
}

func ShovelOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shovelOneInnerSVG).
		Element(children...)
}

func ShowerHead(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(showerHeadInnerSVG).
		Element(children...)
}

func Shrimp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shrimpInnerSVG).
		Element(children...)
}

func ShutterPriority(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(shutterPriorityInnerSVG).
		Element(children...)
}

func Sickbed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sickbedInnerSVG).
		Element(children...)
}

func SignalStrength(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(signalStrengthInnerSVG).
		Element(children...)
}

func SignalTower(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(signalTowerInnerSVG).
		Element(children...)
}

func Sim(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(simInnerSVG).
		Element(children...)
}

func SimCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(simCardInnerSVG).
		Element(children...)
}

func SingleBed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(singleBedInnerSVG).
		Element(children...)
}

func SippyCup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sippyCupInnerSVG).
		Element(children...)
}

func Six(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sixInnerSVG).
		Element(children...)
}

func SixCircularConnection(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sixCircularConnectionInnerSVG).
		Element(children...)
}

func SixKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sixKeyInnerSVG).
		Element(children...)
}

func SixPoints(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sixPointsInnerSVG).
		Element(children...)
}

func Skate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(skateInnerSVG).
		Element(children...)
}

func Skates(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(skatesInnerSVG).
		Element(children...)
}

func Skating(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(skatingInnerSVG).
		Element(children...)
}

func Sketch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sketchInnerSVG).
		Element(children...)
}

func SkiingNordic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(skiingNordicInnerSVG).
		Element(children...)
}

func Skull(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(skullInnerSVG).
		Element(children...)
}

func Slave(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slaveInnerSVG).
		Element(children...)
}

func Sleep(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sleepInnerSVG).
		Element(children...)
}

func SleepTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sleepTwoInnerSVG).
		Element(children...)
}

func Slide(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slideInnerSVG).
		Element(children...)
}

func SlideTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slideTwoInnerSVG).
		Element(children...)
}

func SlidingHorizontal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slidingHorizontalInnerSVG).
		Element(children...)
}

func SlidingVertical(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slidingVerticalInnerSVG).
		Element(children...)
}

func SlightlyFrowningFaceWhitOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slightlyFrowningFaceWhitOpenMouthInnerSVG).
		Element(children...)
}

func SlightlySmilingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slightlySmilingFaceInnerSVG).
		Element(children...)
}

func Slippers(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slippersInnerSVG).
		Element(children...)
}

func SlippersOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slippersOneInnerSVG).
		Element(children...)
}

func SlyFaceWhitSmile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(slyFaceWhitSmileInnerSVG).
		Element(children...)
}

func SmilingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(smilingFaceInnerSVG).
		Element(children...)
}

func SmilingFaceWithSquintingEyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(smilingFaceWithSquintingEyesInnerSVG).
		Element(children...)
}

func Snacks(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(snacksInnerSVG).
		Element(children...)
}

func SnakeZodiac(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(snakeZodiacInnerSVG).
		Element(children...)
}

func Snowman(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(snowmanInnerSVG).
		Element(children...)
}

func SoapBubble(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soapBubbleInnerSVG).
		Element(children...)
}

func Soccer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soccerInnerSVG).
		Element(children...)
}

func SoccerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soccerOneInnerSVG).
		Element(children...)
}

func Sofa(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sofaInnerSVG).
		Element(children...)
}

func SofaTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sofaTwoInnerSVG).
		Element(children...)
}

func SolarEnergyOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(solarEnergyOneInnerSVG).
		Element(children...)
}

func SolidStateDisk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(solidStateDiskInnerSVG).
		Element(children...)
}

func SorcererHat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sorcererHatInnerSVG).
		Element(children...)
}

func Sort(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sortInnerSVG).
		Element(children...)
}

func Sound(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soundInnerSVG).
		Element(children...)
}

func SoundOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soundOneInnerSVG).
		Element(children...)
}

func SourceCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sourceCodeInnerSVG).
		Element(children...)
}

func SoybeanMilkMaker(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(soybeanMilkMakerInnerSVG).
		Element(children...)
}

func SpaCandle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spaCandleInnerSVG).
		Element(children...)
}

func Spanner(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spannerInnerSVG).
		Element(children...)
}

func Speaker(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(speakerInnerSVG).
		Element(children...)
}

func SpeakerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(speakerOneInnerSVG).
		Element(children...)
}

func Speed(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(speedInnerSVG).
		Element(children...)
}

func SpeedOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(speedOneInnerSVG).
		Element(children...)
}

func Sperm(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spermInnerSVG).
		Element(children...)
}

func Spikedshoes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spikedshoesInnerSVG).
		Element(children...)
}

func SpinningTop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spinningTopInnerSVG).
		Element(children...)
}

func Split(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(splitInnerSVG).
		Element(children...)
}

func SplitBranch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(splitBranchInnerSVG).
		Element(children...)
}

func SplitTurnDownLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(splitTurnDownLeftInnerSVG).
		Element(children...)
}

func SplitTurnDownRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(splitTurnDownRightInnerSVG).
		Element(children...)
}

func Spoon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(spoonInnerSVG).
		Element(children...)
}

func Sport(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sportInnerSVG).
		Element(children...)
}

func Sporting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sportingInnerSVG).
		Element(children...)
}

func Square(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(squareInnerSVG).
		Element(children...)
}

func SquareSmall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(squareSmallInnerSVG).
		Element(children...)
}

func Ssd(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ssdInnerSVG).
		Element(children...)
}

func StackLight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stackLightInnerSVG).
		Element(children...)
}

func Stamp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stampInnerSVG).
		Element(children...)
}

func StandUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(standUpInnerSVG).
		Element(children...)
}

func Stapler(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(staplerInnerSVG).
		Element(children...)
}

func Star(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(starInnerSVG).
		Element(children...)
}

func SteeringWheel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(steeringWheelInnerSVG).
		Element(children...)
}

func Steoller(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(steollerInnerSVG).
		Element(children...)
}

func StereoOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stereoOneInnerSVG).
		Element(children...)
}

func Stethoscope(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stethoscopeInnerSVG).
		Element(children...)
}

func Stickers(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stickersInnerSVG).
		Element(children...)
}

func StockMarket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stockMarketInnerSVG).
		Element(children...)
}

func Stopwatch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stopwatchInnerSVG).
		Element(children...)
}

func StopwatchStart(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stopwatchStartInnerSVG).
		Element(children...)
}

func StorageCardOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(storageCardOneInnerSVG).
		Element(children...)
}

func StorageCardTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(storageCardTwoInnerSVG).
		Element(children...)
}

func StraightRazor(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(straightRazorInnerSVG).
		Element(children...)
}

func Stretching(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stretchingInnerSVG).
		Element(children...)
}

func StretchingOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(stretchingOneInnerSVG).
		Element(children...)
}

func Strongbox(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(strongboxInnerSVG).
		Element(children...)
}

func Subway(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(subwayInnerSVG).
		Element(children...)
}

func Success(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(successInnerSVG).
		Element(children...)
}

func Sum(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sumInnerSVG).
		Element(children...)
}

func Sun(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sunInnerSVG).
		Element(children...)
}

func SunHat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sunHatInnerSVG).
		Element(children...)
}

func SunOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sunOneInnerSVG).
		Element(children...)
}

func Sunset(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sunsetInnerSVG).
		Element(children...)
}

func SurprisedFaceWithOpenBigMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(surprisedFaceWithOpenBigMouthInnerSVG).
		Element(children...)
}

func SurprisedFaceWithOpenMouth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(surprisedFaceWithOpenMouthInnerSVG).
		Element(children...)
}

func SurveillanceCameras(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(surveillanceCamerasInnerSVG).
		Element(children...)
}

func SurveillanceCamerasOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(surveillanceCamerasOneInnerSVG).
		Element(children...)
}

func SurveillanceCamerasTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(surveillanceCamerasTwoInnerSVG).
		Element(children...)
}

func Swallow(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(swallowInnerSVG).
		Element(children...)
}

func Sweater(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(sweaterInnerSVG).
		Element(children...)
}

func SwimmingRing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(swimmingRingInnerSVG).
		Element(children...)
}

func Swimsuit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(swimsuitInnerSVG).
		Element(children...)
}

func Swing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(swingInnerSVG).
		Element(children...)
}

func SwitchButton(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(switchButtonInnerSVG).
		Element(children...)
}

func SwitchNintendo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(switchNintendoInnerSVG).
		Element(children...)
}

func SwitchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(switchOneInnerSVG).
		Element(children...)
}

func SwitchThemes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(switchThemesInnerSVG).
		Element(children...)
}

func System(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(systemInnerSVG).
		Element(children...)
}

func TShirt(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tShirtInnerSVG).
		Element(children...)
}

func Table(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tableInnerSVG).
		Element(children...)
}

func TableFile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tableFileInnerSVG).
		Element(children...)
}

func TableLamp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tableLampInnerSVG).
		Element(children...)
}

func TableReport(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tableReportInnerSVG).
		Element(children...)
}

func Tabletennis(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tabletennisInnerSVG).
		Element(children...)
}

func Tag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tagInnerSVG).
		Element(children...)
}

func TagOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tagOneInnerSVG).
		Element(children...)
}

func TajMahal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tajMahalInnerSVG).
		Element(children...)
}

func TakeOffOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(takeOffOneInnerSVG).
		Element(children...)
}

func Tape(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tapeInnerSVG).
		Element(children...)
}

func TapeMeasure(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tapeMeasureInnerSVG).
		Element(children...)
}

func TargetOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(targetOneInnerSVG).
		Element(children...)
}

func Taurus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(taurusInnerSVG).
		Element(children...)
}

func Taxi(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(taxiInnerSVG).
		Element(children...)
}

func Tea(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(teaInnerSVG).
		Element(children...)
}

func TeaDrink(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(teaDrinkInnerSVG).
		Element(children...)
}

func Teapot(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(teapotInnerSVG).
		Element(children...)
}

func Teeth(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(teethInnerSVG).
		Element(children...)
}

func Telescope(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(telescopeInnerSVG).
		Element(children...)
}

func TencentQq(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tencentQqInnerSVG).
		Element(children...)
}

func Tent(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tentInnerSVG).
		Element(children...)
}

func TentBanner(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tentBannerInnerSVG).
		Element(children...)
}

func Terminal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(terminalInnerSVG).
		Element(children...)
}

func TerminationFile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(terminationFileInnerSVG).
		Element(children...)
}

func TestTube(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(testTubeInnerSVG).
		Element(children...)
}

func Text(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(textInnerSVG).
		Element(children...)
}

func TextMessage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(textMessageInnerSVG).
		Element(children...)
}

func TextureTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(textureTwoInnerSVG).
		Element(children...)
}

func TheSingleShoulderBag(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(theSingleShoulderBagInnerSVG).
		Element(children...)
}

func Theater(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(theaterInnerSVG).
		Element(children...)
}

func Theme(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(themeInnerSVG).
		Element(children...)
}

func Thermometer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thermometerInnerSVG).
		Element(children...)
}

func ThermometerOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thermometerOneInnerSVG).
		Element(children...)
}

func ThermosCup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thermosCupInnerSVG).
		Element(children...)
}

func Thin(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thinInnerSVG).
		Element(children...)
}

func ThinkingProblem(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thinkingProblemInnerSVG).
		Element(children...)
}

func Three(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeInnerSVG).
		Element(children...)
}

func ThreeDGlasses(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeDGlassesInnerSVG).
		Element(children...)
}

func ThreeHexagons(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeHexagonsInnerSVG).
		Element(children...)
}

func ThreeKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeKeyInnerSVG).
		Element(children...)
}

func ThreeSlashes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeSlashesInnerSVG).
		Element(children...)
}

func ThreeThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeThreeInnerSVG).
		Element(children...)
}

func ThreeTriangles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(threeTrianglesInnerSVG).
		Element(children...)
}

func ThumbsDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thumbsDownInnerSVG).
		Element(children...)
}

func ThumbsUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thumbsUpInnerSVG).
		Element(children...)
}

func Thunderbolt(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thunderboltInnerSVG).
		Element(children...)
}

func ThunderstormOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(thunderstormOneInnerSVG).
		Element(children...)
}

func Ticket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ticketInnerSVG).
		Element(children...)
}

func TicketOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ticketOneInnerSVG).
		Element(children...)
}

func TicketsOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ticketsOneInnerSVG).
		Element(children...)
}

func TicketsTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ticketsTwoInnerSVG).
		Element(children...)
}

func Tiktok(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tiktokInnerSVG).
		Element(children...)
}

func Time(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(timeInnerSVG).
		Element(children...)
}

func TimedMail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(timedMailInnerSVG).
		Element(children...)
}

func Timeline(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(timelineInnerSVG).
		Element(children...)
}

func Timer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(timerInnerSVG).
		Element(children...)
}

func Tips(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tipsInnerSVG).
		Element(children...)
}

func TipsOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tipsOneInnerSVG).
		Element(children...)
}

func TireSwing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tireSwingInnerSVG).
		Element(children...)
}

func Toilet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toiletInnerSVG).
		Element(children...)
}

func Tomato(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tomatoInnerSVG).
		Element(children...)
}

func Tool(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toolInnerSVG).
		Element(children...)
}

func Toolkit(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toolkitInnerSVG).
		Element(children...)
}

func TopBar(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(topBarInnerSVG).
		Element(children...)
}

func Topbuzz(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(topbuzzInnerSVG).
		Element(children...)
}

func Topic(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(topicInnerSVG).
		Element(children...)
}

func TopicDiscussion(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(topicDiscussionInnerSVG).
		Element(children...)
}

func Torch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(torchInnerSVG).
		Element(children...)
}

func TourBus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tourBusInnerSVG).
		Element(children...)
}

func Towel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(towelInnerSVG).
		Element(children...)
}

func Tower(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(towerInnerSVG).
		Element(children...)
}

func TowerOfBabel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(towerOfBabelInnerSVG).
		Element(children...)
}

func TowerOfPisa(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(towerOfPisaInnerSVG).
		Element(children...)
}

func Toxins(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(toxinsInnerSVG).
		Element(children...)
}

func Trace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(traceInnerSVG).
		Element(children...)
}

func Trademark(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trademarkInnerSVG).
		Element(children...)
}

func TraditionalChineseMedicine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(traditionalChineseMedicineInnerSVG).
		Element(children...)
}

func Train(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trainInnerSVG).
		Element(children...)
}

func Transaction(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transactionInnerSVG).
		Element(children...)
}

func TransactionOrder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transactionOrderInnerSVG).
		Element(children...)
}

func Transfer(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transferInnerSVG).
		Element(children...)
}

func Transform(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transformInnerSVG).
		Element(children...)
}

func Transport(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transportInnerSVG).
		Element(children...)
}

func Transporter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(transporterInnerSVG).
		Element(children...)
}

func Trapezoid(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trapezoidInnerSVG).
		Element(children...)
}

func Tray(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trayInnerSVG).
		Element(children...)
}

func Treadmill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treadmillInnerSVG).
		Element(children...)
}

func TreadmillOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treadmillOneInnerSVG).
		Element(children...)
}

func TreadmillTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treadmillTwoInnerSVG).
		Element(children...)
}

func TreasureChest(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treasureChestInnerSVG).
		Element(children...)
}

func TreeDiagram(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treeDiagramInnerSVG).
		Element(children...)
}

func TreeList(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treeListInnerSVG).
		Element(children...)
}

func TreeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(treeOneInnerSVG).
		Element(children...)
}

func Trend(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trendInnerSVG).
		Element(children...)
}

func TrendTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trendTwoInnerSVG).
		Element(children...)
}

func Triangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(triangleInnerSVG).
		Element(children...)
}

func TriangleRoundRectangle(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(triangleRoundRectangleInnerSVG).
		Element(children...)
}

func TriangleRuler(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(triangleRulerInnerSVG).
		Element(children...)
}

func Trophy(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trophyInnerSVG).
		Element(children...)
}

func TrousersBellBottoms(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trousersBellBottomsInnerSVG).
		Element(children...)
}

func Trumpet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trumpetInnerSVG).
		Element(children...)
}

func Trunk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(trunkInnerSVG).
		Element(children...)
}

func Tub(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tubInnerSVG).
		Element(children...)
}

func Tuchong(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tuchongInnerSVG).
		Element(children...)
}

func Tumblr(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tumblrInnerSVG).
		Element(children...)
}

func Turkey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(turkeyInnerSVG).
		Element(children...)
}

func TurnAround(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(turnAroundInnerSVG).
		Element(children...)
}

func TurnOn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(turnOnInnerSVG).
		Element(children...)
}

func TvOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(tvOneInnerSVG).
		Element(children...)
}

func Twitter(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twitterInnerSVG).
		Element(children...)
}

func Two(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoInnerSVG).
		Element(children...)
}

func TwoDimensionalCode(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoDimensionalCodeInnerSVG).
		Element(children...)
}

func TwoDimensionalCodeOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoDimensionalCodeOneInnerSVG).
		Element(children...)
}

func TwoDimensionalCodeTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoDimensionalCodeTwoInnerSVG).
		Element(children...)
}

func TwoKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoKeyInnerSVG).
		Element(children...)
}

func TwoSemicircles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoSemicirclesInnerSVG).
		Element(children...)
}

func TwoTriangles(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoTrianglesInnerSVG).
		Element(children...)
}

func TwoTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(twoTwoInnerSVG).
		Element(children...)
}

func TypeDrive(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(typeDriveInnerSVG).
		Element(children...)
}

func UDisk(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uDiskInnerSVG).
		Element(children...)
}

func UTurnDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uTurnDownInnerSVG).
		Element(children...)
}

func UTurnLeft(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uTurnLeftInnerSVG).
		Element(children...)
}

func UTurnRight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uTurnRightInnerSVG).
		Element(children...)
}

func UTurnUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uTurnUpInnerSVG).
		Element(children...)
}

func Ulikecam(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ulikecamInnerSVG).
		Element(children...)
}

func Umbrella(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(umbrellaInnerSVG).
		Element(children...)
}

func UmbrellaOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(umbrellaOneInnerSVG).
		Element(children...)
}

func UmbrellaTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(umbrellaTwoInnerSVG).
		Element(children...)
}

func Ungroup(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(ungroupInnerSVG).
		Element(children...)
}

func Unicast(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(unicastInnerSVG).
		Element(children...)
}

func Universal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(universalInnerSVG).
		Element(children...)
}

func Unlock(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(unlockInnerSVG).
		Element(children...)
}

func UnlockOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(unlockOneInnerSVG).
		Element(children...)
}

func UpAndDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upAndDownInnerSVG).
		Element(children...)
}

func UpC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upCInnerSVG).
		Element(children...)
}

func UpOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upOneInnerSVG).
		Element(children...)
}

func UpSquare(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upSquareInnerSVG).
		Element(children...)
}

func UpTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upTwoInnerSVG).
		Element(children...)
}

func UpdateRotation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(updateRotationInnerSVG).
		Element(children...)
}

func Upload(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uploadInnerSVG).
		Element(children...)
}

func UploadLaptop(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uploadLaptopInnerSVG).
		Element(children...)
}

func UploadThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uploadThreeInnerSVG).
		Element(children...)
}

func UploadWeb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uploadWebInnerSVG).
		Element(children...)
}

func UpsideDownFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(upsideDownFaceInnerSVG).
		Element(children...)
}

func Usb(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbInnerSVG).
		Element(children...)
}

func UsbMemoryStick(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbMemoryStickInnerSVG).
		Element(children...)
}

func UsbMicroOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbMicroOneInnerSVG).
		Element(children...)
}

func UsbMicroTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbMicroTwoInnerSVG).
		Element(children...)
}

func UsbOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbOneInnerSVG).
		Element(children...)
}

func UsbTypeC(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(usbTypeCInnerSVG).
		Element(children...)
}

func User(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userInnerSVG).
		Element(children...)
}

func UserBusiness(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userBusinessInnerSVG).
		Element(children...)
}

func UserPositioning(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userPositioningInnerSVG).
		Element(children...)
}

func UserToUserTransmission(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(userToUserTransmissionInnerSVG).
		Element(children...)
}

func Uterus(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(uterusInnerSVG).
		Element(children...)
}

func Vacation(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vacationInnerSVG).
		Element(children...)
}

func VacuumCleaner(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vacuumCleanerInnerSVG).
		Element(children...)
}

func VegetableBasket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vegetableBasketInnerSVG).
		Element(children...)
}

func Vegetables(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vegetablesInnerSVG).
		Element(children...)
}

func VerticalTidyUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(verticalTidyUpInnerSVG).
		Element(children...)
}

func VerticalTimeline(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(verticalTimelineInnerSVG).
		Element(children...)
}

func VerticallyCentered(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(verticallyCenteredInnerSVG).
		Element(children...)
}

func Vest(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vestInnerSVG).
		Element(children...)
}

func Vial(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vialInnerSVG).
		Element(children...)
}

func ViciaFaba(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viciaFabaInnerSVG).
		Element(children...)
}

func Video(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videoInnerSVG).
		Element(children...)
}

func VideoConference(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videoConferenceInnerSVG).
		Element(children...)
}

func VideoFile(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videoFileInnerSVG).
		Element(children...)
}

func VideoOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videoOneInnerSVG).
		Element(children...)
}

func VideoTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videoTwoInnerSVG).
		Element(children...)
}

func Videocamera(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videocameraInnerSVG).
		Element(children...)
}

func VideocameraOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(videocameraOneInnerSVG).
		Element(children...)
}

func ViewGridCard(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viewGridCardInnerSVG).
		Element(children...)
}

func ViewGridDetail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viewGridDetailInnerSVG).
		Element(children...)
}

func ViewGridList(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viewGridListInnerSVG).
		Element(children...)
}

func ViewList(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viewListInnerSVG).
		Element(children...)
}

func Viewfinder(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(viewfinderInnerSVG).
		Element(children...)
}

func Vigo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vigoInnerSVG).
		Element(children...)
}

func Vip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vipInnerSVG).
		Element(children...)
}

func VipOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vipOneInnerSVG).
		Element(children...)
}

func VirtualRealityGlasses(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(virtualRealityGlassesInnerSVG).
		Element(children...)
}

func Voice(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(voiceInnerSVG).
		Element(children...)
}

func VoiceInput(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(voiceInputInnerSVG).
		Element(children...)
}

func VoiceMessage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(voiceMessageInnerSVG).
		Element(children...)
}

func VoiceOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(voiceOneInnerSVG).
		Element(children...)
}

func Voicemail(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(voicemailInnerSVG).
		Element(children...)
}

func Volkswagen(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volkswagenInnerSVG).
		Element(children...)
}

func VolumeDown(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volumeDownInnerSVG).
		Element(children...)
}

func VolumeMute(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volumeMuteInnerSVG).
		Element(children...)
}

func VolumeNotice(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volumeNoticeInnerSVG).
		Element(children...)
}

func VolumeSmall(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volumeSmallInnerSVG).
		Element(children...)
}

func VolumeUp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(volumeUpInnerSVG).
		Element(children...)
}

func VrGlasses(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(vrGlassesInnerSVG).
		Element(children...)
}

func Wallet(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(walletInnerSVG).
		Element(children...)
}

func WalletOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(walletOneInnerSVG).
		Element(children...)
}

func WalletThree(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(walletThreeInnerSVG).
		Element(children...)
}

func WalletTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(walletTwoInnerSVG).
		Element(children...)
}

func Warehousing(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(warehousingInnerSVG).
		Element(children...)
}

func WashingMachine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(washingMachineInnerSVG).
		Element(children...)
}

func WashingMachineOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(washingMachineOneInnerSVG).
		Element(children...)
}

func Watch(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(watchInnerSVG).
		Element(children...)
}

func WatchOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(watchOneInnerSVG).
		Element(children...)
}

func Water(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterInnerSVG).
		Element(children...)
}

func WaterLevel(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterLevelInnerSVG).
		Element(children...)
}

func WaterNo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterNoInnerSVG).
		Element(children...)
}

func WaterRate(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterRateInnerSVG).
		Element(children...)
}

func WaterRateTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterRateTwoInnerSVG).
		Element(children...)
}

func WaterfallsH(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterfallsHInnerSVG).
		Element(children...)
}

func WaterfallsV(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterfallsVInnerSVG).
		Element(children...)
}

func Watermelon(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(watermelonInnerSVG).
		Element(children...)
}

func WatermelonOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(watermelonOneInnerSVG).
		Element(children...)
}

func WaterpoloOne(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(waterpoloOneInnerSVG).
		Element(children...)
}

func WearyFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wearyFaceInnerSVG).
		Element(children...)
}

func WebPage(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webPageInnerSVG).
		Element(children...)
}

func Webcam(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(webcamInnerSVG).
		Element(children...)
}

func Wechat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wechatInnerSVG).
		Element(children...)
}

func Weibo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weiboInnerSVG).
		Element(children...)
}

func Weight(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weightInnerSVG).
		Element(children...)
}

func Weightlifting(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weightliftingInnerSVG).
		Element(children...)
}

func WeixinCardsOffers(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinCardsOffersInnerSVG).
		Element(children...)
}

func WeixinMarket(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinMarketInnerSVG).
		Element(children...)
}

func WeixinMiniApp(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinMiniAppInnerSVG).
		Element(children...)
}

func WeixinPeopleNearby(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinPeopleNearbyInnerSVG).
		Element(children...)
}

func WeixinScan(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinScanInnerSVG).
		Element(children...)
}

func WeixinShake(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinShakeInnerSVG).
		Element(children...)
}

func WeixinTopStories(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(weixinTopStoriesInnerSVG).
		Element(children...)
}

func Whale(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(whaleInnerSVG).
		Element(children...)
}

func Wheelchair(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wheelchairInnerSVG).
		Element(children...)
}

func Whirlwind(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(whirlwindInnerSVG).
		Element(children...)
}

func WholeSiteAccelerator(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wholeSiteAcceleratorInnerSVG).
		Element(children...)
}

func WindTurbine(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windTurbineInnerSVG).
		Element(children...)
}

func Windmill(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windmillInnerSVG).
		Element(children...)
}

func WindmillTwo(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windmillTwoInnerSVG).
		Element(children...)
}

func Windows(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(windowsInnerSVG).
		Element(children...)
}

func WingsuitFlying(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wingsuitFlyingInnerSVG).
		Element(children...)
}

func WinkingFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(winkingFaceInnerSVG).
		Element(children...)
}

func WinkingFaceWithOpenEyes(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(winkingFaceWithOpenEyesInnerSVG).
		Element(children...)
}

func Women(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(womenInnerSVG).
		Element(children...)
}

func WoolenHat(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(woolenHatInnerSVG).
		Element(children...)
}

func Word(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wordInnerSVG).
		Element(children...)
}

func Workbench(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(workbenchInnerSVG).
		Element(children...)
}

func Worker(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(workerInnerSVG).
		Element(children...)
}

func WorriedFace(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(worriedFaceInnerSVG).
		Element(children...)
}

func Write(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(writeInnerSVG).
		Element(children...)
}

func WritingFluently(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(writingFluentlyInnerSVG).
		Element(children...)
}

func WrongUser(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(wrongUserInnerSVG).
		Element(children...)
}

func Xiaodu(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(xiaoduInnerSVG).
		Element(children...)
}

func XiaoduHome(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(xiaoduHomeInnerSVG).
		Element(children...)
}

func Xigua(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(xiguaInnerSVG).
		Element(children...)
}

func Xingfuli(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(xingfuliInnerSVG).
		Element(children...)
}

func Yep(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(yepInnerSVG).
		Element(children...)
}

func Youtobe(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(youtobeInnerSVG).
		Element(children...)
}

func Youtube(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(youtubeInnerSVG).
		Element(children...)
}

func ZeroKey(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zeroKeyInnerSVG).
		Element(children...)
}

func Zijinyunying(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zijinyunyingInnerSVG).
		Element(children...)
}

func Zip(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zipInnerSVG).
		Element(children...)
}

func Zoom(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zoomInnerSVG).
		Element(children...)
}

func ZoomIn(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zoomInInnerSVG).
		Element(children...)
}

func ZoomInternal(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zoomInternalInnerSVG).
		Element(children...)
}

func ZoomOut(children ...*engine.UberElement) *engine.UberElement {
	attrs := append(
		[]engine.Attributer{
			engine.NewAttribute("viewBox", "0 0 48 48"),
		},
		sharedIconAttrs...,
	)
	return engine.Uber("svg").
		Attr(attrs...).
		HTML(zoomOutInnerSVG).
		Element(children...)
}

func ByName(name string) (*engine.UberElement, error) {
	switch name {
	case "a-cane":
		return ACane(), nil
	case "abnormal":
		return Abnormal(), nil
	case "acceleration":
		return Acceleration(), nil
	case "activity-source":
		return ActivitySource(), nil
	case "ad":
		return Ad(), nil
	case "add":
		return Add(), nil
	case "add-item":
		return AddItem(), nil
	case "add-mode":
		return AddMode(), nil
	case "add-music":
		return AddMusic(), nil
	case "add-one":
		return AddOne(), nil
	case "add-pic":
		return AddPic(), nil
	case "add-print":
		return AddPrint(), nil
	case "add-subset":
		return AddSubset(), nil
	case "add-subtract":
		return AddSubtract(), nil
	case "add-text-two":
		return AddTextTwo(), nil
	case "add-user":
		return AddUser(), nil
	case "add-web":
		return AddWeb(), nil
	case "address-book":
		return AddressBook(), nil
	case "adjacent-item":
		return AdjacentItem(), nil
	case "adjustment":
		return Adjustment(), nil
	case "adobe-illustrate":
		return AdobeIllustrate(), nil
	case "adobe-indesign":
		return AdobeIndesign(), nil
	case "adobe-lightroom":
		return AdobeLightroom(), nil
	case "adobe-photoshop":
		return AdobePhotoshop(), nil
	case "afro-pick":
		return AfroPick(), nil
	case "agreement":
		return Agreement(), nil
	case "aiming":
		return Aiming(), nil
	case "air-bike":
		return AirBike(), nil
	case "air-conditioning":
		return AirConditioning(), nil
	case "airplane":
		return Airplane(), nil
	case "airplane-window":
		return AirplaneWindow(), nil
	case "airplane-window-one":
		return AirplaneWindowOne(), nil
	case "airplay":
		return Airplay(), nil
	case "airpods":
		return Airpods(), nil
	case "alarm":
		return Alarm(), nil
	case "alarm-clock":
		return AlarmClock(), nil
	case "align-bottom":
		return AlignBottom(), nil
	case "align-bottom-two":
		return AlignBottomTwo(), nil
	case "align-horizontal-center-two":
		return AlignHorizontalCenterTwo(), nil
	case "align-horizontally":
		return AlignHorizontally(), nil
	case "align-left":
		return AlignLeft(), nil
	case "align-left-one":
		return AlignLeftOne(), nil
	case "align-left-two":
		return AlignLeftTwo(), nil
	case "align-right":
		return AlignRight(), nil
	case "align-right-one":
		return AlignRightOne(), nil
	case "align-right-two":
		return AlignRightTwo(), nil
	case "align-text-both-one":
		return AlignTextBothOne(), nil
	case "align-text-bottom-one":
		return AlignTextBottomOne(), nil
	case "align-text-center-one":
		return AlignTextCenterOne(), nil
	case "align-text-left-one":
		return AlignTextLeftOne(), nil
	case "align-text-middle-one":
		return AlignTextMiddleOne(), nil
	case "align-text-right-one":
		return AlignTextRightOne(), nil
	case "align-text-top-one":
		return AlignTextTopOne(), nil
	case "align-top":
		return AlignTop(), nil
	case "align-top-two":
		return AlignTopTwo(), nil
	case "align-vertical-center-two":
		return AlignVerticalCenterTwo(), nil
	case "align-vertically":
		return AlignVertically(), nil
	case "alignment-bottom-center":
		return AlignmentBottomCenter(), nil
	case "alignment-bottom-left":
		return AlignmentBottomLeft(), nil
	case "alignment-bottom-right":
		return AlignmentBottomRight(), nil
	case "alignment-horizontal-bottom":
		return AlignmentHorizontalBottom(), nil
	case "alignment-horizontal-center":
		return AlignmentHorizontalCenter(), nil
	case "alignment-horizontal-top":
		return AlignmentHorizontalTop(), nil
	case "alignment-left-bottom":
		return AlignmentLeftBottom(), nil
	case "alignment-left-center":
		return AlignmentLeftCenter(), nil
	case "alignment-left-top":
		return AlignmentLeftTop(), nil
	case "alignment-right-bottom":
		return AlignmentRightBottom(), nil
	case "alignment-right-center":
		return AlignmentRightCenter(), nil
	case "alignment-right-top":
		return AlignmentRightTop(), nil
	case "alignment-top-center":
		return AlignmentTopCenter(), nil
	case "alignment-top-left":
		return AlignmentTopLeft(), nil
	case "alignment-top-right":
		return AlignmentTopRight(), nil
	case "alignment-vertical-center":
		return AlignmentVerticalCenter(), nil
	case "alignment-vertical-left":
		return AlignmentVerticalLeft(), nil
	case "alignment-vertical-right":
		return AlignmentVerticalRight(), nil
	case "all-application":
		return AllApplication(), nil
	case "ambulance":
		return Ambulance(), nil
	case "analysis":
		return Analysis(), nil
	case "anchor":
		return Anchor(), nil
	case "anchor-one":
		return AnchorOne(), nil
	case "anchor-round":
		return AnchorRound(), nil
	case "anchor-squre":
		return AnchorSqure(), nil
	case "anchor-two":
		return AnchorTwo(), nil
	case "android":
		return Android(), nil
	case "angry-face":
		return AngryFace(), nil
	case "anguished-face":
		return AnguishedFace(), nil
	case "announcement":
		return Announcement(), nil
	case "anti-corrosion":
		return AntiCorrosion(), nil
	case "aperture-priority":
		return AperturePriority(), nil
	case "api":
		return Api(), nil
	case "app-store":
		return AppStore(), nil
	case "app-switch":
		return AppSwitch(), nil
	case "apple":
		return Apple(), nil
	case "apple-one":
		return AppleOne(), nil
	case "applet-closed":
		return AppletClosed(), nil
	case "application":
		return Application(), nil
	case "application-one":
		return ApplicationOne(), nil
	case "application-two":
		return ApplicationTwo(), nil
	case "appointment":
		return Appointment(), nil
	case "arc-de-triomphe":
		return ArcDeTriomphe(), nil
	case "archers-bow":
		return ArchersBow(), nil
	case "archery":
		return Archery(), nil
	case "area-map":
		return AreaMap(), nil
	case "arena":
		return Arena(), nil
	case "arithmetic-buttons":
		return ArithmeticButtons(), nil
	case "arrow-circle-down":
		return ArrowCircleDown(), nil
	case "arrow-circle-left":
		return ArrowCircleLeft(), nil
	case "arrow-circle-right":
		return ArrowCircleRight(), nil
	case "arrow-circle-up":
		return ArrowCircleUp(), nil
	case "arrow-keys":
		return ArrowKeys(), nil
	case "assembly-line":
		return AssemblyLine(), nil
	case "asterisk":
		return Asterisk(), nil
	case "asterisk-key":
		return AsteriskKey(), nil
	case "astonished-face":
		return AstonishedFace(), nil
	case "at-sign":
		return AtSign(), nil
	case "attention":
		return Attention(), nil
	case "audio-file":
		return AudioFile(), nil
	case "audit":
		return Audit(), nil
	case "auto-focus":
		return AutoFocus(), nil
	case "avatar":
		return Avatar(), nil
	case "aviation":
		return Aviation(), nil
	case "avocado":
		return Avocado(), nil
	case "avocado-one":
		return AvocadoOne(), nil
	case "baby":
		return Baby(), nil
	case "baby-app":
		return BabyApp(), nil
	case "baby-car-seat":
		return BabyCarSeat(), nil
	case "baby-feet":
		return BabyFeet(), nil
	case "baby-meal":
		return BabyMeal(), nil
	case "baby-mobile":
		return BabyMobile(), nil
	case "baby-one":
		return BabyOne(), nil
	case "baby-pants":
		return BabyPants(), nil
	case "baby-sling":
		return BabySling(), nil
	case "baby-taste":
		return BabyTaste(), nil
	case "bachelor-cap":
		return BachelorCap(), nil
	case "bachelor-cap-one":
		return BachelorCapOne(), nil
	case "bachelor-cap-two":
		return BachelorCapTwo(), nil
	case "back":
		return Back(), nil
	case "backpack":
		return Backpack(), nil
	case "bad":
		return Bad(), nil
	case "bad-one":
		return BadOne(), nil
	case "bad-two":
		return BadTwo(), nil
	case "badge":
		return Badge(), nil
	case "badge-two":
		return BadgeTwo(), nil
	case "badminton":
		return Badminton(), nil
	case "baggage-delay":
		return BaggageDelay(), nil
	case "balance":
		return Balance(), nil
	case "balance-one":
		return BalanceOne(), nil
	case "balance-two":
		return BalanceTwo(), nil
	case "banana":
		return Banana(), nil
	case "bank-card":
		return BankCard(), nil
	case "bank-card-one":
		return BankCardOne(), nil
	case "bank-card-two":
		return BankCardTwo(), nil
	case "bank-transfer":
		return BankTransfer(), nil
	case "baokemeng":
		return Baokemeng(), nil
	case "barbecue":
		return Barbecue(), nil
	case "barber-brush":
		return BarberBrush(), nil
	case "barber-clippers":
		return BarberClippers(), nil
	case "baseball-bat":
		return BaseballBat(), nil
	case "baseball-cap":
		return BaseballCap(), nil
	case "basketball-clothes":
		return BasketballClothes(), nil
	case "basketball-one":
		return BasketballOne(), nil
	case "bat":
		return Bat(), nil
	case "battery-empty":
		return BatteryEmpty(), nil
	case "battery-failure":
		return BatteryFailure(), nil
	case "battery-full":
		return BatteryFull(), nil
	case "battery-storage":
		return BatteryStorage(), nil
	case "battery-tips":
		return BatteryTips(), nil
	case "battery-working":
		return BatteryWorking(), nil
	case "battery-working-one":
		return BatteryWorkingOne(), nil
	case "beach-umbrella":
		return BeachUmbrella(), nil
	case "bear":
		return Bear(), nil
	case "beauty":
		return Beauty(), nil
	case "beauty-instrument":
		return BeautyInstrument(), nil
	case "bedside":
		return Bedside(), nil
	case "bedside-two":
		return BedsideTwo(), nil
	case "bee":
		return Bee(), nil
	case "beer":
		return Beer(), nil
	case "beer-mug":
		return BeerMug(), nil
	case "behance":
		return Behance(), nil
	case "bell-ring":
		return BellRing(), nil
	case "benz":
		return Benz(), nil
	case "bezier-curve":
		return BezierCurve(), nil
	case "bib":
		return Bib(), nil
	case "big-clock":
		return BigClock(), nil
	case "big-x":
		return BigX(), nil
	case "bike":
		return Bike(), nil
	case "bill":
		return Bill(), nil
	case "bird":
		return Bird(), nil
	case "birthday-cake":
		return BirthdayCake(), nil
	case "bitcoin":
		return Bitcoin(), nil
	case "black-eight":
		return BlackEight(), nil
	case "blackboard":
		return Blackboard(), nil
	case "blade":
		return Blade(), nil
	case "block-eight":
		return BlockEight(), nil
	case "block-five":
		return BlockFive(), nil
	case "block-four":
		return BlockFour(), nil
	case "block-nine":
		return BlockNine(), nil
	case "block-one":
		return BlockOne(), nil
	case "block-seven":
		return BlockSeven(), nil
	case "block-six":
		return BlockSix(), nil
	case "block-ten":
		return BlockTen(), nil
	case "block-three":
		return BlockThree(), nil
	case "block-two":
		return BlockTwo(), nil
	case "blockchain":
		return Blockchain(), nil
	case "blocks-and-arrows":
		return BlocksAndArrows(), nil
	case "bloom":
		return Bloom(), nil
	case "blossom":
		return Blossom(), nil
	case "boiler":
		return Boiler(), nil
	case "bolt-one":
		return BoltOne(), nil
	case "book":
		return Book(), nil
	case "book-one":
		return BookOne(), nil
	case "book-open":
		return BookOpen(), nil
	case "bookmark":
		return Bookmark(), nil
	case "bookmark-one":
		return BookmarkOne(), nil
	case "bookmark-three":
		return BookmarkThree(), nil
	case "bookshelf":
		return Bookshelf(), nil
	case "booster-car-seat":
		return BoosterCarSeat(), nil
	case "booth":
		return Booth(), nil
	case "bottle":
		return Bottle(), nil
	case "bottle-one":
		return BottleOne(), nil
	case "bottle-three":
		return BottleThree(), nil
	case "bottle-two":
		return BottleTwo(), nil
	case "bottom-bar":
		return BottomBar(), nil
	case "bottom-bar-one":
		return BottomBarOne(), nil
	case "bow":
		return Bow(), nil
	case "bowl":
		return Bowl(), nil
	case "bowl-one":
		return BowlOne(), nil
	case "box":
		return Box(), nil
	case "boxing":
		return Boxing(), nil
	case "boy":
		return Boy(), nil
	case "boy-one":
		return BoyOne(), nil
	case "boy-stroller":
		return BoyStroller(), nil
	case "boy-two":
		return BoyTwo(), nil
	case "brain":
		return Brain(), nil
	case "brake-pads":
		return BrakePads(), nil
	case "branch":
		return Branch(), nil
	case "branch-one":
		return BranchOne(), nil
	case "branch-two":
		return BranchTwo(), nil
	case "bread":
		return Bread(), nil
	case "bread-machine":
		return BreadMachine(), nil
	case "bread-one":
		return BreadOne(), nil
	case "breast-pump":
		return BreastPump(), nil
	case "bridge-one":
		return BridgeOne(), nil
	case "briefcase":
		return Briefcase(), nil
	case "brightness":
		return Brightness(), nil
	case "bring-forward":
		return BringForward(), nil
	case "bring-to-front":
		return BringToFront(), nil
	case "bring-to-front-one":
		return BringToFrontOne(), nil
	case "broadcast":
		return Broadcast(), nil
	case "broadcast-one":
		return BroadcastOne(), nil
	case "broadcast-radio":
		return BroadcastRadio(), nil
	case "browser":
		return Browser(), nil
	case "browser-safari":
		return BrowserSafari(), nil
	case "bubble-chart":
		return BubbleChart(), nil
	case "bug":
		return Bug(), nil
	case "building-four":
		return BuildingFour(), nil
	case "building-one":
		return BuildingOne(), nil
	case "building-three":
		return BuildingThree(), nil
	case "building-two":
		return BuildingTwo(), nil
	case "bus":
		return Bus(), nil
	case "bus-one":
		return BusOne(), nil
	case "bus-two":
		return BusTwo(), nil
	case "butterfly":
		return Butterfly(), nil
	case "buy":
		return Buy(), nil
	case "bydesign":
		return Bydesign(), nil
	case "bytedance":
		return Bytedance(), nil
	case "bytedance-mini-app":
		return BytedanceMiniApp(), nil
	case "cable-car":
		return CableCar(), nil
	case "cactus":
		return Cactus(), nil
	case "cake":
		return Cake(), nil
	case "cake-five":
		return CakeFive(), nil
	case "cake-four":
		return CakeFour(), nil
	case "cake-one":
		return CakeOne(), nil
	case "cake-three":
		return CakeThree(), nil
	case "calculator":
		return Calculator(), nil
	case "calculator-one":
		return CalculatorOne(), nil
	case "calendar":
		return Calendar(), nil
	case "calendar-dot":
		return CalendarDot(), nil
	case "calendar-thirty":
		return CalendarThirty(), nil
	case "calendar-thirty-two":
		return CalendarThirtyTwo(), nil
	case "calendar-three":
		return CalendarThree(), nil
	case "camera":
		return Camera(), nil
	case "camera-five":
		return CameraFive(), nil
	case "camera-four":
		return CameraFour(), nil
	case "camera-one":
		return CameraOne(), nil
	case "camera-three":
		return CameraThree(), nil
	case "camera-two":
		return CameraTwo(), nil
	case "camp":
		return Camp(), nil
	case "cancer":
		return Cancer(), nil
	case "candy":
		return Candy(), nil
	case "canned-fruit":
		return CannedFruit(), nil
	case "capricornus":
		return Capricornus(), nil
	case "car":
		return Car(), nil
	case "car-battery":
		return CarBattery(), nil
	case "card-two":
		return CardTwo(), nil
	case "carousel":
		return Carousel(), nil
	case "carousel-video":
		return CarouselVideo(), nil
	case "castle":
		return Castle(), nil
	case "category-management":
		return CategoryManagement(), nil
	case "cattle":
		return Cattle(), nil
	case "caution":
		return Caution(), nil
	case "cd":
		return Cd(), nil
	case "cell":
		return Cell(), nil
	case "certificate":
		return Certificate(), nil
	case "chafing-dish":
		return ChafingDish(), nil
	case "chafing-dish-one":
		return ChafingDishOne(), nil
	case "chair":
		return Chair(), nil
	case "chair-one":
		return ChairOne(), nil
	case "change-date-sort":
		return ChangeDateSort(), nil
	case "charging-treasure":
		return ChargingTreasure(), nil
	case "chart-graph":
		return ChartGraph(), nil
	case "chart-histogram-two":
		return ChartHistogramTwo(), nil
	case "chart-line-area":
		return ChartLineArea(), nil
	case "chart-pie":
		return ChartPie(), nil
	case "chart-pie-one":
		return ChartPieOne(), nil
	case "chart-proportion":
		return ChartProportion(), nil
	case "chart-ring":
		return ChartRing(), nil
	case "chart-stock":
		return ChartStock(), nil
	case "check-correct":
		return CheckCorrect(), nil
	case "check-one":
		return CheckOne(), nil
	case "checkbox":
		return Checkbox(), nil
	case "checkerboard":
		return Checkerboard(), nil
	case "checklist":
		return Checklist(), nil
	case "cheese":
		return Cheese(), nil
	case "chef-hat":
		return ChefHat(), nil
	case "chef-hat-one":
		return ChefHatOne(), nil
	case "cherry":
		return Cherry(), nil
	case "chess-one":
		return ChessOne(), nil
	case "chicken":
		return Chicken(), nil
	case "chicken-leg":
		return ChickenLeg(), nil
	case "children-cap":
		return ChildrenCap(), nil
	case "children-pyramid":
		return ChildrenPyramid(), nil
	case "chili":
		return Chili(), nil
	case "chimney":
		return Chimney(), nil
	case "chinese":
		return Chinese(), nil
	case "chinese-one":
		return ChineseOne(), nil
	case "chinese-pavilion":
		return ChinesePavilion(), nil
	case "chip":
		return Chip(), nil
	case "chopping-board":
		return ChoppingBoard(), nil
	case "christmas-tree":
		return ChristmasTree(), nil
	case "christmas-tree-one":
		return ChristmasTreeOne(), nil
	case "church-one":
		return ChurchOne(), nil
	case "church-two":
		return ChurchTwo(), nil
	case "circle-double-down":
		return CircleDoubleDown(), nil
	case "circle-double-left":
		return CircleDoubleLeft(), nil
	case "circle-double-right":
		return CircleDoubleRight(), nil
	case "circle-double-up":
		return CircleDoubleUp(), nil
	case "circle-five-line":
		return CircleFiveLine(), nil
	case "circle-four":
		return CircleFour(), nil
	case "circle-four-line":
		return CircleFourLine(), nil
	case "circle-house":
		return CircleHouse(), nil
	case "circle-left-down":
		return CircleLeftDown(), nil
	case "circle-left-up":
		return CircleLeftUp(), nil
	case "circle-right-down":
		return CircleRightDown(), nil
	case "circle-right-up":
		return CircleRightUp(), nil
	case "circle-three":
		return CircleThree(), nil
	case "circle-two-line":
		return CircleTwoLine(), nil
	case "circles-and-triangles":
		return CirclesAndTriangles(), nil
	case "circles-seven":
		return CirclesSeven(), nil
	case "circular-connection":
		return CircularConnection(), nil
	case "circus":
		return Circus(), nil
	case "city":
		return City(), nil
	case "city-gate":
		return CityGate(), nil
	case "city-one":
		return CityOne(), nil
	case "clap":
		return Clap(), nil
	case "classroom":
		return Classroom(), nil
	case "clear":
		return Clear(), nil
	case "clear-format":
		return ClearFormat(), nil
	case "click":
		return Click(), nil
	case "clipboard":
		return Clipboard(), nil
	case "clock-tower":
		return ClockTower(), nil
	case "close-one":
		return CloseOne(), nil
	case "clothes-briefs":
		return ClothesBriefs(), nil
	case "clothes-gloves":
		return ClothesGloves(), nil
	case "clothes-gloves-two":
		return ClothesGlovesTwo(), nil
	case "clothes-hoodie":
		return ClothesHoodie(), nil
	case "clothes-pants-short":
		return ClothesPantsShort(), nil
	case "clothes-pants-sweat":
		return ClothesPantsSweat(), nil
	case "clothes-skates":
		return ClothesSkates(), nil
	case "clothes-turtleneck":
		return ClothesTurtleneck(), nil
	case "clothes-windbreaker":
		return ClothesWindbreaker(), nil
	case "cloud-storage":
		return CloudStorage(), nil
	case "cloudy":
		return Cloudy(), nil
	case "cloudy-night":
		return CloudyNight(), nil
	case "clue":
		return Clue(), nil
	case "coat-hanger":
		return CoatHanger(), nil
	case "cocktail":
		return Cocktail(), nil
	case "coconut-tree":
		return CoconutTree(), nil
	case "code-laptop":
		return CodeLaptop(), nil
	case "coffee-machine":
		return CoffeeMachine(), nil
	case "cola":
		return Cola(), nil
	case "collect-computer":
		return CollectComputer(), nil
	case "collect-laptop":
		return CollectLaptop(), nil
	case "collect-picture":
		return CollectPicture(), nil
	case "collection-files":
		return CollectionFiles(), nil
	case "collection-records":
		return CollectionRecords(), nil
	case "color-card":
		return ColorCard(), nil
	case "color-filter":
		return ColorFilter(), nil
	case "come":
		return Come(), nil
	case "command":
		return Command(), nil
	case "comment":
		return Comment(), nil
	case "comment-one":
		return CommentOne(), nil
	case "comments":
		return Comments(), nil
	case "commodity":
		return Commodity(), nil
	case "communication":
		return Communication(), nil
	case "commuter-bag":
		return CommuterBag(), nil
	case "compass":
		return Compass(), nil
	case "compass-one":
		return CompassOne(), nil
	case "components":
		return Components(), nil
	case "composition":
		return Composition(), nil
	case "compression":
		return Compression(), nil
	case "computer":
		return Computer(), nil
	case "concept-sharing":
		return ConceptSharing(), nil
	case "concern":
		return Concern(), nil
	case "conditioner":
		return Conditioner(), nil
	case "cones":
		return Cones(), nil
	case "config":
		return Config(), nil
	case "confounded-face":
		return ConfoundedFace(), nil
	case "confused-face":
		return ConfusedFace(), nil
	case "connect":
		return Connect(), nil
	case "connect-address-one":
		return ConnectAddressOne(), nil
	case "connect-address-two":
		return ConnectAddressTwo(), nil
	case "connection":
		return Connection(), nil
	case "connection-box":
		return ConnectionBox(), nil
	case "connection-point":
		return ConnectionPoint(), nil
	case "connection-point-two":
		return ConnectionPointTwo(), nil
	case "consignment":
		return Consignment(), nil
	case "consume":
		return Consume(), nil
	case "contrast":
		return Contrast(), nil
	case "contrast-view":
		return ContrastView(), nil
	case "contrast-view-circle":
		return ContrastViewCircle(), nil
	case "control":
		return Control(), nil
	case "converging-gateway":
		return ConvergingGateway(), nil
	case "cook":
		return Cook(), nil
	case "cooking":
		return Cooking(), nil
	case "cooking-pot":
		return CookingPot(), nil
	case "cool":
		return Cool(), nil
	case "coordinate-system":
		return CoordinateSystem(), nil
	case "copy":
		return Copy(), nil
	case "copy-link":
		return CopyLink(), nil
	case "copy-one":
		return CopyOne(), nil
	case "copyright":
		return Copyright(), nil
	case "coronavirus":
		return Coronavirus(), nil
	case "correct":
		return Correct(), nil
	case "cosmetic-brush":
		return CosmeticBrush(), nil
	case "coupon":
		return Coupon(), nil
	case "cpu":
		return Cpu(), nil
	case "crab":
		return Crab(), nil
	case "creative":
		return Creative(), nil
	case "croissant":
		return Croissant(), nil
	case "cross-ring":
		return CrossRing(), nil
	case "cross-society":
		return CrossSociety(), nil
	case "crown":
		return Crown(), nil
	case "crown-three":
		return CrownThree(), nil
	case "crown-two":
		return CrownTwo(), nil
	case "cruise":
		return Cruise(), nil
	case "crying-baby":
		return CryingBaby(), nil
	case "cube-four":
		return CubeFour(), nil
	case "cup":
		return Cup(), nil
	case "cup-one":
		return CupOne(), nil
	case "curling":
		return Curling(), nil
	case "curve-adjustment":
		return CurveAdjustment(), nil
	case "cutting-one":
		return CuttingOne(), nil
	case "cuvette":
		return Cuvette(), nil
	case "cycle-one":
		return CycleOne(), nil
	case "cylinder":
		return Cylinder(), nil
	case "damage-map":
		return DamageMap(), nil
	case "dark-mode":
		return DarkMode(), nil
	case "dashboard-car":
		return DashboardCar(), nil
	case "dashboard-one":
		return DashboardOne(), nil
	case "data":
		return Data(), nil
	case "data-all":
		return DataAll(), nil
	case "data-arrival":
		return DataArrival(), nil
	case "data-display":
		return DataDisplay(), nil
	case "data-file":
		return DataFile(), nil
	case "data-four":
		return DataFour(), nil
	case "data-lock":
		return DataLock(), nil
	case "data-one":
		return DataOne(), nil
	case "data-screen":
		return DataScreen(), nil
	case "data-server":
		return DataServer(), nil
	case "data-sheet":
		return DataSheet(), nil
	case "data-switching":
		return DataSwitching(), nil
	case "data-three":
		return DataThree(), nil
	case "data-two":
		return DataTwo(), nil
	case "data-user":
		return DataUser(), nil
	case "database-alert":
		return DatabaseAlert(), nil
	case "database-code":
		return DatabaseCode(), nil
	case "database-config":
		return DatabaseConfig(), nil
	case "database-download":
		return DatabaseDownload(), nil
	case "database-enter":
		return DatabaseEnter(), nil
	case "database-fail":
		return DatabaseFail(), nil
	case "database-first":
		return DatabaseFirst(), nil
	case "database-forbid":
		return DatabaseForbid(), nil
	case "database-lock":
		return DatabaseLock(), nil
	case "database-network":
		return DatabaseNetwork(), nil
	case "database-network-point":
		return DatabaseNetworkPoint(), nil
	case "database-point":
		return DatabasePoint(), nil
	case "database-position":
		return DatabasePosition(), nil
	case "database-power":
		return DatabasePower(), nil
	case "database-proportion":
		return DatabaseProportion(), nil
	case "database-search":
		return DatabaseSearch(), nil
	case "database-setting":
		return DatabaseSetting(), nil
	case "database-success":
		return DatabaseSuccess(), nil
	case "database-sync":
		return DatabaseSync(), nil
	case "database-time":
		return DatabaseTime(), nil
	case "death-star":
		return DeathStar(), nil
	case "deer":
		return Deer(), nil
	case "degree-hat":
		return DegreeHat(), nil
	case "delete":
		return Delete(), nil
	case "delete-five":
		return DeleteFive(), nil
	case "delete-four":
		return DeleteFour(), nil
	case "delete-key":
		return DeleteKey(), nil
	case "delete-mode":
		return DeleteMode(), nil
	case "delete-one":
		return DeleteOne(), nil
	case "delete-themes":
		return DeleteThemes(), nil
	case "delete-three":
		return DeleteThree(), nil
	case "delete-two":
		return DeleteTwo(), nil
	case "delivery":
		return Delivery(), nil
	case "descend":
		return Descend(), nil
	case "desk-lamp":
		return DeskLamp(), nil
	case "desk-lamp-one":
		return DeskLampOne(), nil
	case "devices":
		return Devices(), nil
	case "diamond-necklace":
		return DiamondNecklace(), nil
	case "diamond-one":
		return DiamondOne(), nil
	case "diamond-ring":
		return DiamondRing(), nil
	case "diamond-three":
		return DiamondThree(), nil
	case "diamond-two":
		return DiamondTwo(), nil
	case "diamonds":
		return Diamonds(), nil
	case "difference-set":
		return DifferenceSet(), nil
	case "digital-watches":
		return DigitalWatches(), nil
	case "direction":
		return Direction(), nil
	case "direction-adjustment-two":
		return DirectionAdjustmentTwo(), nil
	case "disabaled-web":
		return DisabaledWeb(), nil
	case "disabled-laptop":
		return DisabledLaptop(), nil
	case "disappointed-face":
		return DisappointedFace(), nil
	case "discovery-index":
		return DiscoveryIndex(), nil
	case "disk":
		return Disk(), nil
	case "disk-one":
		return DiskOne(), nil
	case "disk-two":
		return DiskTwo(), nil
	case "dislike-two":
		return DislikeTwo(), nil
	case "display":
		return Display(), nil
	case "distraught-face":
		return DistraughtFace(), nil
	case "distribute-horizontal-spacing":
		return DistributeHorizontalSpacing(), nil
	case "distribute-horizontally":
		return DistributeHorizontally(), nil
	case "distribute-vertical-spacing":
		return DistributeVerticalSpacing(), nil
	case "distribute-vertically":
		return DistributeVertically(), nil
	case "diving":
		return Diving(), nil
	case "diving-bottle":
		return DivingBottle(), nil
	case "diving-suit":
		return DivingSuit(), nil
	case "division":
		return Division(), nil
	case "dizzy-face":
		return DizzyFace(), nil
	case "doc-add":
		return DocAdd(), nil
	case "doc-detail":
		return DocDetail(), nil
	case "doc-fail":
		return DocFail(), nil
	case "doc-search":
		return DocSearch(), nil
	case "doc-search-two":
		return DocSearchTwo(), nil
	case "doc-success":
		return DocSuccess(), nil
	case "document-folder":
		return DocumentFolder(), nil
	case "dog":
		return Dog(), nil
	case "dolphin":
		return Dolphin(), nil
	case "dome-light":
		return DomeLight(), nil
	case "door-handle":
		return DoorHandle(), nil
	case "double-bed":
		return DoubleBed(), nil
	case "doughnut":
		return Doughnut(), nil
	case "down-c":
		return DownC(), nil
	case "down-one":
		return DownOne(), nil
	case "down-square":
		return DownSquare(), nil
	case "down-two":
		return DownTwo(), nil
	case "download-four":
		return DownloadFour(), nil
	case "download-laptop":
		return DownloadLaptop(), nil
	case "download-three":
		return DownloadThree(), nil
	case "download-web":
		return DownloadWeb(), nil
	case "dragon-zodiac":
		return DragonZodiac(), nil
	case "dribble":
		return Dribble(), nil
	case "drink":
		return Drink(), nil
	case "drone":
		return Drone(), nil
	case "drone-one":
		return DroneOne(), nil
	case "drop-shadow-down":
		return DropShadowDown(), nil
	case "drop-shadow-left":
		return DropShadowLeft(), nil
	case "drop-shadow-right":
		return DropShadowRight(), nil
	case "drop-shadow-up":
		return DropShadowUp(), nil
	case "dropbox":
		return Dropbox(), nil
	case "drumstick":
		return Drumstick(), nil
	case "duck":
		return Duck(), nil
	case "dvi":
		return Dvi(), nil
	case "eagle":
		return Eagle(), nil
	case "easy":
		return Easy(), nil
	case "edit":
		return Edit(), nil
	case "edit-movie":
		return EditMovie(), nil
	case "edit-name":
		return EditName(), nil
	case "edit-two":
		return EditTwo(), nil
	case "editing":
		return Editing(), nil
	case "effects":
		return Effects(), nil
	case "egg":
		return Egg(), nil
	case "egg-one":
		return EggOne(), nil
	case "eggplant":
		return Eggplant(), nil
	case "eight-key":
		return EightKey(), nil
	case "electric-drill":
		return ElectricDrill(), nil
	case "electric-iron":
		return ElectricIron(), nil
	case "electric-wave":
		return ElectricWave(), nil
	case "electrocardiogram":
		return Electrocardiogram(), nil
	case "electronic-door-lock":
		return ElectronicDoorLock(), nil
	case "electronic-locks-close":
		return ElectronicLocksClose(), nil
	case "electronic-locks-open":
		return ElectronicLocksOpen(), nil
	case "electronic-pen":
		return ElectronicPen(), nil
	case "elevator":
		return Elevator(), nil
	case "email-block":
		return EmailBlock(), nil
	case "email-delect":
		return EmailDelect(), nil
	case "email-lock":
		return EmailLock(), nil
	case "email-search":
		return EmailSearch(), nil
	case "email-security":
		return EmailSecurity(), nil
	case "emotion-happy":
		return EmotionHappy(), nil
	case "emotion-unhappy":
		return EmotionUnhappy(), nil
	case "empty":
		return Empty(), nil
	case "endocrine":
		return Endocrine(), nil
	case "endpoint-displacement":
		return EndpointDisplacement(), nil
	case "energy-socket":
		return EnergySocket(), nil
	case "engineering-brand":
		return EngineeringBrand(), nil
	case "engineering-vehicle":
		return EngineeringVehicle(), nil
	case "english":
		return English(), nil
	case "english-mustache":
		return EnglishMustache(), nil
	case "enquire":
		return Enquire(), nil
	case "enter-key":
		return EnterKey(), nil
	case "enter-key-one":
		return EnterKeyOne(), nil
	case "enter-the-keyboard":
		return EnterTheKeyboard(), nil
	case "entertainment":
		return Entertainment(), nil
	case "equal-ratio":
		return EqualRatio(), nil
	case "equalizer":
		return Equalizer(), nil
	case "erase":
		return Erase(), nil
	case "error":
		return Error(), nil
	case "escalators":
		return Escalators(), nil
	case "ethernet-off":
		return EthernetOff(), nil
	case "ethernet-on":
		return EthernetOn(), nil
	case "every-user":
		return EveryUser(), nil
	case "excel":
		return Excel(), nil
	case "excel-one":
		return ExcelOne(), nil
	case "exchange-four":
		return ExchangeFour(), nil
	case "exchange-one":
		return ExchangeOne(), nil
	case "exchange-three":
		return ExchangeThree(), nil
	case "exchange-two":
		return ExchangeTwo(), nil
	case "exclusive-gateway":
		return ExclusiveGateway(), nil
	case "expand-down":
		return ExpandDown(), nil
	case "expand-left":
		return ExpandLeft(), nil
	case "expand-right":
		return ExpandRight(), nil
	case "expand-up":
		return ExpandUp(), nil
	case "experiment":
		return Experiment(), nil
	case "experiment-one":
		return ExperimentOne(), nil
	case "express-delivery":
		return ExpressDelivery(), nil
	case "expressionless-face":
		return ExpressionlessFace(), nil
	case "extend":
		return Extend(), nil
	case "eyebrow":
		return Eyebrow(), nil
	case "eyes":
		return Eyes(), nil
	case "f-eight-key":
		return FEightKey(), nil
	case "f-five-key":
		return FFiveKey(), nil
	case "f-four-key":
		return FFourKey(), nil
	case "f-n-key":
		return FNKey(), nil
	case "f-nine-key":
		return FNineKey(), nil
	case "f-one-key":
		return FOneKey(), nil
	case "f-seven-key":
		return FSevenKey(), nil
	case "f-six-key":
		return FSixKey(), nil
	case "f-three-key":
		return FThreeKey(), nil
	case "f-two-key":
		return FTwoKey(), nil
	case "f-zero-key":
		return FZeroKey(), nil
	case "face-powder":
		return FacePowder(), nil
	case "face-with-smiling-open-eyes":
		return FaceWithSmilingOpenEyes(), nil
	case "face-without-mouth":
		return FaceWithoutMouth(), nil
	case "facebook":
		return Facebook(), nil
	case "facetime":
		return Facetime(), nil
	case "faceu":
		return Faceu(), nil
	case "facial-cleanser":
		return FacialCleanser(), nil
	case "facial-mask":
		return FacialMask(), nil
	case "factory-building":
		return FactoryBuilding(), nil
	case "family":
		return Family(), nil
	case "feelgood":
		return Feelgood(), nil
	case "feelgood-one":
		return FeelgoodOne(), nil
	case "female":
		return Female(), nil
	case "ferris-wheel":
		return FerrisWheel(), nil
	case "figma":
		return Figma(), nil
	case "figma-component":
		return FigmaComponent(), nil
	case "figma-mask":
		return FigmaMask(), nil
	case "file-addition":
		return FileAddition(), nil
	case "file-cabinet":
		return FileCabinet(), nil
	case "file-code":
		return FileCode(), nil
	case "file-collection":
		return FileCollection(), nil
	case "file-collection-one":
		return FileCollectionOne(), nil
	case "file-conversion":
		return FileConversion(), nil
	case "file-date":
		return FileDate(), nil
	case "file-date-one":
		return FileDateOne(), nil
	case "file-display":
		return FileDisplay(), nil
	case "file-display-one":
		return FileDisplayOne(), nil
	case "file-editing":
		return FileEditing(), nil
	case "file-editing-one":
		return FileEditingOne(), nil
	case "file-excel":
		return FileExcel(), nil
	case "file-failed":
		return FileFailed(), nil
	case "file-focus":
		return FileFocus(), nil
	case "file-focus-one":
		return FileFocusOne(), nil
	case "file-gif":
		return FileGif(), nil
	case "file-hash":
		return FileHash(), nil
	case "file-hiding":
		return FileHiding(), nil
	case "file-jpg":
		return FileJpg(), nil
	case "file-lock":
		return FileLock(), nil
	case "file-lock-one":
		return FileLockOne(), nil
	case "file-music":
		return FileMusic(), nil
	case "file-music-one":
		return FileMusicOne(), nil
	case "file-pdf":
		return FilePdf(), nil
	case "file-protection":
		return FileProtection(), nil
	case "file-protection-one":
		return FileProtectionOne(), nil
	case "file-quality":
		return FileQuality(), nil
	case "file-quality-one":
		return FileQualityOne(), nil
	case "file-question":
		return FileQuestion(), nil
	case "file-removal":
		return FileRemoval(), nil
	case "file-search":
		return FileSearch(), nil
	case "file-search-one":
		return FileSearchOne(), nil
	case "file-search-two":
		return FileSearchTwo(), nil
	case "file-settings":
		return FileSettings(), nil
	case "file-settings-one":
		return FileSettingsOne(), nil
	case "file-staff":
		return FileStaff(), nil
	case "file-staff-one":
		return FileStaffOne(), nil
	case "file-success":
		return FileSuccess(), nil
	case "file-text":
		return FileText(), nil
	case "file-tips":
		return FileTips(), nil
	case "file-txt":
		return FileTxt(), nil
	case "file-withdrawal":
		return FileWithdrawal(), nil
	case "file-word":
		return FileWord(), nil
	case "fill":
		return Fill(), nil
	case "filter":
		return Filter(), nil
	case "finance":
		return Finance(), nil
	case "financing":
		return Financing(), nil
	case "financing-one":
		return FinancingOne(), nil
	case "financing-two":
		return FinancingTwo(), nil
	case "find":
		return Find(), nil
	case "fingernail":
		return Fingernail(), nil
	case "fire":
		return Fire(), nil
	case "fire-extinguisher":
		return FireExtinguisher(), nil
	case "fire-extinguisher-one":
		return FireExtinguisherOne(), nil
	case "fireworks":
		return Fireworks(), nil
	case "first-aid-kit":
		return FirstAidKit(), nil
	case "fish":
		return Fish(), nil
	case "fish-one":
		return FishOne(), nil
	case "fist":
		return Fist(), nil
	case "five":
		return Five(), nil
	case "five-five":
		return FiveFive(), nil
	case "five-key":
		return FiveKey(), nil
	case "five-star-badge":
		return FiveStarBadge(), nil
	case "flag":
		return Flag(), nil
	case "flash-payment":
		return FlashPayment(), nil
	case "flashlamp":
		return Flashlamp(), nil
	case "flashlight":
		return Flashlight(), nil
	case "flask":
		return Flask(), nil
	case "flight-airflow":
		return FlightAirflow(), nil
	case "flight-safety":
		return FlightSafety(), nil
	case "flip-camera":
		return FlipCamera(), nil
	case "flip-horizontally":
		return FlipHorizontally(), nil
	case "flip-vertically":
		return FlipVertically(), nil
	case "float":
		return Float(), nil
	case "fm":
		return Fm(), nil
	case "focus":
		return Focus(), nil
	case "focus-one":
		return FocusOne(), nil
	case "folder":
		return Folder(), nil
	case "folder-block":
		return FolderBlock(), nil
	case "folder-block-one":
		return FolderBlockOne(), nil
	case "folder-close":
		return FolderClose(), nil
	case "folder-code":
		return FolderCode(), nil
	case "folder-conversion":
		return FolderConversion(), nil
	case "folder-download":
		return FolderDownload(), nil
	case "folder-failed":
		return FolderFailed(), nil
	case "folder-focus":
		return FolderFocus(), nil
	case "folder-focus-one":
		return FolderFocusOne(), nil
	case "folder-lock":
		return FolderLock(), nil
	case "folder-lock-one":
		return FolderLockOne(), nil
	case "folder-minus":
		return FolderMinus(), nil
	case "folder-music":
		return FolderMusic(), nil
	case "folder-music-one":
		return FolderMusicOne(), nil
	case "folder-one":
		return FolderOne(), nil
	case "folder-open":
		return FolderOpen(), nil
	case "folder-plus":
		return FolderPlus(), nil
	case "folder-protection":
		return FolderProtection(), nil
	case "folder-protection-one":
		return FolderProtectionOne(), nil
	case "folder-quality":
		return FolderQuality(), nil
	case "folder-quality-one":
		return FolderQualityOne(), nil
	case "folder-search":
		return FolderSearch(), nil
	case "folder-search-one":
		return FolderSearchOne(), nil
	case "folder-settings":
		return FolderSettings(), nil
	case "folder-settings-one":
		return FolderSettingsOne(), nil
	case "folder-success":
		return FolderSuccess(), nil
	case "folder-upload":
		return FolderUpload(), nil
	case "folder-withdrawal":
		return FolderWithdrawal(), nil
	case "font-search":
		return FontSearch(), nil
	case "forbid":
		return Forbid(), nil
	case "fork":
		return Fork(), nil
	case "fork-spoon":
		return ForkSpoon(), nil
	case "form":
		return Form(), nil
	case "format":
		return Format(), nil
	case "format-brush":
		return FormatBrush(), nil
	case "foundation-makeup":
		return FoundationMakeup(), nil
	case "four":
		return Four(), nil
	case "four-arrows":
		return FourArrows(), nil
	case "four-four":
		return FourFour(), nil
	case "four-key":
		return FourKey(), nil
	case "four-point-connection":
		return FourPointConnection(), nil
	case "four-round-point-connection":
		return FourRoundPointConnection(), nil
	case "foursquare":
		return Foursquare(), nil
	case "french-fries":
		return FrenchFries(), nil
	case "friends-circle":
		return FriendsCircle(), nil
	case "frigate":
		return Frigate(), nil
	case "frog":
		return Frog(), nil
	case "frowning-face-whit-open-mouth":
		return FrowningFaceWhitOpenMouth(), nil
	case "fruiter":
		return Fruiter(), nil
	case "full-dress-longuette":
		return FullDressLonguette(), nil
	case "full-screen-play":
		return FullScreenPlay(), nil
	case "full-selection":
		return FullSelection(), nil
	case "game":
		return Game(), nil
	case "game-console":
		return GameConsole(), nil
	case "game-console-one":
		return GameConsoleOne(), nil
	case "game-emoji":
		return GameEmoji(), nil
	case "game-handle":
		return GameHandle(), nil
	case "game-ps":
		return GamePs(), nil
	case "game-three":
		return GameThree(), nil
	case "game-two":
		return GameTwo(), nil
	case "gamepad":
		return Gamepad(), nil
	case "gas":
		return Gas(), nil
	case "gate":
		return Gate(), nil
	case "gate-machine":
		return GateMachine(), nil
	case "gauze":
		return Gauze(), nil
	case "gavel":
		return Gavel(), nil
	case "general-branch":
		return GeneralBranch(), nil
	case "germs":
		return Germs(), nil
	case "ghost":
		return Ghost(), nil
	case "gift":
		return Gift(), nil
	case "gift-bag":
		return GiftBag(), nil
	case "gift-box":
		return GiftBox(), nil
	case "girl":
		return Girl(), nil
	case "girl-one":
		return GirlOne(), nil
	case "girl-two":
		return GirlTwo(), nil
	case "gitlab":
		return Gitlab(), nil
	case "glasses":
		return Glasses(), nil
	case "glasses-one":
		return GlassesOne(), nil
	case "glasses-three":
		return GlassesThree(), nil
	case "globe":
		return Globe(), nil
	case "glove":
		return Glove(), nil
	case "goblet":
		return Goblet(), nil
	case "goblet-cracking":
		return GobletCracking(), nil
	case "goblet-full":
		return GobletFull(), nil
	case "goblet-one":
		return GobletOne(), nil
	case "gold-medal":
		return GoldMedal(), nil
	case "gold-medal-two":
		return GoldMedalTwo(), nil
	case "golf-course":
		return GolfCourse(), nil
	case "gongfu":
		return Gongfu(), nil
	case "good":
		return Good(), nil
	case "good-one":
		return GoodOne(), nil
	case "good-two":
		return GoodTwo(), nil
	case "google":
		return Google(), nil
	case "google-ads":
		return GoogleAds(), nil
	case "gopro":
		return Gopro(), nil
	case "gps":
		return Gps(), nil
	case "graphic-design":
		return GraphicDesign(), nil
	case "graphic-design-two":
		return GraphicDesignTwo(), nil
	case "graphic-stitching-four":
		return GraphicStitchingFour(), nil
	case "graphic-stitching-three":
		return GraphicStitchingThree(), nil
	case "green-house":
		return GreenHouse(), nil
	case "green-new-energy":
		return GreenNewEnergy(), nil
	case "grimacing-face":
		return GrimacingFace(), nil
	case "grinning-face":
		return GrinningFace(), nil
	case "grinning-face-with-open-mouth":
		return GrinningFaceWithOpenMouth(), nil
	case "grinning-face-with-squinting-eyes":
		return GrinningFaceWithSquintingEyes(), nil
	case "grinning-face-with-tightly-closed-eyes":
		return GrinningFaceWithTightlyClosedEyes(), nil
	case "grinning-face-with-tightly-closed-eyes-open-mouth":
		return GrinningFaceWithTightlyClosedEyesOpenMouth(), nil
	case "group":
		return Group(), nil
	case "guide-board":
		return GuideBoard(), nil
	case "gymnastics":
		return Gymnastics(), nil
	case "gymnastics-one":
		return GymnasticsOne(), nil
	case "hair-clip":
		return HairClip(), nil
	case "hair-dryer":
		return HairDryer(), nil
	case "hair-dryer-one":
		return HairDryerOne(), nil
	case "halo":
		return Halo(), nil
	case "hamburger":
		return Hamburger(), nil
	case "hamburger-one":
		return HamburgerOne(), nil
	case "hammer-and-anvil":
		return HammerAndAnvil(), nil
	case "hand-cream":
		return HandCream(), nil
	case "hand-down":
		return HandDown(), nil
	case "hand-left":
		return HandLeft(), nil
	case "hand-painted-plate":
		return HandPaintedPlate(), nil
	case "hand-right":
		return HandRight(), nil
	case "hand-up":
		return HandUp(), nil
	case "handbag":
		return Handbag(), nil
	case "handheld":
		return Handheld(), nil
	case "handle-a":
		return HandleA(), nil
	case "handle-b":
		return HandleB(), nil
	case "handle-c":
		return HandleC(), nil
	case "handle-down":
		return HandleDown(), nil
	case "handle-left":
		return HandleLeft(), nil
	case "handle-right":
		return HandleRight(), nil
	case "handle-round":
		return HandleRound(), nil
	case "handle-square":
		return HandleSquare(), nil
	case "handle-triangle":
		return HandleTriangle(), nil
	case "handle-up":
		return HandleUp(), nil
	case "handle-x":
		return HandleX(), nil
	case "handle-y":
		return HandleY(), nil
	case "handle-z":
		return HandleZ(), nil
	case "hands":
		return Hands(), nil
	case "handwashing":
		return Handwashing(), nil
	case "handwashing-fluid":
		return HandwashingFluid(), nil
	case "hanger":
		return Hanger(), nil
	case "hanger-two":
		return HangerTwo(), nil
	case "hard-disk":
		return HardDisk(), nil
	case "hard-disk-one":
		return HardDiskOne(), nil
	case "harm":
		return Harm(), nil
	case "hashtag-key":
		return HashtagKey(), nil
	case "hat":
		return Hat(), nil
	case "hdd":
		return Hdd(), nil
	case "hdmi-cable":
		return HdmiCable(), nil
	case "hdmi-connector":
		return HdmiConnector(), nil
	case "headphone-sound":
		return HeadphoneSound(), nil
	case "headset":
		return Headset(), nil
	case "headset-one":
		return HeadsetOne(), nil
	case "headset-two":
		return HeadsetTwo(), nil
	case "headwear":
		return Headwear(), nil
	case "health":
		return Health(), nil
	case "health-products":
		return HealthProducts(), nil
	case "healthy-recognition":
		return HealthyRecognition(), nil
	case "heart-ballon":
		return HeartBallon(), nil
	case "heater-resistor":
		return HeaterResistor(), nil
	case "helmet":
		return Helmet(), nil
	case "helmet-one":
		return HelmetOne(), nil
	case "help":
		return Help(), nil
	case "helpcenter":
		return Helpcenter(), nil
	case "hexagon-one":
		return HexagonOne(), nil
	case "hexagon-strip":
		return HexagonStrip(), nil
	case "hi":
		return Hi(), nil
	case "high-heeled-shoes":
		return HighHeeledShoes(), nil
	case "high-light":
		return HighLight(), nil
	case "high-speed-rail":
		return HighSpeedRail(), nil
	case "hippo":
		return Hippo(), nil
	case "history-query":
		return HistoryQuery(), nil
	case "hockey":
		return Hockey(), nil
	case "hold-interface":
		return HoldInterface(), nil
	case "hold-seeds":
		return HoldSeeds(), nil
	case "holy-sword":
		return HolySword(), nil
	case "home":
		return Home(), nil
	case "home-two":
		return HomeTwo(), nil
	case "homestay":
		return Homestay(), nil
	case "honey":
		return Honey(), nil
	case "honey-one":
		return HoneyOne(), nil
	case "horizontal-tidy-up":
		return HorizontalTidyUp(), nil
	case "horizontally-centered":
		return HorizontallyCentered(), nil
	case "hospital":
		return Hospital(), nil
	case "hospital-four":
		return HospitalFour(), nil
	case "hospital-three":
		return HospitalThree(), nil
	case "hospital-two":
		return HospitalTwo(), nil
	case "hot-air-balloon":
		return HotAirBalloon(), nil
	case "hot-pot":
		return HotPot(), nil
	case "hot-pot-one":
		return HotPotOne(), nil
	case "hotel":
		return Hotel(), nil
	case "hotel-do-not-clean":
		return HotelDoNotClean(), nil
	case "hotel-please-clean":
		return HotelPleaseClean(), nil
	case "hourglass-full":
		return HourglassFull(), nil
	case "hourglass-null":
		return HourglassNull(), nil
	case "html-five":
		return HtmlFive(), nil
	case "hunting-gear":
		return HuntingGear(), nil
	case "i-mac":
		return IMac(), nil
	case "icecream":
		return Icecream(), nil
	case "icecream-five":
		return IcecreamFive(), nil
	case "icecream-four":
		return IcecreamFour(), nil
	case "icecream-two":
		return IcecreamTwo(), nil
	case "id-card":
		return IdCard(), nil
	case "id-card-h":
		return IdCardH(), nil
	case "id-card-v":
		return IdCardV(), nil
	case "image-files":
		return ImageFiles(), nil
	case "imbalance":
		return Imbalance(), nil
	case "in-flight":
		return InFlight(), nil
	case "inbox":
		return Inbox(), nil
	case "inbox-download-r":
		return InboxDownloadR(), nil
	case "inbox-in":
		return InboxIn(), nil
	case "inbox-out":
		return InboxOut(), nil
	case "inbox-r":
		return InboxR(), nil
	case "inbox-success":
		return InboxSuccess(), nil
	case "inbox-success-r":
		return InboxSuccessR(), nil
	case "inbox-upload-r":
		return InboxUploadR(), nil
	case "inclusive-gateway":
		return InclusiveGateway(), nil
	case "incoming":
		return Incoming(), nil
	case "induction-lock":
		return InductionLock(), nil
	case "industrial-scales":
		return IndustrialScales(), nil
	case "info":
		return Info(), nil
	case "infusion":
		return Infusion(), nil
	case "injection":
		return Injection(), nil
	case "inner-shadow-bottom-left":
		return InnerShadowBottomLeft(), nil
	case "inner-shadow-bottom-right":
		return InnerShadowBottomRight(), nil
	case "inner-shadow-down":
		return InnerShadowDown(), nil
	case "inner-shadow-left":
		return InnerShadowLeft(), nil
	case "inner-shadow-right":
		return InnerShadowRight(), nil
	case "inner-shadow-top-left":
		return InnerShadowTopLeft(), nil
	case "inner-shadow-top-right":
		return InnerShadowTopRight(), nil
	case "inner-shadow-up":
		return InnerShadowUp(), nil
	case "insert-card":
		return InsertCard(), nil
	case "inspection":
		return Inspection(), nil
	case "instagram":
		return Instagram(), nil
	case "instagram-one":
		return InstagramOne(), nil
	case "install":
		return Install(), nil
	case "instruction":
		return Instruction(), nil
	case "intercom":
		return Intercom(), nil
	case "intermediate-mode":
		return IntermediateMode(), nil
	case "internal-expansion":
		return InternalExpansion(), nil
	case "internal-reduction":
		return InternalReduction(), nil
	case "intersection":
		return Intersection(), nil
	case "invalid-files":
		return InvalidFiles(), nil
	case "invert-camera":
		return InvertCamera(), nil
	case "ipad":
		return Ipad(), nil
	case "ipad-one":
		return IpadOne(), nil
	case "iphone":
		return Iphone(), nil
	case "ipo":
		return Ipo(), nil
	case "iron":
		return Iron(), nil
	case "iron-disable":
		return IronDisable(), nil
	case "iron-three":
		return IronThree(), nil
	case "iron-two":
		return IronTwo(), nil
	case "iwatch":
		return Iwatch(), nil
	case "iwatch-one":
		return IwatchOne(), nil
	case "iwatch-two":
		return IwatchTwo(), nil
	case "jewelry":
		return Jewelry(), nil
	case "jinritoutiao":
		return Jinritoutiao(), nil
	case "journey":
		return Journey(), nil
	case "joystick":
		return Joystick(), nil
	case "juice":
		return Juice(), nil
	case "jump":
		return Jump(), nil
	case "kettle":
		return Kettle(), nil
	case "kettle-one":
		return KettleOne(), nil
	case "key":
		return Key(), nil
	case "key-one":
		return KeyOne(), nil
	case "key-two":
		return KeyTwo(), nil
	case "keyboard":
		return Keyboard(), nil
	case "keyhole":
		return Keyhole(), nil
	case "keyline":
		return Keyline(), nil
	case "kitchen-knife":
		return KitchenKnife(), nil
	case "knife-fork":
		return KnifeFork(), nil
	case "koala-bear":
		return KoalaBear(), nil
	case "kungfu":
		return Kungfu(), nil
	case "label":
		return Label(), nil
	case "lamp":
		return Lamp(), nil
	case "land-surveying":
		return LandSurveying(), nil
	case "landing":
		return Landing(), nil
	case "laptop":
		return Laptop(), nil
	case "laptop-computer":
		return LaptopComputer(), nil
	case "laptop-one":
		return LaptopOne(), nil
	case "lark-one":
		return LarkOne(), nil
	case "layers":
		return Layers(), nil
	case "layout-five":
		return LayoutFive(), nil
	case "layout-four":
		return LayoutFour(), nil
	case "layout-one":
		return LayoutOne(), nil
	case "layout-three":
		return LayoutThree(), nil
	case "layout-two":
		return LayoutTwo(), nil
	case "leaves-one":
		return LeavesOne(), nil
	case "leaves-two":
		return LeavesTwo(), nil
	case "led-diode":
		return LedDiode(), nil
	case "left-bar":
		return LeftBar(), nil
	case "left-c":
		return LeftC(), nil
	case "left-expand":
		return LeftExpand(), nil
	case "left-one":
		return LeftOne(), nil
	case "left-square":
		return LeftSquare(), nil
	case "left-two":
		return LeftTwo(), nil
	case "lemon":
		return Lemon(), nil
	case "lens-alignment":
		return LensAlignment(), nil
	case "leo":
		return Leo(), nil
	case "level":
		return Level(), nil
	case "light-house":
		return LightHouse(), nil
	case "light-member":
		return LightMember(), nil
	case "lightning":
		return Lightning(), nil
	case "like":
		return Like(), nil
	case "lincoln":
		return Lincoln(), nil
	case "lip-gloss":
		return LipGloss(), nil
	case "lip-tattoo":
		return LipTattoo(), nil
	case "lipstick":
		return Lipstick(), nil
	case "lipstick-one":
		return LipstickOne(), nil
	case "liqueur":
		return Liqueur(), nil
	case "list-alphabet":
		return ListAlphabet(), nil
	case "list-bottom":
		return ListBottom(), nil
	case "list-checkbox":
		return ListCheckbox(), nil
	case "list-fail":
		return ListFail(), nil
	case "list-middle":
		return ListMiddle(), nil
	case "list-one":
		return ListOne(), nil
	case "list-success":
		return ListSuccess(), nil
	case "list-top":
		return ListTop(), nil
	case "list-two":
		return ListTwo(), nil
	case "loading-three":
		return LoadingThree(), nil
	case "local":
		return Local(), nil
	case "local-pin":
		return LocalPin(), nil
	case "local-two":
		return LocalTwo(), nil
	case "lock":
		return Lock(), nil
	case "lock-one":
		return LockOne(), nil
	case "locking-computer":
		return LockingComputer(), nil
	case "locking-laptop":
		return LockingLaptop(), nil
	case "locking-picture":
		return LockingPicture(), nil
	case "locking-web":
		return LockingWeb(), nil
	case "log":
		return Log(), nil
	case "lotion":
		return Lotion(), nil
	case "lotus":
		return Lotus(), nil
	case "loudly-crying-face":
		return LoudlyCryingFace(), nil
	case "loudly-crying-face-whit-open-mouth":
		return LoudlyCryingFaceWhitOpenMouth(), nil
	case "love-and-help":
		return LoveAndHelp(), nil
	case "luggage":
		return Luggage(), nil
	case "mac-finder":
		return MacFinder(), nil
	case "macadamia-nut":
		return MacadamiaNut(), nil
	case "magnet":
		return Magnet(), nil
	case "mail":
		return Mail(), nil
	case "mail-download":
		return MailDownload(), nil
	case "mail-edit":
		return MailEdit(), nil
	case "mail-open":
		return MailOpen(), nil
	case "mail-review":
		return MailReview(), nil
	case "mail-unpacking":
		return MailUnpacking(), nil
	case "maill-one":
		return MaillOne(), nil
	case "makeups":
		return Makeups(), nil
	case "male":
		return Male(), nil
	case "mall-bag":
		return MallBag(), nil
	case "manual-gear":
		return ManualGear(), nil
	case "many-to-many":
		return ManyToMany(), nil
	case "map-distance":
		return MapDistance(), nil
	case "map-draw":
		return MapDraw(), nil
	case "map-road":
		return MapRoad(), nil
	case "map-road-two":
		return MapRoadTwo(), nil
	case "map-two":
		return MapTwo(), nil
	case "margin":
		return Margin(), nil
	case "margin-one":
		return MarginOne(), nil
	case "mark":
		return Mark(), nil
	case "market-analysis":
		return MarketAnalysis(), nil
	case "mascara":
		return Mascara(), nil
	case "mask":
		return Mask(), nil
	case "mask-one":
		return MaskOne(), nil
	case "maslow-pyramids":
		return MaslowPyramids(), nil
	case "massage-chair":
		return MassageChair(), nil
	case "massage-chair-one":
		return MassageChairOne(), nil
	case "massage-table":
		return MassageTable(), nil
	case "master":
		return Master(), nil
	case "material":
		return Material(), nil
	case "material-two":
		return MaterialTwo(), nil
	case "me":
		return Me(), nil
	case "measuring-cup":
		return MeasuringCup(), nil
	case "medal-one":
		return MedalOne(), nil
	case "medical-box":
		return MedicalBox(), nil
	case "medical-files":
		return MedicalFiles(), nil
	case "medical-mark":
		return MedicalMark(), nil
	case "medication-time":
		return MedicationTime(), nil
	case "medicine-bottle":
		return MedicineBottle(), nil
	case "medicine-bottle-one":
		return MedicineBottleOne(), nil
	case "medicine-chest":
		return MedicineChest(), nil
	case "memory-card":
		return MemoryCard(), nil
	case "memory-card-one":
		return MemoryCardOne(), nil
	case "memory-one":
		return MemoryOne(), nil
	case "menu-fold-one":
		return MenuFoldOne(), nil
	case "menu-unfold-one":
		return MenuUnfoldOne(), nil
	case "message":
		return Message(), nil
	case "message-emoji":
		return MessageEmoji(), nil
	case "message-one":
		return MessageOne(), nil
	case "message-privacy":
		return MessagePrivacy(), nil
	case "message-search":
		return MessageSearch(), nil
	case "message-security":
		return MessageSecurity(), nil
	case "message-sent":
		return MessageSent(), nil
	case "messages":
		return Messages(), nil
	case "messages-one":
		return MessagesOne(), nil
	case "micro-sd":
		return MicroSd(), nil
	case "micro-slr-camera":
		return MicroSlrCamera(), nil
	case "microphone-one":
		return MicrophoneOne(), nil
	case "microscope":
		return Microscope(), nil
	case "microscope-one":
		return MicroscopeOne(), nil
	case "microwave-oven":
		return MicrowaveOven(), nil
	case "milk":
		return Milk(), nil
	case "milk-one":
		return MilkOne(), nil
	case "mind-mapping":
		return MindMapping(), nil
	case "mini-sd-card":
		return MiniSdCard(), nil
	case "minus-the-bottom":
		return MinusTheBottom(), nil
	case "minus-the-top":
		return MinusTheTop(), nil
	case "mirror":
		return Mirror(), nil
	case "mirror-one":
		return MirrorOne(), nil
	case "mirror-two":
		return MirrorTwo(), nil
	case "mitsubishi":
		return Mitsubishi(), nil
	case "modify":
		return Modify(), nil
	case "modify-two":
		return ModifyTwo(), nil
	case "monitor":
		return Monitor(), nil
	case "monitor-camera":
		return MonitorCamera(), nil
	case "monitor-one":
		return MonitorOne(), nil
	case "monkey":
		return Monkey(), nil
	case "monument-one":
		return MonumentOne(), nil
	case "monument-two":
		return MonumentTwo(), nil
	case "moon":
		return Moon(), nil
	case "more-app":
		return MoreApp(), nil
	case "more-four":
		return MoreFour(), nil
	case "more-three":
		return MoreThree(), nil
	case "more-two":
		return MoreTwo(), nil
	case "mountain":
		return Mountain(), nil
	case "mounted":
		return Mounted(), nil
	case "mouse":
		return Mouse(), nil
	case "mouse-one":
		return MouseOne(), nil
	case "move":
		return Move(), nil
	case "move-in-one":
		return MoveInOne(), nil
	case "move-one":
		return MoveOne(), nil
	case "movie":
		return Movie(), nil
	case "movie-board":
		return MovieBoard(), nil
	case "multi-circular":
		return MultiCircular(), nil
	case "multi-function-knife":
		return MultiFunctionKnife(), nil
	case "multi-picture-carousel":
		return MultiPictureCarousel(), nil
	case "multi-rectangle":
		return MultiRectangle(), nil
	case "multi-triangular-two":
		return MultiTriangularTwo(), nil
	case "multicast":
		return Multicast(), nil
	case "muscle":
		return Muscle(), nil
	case "museum-one":
		return MuseumOne(), nil
	case "museum-two":
		return MuseumTwo(), nil
	case "music":
		return Music(), nil
	case "music-cd":
		return MusicCd(), nil
	case "music-list":
		return MusicList(), nil
	case "music-one":
		return MusicOne(), nil
	case "mute":
		return Mute(), nil
	case "nail-polish":
		return NailPolish(), nil
	case "nail-polish-one":
		return NailPolishOne(), nil
	case "natural-mode":
		return NaturalMode(), nil
	case "navigation":
		return Navigation(), nil
	case "necktie":
		return Necktie(), nil
	case "needle":
		return Needle(), nil
	case "nested-arrows":
		return NestedArrows(), nil
	case "nests":
		return Nests(), nil
	case "network-drive":
		return NetworkDrive(), nil
	case "network-tree":
		return NetworkTree(), nil
	case "neural":
		return Neural(), nil
	case "neutral-face":
		return NeutralFace(), nil
	case "new-computer":
		return NewComputer(), nil
	case "new-dianziqian":
		return NewDianziqian(), nil
	case "new-picture":
		return NewPicture(), nil
	case "newlybuild":
		return Newlybuild(), nil
	case "newspaper-folding":
		return NewspaperFolding(), nil
	case "next":
		return Next(), nil
	case "nine-key":
		return NineKey(), nil
	case "nine-points-connected":
		return NinePointsConnected(), nil
	case "nintendo-switch":
		return NintendoSwitch(), nil
	case "nmr":
		return Nmr(), nil
	case "no-shooting":
		return NoShooting(), nil
	case "noodles":
		return Noodles(), nil
	case "notebook":
		return Notebook(), nil
	case "notebook-and-pen":
		return NotebookAndPen(), nil
	case "notebook-one":
		return NotebookOne(), nil
	case "notepad":
		return Notepad(), nil
	case "notes":
		return Notes(), nil
	case "nuclear-plant":
		return NuclearPlant(), nil
	case "nurse-cap":
		return NurseCap(), nil
	case "nut":
		return Nut(), nil
	case "nutrition":
		return Nutrition(), nil
	case "octagon":
		return Octagon(), nil
	case "oil-industry":
		return OilIndustry(), nil
	case "one":
		return One(), nil
	case "one-key":
		return OneKey(), nil
	case "one-one":
		return OneOne(), nil
	case "one-third-rotation":
		return OneThirdRotation(), nil
	case "one-to-many":
		return OneToMany(), nil
	case "one-to-one":
		return OneToOne(), nil
	case "onesies":
		return Onesies(), nil
	case "online-meeting":
		return OnlineMeeting(), nil
	case "open-an-account":
		return OpenAnAccount(), nil
	case "open-door":
		return OpenDoor(), nil
	case "open-one":
		return OpenOne(), nil
	case "optimize":
		return Optimize(), nil
	case "optional":
		return Optional(), nil
	case "orange":
		return Orange(), nil
	case "orange-one":
		return OrangeOne(), nil
	case "order":
		return Order(), nil
	case "orthopedic":
		return Orthopedic(), nil
	case "oscillator":
		return Oscillator(), nil
	case "other":
		return Other(), nil
	case "outbound":
		return Outbound(), nil
	case "outdoor":
		return Outdoor(), nil
	case "outgoing":
		return Outgoing(), nil
	case "oval-one":
		return OvalOne(), nil
	case "oven":
		return Oven(), nil
	case "overall-reduction":
		return OverallReduction(), nil
	case "owl":
		return Owl(), nil
	case "pacifier":
		return Pacifier(), nil
	case "pad":
		return Pad(), nil
	case "page-template":
		return PageTemplate(), nil
	case "pagoda":
		return Pagoda(), nil
	case "paint":
		return Paint(), nil
	case "painted-eggshell":
		return PaintedEggshell(), nil
	case "painted-screen":
		return PaintedScreen(), nil
	case "palace":
		return Palace(), nil
	case "palm":
		return Palm(), nil
	case "panda":
		return Panda(), nil
	case "panorama-horizontal":
		return PanoramaHorizontal(), nil
	case "paper-money":
		return PaperMoney(), nil
	case "paper-ship":
		return PaperShip(), nil
	case "parachute":
		return Parachute(), nil
	case "paragraph-alphabet":
		return ParagraphAlphabet(), nil
	case "paragraph-rectangle":
		return ParagraphRectangle(), nil
	case "paragraph-round":
		return ParagraphRound(), nil
	case "paragraph-triangle":
		return ParagraphTriangle(), nil
	case "parallel-gateway":
		return ParallelGateway(), nil
	case "parallelogram":
		return Parallelogram(), nil
	case "parenting-book":
		return ParentingBook(), nil
	case "parking":
		return Parking(), nil
	case "party-balloon":
		return PartyBalloon(), nil
	case "passport":
		return Passport(), nil
	case "passport-one":
		return PassportOne(), nil
	case "pause-one":
		return PauseOne(), nil
	case "pay-code":
		return PayCode(), nil
	case "pay-code-one":
		return PayCodeOne(), nil
	case "peach":
		return Peach(), nil
	case "pear":
		return Pear(), nil
	case "pearl-of-the-orient":
		return PearlOfTheOrient(), nil
	case "peas":
		return Peas(), nil
	case "pencil":
		return Pencil(), nil
	case "pennant":
		return Pennant(), nil
	case "pentagon-one":
		return PentagonOne(), nil
	case "people":
		return People(), nil
	case "people-bottom":
		return PeopleBottom(), nil
	case "people-bottom-card":
		return PeopleBottomCard(), nil
	case "people-delete":
		return PeopleDelete(), nil
	case "people-delete-one":
		return PeopleDeleteOne(), nil
	case "people-download":
		return PeopleDownload(), nil
	case "people-left":
		return PeopleLeft(), nil
	case "people-minus":
		return PeopleMinus(), nil
	case "people-minus-one":
		return PeopleMinusOne(), nil
	case "people-plus":
		return PeoplePlus(), nil
	case "people-plus-one":
		return PeoplePlusOne(), nil
	case "people-right":
		return PeopleRight(), nil
	case "people-safe":
		return PeopleSafe(), nil
	case "people-safe-one":
		return PeopleSafeOne(), nil
	case "people-search":
		return PeopleSearch(), nil
	case "people-search-one":
		return PeopleSearchOne(), nil
	case "people-speak":
		return PeopleSpeak(), nil
	case "people-top":
		return PeopleTop(), nil
	case "people-top-card":
		return PeopleTopCard(), nil
	case "people-unknown":
		return PeopleUnknown(), nil
	case "people-upload":
		return PeopleUpload(), nil
	case "peoples":
		return Peoples(), nil
	case "peoples-two":
		return PeoplesTwo(), nil
	case "percentage":
		return Percentage(), nil
	case "performance":
		return Performance(), nil
	case "perfume":
		return Perfume(), nil
	case "perfumer-bottle":
		return PerfumerBottle(), nil
	case "permissions":
		return Permissions(), nil
	case "personal-collection":
		return PersonalCollection(), nil
	case "personal-privacy":
		return PersonalPrivacy(), nil
	case "pesticide":
		return Pesticide(), nil
	case "petrol":
		return Petrol(), nil
	case "phone":
		return Phone(), nil
	case "phone-booth":
		return PhoneBooth(), nil
	case "phone-call":
		return PhoneCall(), nil
	case "phone-incoming":
		return PhoneIncoming(), nil
	case "phone-incoming-one":
		return PhoneIncomingOne(), nil
	case "phone-missed":
		return PhoneMissed(), nil
	case "phone-one":
		return PhoneOne(), nil
	case "phone-outgoing":
		return PhoneOutgoing(), nil
	case "phone-outgoing-one":
		return PhoneOutgoingOne(), nil
	case "phone-telephone":
		return PhoneTelephone(), nil
	case "phone-two":
		return PhoneTwo(), nil
	case "phone-video-call":
		return PhoneVideoCall(), nil
	case "phonograph":
		return Phonograph(), nil
	case "photograph":
		return Photograph(), nil
	case "piano":
		return Piano(), nil
	case "pic":
		return Pic(), nil
	case "pic-one":
		return PicOne(), nil
	case "picture":
		return Picture(), nil
	case "picture-album":
		return PictureAlbum(), nil
	case "picture-one":
		return PictureOne(), nil
	case "pie":
		return Pie(), nil
	case "pie-five":
		return PieFive(), nil
	case "pie-four":
		return PieFour(), nil
	case "pie-one":
		return PieOne(), nil
	case "pie-seven":
		return PieSeven(), nil
	case "pie-six":
		return PieSix(), nil
	case "pie-three":
		return PieThree(), nil
	case "pie-two":
		return PieTwo(), nil
	case "pig":
		return Pig(), nil
	case "pigeon":
		return Pigeon(), nil
	case "pill":
		return Pill(), nil
	case "pills":
		return Pills(), nil
	case "pin":
		return Pin(), nil
	case "pinwheel":
		return Pinwheel(), nil
	case "pivot-table":
		return PivotTable(), nil
	case "plan":
		return Plan(), nil
	case "planet":
		return Planet(), nil
	case "platte":
		return Platte(), nil
	case "play":
		return Play(), nil
	case "play-basketball":
		return PlayBasketball(), nil
	case "play-one":
		return PlayOne(), nil
	case "play-two":
		return PlayTwo(), nil
	case "play-volleyball":
		return PlayVolleyball(), nil
	case "play-wrong":
		return PlayWrong(), nil
	case "playback-progress":
		return PlaybackProgress(), nil
	case "plug":
		return Plug(), nil
	case "plug-one":
		return PlugOne(), nil
	case "plus-cross":
		return PlusCross(), nil
	case "point":
		return Point(), nil
	case "point-out":
		return PointOut(), nil
	case "pokeball-one":
		return PokeballOne(), nil
	case "poker":
		return Poker(), nil
	case "popcorn":
		return Popcorn(), nil
	case "popcorn-one":
		return PopcornOne(), nil
	case "pot":
		return Pot(), nil
	case "potentiometer":
		return Potentiometer(), nil
	case "pouting-face":
		return PoutingFace(), nil
	case "powder":
		return Powder(), nil
	case "power-supply":
		return PowerSupply(), nil
	case "power-supply-one":
		return PowerSupplyOne(), nil
	case "powerpoint":
		return Powerpoint(), nil
	case "ppt":
		return Ppt(), nil
	case "preschool":
		return Preschool(), nil
	case "prescription":
		return Prescription(), nil
	case "press":
		return Press(), nil
	case "preview-open":
		return PreviewOpen(), nil
	case "printer":
		return Printer(), nil
	case "printer-two":
		return PrinterTwo(), nil
	case "prison":
		return Prison(), nil
	case "projector":
		return Projector(), nil
	case "projector-one":
		return ProjectorOne(), nil
	case "projector-three":
		return ProjectorThree(), nil
	case "projector-two":
		return ProjectorTwo(), nil
	case "proportional-scaling":
		return ProportionalScaling(), nil
	case "protect":
		return Protect(), nil
	case "protection":
		return Protection(), nil
	case "public-toilet":
		return PublicToilet(), nil
	case "pull-door":
		return PullDoor(), nil
	case "pull-requests":
		return PullRequests(), nil
	case "pumpkin":
		return Pumpkin(), nil
	case "pure-natural":
		return PureNatural(), nil
	case "push-door":
		return PushDoor(), nil
	case "pushpin":
		return Pushpin(), nil
	case "puzzle":
		return Puzzle(), nil
	case "pyramid-one":
		return PyramidOne(), nil
	case "qingniao-clue":
		return QingniaoClue(), nil
	case "quadrilateral":
		return Quadrilateral(), nil
	case "rabbit":
		return Rabbit(), nil
	case "radar-chart":
		return RadarChart(), nil
	case "radar-two":
		return RadarTwo(), nil
	case "radiation":
		return Radiation(), nil
	case "radio":
		return Radio(), nil
	case "radio-nanny":
		return RadioNanny(), nil
	case "radio-one":
		return RadioOne(), nil
	case "radio-two":
		return RadioTwo(), nil
	case "radish":
		return Radish(), nil
	case "radish-one":
		return RadishOne(), nil
	case "railway":
		return Railway(), nil
	case "ranking-list":
		return RankingList(), nil
	case "rattle":
		return Rattle(), nil
	case "rattle-one":
		return RattleOne(), nil
	case "razor":
		return Razor(), nil
	case "read-book":
		return ReadBook(), nil
	case "receive":
		return Receive(), nil
	case "receiver":
		return Receiver(), nil
	case "recent-views-sort":
		return RecentViewsSort(), nil
	case "record":
		return Record(), nil
	case "record-disc":
		return RecordDisc(), nil
	case "record-player":
		return RecordPlayer(), nil
	case "rectangle":
		return Rectangle(), nil
	case "rectangle-one":
		return RectangleOne(), nil
	case "rectangle-small":
		return RectangleSmall(), nil
	case "rectangle-tear":
		return RectangleTear(), nil
	case "rectangle-x":
		return RectangleX(), nil
	case "rectangular-circular-connection":
		return RectangularCircularConnection(), nil
	case "rectangular-circular-separation":
		return RectangularCircularSeparation(), nil
	case "red-cross":
		return RedCross(), nil
	case "red-envelope":
		return RedEnvelope(), nil
	case "red-envelopes":
		return RedEnvelopes(), nil
	case "reduce":
		return Reduce(), nil
	case "reduce-one":
		return ReduceOne(), nil
	case "reduce-two":
		return ReduceTwo(), nil
	case "reduce-user":
		return ReduceUser(), nil
	case "reel":
		return Reel(), nil
	case "refraction":
		return Refraction(), nil
	case "refresh-one":
		return RefreshOne(), nil
	case "refrigerator":
		return Refrigerator(), nil
	case "relational-graph":
		return RelationalGraph(), nil
	case "relieved-face":
		return RelievedFace(), nil
	case "reload":
		return Reload(), nil
	case "remind":
		return Remind(), nil
	case "remind-disable":
		return RemindDisable(), nil
	case "remote-control":
		return RemoteControl(), nil
	case "remote-control-one":
		return RemoteControlOne(), nil
	case "renault":
		return Renault(), nil
	case "repair":
		return Repair(), nil
	case "replay-music":
		return ReplayMusic(), nil
	case "report":
		return Report(), nil
	case "repositioning":
		return Repositioning(), nil
	case "resistor":
		return Resistor(), nil
	case "resting":
		return Resting(), nil
	case "retro-bag":
		return RetroBag(), nil
	case "reverse-lens":
		return ReverseLens(), nil
	case "reverse-lens-one":
		return ReverseLensOne(), nil
	case "reverse-operation-in":
		return ReverseOperationIn(), nil
	case "reverse-operation-out":
		return ReverseOperationOut(), nil
	case "rice":
		return Rice(), nil
	case "riding":
		return Riding(), nil
	case "right-angle":
		return RightAngle(), nil
	case "right-bar":
		return RightBar(), nil
	case "right-c":
		return RightC(), nil
	case "right-expand":
		return RightExpand(), nil
	case "right-one":
		return RightOne(), nil
	case "right-run":
		return RightRun(), nil
	case "right-square":
		return RightSquare(), nil
	case "right-two":
		return RightTwo(), nil
	case "right-user":
		return RightUser(), nil
	case "ring":
		return Ring(), nil
	case "ring-one":
		return RingOne(), nil
	case "rings":
		return Rings(), nil
	case "road-cone":
		return RoadCone(), nil
	case "road-sign":
		return RoadSign(), nil
	case "road-sign-both":
		return RoadSignBoth(), nil
	case "robot":
		return Robot(), nil
	case "robot-one":
		return RobotOne(), nil
	case "robot-two":
		return RobotTwo(), nil
	case "rock-gesture":
		return RockGesture(), nil
	case "rocket":
		return Rocket(), nil
	case "rocket-one":
		return RocketOne(), nil
	case "rocking-horse":
		return RockingHorse(), nil
	case "rollerskates":
		return Rollerskates(), nil
	case "romper":
		return Romper(), nil
	case "rope-skipping":
		return RopeSkipping(), nil
	case "rotate":
		return Rotate(), nil
	case "rotate-one":
		return RotateOne(), nil
	case "rotation-one":
		return RotationOne(), nil
	case "round":
		return Round(), nil
	case "round-caliper":
		return RoundCaliper(), nil
	case "round-mask":
		return RoundMask(), nil
	case "round-socket":
		return RoundSocket(), nil
	case "round-trip":
		return RoundTrip(), nil
	case "router":
		return Router(), nil
	case "router-one":
		return RouterOne(), nil
	case "rowing":
		return Rowing(), nil
	case "rs-male":
		return RsMale(), nil
	case "rss":
		return Rss(), nil
	case "rugby":
		return Rugby(), nil
	case "ruler-one":
		return RulerOne(), nil
	case "run-left":
		return RunLeft(), nil
	case "s-turn-down":
		return STurnDown(), nil
	case "s-turn-left":
		return STurnLeft(), nil
	case "s-turn-right":
		return STurnRight(), nil
	case "s-turn-up":
		return STurnUp(), nil
	case "safe-retrieval":
		return SafeRetrieval(), nil
	case "sailboat":
		return Sailboat(), nil
	case "sailboat-one":
		return SailboatOne(), nil
	case "sailing":
		return Sailing(), nil
	case "sales-report":
		return SalesReport(), nil
	case "sandwich":
		return Sandwich(), nil
	case "sandwich-one":
		return SandwichOne(), nil
	case "sapling":
		return Sapling(), nil
	case "save":
		return Save(), nil
	case "save-one":
		return SaveOne(), nil
	case "scale-one":
		return ScaleOne(), nil
	case "scallion":
		return Scallion(), nil
	case "scan-setting":
		return ScanSetting(), nil
	case "schedule":
		return Schedule(), nil
	case "school":
		return School(), nil
	case "scissors":
		return Scissors(), nil
	case "scoreboard":
		return Scoreboard(), nil
	case "screen-rotation":
		return ScreenRotation(), nil
	case "screenshot":
		return Screenshot(), nil
	case "screenshot-one":
		return ScreenshotOne(), nil
	case "screenshot-two":
		return ScreenshotTwo(), nil
	case "screwdriver":
		return Screwdriver(), nil
	case "sd":
		return Sd(), nil
	case "sd-card":
		return SdCard(), nil
	case "seal":
		return Seal(), nil
	case "search":
		return Search(), nil
	case "seat":
		return Seat(), nil
	case "security-stall":
		return SecurityStall(), nil
	case "seedling":
		return Seedling(), nil
	case "selected":
		return Selected(), nil
	case "selected-focus":
		return SelectedFocus(), nil
	case "selfie":
		return Selfie(), nil
	case "send-backward":
		return SendBackward(), nil
	case "send-to-back":
		return SendToBack(), nil
	case "seo":
		return Seo(), nil
	case "seo-folder":
		return SeoFolder(), nil
	case "server":
		return Server(), nil
	case "set-off":
		return SetOff(), nil
	case "setting":
		return Setting(), nil
	case "setting-computer":
		return SettingComputer(), nil
	case "setting-laptop":
		return SettingLaptop(), nil
	case "setting-one":
		return SettingOne(), nil
	case "setting-three":
		return SettingThree(), nil
	case "setting-two":
		return SettingTwo(), nil
	case "setting-web":
		return SettingWeb(), nil
	case "seven-key":
		return SevenKey(), nil
	case "shade":
		return Shade(), nil
	case "shake":
		return Shake(), nil
	case "share-one":
		return ShareOne(), nil
	case "share-two":
		return ShareTwo(), nil
	case "shaver":
		return Shaver(), nil
	case "shaver-one":
		return ShaverOne(), nil
	case "shaving":
		return Shaving(), nil
	case "shield":
		return Shield(), nil
	case "shield-add":
		return ShieldAdd(), nil
	case "ship":
		return Ship(), nil
	case "shop":
		return Shop(), nil
	case "shopping":
		return Shopping(), nil
	case "shopping-bag":
		return ShoppingBag(), nil
	case "shopping-bag-one":
		return ShoppingBagOne(), nil
	case "shopping-cart":
		return ShoppingCart(), nil
	case "shopping-cart-add":
		return ShoppingCartAdd(), nil
	case "shopping-cart-del":
		return ShoppingCartDel(), nil
	case "shopping-cart-two":
		return ShoppingCartTwo(), nil
	case "shopping-mall":
		return ShoppingMall(), nil
	case "short-skirt":
		return ShortSkirt(), nil
	case "shorts":
		return Shorts(), nil
	case "shoulder-bag":
		return ShoulderBag(), nil
	case "shovel":
		return Shovel(), nil
	case "shovel-one":
		return ShovelOne(), nil
	case "shower-head":
		return ShowerHead(), nil
	case "shrimp":
		return Shrimp(), nil
	case "shutter-priority":
		return ShutterPriority(), nil
	case "sickbed":
		return Sickbed(), nil
	case "signal-strength":
		return SignalStrength(), nil
	case "signal-tower":
		return SignalTower(), nil
	case "sim":
		return Sim(), nil
	case "sim-card":
		return SimCard(), nil
	case "single-bed":
		return SingleBed(), nil
	case "sippy-cup":
		return SippyCup(), nil
	case "six":
		return Six(), nil
	case "six-circular-connection":
		return SixCircularConnection(), nil
	case "six-key":
		return SixKey(), nil
	case "six-points":
		return SixPoints(), nil
	case "skate":
		return Skate(), nil
	case "skates":
		return Skates(), nil
	case "skating":
		return Skating(), nil
	case "sketch":
		return Sketch(), nil
	case "skiing-nordic":
		return SkiingNordic(), nil
	case "skull":
		return Skull(), nil
	case "slave":
		return Slave(), nil
	case "sleep":
		return Sleep(), nil
	case "sleep-two":
		return SleepTwo(), nil
	case "slide":
		return Slide(), nil
	case "slide-two":
		return SlideTwo(), nil
	case "sliding-horizontal":
		return SlidingHorizontal(), nil
	case "sliding-vertical":
		return SlidingVertical(), nil
	case "slightly-frowning-face-whit-open-mouth":
		return SlightlyFrowningFaceWhitOpenMouth(), nil
	case "slightly-smiling-face":
		return SlightlySmilingFace(), nil
	case "slippers":
		return Slippers(), nil
	case "slippers-one":
		return SlippersOne(), nil
	case "sly-face-whit-smile":
		return SlyFaceWhitSmile(), nil
	case "smiling-face":
		return SmilingFace(), nil
	case "smiling-face-with-squinting-eyes":
		return SmilingFaceWithSquintingEyes(), nil
	case "snacks":
		return Snacks(), nil
	case "snake-zodiac":
		return SnakeZodiac(), nil
	case "snowman":
		return Snowman(), nil
	case "soap-bubble":
		return SoapBubble(), nil
	case "soccer":
		return Soccer(), nil
	case "soccer-one":
		return SoccerOne(), nil
	case "sofa":
		return Sofa(), nil
	case "sofa-two":
		return SofaTwo(), nil
	case "solar-energy-one":
		return SolarEnergyOne(), nil
	case "solid-state-disk":
		return SolidStateDisk(), nil
	case "sorcerer-hat":
		return SorcererHat(), nil
	case "sort":
		return Sort(), nil
	case "sound":
		return Sound(), nil
	case "sound-one":
		return SoundOne(), nil
	case "source-code":
		return SourceCode(), nil
	case "soybean-milk-maker":
		return SoybeanMilkMaker(), nil
	case "spa-candle":
		return SpaCandle(), nil
	case "spanner":
		return Spanner(), nil
	case "speaker":
		return Speaker(), nil
	case "speaker-one":
		return SpeakerOne(), nil
	case "speed":
		return Speed(), nil
	case "speed-one":
		return SpeedOne(), nil
	case "sperm":
		return Sperm(), nil
	case "spikedshoes":
		return Spikedshoes(), nil
	case "spinning-top":
		return SpinningTop(), nil
	case "split":
		return Split(), nil
	case "split-branch":
		return SplitBranch(), nil
	case "split-turn-down-left":
		return SplitTurnDownLeft(), nil
	case "split-turn-down-right":
		return SplitTurnDownRight(), nil
	case "spoon":
		return Spoon(), nil
	case "sport":
		return Sport(), nil
	case "sporting":
		return Sporting(), nil
	case "square":
		return Square(), nil
	case "square-small":
		return SquareSmall(), nil
	case "ssd":
		return Ssd(), nil
	case "stack-light":
		return StackLight(), nil
	case "stamp":
		return Stamp(), nil
	case "stand-up":
		return StandUp(), nil
	case "stapler":
		return Stapler(), nil
	case "star":
		return Star(), nil
	case "steering-wheel":
		return SteeringWheel(), nil
	case "steoller":
		return Steoller(), nil
	case "stereo-one":
		return StereoOne(), nil
	case "stethoscope":
		return Stethoscope(), nil
	case "stickers":
		return Stickers(), nil
	case "stock-market":
		return StockMarket(), nil
	case "stopwatch":
		return Stopwatch(), nil
	case "stopwatch-start":
		return StopwatchStart(), nil
	case "storage-card-one":
		return StorageCardOne(), nil
	case "storage-card-two":
		return StorageCardTwo(), nil
	case "straight-razor":
		return StraightRazor(), nil
	case "stretching":
		return Stretching(), nil
	case "stretching-one":
		return StretchingOne(), nil
	case "strongbox":
		return Strongbox(), nil
	case "subway":
		return Subway(), nil
	case "success":
		return Success(), nil
	case "sum":
		return Sum(), nil
	case "sun":
		return Sun(), nil
	case "sun-hat":
		return SunHat(), nil
	case "sun-one":
		return SunOne(), nil
	case "sunset":
		return Sunset(), nil
	case "surprised-face-with-open-big-mouth":
		return SurprisedFaceWithOpenBigMouth(), nil
	case "surprised-face-with-open-mouth":
		return SurprisedFaceWithOpenMouth(), nil
	case "surveillance-cameras":
		return SurveillanceCameras(), nil
	case "surveillance-cameras-one":
		return SurveillanceCamerasOne(), nil
	case "surveillance-cameras-two":
		return SurveillanceCamerasTwo(), nil
	case "swallow":
		return Swallow(), nil
	case "sweater":
		return Sweater(), nil
	case "swimming-ring":
		return SwimmingRing(), nil
	case "swimsuit":
		return Swimsuit(), nil
	case "swing":
		return Swing(), nil
	case "switch-button":
		return SwitchButton(), nil
	case "switch-nintendo":
		return SwitchNintendo(), nil
	case "switch-one":
		return SwitchOne(), nil
	case "switch-themes":
		return SwitchThemes(), nil
	case "system":
		return System(), nil
	case "t-shirt":
		return TShirt(), nil
	case "table":
		return Table(), nil
	case "table-file":
		return TableFile(), nil
	case "table-lamp":
		return TableLamp(), nil
	case "table-report":
		return TableReport(), nil
	case "tabletennis":
		return Tabletennis(), nil
	case "tag":
		return Tag(), nil
	case "tag-one":
		return TagOne(), nil
	case "taj-mahal":
		return TajMahal(), nil
	case "take-off-one":
		return TakeOffOne(), nil
	case "tape":
		return Tape(), nil
	case "tape-measure":
		return TapeMeasure(), nil
	case "target-one":
		return TargetOne(), nil
	case "taurus":
		return Taurus(), nil
	case "taxi":
		return Taxi(), nil
	case "tea":
		return Tea(), nil
	case "tea-drink":
		return TeaDrink(), nil
	case "teapot":
		return Teapot(), nil
	case "teeth":
		return Teeth(), nil
	case "telescope":
		return Telescope(), nil
	case "tencent-qq":
		return TencentQq(), nil
	case "tent":
		return Tent(), nil
	case "tent-banner":
		return TentBanner(), nil
	case "terminal":
		return Terminal(), nil
	case "termination-file":
		return TerminationFile(), nil
	case "test-tube":
		return TestTube(), nil
	case "text":
		return Text(), nil
	case "text-message":
		return TextMessage(), nil
	case "texture-two":
		return TextureTwo(), nil
	case "the-single-shoulder-bag":
		return TheSingleShoulderBag(), nil
	case "theater":
		return Theater(), nil
	case "theme":
		return Theme(), nil
	case "thermometer":
		return Thermometer(), nil
	case "thermometer-one":
		return ThermometerOne(), nil
	case "thermos-cup":
		return ThermosCup(), nil
	case "thin":
		return Thin(), nil
	case "thinking-problem":
		return ThinkingProblem(), nil
	case "three":
		return Three(), nil
	case "three-d-glasses":
		return ThreeDGlasses(), nil
	case "three-hexagons":
		return ThreeHexagons(), nil
	case "three-key":
		return ThreeKey(), nil
	case "three-slashes":
		return ThreeSlashes(), nil
	case "three-three":
		return ThreeThree(), nil
	case "three-triangles":
		return ThreeTriangles(), nil
	case "thumbs-down":
		return ThumbsDown(), nil
	case "thumbs-up":
		return ThumbsUp(), nil
	case "thunderbolt":
		return Thunderbolt(), nil
	case "thunderstorm-one":
		return ThunderstormOne(), nil
	case "ticket":
		return Ticket(), nil
	case "ticket-one":
		return TicketOne(), nil
	case "tickets-one":
		return TicketsOne(), nil
	case "tickets-two":
		return TicketsTwo(), nil
	case "tiktok":
		return Tiktok(), nil
	case "time":
		return Time(), nil
	case "timed-mail":
		return TimedMail(), nil
	case "timeline":
		return Timeline(), nil
	case "timer":
		return Timer(), nil
	case "tips":
		return Tips(), nil
	case "tips-one":
		return TipsOne(), nil
	case "tire-swing":
		return TireSwing(), nil
	case "toilet":
		return Toilet(), nil
	case "tomato":
		return Tomato(), nil
	case "tool":
		return Tool(), nil
	case "toolkit":
		return Toolkit(), nil
	case "top-bar":
		return TopBar(), nil
	case "topbuzz":
		return Topbuzz(), nil
	case "topic":
		return Topic(), nil
	case "topic-discussion":
		return TopicDiscussion(), nil
	case "torch":
		return Torch(), nil
	case "tour-bus":
		return TourBus(), nil
	case "towel":
		return Towel(), nil
	case "tower":
		return Tower(), nil
	case "tower-of-babel":
		return TowerOfBabel(), nil
	case "tower-of-pisa":
		return TowerOfPisa(), nil
	case "toxins":
		return Toxins(), nil
	case "trace":
		return Trace(), nil
	case "trademark":
		return Trademark(), nil
	case "traditional-chinese-medicine":
		return TraditionalChineseMedicine(), nil
	case "train":
		return Train(), nil
	case "transaction":
		return Transaction(), nil
	case "transaction-order":
		return TransactionOrder(), nil
	case "transfer":
		return Transfer(), nil
	case "transform":
		return Transform(), nil
	case "transport":
		return Transport(), nil
	case "transporter":
		return Transporter(), nil
	case "trapezoid":
		return Trapezoid(), nil
	case "tray":
		return Tray(), nil
	case "treadmill":
		return Treadmill(), nil
	case "treadmill-one":
		return TreadmillOne(), nil
	case "treadmill-two":
		return TreadmillTwo(), nil
	case "treasure-chest":
		return TreasureChest(), nil
	case "tree-diagram":
		return TreeDiagram(), nil
	case "tree-list":
		return TreeList(), nil
	case "tree-one":
		return TreeOne(), nil
	case "trend":
		return Trend(), nil
	case "trend-two":
		return TrendTwo(), nil
	case "triangle":
		return Triangle(), nil
	case "triangle-round-rectangle":
		return TriangleRoundRectangle(), nil
	case "triangle-ruler":
		return TriangleRuler(), nil
	case "trophy":
		return Trophy(), nil
	case "trousers-bell-bottoms":
		return TrousersBellBottoms(), nil
	case "trumpet":
		return Trumpet(), nil
	case "trunk":
		return Trunk(), nil
	case "tub":
		return Tub(), nil
	case "tuchong":
		return Tuchong(), nil
	case "tumblr":
		return Tumblr(), nil
	case "turkey":
		return Turkey(), nil
	case "turn-around":
		return TurnAround(), nil
	case "turn-on":
		return TurnOn(), nil
	case "tv-one":
		return TvOne(), nil
	case "twitter":
		return Twitter(), nil
	case "two":
		return Two(), nil
	case "two-dimensional-code":
		return TwoDimensionalCode(), nil
	case "two-dimensional-code-one":
		return TwoDimensionalCodeOne(), nil
	case "two-dimensional-code-two":
		return TwoDimensionalCodeTwo(), nil
	case "two-key":
		return TwoKey(), nil
	case "two-semicircles":
		return TwoSemicircles(), nil
	case "two-triangles":
		return TwoTriangles(), nil
	case "two-two":
		return TwoTwo(), nil
	case "type-drive":
		return TypeDrive(), nil
	case "u-disk":
		return UDisk(), nil
	case "u-turn-down":
		return UTurnDown(), nil
	case "u-turn-left":
		return UTurnLeft(), nil
	case "u-turn-right":
		return UTurnRight(), nil
	case "u-turn-up":
		return UTurnUp(), nil
	case "ulikecam":
		return Ulikecam(), nil
	case "umbrella":
		return Umbrella(), nil
	case "umbrella-one":
		return UmbrellaOne(), nil
	case "umbrella-two":
		return UmbrellaTwo(), nil
	case "ungroup":
		return Ungroup(), nil
	case "unicast":
		return Unicast(), nil
	case "universal":
		return Universal(), nil
	case "unlock":
		return Unlock(), nil
	case "unlock-one":
		return UnlockOne(), nil
	case "up-and-down":
		return UpAndDown(), nil
	case "up-c":
		return UpC(), nil
	case "up-one":
		return UpOne(), nil
	case "up-square":
		return UpSquare(), nil
	case "up-two":
		return UpTwo(), nil
	case "update-rotation":
		return UpdateRotation(), nil
	case "upload":
		return Upload(), nil
	case "upload-laptop":
		return UploadLaptop(), nil
	case "upload-three":
		return UploadThree(), nil
	case "upload-web":
		return UploadWeb(), nil
	case "upside-down-face":
		return UpsideDownFace(), nil
	case "usb":
		return Usb(), nil
	case "usb-memory-stick":
		return UsbMemoryStick(), nil
	case "usb-micro-one":
		return UsbMicroOne(), nil
	case "usb-micro-two":
		return UsbMicroTwo(), nil
	case "usb-one":
		return UsbOne(), nil
	case "usb-type-c":
		return UsbTypeC(), nil
	case "user":
		return User(), nil
	case "user-business":
		return UserBusiness(), nil
	case "user-positioning":
		return UserPositioning(), nil
	case "user-to-user-transmission":
		return UserToUserTransmission(), nil
	case "uterus":
		return Uterus(), nil
	case "vacation":
		return Vacation(), nil
	case "vacuum-cleaner":
		return VacuumCleaner(), nil
	case "vegetable-basket":
		return VegetableBasket(), nil
	case "vegetables":
		return Vegetables(), nil
	case "vertical-tidy-up":
		return VerticalTidyUp(), nil
	case "vertical-timeline":
		return VerticalTimeline(), nil
	case "vertically-centered":
		return VerticallyCentered(), nil
	case "vest":
		return Vest(), nil
	case "vial":
		return Vial(), nil
	case "vicia-faba":
		return ViciaFaba(), nil
	case "video":
		return Video(), nil
	case "video-conference":
		return VideoConference(), nil
	case "video-file":
		return VideoFile(), nil
	case "video-one":
		return VideoOne(), nil
	case "video-two":
		return VideoTwo(), nil
	case "videocamera":
		return Videocamera(), nil
	case "videocamera-one":
		return VideocameraOne(), nil
	case "view-grid-card":
		return ViewGridCard(), nil
	case "view-grid-detail":
		return ViewGridDetail(), nil
	case "view-grid-list":
		return ViewGridList(), nil
	case "view-list":
		return ViewList(), nil
	case "viewfinder":
		return Viewfinder(), nil
	case "vigo":
		return Vigo(), nil
	case "vip":
		return Vip(), nil
	case "vip-one":
		return VipOne(), nil
	case "virtual-reality-glasses":
		return VirtualRealityGlasses(), nil
	case "voice":
		return Voice(), nil
	case "voice-input":
		return VoiceInput(), nil
	case "voice-message":
		return VoiceMessage(), nil
	case "voice-one":
		return VoiceOne(), nil
	case "voicemail":
		return Voicemail(), nil
	case "volkswagen":
		return Volkswagen(), nil
	case "volume-down":
		return VolumeDown(), nil
	case "volume-mute":
		return VolumeMute(), nil
	case "volume-notice":
		return VolumeNotice(), nil
	case "volume-small":
		return VolumeSmall(), nil
	case "volume-up":
		return VolumeUp(), nil
	case "vr-glasses":
		return VrGlasses(), nil
	case "wallet":
		return Wallet(), nil
	case "wallet-one":
		return WalletOne(), nil
	case "wallet-three":
		return WalletThree(), nil
	case "wallet-two":
		return WalletTwo(), nil
	case "warehousing":
		return Warehousing(), nil
	case "washing-machine":
		return WashingMachine(), nil
	case "washing-machine-one":
		return WashingMachineOne(), nil
	case "watch":
		return Watch(), nil
	case "watch-one":
		return WatchOne(), nil
	case "water":
		return Water(), nil
	case "water-level":
		return WaterLevel(), nil
	case "water-no":
		return WaterNo(), nil
	case "water-rate":
		return WaterRate(), nil
	case "water-rate-two":
		return WaterRateTwo(), nil
	case "waterfalls-h":
		return WaterfallsH(), nil
	case "waterfalls-v":
		return WaterfallsV(), nil
	case "watermelon":
		return Watermelon(), nil
	case "watermelon-one":
		return WatermelonOne(), nil
	case "waterpolo-one":
		return WaterpoloOne(), nil
	case "weary-face":
		return WearyFace(), nil
	case "web-page":
		return WebPage(), nil
	case "webcam":
		return Webcam(), nil
	case "wechat":
		return Wechat(), nil
	case "weibo":
		return Weibo(), nil
	case "weight":
		return Weight(), nil
	case "weightlifting":
		return Weightlifting(), nil
	case "weixin-cards-offers":
		return WeixinCardsOffers(), nil
	case "weixin-market":
		return WeixinMarket(), nil
	case "weixin-mini-app":
		return WeixinMiniApp(), nil
	case "weixin-people-nearby":
		return WeixinPeopleNearby(), nil
	case "weixin-scan":
		return WeixinScan(), nil
	case "weixin-shake":
		return WeixinShake(), nil
	case "weixin-top-stories":
		return WeixinTopStories(), nil
	case "whale":
		return Whale(), nil
	case "wheelchair":
		return Wheelchair(), nil
	case "whirlwind":
		return Whirlwind(), nil
	case "whole-site-accelerator":
		return WholeSiteAccelerator(), nil
	case "wind-turbine":
		return WindTurbine(), nil
	case "windmill":
		return Windmill(), nil
	case "windmill-two":
		return WindmillTwo(), nil
	case "windows":
		return Windows(), nil
	case "wingsuit-flying":
		return WingsuitFlying(), nil
	case "winking-face":
		return WinkingFace(), nil
	case "winking-face-with-open-eyes":
		return WinkingFaceWithOpenEyes(), nil
	case "women":
		return Women(), nil
	case "woolen-hat":
		return WoolenHat(), nil
	case "word":
		return Word(), nil
	case "workbench":
		return Workbench(), nil
	case "worker":
		return Worker(), nil
	case "worried-face":
		return WorriedFace(), nil
	case "write":
		return Write(), nil
	case "writing-fluently":
		return WritingFluently(), nil
	case "wrong-user":
		return WrongUser(), nil
	case "xiaodu":
		return Xiaodu(), nil
	case "xiaodu-home":
		return XiaoduHome(), nil
	case "xigua":
		return Xigua(), nil
	case "xingfuli":
		return Xingfuli(), nil
	case "yep":
		return Yep(), nil
	case "youtobe":
		return Youtobe(), nil
	case "youtube":
		return Youtube(), nil
	case "zero-key":
		return ZeroKey(), nil
	case "zijinyunying":
		return Zijinyunying(), nil
	case "zip":
		return Zip(), nil
	case "zoom":
		return Zoom(), nil
	case "zoom-in":
		return ZoomIn(), nil
	case "zoom-internal":
		return ZoomInternal(), nil
	case "zoom-out":
		return ZoomOut(), nil
	default:
		return nil, fmt.Errorf("icon '%s' not found in icon_park_solid icon set", name)
	}
}
