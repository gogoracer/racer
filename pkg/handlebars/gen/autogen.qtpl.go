// Code generated by qtc from "autogen.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line autogen.qtpl:3
package gen

//line autogen.qtpl:3
import (
	"github.com/iancoleman/strcase"
	"strings"
)

//line autogen.qtpl:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line autogen.qtpl:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line autogen.qtpl:9
func snake(s string) string {
	return strcase.ToSnake(s)
}

func camel(s string) string {
	return strcase.ToLowerCamel(s)
}

func pascal(s string) string {
	return strcase.ToCamel(s)
}

func upper(s string) string {
	return strings.ToUpper(s)
}

//line autogen.qtpl:27
func StreamGenerateElement(qw422016 *qt422016.Writer, e *Element) {
//line autogen.qtpl:31
	tagPascal := pascal(e.Tag)
	elementName := "Element" + tagPascal
	attributesName := tagPascal + "Attributes"
	eventHandlersName := tagPascal + "EventHandlers"

//line autogen.qtpl:35
	qw422016.N().S(`
/* cSpell:disable */

package handlebars

import "github.com/gogoracer/racer/pkg/engine"

type `)
//line autogen.qtpl:42
	qw422016.E().S(attributesName)
//line autogen.qtpl:42
	qw422016.N().S(` struct {
    `)
//line autogen.qtpl:43
	for _, a := range e.Attributes {
//line autogen.qtpl:43
		qw422016.N().S(`
`)
//line autogen.qtpl:44
		attrPascal := pascal(a.Name)

//line autogen.qtpl:44
		qw422016.N().S(`    // `)
//line autogen.qtpl:45
		qw422016.E().S(attrPascal)
//line autogen.qtpl:45
		qw422016.N().S(` is the "`)
//line autogen.qtpl:45
		qw422016.E().S(a.Name)
//line autogen.qtpl:45
		qw422016.N().S(`"" attribute.
    // `)
//line autogen.qtpl:46
		qw422016.E().S(a.Description)
//line autogen.qtpl:46
		qw422016.N().S(`
    // Valid values are constrained to the following:
`)
//line autogen.qtpl:48
		for _, v := range a.ValidValueTypes {
//line autogen.qtpl:48
			qw422016.N().S(`    //   * `)
//line autogen.qtpl:49
			qw422016.E().S(v)
//line autogen.qtpl:49
			qw422016.N().S(`
`)
//line autogen.qtpl:50
		}
//line autogen.qtpl:50
		qw422016.N().S(`    `)
//line autogen.qtpl:51
		qw422016.E().S(attrPascal)
//line autogen.qtpl:51
		qw422016.N().S(` string `)
//line autogen.qtpl:51
		qw422016.N().S("`")
//line autogen.qtpl:51
		qw422016.N().S(`json:"`)
//line autogen.qtpl:51
		qw422016.E().S(camel(a.Name))
//line autogen.qtpl:51
		qw422016.N().S(`"`)
//line autogen.qtpl:51
		qw422016.N().S("`")
//line autogen.qtpl:51
		qw422016.N().S(`
`)
//line autogen.qtpl:52
	}
//line autogen.qtpl:52
	qw422016.N().S(`
    `)
//line autogen.qtpl:54
	for _, eh := range e.EventHandlers {
//line autogen.qtpl:54
		qw422016.N().S(`
    // `)
//line autogen.qtpl:55
		qw422016.N().S(eh.Description)
//line autogen.qtpl:55
		qw422016.N().S(`
    ClientSide`)
//line autogen.qtpl:56
		qw422016.E().S(pascal(eh.Name[2:]))
//line autogen.qtpl:56
		qw422016.N().S(` string
`)
//line autogen.qtpl:57
	}
//line autogen.qtpl:57
	qw422016.N().S(`}

type `)
//line autogen.qtpl:60
	qw422016.E().S(eventHandlersName)
//line autogen.qtpl:60
	qw422016.N().S(` struct {
    `)
//line autogen.qtpl:61
	for _, eh := range e.EventHandlers {
//line autogen.qtpl:61
		qw422016.N().S(`
`)
//line autogen.qtpl:62
		evt := "On" + pascal(eh.Name[2:])

//line autogen.qtpl:62
		qw422016.N().S(`    // `)
//line autogen.qtpl:63
		qw422016.N().S(eh.Description)
//line autogen.qtpl:63
		qw422016.N().S(`
    `)
//line autogen.qtpl:64
		qw422016.E().S(evt)
//line autogen.qtpl:64
		qw422016.N().S(` engine.EventHandler
`)
//line autogen.qtpl:65
	}
//line autogen.qtpl:65
	qw422016.N().S(`}

type `)
//line autogen.qtpl:68
	qw422016.E().S(elementName)
//line autogen.qtpl:68
	qw422016.N().S(` struct {
    Attributes `)
//line autogen.qtpl:69
	qw422016.E().S(attributesName)
//line autogen.qtpl:69
	qw422016.N().S(`
    EventHandlers `)
//line autogen.qtpl:70
	qw422016.E().S(eventHandlersName)
//line autogen.qtpl:70
	qw422016.N().S(`

    // Children is the list of child nodes.
    Children []any
}

func `)
//line autogen.qtpl:76
	qw422016.E().S(upper(tagPascal))
//line autogen.qtpl:76
	qw422016.N().S(`(children ...any) *`)
//line autogen.qtpl:76
	qw422016.E().S(elementName)
//line autogen.qtpl:76
	qw422016.N().S(` {
    return &`)
//line autogen.qtpl:77
	qw422016.E().S(elementName)
//line autogen.qtpl:77
	qw422016.N().S(`{
        Children: children,
    }
}

func `)
//line autogen.qtpl:82
	qw422016.E().S(upper(tagPascal))
//line autogen.qtpl:82
	qw422016.N().S(`_A(attributes `)
//line autogen.qtpl:82
	qw422016.E().S(attributesName)
//line autogen.qtpl:82
	qw422016.N().S(`,children ...any) *`)
//line autogen.qtpl:82
	qw422016.E().S(elementName)
//line autogen.qtpl:82
	qw422016.N().S(` {
    return &`)
//line autogen.qtpl:83
	qw422016.E().S(elementName)
//line autogen.qtpl:83
	qw422016.N().S(`{
        Attributes: attributes,
        Children: children,
    }
}

func `)
//line autogen.qtpl:89
	qw422016.E().S(upper(tagPascal))
//line autogen.qtpl:89
	qw422016.N().S(`_E(eventHandlers `)
//line autogen.qtpl:89
	qw422016.E().S(eventHandlersName)
//line autogen.qtpl:89
	qw422016.N().S(`,children ...any) *`)
//line autogen.qtpl:89
	qw422016.E().S(elementName)
//line autogen.qtpl:89
	qw422016.N().S(` {
    return &`)
//line autogen.qtpl:90
	qw422016.E().S(elementName)
//line autogen.qtpl:90
	qw422016.N().S(`{
        EventHandlers: eventHandlers,
        Children: children,
    }
}

func `)
//line autogen.qtpl:96
	qw422016.E().S(upper(tagPascal))
//line autogen.qtpl:96
	qw422016.N().S(`_AE(attributes `)
//line autogen.qtpl:96
	qw422016.E().S(attributesName)
//line autogen.qtpl:96
	qw422016.N().S(`, eventHandlers `)
//line autogen.qtpl:96
	qw422016.E().S(eventHandlersName)
//line autogen.qtpl:96
	qw422016.N().S(`,children ...any) *`)
//line autogen.qtpl:96
	qw422016.E().S(elementName)
//line autogen.qtpl:96
	qw422016.N().S(` {
    return &`)
//line autogen.qtpl:97
	qw422016.E().S(elementName)
//line autogen.qtpl:97
	qw422016.N().S(`{
        Attributes: attributes,
        EventHandlers: eventHandlers,
        Children: children,
    }
}


func (element `)
//line autogen.qtpl:105
	qw422016.E().S(elementName)
//line autogen.qtpl:105
	qw422016.N().S(`) HandlebarElement() {}

func(element `)
//line autogen.qtpl:107
	qw422016.E().S(elementName)
//line autogen.qtpl:107
	qw422016.N().S(`) GenerateVDOM() interface{} {
    eventHandlers := map[string]engine.EventHandler{}
`)
//line autogen.qtpl:109
	for _, eh := range e.EventHandlers {
//line autogen.qtpl:111
		evtName := eh.Name[2:]
		evtHandlerName := "On" + pascal(evtName)

//line autogen.qtpl:113
		qw422016.N().S(`    if element.EventHandlers.`)
//line autogen.qtpl:114
		qw422016.E().S(evtHandlerName)
//line autogen.qtpl:114
		qw422016.N().S(` != nil {
        eventHandlers["`)
//line autogen.qtpl:115
		qw422016.E().S(evtName)
//line autogen.qtpl:115
		qw422016.N().S(`"] = element.EventHandlers.`)
//line autogen.qtpl:115
		qw422016.E().S(evtHandlerName)
//line autogen.qtpl:115
		qw422016.N().S(`
    }
`)
//line autogen.qtpl:117
	}
//line autogen.qtpl:117
	qw422016.N().S(`
    attrs := engine.Attrs {}
`)
//line autogen.qtpl:120
	for _, a := range e.Attributes {
//line autogen.qtpl:121
		attrPascal := pascal(a.Name)

//line autogen.qtpl:121
		qw422016.N().S(`    if element.Attributes.`)
//line autogen.qtpl:122
		qw422016.E().S(attrPascal)
//line autogen.qtpl:122
		qw422016.N().S(` != "" {
        attrs["`)
//line autogen.qtpl:123
		qw422016.E().S(a.Name)
//line autogen.qtpl:123
		qw422016.N().S(`"] = string( element.Attributes.`)
//line autogen.qtpl:123
		qw422016.E().S(attrPascal)
//line autogen.qtpl:123
		qw422016.N().S(`)
    }
`)
//line autogen.qtpl:125
	}
//line autogen.qtpl:125
	qw422016.N().S(`    `)
//line autogen.qtpl:126
	for _, eh := range e.EventHandlers {
//line autogen.qtpl:126
		qw422016.N().S(`
`)
//line autogen.qtpl:127
		ehPascal := "ClientSide" + pascal(eh.Name[2:])

//line autogen.qtpl:127
		qw422016.N().S(`    if element.Attributes.`)
//line autogen.qtpl:128
		qw422016.E().S(ehPascal)
//line autogen.qtpl:128
		qw422016.N().S(` != "" {
        attrs["`)
//line autogen.qtpl:129
		qw422016.E().S(eh.Name[2:])
//line autogen.qtpl:129
		qw422016.N().S(`"] = string( element.Attributes.`)
//line autogen.qtpl:129
		qw422016.E().S(ehPascal)
//line autogen.qtpl:129
		qw422016.N().S(`)
    }
`)
//line autogen.qtpl:131
	}
//line autogen.qtpl:131
	qw422016.N().S(`
    var virtualDOMElement interface{}
    if len(eventHandlers) == 0 {
        tag := engine.NewTag("`)
//line autogen.qtpl:135
	qw422016.E().S(e.Tag)
//line autogen.qtpl:135
	qw422016.N().S(`", attrs)
        virtualDOMElement = tag
    } else {
        component := engine.NewComponent("`)
//line autogen.qtpl:138
	qw422016.E().S(e.Tag)
//line autogen.qtpl:138
	qw422016.N().S(`", attrs)

        for evt, h := range eventHandlers {
            component.Add(engine.On(evt, h))
        }
        virtualDOMElement = component
    }

    return virtualDOMElement

}
`)
//line autogen.qtpl:149
}

//line autogen.qtpl:149
func WriteGenerateElement(qq422016 qtio422016.Writer, e *Element) {
//line autogen.qtpl:149
	qw422016 := qt422016.AcquireWriter(qq422016)
//line autogen.qtpl:149
	StreamGenerateElement(qw422016, e)
//line autogen.qtpl:149
	qt422016.ReleaseWriter(qw422016)
//line autogen.qtpl:149
}

//line autogen.qtpl:149
func GenerateElement(e *Element) string {
//line autogen.qtpl:149
	qb422016 := qt422016.AcquireByteBuffer()
//line autogen.qtpl:149
	WriteGenerateElement(qb422016, e)
//line autogen.qtpl:149
	qs422016 := string(qb422016.B)
//line autogen.qtpl:149
	qt422016.ReleaseByteBuffer(qb422016)
//line autogen.qtpl:149
	return qs422016
//line autogen.qtpl:149
}
